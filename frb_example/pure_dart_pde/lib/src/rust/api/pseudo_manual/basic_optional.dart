// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.29.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'basic.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<int?> exampleBasicOptionalTypeI8TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeI8TwinNormal(arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeI16TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeI16TwinNormal(arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeI32TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeI32TwinNormal(arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeI64TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeI64TwinNormal(arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeU8TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeU8TwinNormal(arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeU16TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeU16TwinNormal(arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeU32TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeU32TwinNormal(arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeU64TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeU64TwinNormal(arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeIsizeTwinNormal(
        {int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeIsizeTwinNormal(arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeUsizeTwinNormal(
        {int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeUsizeTwinNormal(arg: arg, hint: hint);

Future<double?> exampleBasicOptionalTypeF32TwinNormal(
        {double? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeF32TwinNormal(arg: arg, hint: hint);

Future<double?> exampleBasicOptionalTypeF64TwinNormal(
        {double? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeF64TwinNormal(arg: arg, hint: hint);

Future<bool?> exampleBasicOptionalTypeBoolTwinNormal(
        {bool? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeBoolTwinNormal(arg: arg, hint: hint);

Future<String?> exampleBasicOptionalTypeStringTwinNormal(
        {String? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeStringTwinNormal(arg: arg, hint: hint);

Future<Uint8List?> exampleBasicOptionalTypeBytesTwinNormal(
        {Uint8List? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeBytesTwinNormal(arg: arg, hint: hint);

Future<BasicPrimitiveEnumTwinNormal?>
    exampleBasicOptionalTypeBasicPrimitiveEnumTwinNormalTwinNormal(
            {BasicPrimitiveEnumTwinNormal? arg, dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicOptionalTypeBasicPrimitiveEnumTwinNormalTwinNormal(
                arg: arg, hint: hint);

Future<BasicGeneralEnumTwinNormal?>
    exampleBasicOptionalTypeBasicGeneralEnumTwinNormalTwinNormal(
            {BasicGeneralEnumTwinNormal? arg, dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicOptionalTypeBasicGeneralEnumTwinNormalTwinNormal(
                arg: arg, hint: hint);

Future<BasicStructTwinNormal?>
    exampleBasicOptionalTypeBasicStructTwinNormalTwinNormal(
            {BasicStructTwinNormal? arg, dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicOptionalTypeBasicStructTwinNormalTwinNormal(
                arg: arg, hint: hint);
