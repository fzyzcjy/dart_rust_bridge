// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.29.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'basic_twin_rust_async.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<Map<int, int>> exampleBasicMapTypeI8TwinRustAsync(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicMapTypeI8TwinRustAsync(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeI16TwinRustAsync(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicMapTypeI16TwinRustAsync(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeI32TwinRustAsync(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicMapTypeI32TwinRustAsync(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeI64TwinRustAsync(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicMapTypeI64TwinRustAsync(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeU8TwinRustAsync(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicMapTypeU8TwinRustAsync(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeU16TwinRustAsync(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicMapTypeU16TwinRustAsync(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeU32TwinRustAsync(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicMapTypeU32TwinRustAsync(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeU64TwinRustAsync(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicMapTypeU64TwinRustAsync(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeIsizeTwinRustAsync(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicMapTypeIsizeTwinRustAsync(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeUsizeTwinRustAsync(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicMapTypeUsizeTwinRustAsync(arg: arg, hint: hint);

Future<Map<int, double>> exampleBasicMapTypeF32TwinRustAsync(
        {required Map<int, double> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicMapTypeF32TwinRustAsync(arg: arg, hint: hint);

Future<Map<int, double>> exampleBasicMapTypeF64TwinRustAsync(
        {required Map<int, double> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicMapTypeF64TwinRustAsync(arg: arg, hint: hint);

Future<Map<int, bool>> exampleBasicMapTypeBoolTwinRustAsync(
        {required Map<int, bool> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicMapTypeBoolTwinRustAsync(arg: arg, hint: hint);

Future<Map<int, String>> exampleBasicMapTypeStringTwinRustAsync(
        {required Map<int, String> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicMapTypeStringTwinRustAsync(arg: arg, hint: hint);

Future<Map<int, Uint8List>> exampleBasicMapTypeBytesTwinRustAsync(
        {required Map<int, Uint8List> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicMapTypeBytesTwinRustAsync(arg: arg, hint: hint);

Future<Map<int, BasicPrimitiveEnumTwinRustAsync>>
    exampleBasicMapTypeBasicPrimitiveEnumTwinRustAsyncTwinRustAsync(
            {required Map<int, BasicPrimitiveEnumTwinRustAsync> arg,
            dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicMapTypeBasicPrimitiveEnumTwinRustAsyncTwinRustAsync(
                arg: arg, hint: hint);

Future<Map<int, BasicGeneralEnumTwinRustAsync>>
    exampleBasicMapTypeBasicGeneralEnumTwinRustAsyncTwinRustAsync(
            {required Map<int, BasicGeneralEnumTwinRustAsync> arg,
            dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicMapTypeBasicGeneralEnumTwinRustAsyncTwinRustAsync(
                arg: arg, hint: hint);

Future<Map<int, BasicStructTwinRustAsync>>
    exampleBasicMapTypeBasicStructTwinRustAsyncTwinRustAsync(
            {required Map<int, BasicStructTwinRustAsync> arg, dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicMapTypeBasicStructTwinRustAsyncTwinRustAsync(
                arg: arg, hint: hint);
