// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.29.

// Section: imports

use super::*;
use crate::api::constructor::*;
use crate::api::dropping::*;
use crate::api::misc_no_twin_example_a::*;
use crate::api::misc_no_twin_example_b::*;
use crate::api::pseudo_manual::dropping_twin_rust_async::*;
use crate::api::pseudo_manual::dropping_twin_rust_async_sse::*;
use crate::api::pseudo_manual::dropping_twin_sse::*;
use crate::api::pseudo_manual::dropping_twin_sync::*;
use crate::api::pseudo_manual::dropping_twin_sync_sse::*;
use crate::api::pseudo_manual::rust_auto_opaque_twin_moi::*;
use crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async::*;
use crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async_moi::*;
use crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async_sse::*;
use crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async_sse_moi::*;
use crate::api::pseudo_manual::rust_auto_opaque_twin_sse::*;
use crate::api::pseudo_manual::rust_auto_opaque_twin_sse_moi::*;
use crate::api::pseudo_manual::rust_auto_opaque_twin_sync::*;
use crate::api::pseudo_manual::rust_auto_opaque_twin_sync_moi::*;
use crate::api::pseudo_manual::rust_auto_opaque_twin_sync_sse::*;
use crate::api::pseudo_manual::rust_auto_opaque_twin_sync_sse_moi::*;
use crate::api::pseudo_manual::rust_opaque_sync_twin_moi::*;
use crate::api::pseudo_manual::rust_opaque_sync_twin_sse::*;
use crate::api::pseudo_manual::rust_opaque_sync_twin_sse_moi::*;
use crate::api::pseudo_manual::rust_opaque_twin_moi::*;
use crate::api::pseudo_manual::rust_opaque_twin_rust_async::*;
use crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::*;
use crate::api::pseudo_manual::rust_opaque_twin_rust_async_sse::*;
use crate::api::pseudo_manual::rust_opaque_twin_rust_async_sse_moi::*;
use crate::api::pseudo_manual::rust_opaque_twin_sse::*;
use crate::api::pseudo_manual::rust_opaque_twin_sse_moi::*;
use crate::api::pseudo_manual::rust_opaque_twin_sync::*;
use crate::api::pseudo_manual::rust_opaque_twin_sync_moi::*;
use crate::api::pseudo_manual::rust_opaque_twin_sync_sse::*;
use crate::api::pseudo_manual::rust_opaque_twin_sync_sse_moi::*;
use crate::api::rust_auto_opaque::*;
use crate::api::rust_opaque::*;
use crate::api::rust_opaque_sync::*;
use flutter_rust_bridge::for_generated::byteorder::{NativeEndian, ReadBytesExt, WriteBytesExt};
use flutter_rust_bridge::for_generated::transform_result_dco;
use flutter_rust_bridge::for_generated::wasm_bindgen;
use flutter_rust_bridge::for_generated::wasm_bindgen::prelude::*;
use flutter_rust_bridge::{Handler, IntoIntoDart};

// Section: boilerplate

flutter_rust_bridge::frb_generated_boilerplate_web!();

// Section: dart2rust

impl CstDecode<flutter_rust_bridge::for_generated::anyhow::Error> for String {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> flutter_rust_bridge::for_generated::anyhow::Error {
        unimplemented!()
    }
}
impl CstDecode<backtrace::Backtrace> for String {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> backtrace::Backtrace {
        unimplemented!()
    }
}
impl CstDecode<chrono::Duration> for i64 {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> chrono::Duration {
        chrono::Duration::milliseconds(self)
    }
}
impl CstDecode<flutter_rust_bridge::DartOpaque>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> flutter_rust_bridge::DartOpaque {
        unsafe { flutter_rust_bridge::for_generated::cst_decode_dart_opaque(self as _) }
    }
}
impl CstDecode<std::collections::HashSet<i32>> for Box<[i32]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashSet<i32> {
        let vec: Vec<i32> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<String> for String {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> String {
        self
    }
}
impl CstDecode<uuid::Uuid> for Box<[u8]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> uuid::Uuid {
        let single: Vec<u8> = self.cst_decode();
        flutter_rust_bridge::for_generated::decode_uuid(single)
    }
}
impl CstDecode<crate::api::misc_example::ATwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::misc_example::ATwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::misc_example::ATwinNormal {
            a: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_rust_async::ATwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::misc_example_twin_rust_async::ATwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_example_twin_rust_async::ATwinRustAsync {
            a: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_sync::ATwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::misc_example_twin_sync::ATwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_example_twin_sync::ATwinSync {
            a: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::misc_example::AbcTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::misc_example::AbcTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::misc_example::AbcTwinNormal::A(self_.get(1).cst_decode()),
            1 => crate::api::misc_example::AbcTwinNormal::B(self_.get(1).cst_decode()),
            2 => crate::api::misc_example::AbcTwinNormal::C(self_.get(1).cst_decode()),
            3 => crate::api::misc_example::AbcTwinNormal::JustInt(self_.get(1).cst_decode()),
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_rust_async::AbcTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::misc_example_twin_rust_async::AbcTwinRustAsync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::misc_example_twin_rust_async::AbcTwinRustAsync::A(
                self_.get(1).cst_decode(),
            ),
            1 => crate::api::pseudo_manual::misc_example_twin_rust_async::AbcTwinRustAsync::B(
                self_.get(1).cst_decode(),
            ),
            2 => crate::api::pseudo_manual::misc_example_twin_rust_async::AbcTwinRustAsync::C(
                self_.get(1).cst_decode(),
            ),
            3 => {
                crate::api::pseudo_manual::misc_example_twin_rust_async::AbcTwinRustAsync::JustInt(
                    self_.get(1).cst_decode(),
                )
            }
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_sync::AbcTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::misc_example_twin_sync::AbcTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::misc_example_twin_sync::AbcTwinSync::A(
                self_.get(1).cst_decode(),
            ),
            1 => crate::api::pseudo_manual::misc_example_twin_sync::AbcTwinSync::B(
                self_.get(1).cst_decode(),
            ),
            2 => crate::api::pseudo_manual::misc_example_twin_sync::AbcTwinSync::C(
                self_.get(1).cst_decode(),
            ),
            3 => crate::api::pseudo_manual::misc_example_twin_sync::AbcTwinSync::JustInt(
                self_.get(1).cst_decode(),
            ),
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::inside_macro::AnotherMacroStructTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::inside_macro::AnotherMacroStructTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::inside_macro::AnotherMacroStructTwinNormal {
            data: self_.get(0).cst_decode(),
            non_final_data: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::mirror::AnotherTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::mirror::AnotherTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::mirror::AnotherTwinNormal {
            a: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_rust_async::AnotherTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::mirror_twin_rust_async::AnotherTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_rust_async::AnotherTwinRustAsync {
            a: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync::AnotherTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::mirror_twin_sync::AnotherTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_sync::AnotherTwinSync {
            a: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationEnv>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationEnv {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationEnv {
            vars: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationEnvVar>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationEnvVar {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationEnvVar(
            self_.get(0).cst_decode(),
            self_.get(1).cst_decode(),
        )
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMessage>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMessage {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => {
                crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMessage::DisplayMessage(
                    self_.get(1).cst_decode(),
                )
            }
            1 => crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMessage::RenderPixel {
                x: self_.get(1).cst_decode(),
                y: self_.get(2).cst_decode(),
            },
            2 => crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMessage::Exit,
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationSettings>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationSettings {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            5,
            "Expected 5 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationSettings {
            name: self_.get(0).cst_decode(),
            version: self_.get(1).cst_decode(),
            mode: self_.get(2).cst_decode(),
            env: self_.get(3).cst_decode(),
            env_optional: self_.get(4).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::optional::AttributeTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::optional::AttributeTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::optional::AttributeTwinNormal {
            key: self_.get(0).cst_decode(),
            value: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::optional_twin_rust_async::AttributeTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::optional_twin_rust_async::AttributeTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::optional_twin_rust_async::AttributeTwinRustAsync {
            key: self_.get(0).cst_decode(),
            value: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::optional_twin_sync::AttributeTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::optional_twin_sync::AttributeTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::optional_twin_sync::AttributeTwinSync {
            key: self_.get(0).cst_decode(),
            value: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::misc_example::BTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::misc_example::BTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::misc_example::BTwinNormal {
            b: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_rust_async::BTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::misc_example_twin_rust_async::BTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_example_twin_rust_async::BTwinRustAsync {
            b: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_sync::BTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::misc_example_twin_sync::BTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_example_twin_sync::BTwinSync {
            b: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::basic::BasicGeneralEnumTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::basic::BasicGeneralEnumTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::basic::BasicGeneralEnumTwinNormal::Apple {
                field: self_.get(1).cst_decode(),
            },
            1 => crate::api::pseudo_manual::basic::BasicGeneralEnumTwinNormal::Orange,
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::basic_twin_rust_async::BasicGeneralEnumTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::basic_twin_rust_async::BasicGeneralEnumTwinRustAsync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::basic_twin_rust_async::BasicGeneralEnumTwinRustAsync::Apple{field:  self_.get(1).cst_decode()} },
1 => crate::api::pseudo_manual::basic_twin_rust_async::BasicGeneralEnumTwinRustAsync::Orange,
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::basic_twin_sync::BasicGeneralEnumTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::basic_twin_sync::BasicGeneralEnumTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::basic_twin_sync::BasicGeneralEnumTwinSync::Apple {
                field: self_.get(1).cst_decode(),
            },
            1 => crate::api::pseudo_manual::basic_twin_sync::BasicGeneralEnumTwinSync::Orange,
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::basic::BasicStructTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::basic::BasicStructTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::basic::BasicStructTwinNormal {
            apple: self_.get(0).cst_decode(),
            orange: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::basic_twin_rust_async::BasicStructTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::basic_twin_rust_async::BasicStructTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::basic_twin_rust_async::BasicStructTwinRustAsync {
            apple: self_.get(0).cst_decode(),
            orange: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::basic_twin_sync::BasicStructTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::basic_twin_sync::BasicStructTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::basic_twin_sync::BasicStructTwinSync {
            apple: self_.get(0).cst_decode(),
            orange: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::benchmark_api::BenchmarkBinaryTreeTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::benchmark_api::BenchmarkBinaryTreeTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            3,
            "Expected 3 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::benchmark_api::BenchmarkBinaryTreeTwinNormal {
            name: self_.get(0).cst_decode(),
            left: self_.get(1).cst_decode(),
            right: self_.get(2).cst_decode(),
        }
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::benchmark_api_twin_rust_async::BenchmarkBinaryTreeTwinRustAsync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::benchmark_api_twin_rust_async::BenchmarkBinaryTreeTwinRustAsync
    {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            3,
            "Expected 3 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::benchmark_api_twin_rust_async::BenchmarkBinaryTreeTwinRustAsync {
            name: self_.get(0).cst_decode(),
            left: self_.get(1).cst_decode(),
            right: self_.get(2).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::benchmark_api_twin_sync::BenchmarkBinaryTreeTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::benchmark_api_twin_sync::BenchmarkBinaryTreeTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            3,
            "Expected 3 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::benchmark_api_twin_sync::BenchmarkBinaryTreeTwinSync {
            name: self_.get(0).cst_decode(),
            left: self_.get(1).cst_decode(),
            right: self_.get(2).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::benchmark_api::BenchmarkBlobTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::benchmark_api::BenchmarkBlobTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            3,
            "Expected 3 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::benchmark_api::BenchmarkBlobTwinNormal {
            first: self_.get(0).cst_decode(),
            second: self_.get(1).cst_decode(),
            third: self_.get(2).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::benchmark_api_twin_rust_async::BenchmarkBlobTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::benchmark_api_twin_rust_async::BenchmarkBlobTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            3,
            "Expected 3 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::benchmark_api_twin_rust_async::BenchmarkBlobTwinRustAsync {
            first: self_.get(0).cst_decode(),
            second: self_.get(1).cst_decode(),
            third: self_.get(2).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::benchmark_api_twin_sync::BenchmarkBlobTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::benchmark_api_twin_sync::BenchmarkBlobTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            3,
            "Expected 3 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::benchmark_api_twin_sync::BenchmarkBlobTwinSync {
            first: self_.get(0).cst_decode(),
            second: self_.get(1).cst_decode(),
            third: self_.get(2).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::misc_example::BigBuffersTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::misc_example::BigBuffersTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::misc_example::BigBuffersTwinNormal {
            int64: self_.get(0).cst_decode(),
            uint64: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_rust_async::BigBuffersTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::misc_example_twin_rust_async::BigBuffersTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_example_twin_rust_async::BigBuffersTwinRustAsync {
            int64: self_.get(0).cst_decode(),
            uint64: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_sync::BigBuffersTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::misc_example_twin_sync::BigBuffersTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_example_twin_sync::BigBuffersTwinSync {
            int64: self_.get(0).cst_decode(),
            uint64: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::array::BlobTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::array::BlobTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::array::BlobTwinNormal(self_.get(0).cst_decode())
    }
}
impl CstDecode<crate::api::pseudo_manual::array_twin_rust_async::BlobTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::array_twin_rust_async::BlobTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::array_twin_rust_async::BlobTwinRustAsync(
            self_.get(0).cst_decode(),
        )
    }
}
impl CstDecode<crate::api::pseudo_manual::array_twin_sync::BlobTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::array_twin_sync::BlobTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::array_twin_sync::BlobTwinSync(self_.get(0).cst_decode())
    }
}
impl CstDecode<Box<[u8; 1600]>> for Box<[u8]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<[u8; 1600]> {
        CstDecode::<[u8; 1600]>::cst_decode(self).into()
    }
}
impl CstDecode<Box<[u8; 8]>> for Box<[u8]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<[u8; 8]> {
        CstDecode::<[u8; 8]>::cst_decode(self).into()
    }
}
impl CstDecode<crate::api::misc_example::CTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::misc_example::CTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::misc_example::CTwinNormal {
            c: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_rust_async::CTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::misc_example_twin_rust_async::CTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_example_twin_rust_async::CTwinRustAsync {
            c: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_sync::CTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::misc_example_twin_sync::CTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_example_twin_sync::CTwinSync {
            c: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::method::ConcatenateWithTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::method::ConcatenateWithTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::method::ConcatenateWithTwinNormal {
            a: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::method_twin_rust_async::ConcatenateWithTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::method_twin_rust_async::ConcatenateWithTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::method_twin_rust_async::ConcatenateWithTwinRustAsync {
            a: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::method_twin_sync::ConcatenateWithTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::method_twin_sync::ConcatenateWithTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::method_twin_sync::ConcatenateWithTwinSync {
            a: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::constructor::ConstructorTranslatableStructTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::constructor::ConstructorTranslatableStructTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::constructor::ConstructorTranslatableStructTwinNormal {
            one: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::constructor::ConstructorTranslatableSyncStructTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::constructor::ConstructorTranslatableSyncStructTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::constructor::ConstructorTranslatableSyncStructTwinNormal {
            one: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::mirror::ContainsMirroredSubStructTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::mirror::ContainsMirroredSubStructTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::mirror::ContainsMirroredSubStructTwinNormal {
            test: self_.get(0).cst_decode(),
            test2: self_.get(1).cst_decode(),
        }
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::mirror_twin_rust_async::ContainsMirroredSubStructTwinRustAsync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::mirror_twin_rust_async::ContainsMirroredSubStructTwinRustAsync
    {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_rust_async::ContainsMirroredSubStructTwinRustAsync {
            test: self_.get(0).cst_decode(),
            test2: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync::ContainsMirroredSubStructTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::mirror_twin_sync::ContainsMirroredSubStructTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_sync::ContainsMirroredSubStructTwinSync {
            test: self_.get(0).cst_decode(),
            test2: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::exception::CustomEnumErrorTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::exception::CustomEnumErrorTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::exception::CustomEnumErrorTwinNormal::One {
                message: self_.get(1).cst_decode(),
                backtrace: self_.get(2).cst_decode(),
            },
            1 => crate::api::exception::CustomEnumErrorTwinNormal::Two {
                message: self_.get(1).cst_decode(),
                backtrace: self_.get(2).cst_decode(),
            },
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::exception_twin_rust_async::CustomEnumErrorTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_rust_async::CustomEnumErrorTwinRustAsync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::exception_twin_rust_async::CustomEnumErrorTwinRustAsync::One{message:  self_.get(1).cst_decode(),backtrace:  self_.get(2).cst_decode()} },
1 => { crate::api::pseudo_manual::exception_twin_rust_async::CustomEnumErrorTwinRustAsync::Two{message:  self_.get(1).cst_decode(),backtrace:  self_.get(2).cst_decode()} },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::exception_twin_sync::CustomEnumErrorTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::exception_twin_sync::CustomEnumErrorTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::exception_twin_sync::CustomEnumErrorTwinSync::One {
                message: self_.get(1).cst_decode(),
                backtrace: self_.get(2).cst_decode(),
            },
            1 => crate::api::pseudo_manual::exception_twin_sync::CustomEnumErrorTwinSync::Two {
                message: self_.get(1).cst_decode(),
                backtrace: self_.get(2).cst_decode(),
            },
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::exception::CustomErrorTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::exception::CustomErrorTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::exception::CustomErrorTwinNormal::Error0 {
                e: self_.get(1).cst_decode(),
                backtrace: self_.get(2).cst_decode(),
            },
            1 => crate::api::exception::CustomErrorTwinNormal::Error1 {
                e: self_.get(1).cst_decode(),
                backtrace: self_.get(2).cst_decode(),
            },
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::exception_twin_rust_async::CustomErrorTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_rust_async::CustomErrorTwinRustAsync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::exception_twin_rust_async::CustomErrorTwinRustAsync::Error0{e:  self_.get(1).cst_decode(),backtrace:  self_.get(2).cst_decode()} },
1 => { crate::api::pseudo_manual::exception_twin_rust_async::CustomErrorTwinRustAsync::Error1{e:  self_.get(1).cst_decode(),backtrace:  self_.get(2).cst_decode()} },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::exception_twin_sync::CustomErrorTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::exception_twin_sync::CustomErrorTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::exception_twin_sync::CustomErrorTwinSync::Error0 {
                e: self_.get(1).cst_decode(),
                backtrace: self_.get(2).cst_decode(),
            },
            1 => crate::api::pseudo_manual::exception_twin_sync::CustomErrorTwinSync::Error1 {
                e: self_.get(1).cst_decode(),
                backtrace: self_.get(2).cst_decode(),
            },
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::exception::CustomNestedError1TwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::exception::CustomNestedError1TwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::exception::CustomNestedError1TwinNormal::CustomNested1(
                self_.get(1).cst_decode(),
            ),
            1 => crate::api::exception::CustomNestedError1TwinNormal::ErrorNested(
                self_.get(1).cst_decode(),
            ),
            _ => unreachable!(),
        }
    }
}
impl
    CstDecode<crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedError1TwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedError1TwinRustAsync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedError1TwinRustAsync::CustomNested1( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedError1TwinRustAsync::ErrorNested( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::exception_twin_sync::CustomNestedError1TwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_sync::CustomNestedError1TwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::exception_twin_sync::CustomNestedError1TwinSync::CustomNested1( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::exception_twin_sync::CustomNestedError1TwinSync::ErrorNested( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::exception::CustomNestedError2TwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::exception::CustomNestedError2TwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::exception::CustomNestedError2TwinNormal::CustomNested2(
                self_.get(1).cst_decode(),
            ),
            1 => crate::api::exception::CustomNestedError2TwinNormal::CustomNested2Number(
                self_.get(1).cst_decode(),
            ),
            _ => unreachable!(),
        }
    }
}
impl
    CstDecode<crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedError2TwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedError2TwinRustAsync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedError2TwinRustAsync::CustomNested2( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedError2TwinRustAsync::CustomNested2Number( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::exception_twin_sync::CustomNestedError2TwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_sync::CustomNestedError2TwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::exception_twin_sync::CustomNestedError2TwinSync::CustomNested2( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::exception_twin_sync::CustomNestedError2TwinSync::CustomNested2Number( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::exception::CustomNestedErrorInnerTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::exception::CustomNestedErrorInnerTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::exception::CustomNestedErrorInnerTwinNormal::Three(
                self_.get(1).cst_decode(),
            ),
            1 => crate::api::exception::CustomNestedErrorInnerTwinNormal::Four(
                self_.get(1).cst_decode(),
            ),
            _ => unreachable!(),
        }
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedErrorInnerTwinRustAsync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedErrorInnerTwinRustAsync
    {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedErrorInnerTwinRustAsync::Three( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedErrorInnerTwinRustAsync::Four( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::exception_twin_sync::CustomNestedErrorInnerTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_sync::CustomNestedErrorInnerTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::exception_twin_sync::CustomNestedErrorInnerTwinSync::Three( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::exception_twin_sync::CustomNestedErrorInnerTwinSync::Four( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::exception::CustomNestedErrorOuterTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::exception::CustomNestedErrorOuterTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::exception::CustomNestedErrorOuterTwinNormal::One(
                self_.get(1).cst_decode(),
            ),
            1 => crate::api::exception::CustomNestedErrorOuterTwinNormal::Two(
                self_.get(1).cst_decode(),
            ),
            _ => unreachable!(),
        }
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedErrorOuterTwinRustAsync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedErrorOuterTwinRustAsync
    {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedErrorOuterTwinRustAsync::One( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::exception_twin_rust_async::CustomNestedErrorOuterTwinRustAsync::Two( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::exception_twin_sync::CustomNestedErrorOuterTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_sync::CustomNestedErrorOuterTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => {
                crate::api::pseudo_manual::exception_twin_sync::CustomNestedErrorOuterTwinSync::One(
                    self_.get(1).cst_decode(),
                )
            }
            1 => {
                crate::api::pseudo_manual::exception_twin_sync::CustomNestedErrorOuterTwinSync::Two(
                    self_.get(1).cst_decode(),
                )
            }
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::exception::CustomStructErrorAnotherTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::exception::CustomStructErrorAnotherTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::exception::CustomStructErrorAnotherTwinNormal {
            message: self_.get(0).cst_decode(),
        }
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::exception_twin_rust_async::CustomStructErrorAnotherTwinRustAsync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_rust_async::CustomStructErrorAnotherTwinRustAsync
    {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::exception_twin_rust_async::CustomStructErrorAnotherTwinRustAsync{message:  self_.get(0).cst_decode()}
    }
}
impl CstDecode<crate::api::pseudo_manual::exception_twin_sync::CustomStructErrorAnotherTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_sync::CustomStructErrorAnotherTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::exception_twin_sync::CustomStructErrorAnotherTwinSync {
            message: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::exception::CustomStructErrorTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::exception::CustomStructErrorTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::exception::CustomStructErrorTwinNormal {
            a: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::exception_twin_rust_async::CustomStructErrorTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_rust_async::CustomStructErrorTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::exception_twin_rust_async::CustomStructErrorTwinRustAsync {
            a: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::exception_twin_sync::CustomStructErrorTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_sync::CustomStructErrorTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::exception_twin_sync::CustomStructErrorTwinSync {
            a: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::exception::CustomStructTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::exception::CustomStructTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::exception::CustomStructTwinNormal {
            message: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::exception_twin_rust_async::CustomStructTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_rust_async::CustomStructTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::exception_twin_rust_async::CustomStructTwinRustAsync {
            message: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::exception_twin_sync::CustomStructTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::exception_twin_sync::CustomStructTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::exception_twin_sync::CustomStructTwinSync {
            message: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::attribute::CustomizedTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::attribute::CustomizedTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::attribute::CustomizedTwinNormal {
            final_field: self_.get(0).cst_decode(),
            non_final_field: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::attribute_twin_rust_async::CustomizedTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::attribute_twin_rust_async::CustomizedTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::attribute_twin_rust_async::CustomizedTwinRustAsync {
            final_field: self_.get(0).cst_decode(),
            non_final_field: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::attribute_twin_sync::CustomizedTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::attribute_twin_sync::CustomizedTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::attribute_twin_sync::CustomizedTwinSync {
            final_field: self_.get(0).cst_decode(),
            non_final_field: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::dart_opaque::DartOpaqueNestedTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::dart_opaque::DartOpaqueNestedTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::dart_opaque::DartOpaqueNestedTwinNormal {
            first: self_.get(0).cst_decode(),
            second: self_.get(1).cst_decode(),
        }
    }
}
impl
    CstDecode<crate::api::pseudo_manual::dart_opaque_twin_rust_async::DartOpaqueNestedTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::dart_opaque_twin_rust_async::DartOpaqueNestedTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::dart_opaque_twin_rust_async::DartOpaqueNestedTwinRustAsync {
            first: self_.get(0).cst_decode(),
            second: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::dart_opaque_twin_sync::DartOpaqueNestedTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::dart_opaque_twin_sync::DartOpaqueNestedTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::dart_opaque_twin_sync::DartOpaqueNestedTwinSync {
            first: self_.get(0).cst_decode(),
            second: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::dart_fn::DemoStructForRustCallDartTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::dart_fn::DemoStructForRustCallDartTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::dart_fn::DemoStructForRustCallDartTwinNormal {
            name: self_.get(0).cst_decode(),
        }
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::dart_fn_twin_rust_async::DemoStructForRustCallDartTwinRustAsync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::dart_fn_twin_rust_async::DemoStructForRustCallDartTwinRustAsync
    {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::dart_fn_twin_rust_async::DemoStructForRustCallDartTwinRustAsync {
            name: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::enumeration::DistanceTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::enumeration::DistanceTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::enumeration::DistanceTwinNormal::Unknown,
            1 => crate::api::enumeration::DistanceTwinNormal::Map(self_.get(1).cst_decode()),
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_rust_async::DistanceTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::enumeration_twin_rust_async::DistanceTwinRustAsync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => crate::api::pseudo_manual::enumeration_twin_rust_async::DistanceTwinRustAsync::Unknown,
1 => { crate::api::pseudo_manual::enumeration_twin_rust_async::DistanceTwinRustAsync::Map( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_sync::DistanceTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::enumeration_twin_sync::DistanceTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::enumeration_twin_sync::DistanceTwinSync::Unknown,
            1 => crate::api::pseudo_manual::enumeration_twin_sync::DistanceTwinSync::Map(
                self_.get(1).cst_decode(),
            ),
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::optional::ElementTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::optional::ElementTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::optional::ElementTwinNormal {
            tag: self_.get(0).cst_decode(),
            text: self_.get(1).cst_decode(),
            attributes: self_.get(2).cst_decode(),
            children: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::optional_twin_rust_async::ElementTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::optional_twin_rust_async::ElementTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::optional_twin_rust_async::ElementTwinRustAsync {
            tag: self_.get(0).cst_decode(),
            text: self_.get(1).cst_decode(),
            attributes: self_.get(2).cst_decode(),
            children: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::optional_twin_sync::ElementTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::optional_twin_sync::ElementTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::optional_twin_sync::ElementTwinSync {
            tag: self_.get(0).cst_decode(),
            text: self_.get(1).cst_decode(),
            attributes: self_.get(2).cst_decode(),
            children: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::misc_type::EmptyTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::misc_type::EmptyTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            0,
            "Expected 0 elements, got {}",
            self_.length()
        );
        crate::api::misc_type::EmptyTwinNormal {}
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_type_twin_rust_async::EmptyTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::misc_type_twin_rust_async::EmptyTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            0,
            "Expected 0 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_type_twin_rust_async::EmptyTwinRustAsync {}
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_type_twin_sync::EmptyTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::misc_type_twin_sync::EmptyTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            0,
            "Expected 0 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_type_twin_sync::EmptyTwinSync {}
    }
}
impl CstDecode<crate::api::dart_opaque::EnumDartOpaqueTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::dart_opaque::EnumDartOpaqueTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::dart_opaque::EnumDartOpaqueTwinNormal::Primitive(
                self_.get(1).cst_decode(),
            ),
            1 => {
                crate::api::dart_opaque::EnumDartOpaqueTwinNormal::Opaque(self_.get(1).cst_decode())
            }
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::dart_opaque_twin_rust_async::EnumDartOpaqueTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::dart_opaque_twin_rust_async::EnumDartOpaqueTwinRustAsync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::dart_opaque_twin_rust_async::EnumDartOpaqueTwinRustAsync::Primitive( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::dart_opaque_twin_rust_async::EnumDartOpaqueTwinRustAsync::Opaque( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::dart_opaque_twin_sync::EnumDartOpaqueTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::dart_opaque_twin_sync::EnumDartOpaqueTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => {
                crate::api::pseudo_manual::dart_opaque_twin_sync::EnumDartOpaqueTwinSync::Primitive(
                    self_.get(1).cst_decode(),
                )
            }
            1 => crate::api::pseudo_manual::dart_opaque_twin_sync::EnumDartOpaqueTwinSync::Opaque(
                self_.get(1).cst_decode(),
            ),
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::rust_opaque_twin_moi::EnumOpaqueTwinMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::rust_opaque_twin_moi::EnumOpaqueTwinMoi {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::rust_opaque_twin_moi::EnumOpaqueTwinMoi::Struct(
                self_.get(1).cst_decode(),
            ),
            1 => crate::api::pseudo_manual::rust_opaque_twin_moi::EnumOpaqueTwinMoi::Primitive(
                self_.get(1).cst_decode(),
            ),
            2 => crate::api::pseudo_manual::rust_opaque_twin_moi::EnumOpaqueTwinMoi::TraitObj(
                self_.get(1).cst_decode(),
            ),
            3 => crate::api::pseudo_manual::rust_opaque_twin_moi::EnumOpaqueTwinMoi::Mutex(
                self_.get(1).cst_decode(),
            ),
            4 => crate::api::pseudo_manual::rust_opaque_twin_moi::EnumOpaqueTwinMoi::RwLock(
                self_.get(1).cst_decode(),
            ),
            5 => crate::api::pseudo_manual::rust_opaque_twin_moi::EnumOpaqueTwinMoi::Nothing,
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::rust_opaque::EnumOpaqueTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::rust_opaque::EnumOpaqueTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::rust_opaque::EnumOpaqueTwinNormal::Struct(self_.get(1).cst_decode()),
            1 => {
                crate::api::rust_opaque::EnumOpaqueTwinNormal::Primitive(self_.get(1).cst_decode())
            }
            2 => crate::api::rust_opaque::EnumOpaqueTwinNormal::TraitObj(self_.get(1).cst_decode()),
            3 => crate::api::rust_opaque::EnumOpaqueTwinNormal::Mutex(self_.get(1).cst_decode()),
            4 => crate::api::rust_opaque::EnumOpaqueTwinNormal::RwLock(self_.get(1).cst_decode()),
            5 => crate::api::rust_opaque::EnumOpaqueTwinNormal::Nothing,
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::rust_opaque_twin_rust_async::EnumOpaqueTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::rust_opaque_twin_rust_async::EnumOpaqueTwinRustAsync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::rust_opaque_twin_rust_async::EnumOpaqueTwinRustAsync::Struct( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::rust_opaque_twin_rust_async::EnumOpaqueTwinRustAsync::Primitive( self_.get(1).cst_decode()) },
2 => { crate::api::pseudo_manual::rust_opaque_twin_rust_async::EnumOpaqueTwinRustAsync::TraitObj( self_.get(1).cst_decode()) },
3 => { crate::api::pseudo_manual::rust_opaque_twin_rust_async::EnumOpaqueTwinRustAsync::Mutex( self_.get(1).cst_decode()) },
4 => { crate::api::pseudo_manual::rust_opaque_twin_rust_async::EnumOpaqueTwinRustAsync::RwLock( self_.get(1).cst_decode()) },
5 => crate::api::pseudo_manual::rust_opaque_twin_rust_async::EnumOpaqueTwinRustAsync::Nothing,
                    _ => unreachable!(),
                }
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::EnumOpaqueTwinRustAsyncMoi,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::EnumOpaqueTwinRustAsyncMoi
    {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::EnumOpaqueTwinRustAsyncMoi::Struct( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::EnumOpaqueTwinRustAsyncMoi::Primitive( self_.get(1).cst_decode()) },
2 => { crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::EnumOpaqueTwinRustAsyncMoi::TraitObj( self_.get(1).cst_decode()) },
3 => { crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::EnumOpaqueTwinRustAsyncMoi::Mutex( self_.get(1).cst_decode()) },
4 => { crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::EnumOpaqueTwinRustAsyncMoi::RwLock( self_.get(1).cst_decode()) },
5 => crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::EnumOpaqueTwinRustAsyncMoi::Nothing,
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::rust_opaque_twin_sync::EnumOpaqueTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::rust_opaque_twin_sync::EnumOpaqueTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::rust_opaque_twin_sync::EnumOpaqueTwinSync::Struct(
                self_.get(1).cst_decode(),
            ),
            1 => crate::api::pseudo_manual::rust_opaque_twin_sync::EnumOpaqueTwinSync::Primitive(
                self_.get(1).cst_decode(),
            ),
            2 => crate::api::pseudo_manual::rust_opaque_twin_sync::EnumOpaqueTwinSync::TraitObj(
                self_.get(1).cst_decode(),
            ),
            3 => crate::api::pseudo_manual::rust_opaque_twin_sync::EnumOpaqueTwinSync::Mutex(
                self_.get(1).cst_decode(),
            ),
            4 => crate::api::pseudo_manual::rust_opaque_twin_sync::EnumOpaqueTwinSync::RwLock(
                self_.get(1).cst_decode(),
            ),
            5 => crate::api::pseudo_manual::rust_opaque_twin_sync::EnumOpaqueTwinSync::Nothing,
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::rust_opaque_twin_sync_moi::EnumOpaqueTwinSyncMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::rust_opaque_twin_sync_moi::EnumOpaqueTwinSyncMoi {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::rust_opaque_twin_sync_moi::EnumOpaqueTwinSyncMoi::Struct( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::rust_opaque_twin_sync_moi::EnumOpaqueTwinSyncMoi::Primitive( self_.get(1).cst_decode()) },
2 => { crate::api::pseudo_manual::rust_opaque_twin_sync_moi::EnumOpaqueTwinSyncMoi::TraitObj( self_.get(1).cst_decode()) },
3 => { crate::api::pseudo_manual::rust_opaque_twin_sync_moi::EnumOpaqueTwinSyncMoi::Mutex( self_.get(1).cst_decode()) },
4 => { crate::api::pseudo_manual::rust_opaque_twin_sync_moi::EnumOpaqueTwinSyncMoi::RwLock( self_.get(1).cst_decode()) },
5 => crate::api::pseudo_manual::rust_opaque_twin_sync_moi::EnumOpaqueTwinSyncMoi::Nothing,
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::rust_auto_opaque_twin_moi::EnumWithGoodAndOpaqueTwinMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::rust_auto_opaque_twin_moi::EnumWithGoodAndOpaqueTwinMoi {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::rust_auto_opaque_twin_moi::EnumWithGoodAndOpaqueTwinMoi::Good( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::rust_auto_opaque_twin_moi::EnumWithGoodAndOpaqueTwinMoi::Opaque( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::rust_auto_opaque::EnumWithGoodAndOpaqueTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::rust_auto_opaque::EnumWithGoodAndOpaqueTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::rust_auto_opaque::EnumWithGoodAndOpaqueTwinNormal::Good(
                self_.get(1).cst_decode(),
            ),
            1 => crate::api::rust_auto_opaque::EnumWithGoodAndOpaqueTwinNormal::Opaque(
                self_.get(1).cst_decode(),
            ),
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async::EnumWithGoodAndOpaqueTwinRustAsync> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async::EnumWithGoodAndOpaqueTwinRustAsync {
                let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async::EnumWithGoodAndOpaqueTwinRustAsync::Good( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async::EnumWithGoodAndOpaqueTwinRustAsync::Opaque( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
            }
        }
impl CstDecode<crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async_moi::EnumWithGoodAndOpaqueTwinRustAsyncMoi> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async_moi::EnumWithGoodAndOpaqueTwinRustAsyncMoi {
                let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async_moi::EnumWithGoodAndOpaqueTwinRustAsyncMoi::Good( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async_moi::EnumWithGoodAndOpaqueTwinRustAsyncMoi::Opaque( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
            }
        }
impl CstDecode<crate::api::pseudo_manual::rust_auto_opaque_twin_sync::EnumWithGoodAndOpaqueTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::rust_auto_opaque_twin_sync::EnumWithGoodAndOpaqueTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::rust_auto_opaque_twin_sync::EnumWithGoodAndOpaqueTwinSync::Good( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::rust_auto_opaque_twin_sync::EnumWithGoodAndOpaqueTwinSync::Opaque( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::rust_auto_opaque_twin_sync_moi::EnumWithGoodAndOpaqueTwinSyncMoi,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::rust_auto_opaque_twin_sync_moi::EnumWithGoodAndOpaqueTwinSyncMoi
    {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::rust_auto_opaque_twin_sync_moi::EnumWithGoodAndOpaqueTwinSyncMoi::Good( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::rust_auto_opaque_twin_sync_moi::EnumWithGoodAndOpaqueTwinSyncMoi::Opaque( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::enumeration::EnumWithItemMixedTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::enumeration::EnumWithItemMixedTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::enumeration::EnumWithItemMixedTwinNormal::A,
            1 => crate::api::enumeration::EnumWithItemMixedTwinNormal::B(self_.get(1).cst_decode()),
            2 => crate::api::enumeration::EnumWithItemMixedTwinNormal::C {
                c_field: self_.get(1).cst_decode(),
            },
            _ => unreachable!(),
        }
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::enumeration_twin_rust_async::EnumWithItemMixedTwinRustAsync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::enumeration_twin_rust_async::EnumWithItemMixedTwinRustAsync
    {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => crate::api::pseudo_manual::enumeration_twin_rust_async::EnumWithItemMixedTwinRustAsync::A,
1 => { crate::api::pseudo_manual::enumeration_twin_rust_async::EnumWithItemMixedTwinRustAsync::B( self_.get(1).cst_decode()) },
2 => { crate::api::pseudo_manual::enumeration_twin_rust_async::EnumWithItemMixedTwinRustAsync::C{c_field:  self_.get(1).cst_decode()} },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_sync::EnumWithItemMixedTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::enumeration_twin_sync::EnumWithItemMixedTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::enumeration_twin_sync::EnumWithItemMixedTwinSync::A,
            1 => crate::api::pseudo_manual::enumeration_twin_sync::EnumWithItemMixedTwinSync::B(
                self_.get(1).cst_decode(),
            ),
            2 => crate::api::pseudo_manual::enumeration_twin_sync::EnumWithItemMixedTwinSync::C {
                c_field: self_.get(1).cst_decode(),
            },
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::enumeration::EnumWithItemStructTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::enumeration::EnumWithItemStructTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::enumeration::EnumWithItemStructTwinNormal::A {
                a_field: self_.get(1).cst_decode(),
            },
            1 => crate::api::enumeration::EnumWithItemStructTwinNormal::B {
                b_field: self_.get(1).cst_decode(),
            },
            _ => unreachable!(),
        }
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::enumeration_twin_rust_async::EnumWithItemStructTwinRustAsync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::enumeration_twin_rust_async::EnumWithItemStructTwinRustAsync
    {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::enumeration_twin_rust_async::EnumWithItemStructTwinRustAsync::A{a_field:  self_.get(1).cst_decode()} },
1 => { crate::api::pseudo_manual::enumeration_twin_rust_async::EnumWithItemStructTwinRustAsync::B{b_field:  self_.get(1).cst_decode()} },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_sync::EnumWithItemStructTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::enumeration_twin_sync::EnumWithItemStructTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::enumeration_twin_sync::EnumWithItemStructTwinSync::A {
                a_field: self_.get(1).cst_decode(),
            },
            1 => crate::api::pseudo_manual::enumeration_twin_sync::EnumWithItemStructTwinSync::B {
                b_field: self_.get(1).cst_decode(),
            },
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::enumeration::EnumWithItemTupleTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::enumeration::EnumWithItemTupleTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::enumeration::EnumWithItemTupleTwinNormal::A(self_.get(1).cst_decode()),
            1 => crate::api::enumeration::EnumWithItemTupleTwinNormal::B(self_.get(1).cst_decode()),
            _ => unreachable!(),
        }
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::enumeration_twin_rust_async::EnumWithItemTupleTwinRustAsync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::enumeration_twin_rust_async::EnumWithItemTupleTwinRustAsync
    {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::enumeration_twin_rust_async::EnumWithItemTupleTwinRustAsync::A( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::enumeration_twin_rust_async::EnumWithItemTupleTwinRustAsync::B( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_sync::EnumWithItemTupleTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::enumeration_twin_sync::EnumWithItemTupleTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::enumeration_twin_sync::EnumWithItemTupleTwinSync::A(
                self_.get(1).cst_decode(),
            ),
            1 => crate::api::pseudo_manual::enumeration_twin_sync::EnumWithItemTupleTwinSync::B(
                self_.get(1).cst_decode(),
            ),
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::event_listener::EventTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::event_listener::EventTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::event_listener::EventTwinNormal {
            address: self_.get(0).cst_decode(),
            payload: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::event_listener_twin_rust_async::EventTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::event_listener_twin_rust_async::EventTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::event_listener_twin_rust_async::EventTwinRustAsync {
            address: self_.get(0).cst_decode(),
            payload: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::optional::ExoticOptionalsTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::optional::ExoticOptionalsTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            14,
            "Expected 14 elements, got {}",
            self_.length()
        );
        crate::api::optional::ExoticOptionalsTwinNormal {
            int32: self_.get(0).cst_decode(),
            int64: self_.get(1).cst_decode(),
            float64: self_.get(2).cst_decode(),
            boolean: self_.get(3).cst_decode(),
            zerocopy: self_.get(4).cst_decode(),
            int8list: self_.get(5).cst_decode(),
            uint8list: self_.get(6).cst_decode(),
            int32list: self_.get(7).cst_decode(),
            float32list: self_.get(8).cst_decode(),
            float64list: self_.get(9).cst_decode(),
            attributes: self_.get(10).cst_decode(),
            attributes_nullable: self_.get(11).cst_decode(),
            nullable_attributes: self_.get(12).cst_decode(),
            newtypeint: self_.get(13).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::optional_twin_rust_async::ExoticOptionalsTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::optional_twin_rust_async::ExoticOptionalsTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            14,
            "Expected 14 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::optional_twin_rust_async::ExoticOptionalsTwinRustAsync {
            int32: self_.get(0).cst_decode(),
            int64: self_.get(1).cst_decode(),
            float64: self_.get(2).cst_decode(),
            boolean: self_.get(3).cst_decode(),
            zerocopy: self_.get(4).cst_decode(),
            int8list: self_.get(5).cst_decode(),
            uint8list: self_.get(6).cst_decode(),
            int32list: self_.get(7).cst_decode(),
            float32list: self_.get(8).cst_decode(),
            float64list: self_.get(9).cst_decode(),
            attributes: self_.get(10).cst_decode(),
            attributes_nullable: self_.get(11).cst_decode(),
            nullable_attributes: self_.get(12).cst_decode(),
            newtypeint: self_.get(13).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::optional_twin_sync::ExoticOptionalsTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::optional_twin_sync::ExoticOptionalsTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            14,
            "Expected 14 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::optional_twin_sync::ExoticOptionalsTwinSync {
            int32: self_.get(0).cst_decode(),
            int64: self_.get(1).cst_decode(),
            float64: self_.get(2).cst_decode(),
            boolean: self_.get(3).cst_decode(),
            zerocopy: self_.get(4).cst_decode(),
            int8list: self_.get(5).cst_decode(),
            uint8list: self_.get(6).cst_decode(),
            int32list: self_.get(7).cst_decode(),
            float32list: self_.get(8).cst_decode(),
            float64list: self_.get(9).cst_decode(),
            attributes: self_.get(10).cst_decode(),
            attributes_nullable: self_.get(11).cst_decode(),
            nullable_attributes: self_.get(12).cst_decode(),
            newtypeint: self_.get(13).cst_decode(),
        }
    }
}
impl CstDecode<[f64; 16]> for Box<[f64]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [f64; 16] {
        let vec: Vec<f64> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<crate::api::chrono_type::FeatureChronoTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::chrono_type::FeatureChronoTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::chrono_type::FeatureChronoTwinNormal {
            utc: self_.get(0).cst_decode(),
            local: self_.get(1).cst_decode(),
            duration: self_.get(2).cst_decode(),
            naive: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::chrono_type_twin_rust_async::FeatureChronoTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::chrono_type_twin_rust_async::FeatureChronoTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::chrono_type_twin_rust_async::FeatureChronoTwinRustAsync {
            utc: self_.get(0).cst_decode(),
            local: self_.get(1).cst_decode(),
            duration: self_.get(2).cst_decode(),
            naive: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::chrono_type_twin_sync::FeatureChronoTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::chrono_type_twin_sync::FeatureChronoTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::chrono_type_twin_sync::FeatureChronoTwinSync {
            utc: self_.get(0).cst_decode(),
            local: self_.get(1).cst_decode(),
            duration: self_.get(2).cst_decode(),
            naive: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::uuid_type::FeatureUuidTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::uuid_type::FeatureUuidTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::uuid_type::FeatureUuidTwinNormal {
            one: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::uuid_type_twin_rust_async::FeatureUuidTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::uuid_type_twin_rust_async::FeatureUuidTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::uuid_type_twin_rust_async::FeatureUuidTwinRustAsync {
            one: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::uuid_type_twin_sync::FeatureUuidTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::uuid_type_twin_sync::FeatureUuidTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::uuid_type_twin_sync::FeatureUuidTwinSync {
            one: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::array::FeedIdTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::array::FeedIdTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::array::FeedIdTwinNormal(self_.get(0).cst_decode())
    }
}
impl CstDecode<crate::api::pseudo_manual::array_twin_rust_async::FeedIdTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::array_twin_rust_async::FeedIdTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::array_twin_rust_async::FeedIdTwinRustAsync(
            self_.get(0).cst_decode(),
        )
    }
}
impl CstDecode<crate::api::pseudo_manual::array_twin_sync::FeedIdTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::array_twin_sync::FeedIdTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::array_twin_sync::FeedIdTwinSync(self_.get(0).cst_decode())
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync_sse::HashMapValue>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::mirror_twin_sync_sse::HashMapValue {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_sync_sse::HashMapValue {
            inner: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<[i32; 2]> for Box<[i32]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [i32; 2] {
        let vec: Vec<i32> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<crate::api::enumeration::KitchenSinkTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::enumeration::KitchenSinkTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::enumeration::KitchenSinkTwinNormal::Empty,
            1 => crate::api::enumeration::KitchenSinkTwinNormal::Primitives {
                int32: self_.get(1).cst_decode(),
                float64: self_.get(2).cst_decode(),
                boolean: self_.get(3).cst_decode(),
            },
            2 => crate::api::enumeration::KitchenSinkTwinNormal::Nested(
                self_.get(1).cst_decode(),
                self_.get(2).cst_decode(),
            ),
            3 => crate::api::enumeration::KitchenSinkTwinNormal::Optional(
                self_.get(1).cst_decode(),
                self_.get(2).cst_decode(),
            ),
            4 => crate::api::enumeration::KitchenSinkTwinNormal::Buffer(self_.get(1).cst_decode()),
            5 => crate::api::enumeration::KitchenSinkTwinNormal::Enums(self_.get(1).cst_decode()),
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync::Empty,
1 => { crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync::Primitives{int32:  self_.get(1).cst_decode(),float64:  self_.get(2).cst_decode(),boolean:  self_.get(3).cst_decode()} },
2 => { crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync::Nested( self_.get(1).cst_decode(), self_.get(2).cst_decode()) },
3 => { crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync::Optional( self_.get(1).cst_decode(), self_.get(2).cst_decode()) },
4 => { crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync::Buffer( self_.get(1).cst_decode()) },
5 => { crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync::Enums( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync::Empty,
            1 => {
                crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync::Primitives {
                    int32: self_.get(1).cst_decode(),
                    float64: self_.get(2).cst_decode(),
                    boolean: self_.get(3).cst_decode(),
                }
            }
            2 => crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync::Nested(
                self_.get(1).cst_decode(),
                self_.get(2).cst_decode(),
            ),
            3 => crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync::Optional(
                self_.get(1).cst_decode(),
                self_.get(2).cst_decode(),
            ),
            4 => crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync::Buffer(
                self_.get(1).cst_decode(),
            ),
            5 => crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync::Enums(
                self_.get(1).cst_decode(),
            ),
            _ => unreachable!(),
        }
    }
}
impl CstDecode<Vec<NonCloneSimpleTwinMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<NonCloneSimpleTwinMoi> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<NonCloneSimpleTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<NonCloneSimpleTwinNormal> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<NonCloneSimpleTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<NonCloneSimpleTwinRustAsync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<NonCloneSimpleTwinRustAsyncMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<NonCloneSimpleTwinRustAsyncMoi> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<NonCloneSimpleTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<NonCloneSimpleTwinSync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<NonCloneSimpleTwinSyncMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<NonCloneSimpleTwinSyncMoi> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<chrono::Duration>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<chrono::Duration> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<chrono::DateTime<chrono::Local>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<chrono::DateTime<chrono::Local>> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<chrono::NaiveDateTime>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<chrono::NaiveDateTime> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<flutter_rust_bridge::DartOpaque>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<flutter_rust_bridge::DartOpaque> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<RustOpaqueMoi<HideDataTwinMoi>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<RustOpaqueMoi<HideDataTwinMoi>> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<RustOpaqueNom<HideDataTwinNormal>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<RustOpaqueNom<HideDataTwinNormal>> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<RustOpaqueNom<HideDataTwinRustAsync>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<RustOpaqueNom<HideDataTwinRustAsync>> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<RustOpaqueMoi<HideDataTwinRustAsyncMoi>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<RustOpaqueMoi<HideDataTwinRustAsyncMoi>> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<RustOpaqueNom<HideDataTwinSync>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<RustOpaqueNom<HideDataTwinSync>> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<RustOpaqueMoi<HideDataTwinSyncMoi>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<RustOpaqueMoi<HideDataTwinSyncMoi>> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<String>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<String> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<uuid::Uuid>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<uuid::Uuid> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationEnvVar>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationEnvVar> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationSettings>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationSettings> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::optional::AttributeTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::optional::AttributeTwinNormal> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::optional_twin_rust_async::AttributeTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::optional_twin_rust_async::AttributeTwinRustAsync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::optional_twin_sync::AttributeTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::pseudo_manual::optional_twin_sync::AttributeTwinSync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::basic::BasicGeneralEnumTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::pseudo_manual::basic::BasicGeneralEnumTwinNormal> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::basic_twin_rust_async::BasicGeneralEnumTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::basic_twin_rust_async::BasicGeneralEnumTwinRustAsync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::basic_twin_sync::BasicGeneralEnumTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::basic_twin_sync::BasicGeneralEnumTwinSync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::basic::BasicPrimitiveEnumTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::pseudo_manual::basic::BasicPrimitiveEnumTwinNormal> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<crate::api::pseudo_manual::basic_twin_rust_async::BasicPrimitiveEnumTwinRustAsync>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::basic_twin_rust_async::BasicPrimitiveEnumTwinRustAsync>
    {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::basic_twin_sync::BasicPrimitiveEnumTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::basic_twin_sync::BasicPrimitiveEnumTwinSync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::basic::BasicStructTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::pseudo_manual::basic::BasicStructTwinNormal> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::basic_twin_rust_async::BasicStructTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::basic_twin_rust_async::BasicStructTwinRustAsync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::basic_twin_sync::BasicStructTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::pseudo_manual::basic_twin_sync::BasicStructTwinSync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<bool>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<bool> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::optional::ElementTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::optional::ElementTwinNormal> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::optional_twin_rust_async::ElementTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::optional_twin_rust_async::ElementTwinRustAsync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::optional_twin_sync::ElementTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::pseudo_manual::optional_twin_sync::ElementTwinSync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::rust_opaque_twin_moi::EnumOpaqueTwinMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::pseudo_manual::rust_opaque_twin_moi::EnumOpaqueTwinMoi> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::rust_opaque::EnumOpaqueTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::rust_opaque::EnumOpaqueTwinNormal> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::rust_opaque_twin_rust_async::EnumOpaqueTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::rust_opaque_twin_rust_async::EnumOpaqueTwinRustAsync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::EnumOpaqueTwinRustAsyncMoi>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::EnumOpaqueTwinRustAsyncMoi>
    {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::rust_opaque_twin_sync::EnumOpaqueTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::rust_opaque_twin_sync::EnumOpaqueTwinSync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::rust_opaque_twin_sync_moi::EnumOpaqueTwinSyncMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::rust_opaque_twin_sync_moi::EnumOpaqueTwinSyncMoi> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<Vec<u8>>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<Vec<u8>> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::auxiliary::sample_types::MyEnum>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::auxiliary::sample_types::MyEnum> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::auxiliary::sample_types::MySize>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::auxiliary::sample_types::MySize> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::misc_example::MyTreeNodeTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::misc_example::MyTreeNodeTwinNormal> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<Vec<crate::api::pseudo_manual::misc_example_twin_rust_async::MyTreeNodeTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::misc_example_twin_rust_async::MyTreeNodeTwinRustAsync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::misc_example_twin_sync::MyTreeNodeTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::misc_example_twin_sync::MyTreeNodeTwinSync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::mirror_twin_sync_sse::NestedRawStringMirrored>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::mirror_twin_sync_sse::NestedRawStringMirrored> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync_sse::ListOfNestedRawStringMirrored>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::mirror_twin_sync_sse::ListOfNestedRawStringMirrored {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_sync_sse::ListOfNestedRawStringMirrored {
            raw: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<Vec<Option<String>>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<Option<String>> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<Option<crate::api::optional::AttributeTwinNormal>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<Option<crate::api::optional::AttributeTwinNormal>> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<Option<crate::api::pseudo_manual::optional_twin_rust_async::AttributeTwinRustAsync>>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<Option<crate::api::pseudo_manual::optional_twin_rust_async::AttributeTwinRustAsync>>
    {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<Option<crate::api::pseudo_manual::optional_twin_sync::AttributeTwinSync>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<Option<crate::api::pseudo_manual::optional_twin_sync::AttributeTwinSync>> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<Option<i32>>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<Option<i32>> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<Option<crate::api::misc_example::WeekdaysTwinNormal>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<Option<crate::api::misc_example::WeekdaysTwinNormal>> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<Option<crate::api::pseudo_manual::misc_example_twin_rust_async::WeekdaysTwinRustAsync>>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<Option<crate::api::pseudo_manual::misc_example_twin_rust_async::WeekdaysTwinRustAsync>>
    {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<Option<crate::api::pseudo_manual::misc_example_twin_sync::WeekdaysTwinSync>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<Option<crate::api::pseudo_manual::misc_example_twin_sync::WeekdaysTwinSync>> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<Option<Vec<i32>>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<Option<Vec<i32>>> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::array::PointTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::array::PointTwinNormal> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::array_twin_rust_async::PointTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::array_twin_rust_async::PointTwinRustAsync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::array_twin_sync::PointTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::pseudo_manual::array_twin_sync::PointTwinSync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<f32>> for Box<[f32]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<f32> {
        self.into_vec()
    }
}
impl CstDecode<Vec<f64>> for Box<[f64]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<f64> {
        self.into_vec()
    }
}
impl CstDecode<Vec<i16>> for Box<[i16]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<i16> {
        self.into_vec()
    }
}
impl CstDecode<Vec<i32>> for Box<[i32]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<i32> {
        self.into_vec()
    }
}
impl CstDecode<Vec<i64>> for Box<[i64]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<i64> {
        self.into_vec()
    }
}
impl CstDecode<Vec<i8>> for Box<[i8]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<i8> {
        self.into_vec()
    }
}
impl CstDecode<Vec<u16>> for Box<[u16]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<u16> {
        self.into_vec()
    }
}
impl CstDecode<Vec<u32>> for Box<[u32]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<u32> {
        self.into_vec()
    }
}
impl CstDecode<Vec<u64>> for Box<[u64]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<u64> {
        self.into_vec()
    }
}
impl CstDecode<Vec<u8>> for Box<[u8]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<u8> {
        self.into_vec()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::mirror_twin_sync_sse::RawStringEnumMirrored>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::mirror_twin_sync_sse::RawStringEnumMirrored> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::mirror_twin_sync_sse::RawStringMirrored>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::pseudo_manual::mirror_twin_sync_sse::RawStringMirrored> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<(
            i32,
            crate::api::pseudo_manual::basic::BasicGeneralEnumTwinNormal,
        )>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<(
        i32,
        crate::api::pseudo_manual::basic::BasicGeneralEnumTwinNormal,
    )> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<(
            i32,
            crate::api::pseudo_manual::basic_twin_rust_async::BasicGeneralEnumTwinRustAsync,
        )>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<(
        i32,
        crate::api::pseudo_manual::basic_twin_rust_async::BasicGeneralEnumTwinRustAsync,
    )> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<(
            i32,
            crate::api::pseudo_manual::basic_twin_sync::BasicGeneralEnumTwinSync,
        )>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<(
        i32,
        crate::api::pseudo_manual::basic_twin_sync::BasicGeneralEnumTwinSync,
    )> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<(
            i32,
            crate::api::pseudo_manual::basic::BasicPrimitiveEnumTwinNormal,
        )>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<(
        i32,
        crate::api::pseudo_manual::basic::BasicPrimitiveEnumTwinNormal,
    )> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<(
            i32,
            crate::api::pseudo_manual::basic_twin_rust_async::BasicPrimitiveEnumTwinRustAsync,
        )>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<(
        i32,
        crate::api::pseudo_manual::basic_twin_rust_async::BasicPrimitiveEnumTwinRustAsync,
    )> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<(
            i32,
            crate::api::pseudo_manual::basic_twin_sync::BasicPrimitiveEnumTwinSync,
        )>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<(
        i32,
        crate::api::pseudo_manual::basic_twin_sync::BasicPrimitiveEnumTwinSync,
    )> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, crate::api::pseudo_manual::basic::BasicStructTwinNormal)>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, crate::api::pseudo_manual::basic::BasicStructTwinNormal)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<(
            i32,
            crate::api::pseudo_manual::basic_twin_rust_async::BasicStructTwinRustAsync,
        )>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<(
        i32,
        crate::api::pseudo_manual::basic_twin_rust_async::BasicStructTwinRustAsync,
    )> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<(
            i32,
            crate::api::pseudo_manual::basic_twin_sync::BasicStructTwinSync,
        )>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<(
        i32,
        crate::api::pseudo_manual::basic_twin_sync::BasicStructTwinSync,
    )> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, bool)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, bool)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, f32)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, f32)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, f64)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, f64)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, i16)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, i16)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, i32)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, i32)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, i64)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, i64)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, i8)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, i8)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, isize)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, isize)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, Vec<u8>)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, Vec<u8>)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, String)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, String)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, u16)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, u16)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, u32)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, u32)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, u64)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, u64)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, u8)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, u8)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(i32, usize)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(i32, usize)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(String, crate::api::enumeration::EnumSimpleTwinNormal)>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(String, crate::api::enumeration::EnumSimpleTwinNormal)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<(
            String,
            crate::api::pseudo_manual::enumeration_twin_rust_async::EnumSimpleTwinRustAsync,
        )>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<(
        String,
        crate::api::pseudo_manual::enumeration_twin_rust_async::EnumSimpleTwinRustAsync,
    )> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<(
            String,
            crate::api::pseudo_manual::enumeration_twin_sync::EnumSimpleTwinSync,
        )>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<(
        String,
        crate::api::pseudo_manual::enumeration_twin_sync::EnumSimpleTwinSync,
    )> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<(
            String,
            crate::api::pseudo_manual::mirror_twin_sync_sse::HashMapValue,
        )>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<(
        String,
        crate::api::pseudo_manual::mirror_twin_sync_sse::HashMapValue,
    )> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(String, i32)>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(String, i32)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(String, crate::api::enumeration::KitchenSinkTwinNormal)>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(String, crate::api::enumeration::KitchenSinkTwinNormal)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<(
            String,
            crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync,
        )>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<(
        String,
        crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync,
    )> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<(
            String,
            crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync,
        )>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<(
        String,
        crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync,
    )> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(String, Vec<u8>)>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(String, Vec<u8>)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(String, crate::auxiliary::sample_types::MySize)>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(String, crate::auxiliary::sample_types::MySize)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<(String, String)>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<(String, String)> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl
    CstDecode<
        Vec<(
            u8,
            crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode,
        )>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<(
        u8,
        crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode,
    )> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::method::SimpleStructTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::method::SimpleStructTwinNormal> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::method_twin_rust_async::SimpleStructTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::method_twin_rust_async::SimpleStructTwinRustAsync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::method_twin_sync::SimpleStructTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::pseudo_manual::method_twin_sync::SimpleStructTwinSync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::method::SumWithTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::method::SumWithTwinNormal> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::method_twin_rust_async::SumWithTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::method_twin_rust_async::SumWithTwinRustAsync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::method_twin_sync::SumWithTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::pseudo_manual::method_twin_sync::SumWithTwinSync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::array::TestIdTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::array::TestIdTwinNormal> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::array_twin_rust_async::TestIdTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::array_twin_rust_async::TestIdTwinRustAsync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::array_twin_sync::TestIdTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::pseudo_manual::array_twin_sync::TestIdTwinSync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::misc_example::WeekdaysTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::misc_example::WeekdaysTwinNormal> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::misc_example_twin_rust_async::WeekdaysTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::misc_example_twin_rust_async::WeekdaysTwinRustAsync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<Vec<crate::api::pseudo_manual::misc_example_twin_sync::WeekdaysTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Vec<crate::api::pseudo_manual::misc_example_twin_sync::WeekdaysTwinSync> {
        self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap()
            .iter()
            .map(CstDecode::cst_decode)
            .collect()
    }
}
impl CstDecode<crate::api::method::Log2TwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::method::Log2TwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::method::Log2TwinNormal {
            key: self_.get(0).cst_decode(),
            value: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::method_twin_rust_async::Log2TwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::method_twin_rust_async::Log2TwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::method_twin_rust_async::Log2TwinRustAsync {
            key: self_.get(0).cst_decode(),
            value: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::method_twin_sync::Log2TwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::method_twin_sync::Log2TwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::method_twin_sync::Log2TwinSync {
            key: self_.get(0).cst_decode(),
            value: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::stream::LogTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::stream::LogTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::stream::LogTwinNormal {
            key: self_.get(0).cst_decode(),
            value: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::stream_twin_rust_async::LogTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::stream_twin_rust_async::LogTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::stream_twin_rust_async::LogTwinRustAsync {
            key: self_.get(0).cst_decode(),
            value: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::inside_macro::MacroStruct>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::inside_macro::MacroStruct {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::inside_macro::MacroStruct {
            data: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::enumeration::MeasureTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::enumeration::MeasureTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::enumeration::MeasureTwinNormal::Speed(self_.get(1).cst_decode()),
            1 => crate::api::enumeration::MeasureTwinNormal::Distance(self_.get(1).cst_decode()),
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_rust_async::MeasureTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::enumeration_twin_rust_async::MeasureTwinRustAsync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
                    0 => { crate::api::pseudo_manual::enumeration_twin_rust_async::MeasureTwinRustAsync::Speed( self_.get(1).cst_decode()) },
1 => { crate::api::pseudo_manual::enumeration_twin_rust_async::MeasureTwinRustAsync::Distance( self_.get(1).cst_decode()) },
                    _ => unreachable!(),
                }
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_sync::MeasureTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::enumeration_twin_sync::MeasureTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::enumeration_twin_sync::MeasureTwinSync::Speed(
                self_.get(1).cst_decode(),
            ),
            1 => crate::api::pseudo_manual::enumeration_twin_sync::MeasureTwinSync::Distance(
                self_.get(1).cst_decode(),
            ),
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::array::MessageIdTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::array::MessageIdTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::array::MessageIdTwinNormal(self_.get(0).cst_decode())
    }
}
impl CstDecode<crate::api::pseudo_manual::array_twin_rust_async::MessageIdTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::array_twin_rust_async::MessageIdTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::array_twin_rust_async::MessageIdTwinRustAsync(
            self_.get(0).cst_decode(),
        )
    }
}
impl CstDecode<crate::api::pseudo_manual::array_twin_sync::MessageIdTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::array_twin_sync::MessageIdTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::array_twin_sync::MessageIdTwinSync(self_.get(0).cst_decode())
    }
}
impl CstDecode<crate::api::mirror::MirrorStructTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::mirror::MirrorStructTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::mirror::MirrorStructTwinNormal {
            a: self_.get(0).cst_decode(),
            b: self_.get(1).cst_decode(),
            c: self_.get(2).cst_decode(),
            d: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_rust_async::MirrorStructTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::mirror_twin_rust_async::MirrorStructTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_rust_async::MirrorStructTwinRustAsync {
            a: self_.get(0).cst_decode(),
            b: self_.get(1).cst_decode(),
            c: self_.get(2).cst_decode(),
            d: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync::MirrorStructTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::mirror_twin_sync::MirrorStructTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_sync::MirrorStructTwinSync {
            a: self_.get(0).cst_decode(),
            b: self_.get(1).cst_decode(),
            c: self_.get(2).cst_decode(),
            d: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::raw_string::MoreThanJustOneRawStringStructTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::raw_string::MoreThanJustOneRawStringStructTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::raw_string::MoreThanJustOneRawStringStructTwinNormal {
            regular: self_.get(0).cst_decode(),
            r#type: self_.get(1).cst_decode(),
            r#async: self_.get(2).cst_decode(),
            another: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::raw_string_twin_rust_async::MoreThanJustOneRawStringStructTwinRustAsync> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> crate::api::pseudo_manual::raw_string_twin_rust_async::MoreThanJustOneRawStringStructTwinRustAsync {
                let self_ = self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>().unwrap();
                assert_eq!(self_.length(), 4, "Expected 4 elements, got {}", self_.length());
                crate::api::pseudo_manual::raw_string_twin_rust_async::MoreThanJustOneRawStringStructTwinRustAsync{regular:  self_.get(0).cst_decode(),r#type:  self_.get(1).cst_decode(),r#async:  self_.get(2).cst_decode(),another:  self_.get(3).cst_decode()}
            }
        }
impl
    CstDecode<
        crate::api::pseudo_manual::raw_string_twin_sync::MoreThanJustOneRawStringStructTwinSync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::raw_string_twin_sync::MoreThanJustOneRawStringStructTwinSync
    {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::raw_string_twin_sync::MoreThanJustOneRawStringStructTwinSync {
            regular: self_.get(0).cst_decode(),
            r#type: self_.get(1).cst_decode(),
            r#async: self_.get(2).cst_decode(),
            another: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::method::MyCallableTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::method::MyCallableTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::method::MyCallableTwinNormal {
            one: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::method_twin_rust_async::MyCallableTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::method_twin_rust_async::MyCallableTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::method_twin_rust_async::MyCallableTwinRustAsync {
            one: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::method_twin_sync::MyCallableTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::method_twin_sync::MyCallableTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::method_twin_sync::MyCallableTwinSync {
            one: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::misc_example::MyNestedStructTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::misc_example::MyNestedStructTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::misc_example::MyNestedStructTwinNormal {
            tree_node: self_.get(0).cst_decode(),
            weekday: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_rust_async::MyNestedStructTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::misc_example_twin_rust_async::MyNestedStructTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_example_twin_rust_async::MyNestedStructTwinRustAsync {
            tree_node: self_.get(0).cst_decode(),
            weekday: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_sync::MyNestedStructTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::misc_example_twin_sync::MyNestedStructTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_example_twin_sync::MyNestedStructTwinSync {
            tree_node: self_.get(0).cst_decode(),
            weekday: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::auxiliary::sample_types::MySize>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::auxiliary::sample_types::MySize {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::auxiliary::sample_types::MySize {
            width: self_.get(0).cst_decode(),
            height: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::stream::MyStreamEntryTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::stream::MyStreamEntryTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::stream::MyStreamEntryTwinNormal {
            hello: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::stream_twin_rust_async::MyStreamEntryTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::stream_twin_rust_async::MyStreamEntryTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::stream_twin_rust_async::MyStreamEntryTwinRustAsync {
            hello: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::auxiliary::sample_types::MyStruct>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::auxiliary::sample_types::MyStruct {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::auxiliary::sample_types::MyStruct {
            content: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::misc_example::MyTreeNodeTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::misc_example::MyTreeNodeTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::misc_example::MyTreeNodeTwinNormal {
            value_i32: self_.get(0).cst_decode(),
            value_vec_u8: self_.get(1).cst_decode(),
            value_boolean: self_.get(2).cst_decode(),
            children: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_rust_async::MyTreeNodeTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::misc_example_twin_rust_async::MyTreeNodeTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_example_twin_rust_async::MyTreeNodeTwinRustAsync {
            value_i32: self_.get(0).cst_decode(),
            value_vec_u8: self_.get(1).cst_decode(),
            value_boolean: self_.get(2).cst_decode(),
            children: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_sync::MyTreeNodeTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::misc_example_twin_sync::MyTreeNodeTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_example_twin_sync::MyTreeNodeTwinSync {
            value_i32: self_.get(0).cst_decode(),
            value_vec_u8: self_.get(1).cst_decode(),
            value_boolean: self_.get(2).cst_decode(),
            children: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync_sse::NestedRawStringMirrored>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::mirror_twin_sync_sse::NestedRawStringMirrored {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_sync_sse::NestedRawStringMirrored {
            raw: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::auxiliary::new_module_system::sub_module::NewSimpleStruct>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::auxiliary::new_module_system::sub_module::NewSimpleStruct {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::auxiliary::new_module_system::sub_module::NewSimpleStruct {
            field: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::newtype_pattern::NewTypeIntTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::newtype_pattern::NewTypeIntTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::newtype_pattern::NewTypeIntTwinNormal(self_.get(0).cst_decode())
    }
}
impl CstDecode<crate::api::pseudo_manual::newtype_pattern_twin_rust_async::NewTypeIntTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::newtype_pattern_twin_rust_async::NewTypeIntTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::newtype_pattern_twin_rust_async::NewTypeIntTwinRustAsync(
            self_.get(0).cst_decode(),
        )
    }
}
impl CstDecode<crate::api::pseudo_manual::newtype_pattern_twin_sync::NewTypeIntTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::newtype_pattern_twin_sync::NewTypeIntTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::newtype_pattern_twin_sync::NewTypeIntTwinSync(
            self_.get(0).cst_decode(),
        )
    }
}
impl CstDecode<crate::api::enumeration::NoteTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::enumeration::NoteTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::enumeration::NoteTwinNormal {
            day: self_.get(0).cst_decode(),
            body: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_rust_async::NoteTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::enumeration_twin_rust_async::NoteTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::enumeration_twin_rust_async::NoteTwinRustAsync {
            day: self_.get(0).cst_decode(),
            body: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_sync::NoteTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::enumeration_twin_sync::NoteTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::enumeration_twin_sync::NoteTwinSync {
            day: self_.get(0).cst_decode(),
            body: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync_sse::Numbers>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::mirror_twin_sync_sse::Numbers {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_sync_sse::Numbers(self_.get(0).cst_decode())
    }
}
impl CstDecode<crate::auxiliary::old_module_system::sub_module::OldSimpleStruct>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::auxiliary::old_module_system::sub_module::OldSimpleStruct {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::auxiliary::old_module_system::sub_module::OldSimpleStruct {
            field: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::rust_opaque_twin_moi::OpaqueNestedTwinMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::rust_opaque_twin_moi::OpaqueNestedTwinMoi {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::rust_opaque_twin_moi::OpaqueNestedTwinMoi {
            first: self_.get(0).cst_decode(),
            second: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::rust_opaque::OpaqueNestedTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::rust_opaque::OpaqueNestedTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::rust_opaque::OpaqueNestedTwinNormal {
            first: self_.get(0).cst_decode(),
            second: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::rust_opaque_twin_rust_async::OpaqueNestedTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::rust_opaque_twin_rust_async::OpaqueNestedTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::rust_opaque_twin_rust_async::OpaqueNestedTwinRustAsync {
            first: self_.get(0).cst_decode(),
            second: self_.get(1).cst_decode(),
        }
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::OpaqueNestedTwinRustAsyncMoi,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::OpaqueNestedTwinRustAsyncMoi
    {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::OpaqueNestedTwinRustAsyncMoi {
            first: self_.get(0).cst_decode(),
            second: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::rust_opaque_twin_sync::OpaqueNestedTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::rust_opaque_twin_sync::OpaqueNestedTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::rust_opaque_twin_sync::OpaqueNestedTwinSync {
            first: self_.get(0).cst_decode(),
            second: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::rust_opaque_twin_sync_moi::OpaqueNestedTwinSyncMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::rust_opaque_twin_sync_moi::OpaqueNestedTwinSyncMoi {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::rust_opaque_twin_sync_moi::OpaqueNestedTwinSyncMoi {
            first: self_.get(0).cst_decode(),
            second: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<Option<String>> for Option<String> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Option<String> {
        self.map(CstDecode::cst_decode)
    }
}
impl CstDecode<Option<Vec<f32>>> for Option<Box<[f32]>> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Option<Vec<f32>> {
        self.map(CstDecode::cst_decode)
    }
}
impl CstDecode<Option<Vec<f64>>> for Option<Box<[f64]>> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Option<Vec<f64>> {
        self.map(CstDecode::cst_decode)
    }
}
impl CstDecode<Option<Vec<i32>>> for Option<Box<[i32]>> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Option<Vec<i32>> {
        self.map(CstDecode::cst_decode)
    }
}
impl CstDecode<Option<Vec<i8>>> for Option<Box<[i8]>> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Option<Vec<i8>> {
        self.map(CstDecode::cst_decode)
    }
}
impl CstDecode<Option<Vec<u8>>> for Option<Box<[u8]>> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Option<Vec<u8>> {
        self.map(CstDecode::cst_decode)
    }
}
impl CstDecode<crate::api::optional::OptVecsTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::optional::OptVecsTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::optional::OptVecsTwinNormal {
            i32: self_.get(0).cst_decode(),
            enums: self_.get(1).cst_decode(),
            strings: self_.get(2).cst_decode(),
            buffers: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::optional_twin_rust_async::OptVecsTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::optional_twin_rust_async::OptVecsTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::optional_twin_rust_async::OptVecsTwinRustAsync {
            i32: self_.get(0).cst_decode(),
            enums: self_.get(1).cst_decode(),
            strings: self_.get(2).cst_decode(),
            buffers: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::optional_twin_sync::OptVecsTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::optional_twin_sync::OptVecsTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::optional_twin_sync::OptVecsTwinSync {
            i32: self_.get(0).cst_decode(),
            enums: self_.get(1).cst_decode(),
            strings: self_.get(2).cst_decode(),
            buffers: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::array::PointTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::array::PointTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::array::PointTwinNormal {
            x: self_.get(0).cst_decode(),
            y: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::array_twin_rust_async::PointTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::array_twin_rust_async::PointTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::array_twin_rust_async::PointTwinRustAsync {
            x: self_.get(0).cst_decode(),
            y: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::array_twin_sync::PointTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::array_twin_sync::PointTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::array_twin_sync::PointTwinSync {
            x: self_.get(0).cst_decode(),
            y: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync_sse::RawStringEnumMirrored>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::mirror_twin_sync_sse::RawStringEnumMirrored {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::mirror_twin_sync_sse::RawStringEnumMirrored::Raw(
                self_.get(1).cst_decode(),
            ),
            1 => crate::api::pseudo_manual::mirror_twin_sync_sse::RawStringEnumMirrored::Nested(
                self_.get(1).cst_decode(),
            ),
            2 => {
                crate::api::pseudo_manual::mirror_twin_sync_sse::RawStringEnumMirrored::ListOfNested(
                    self_.get(1).cst_decode(),
                )
            }
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::raw_string::RawStringItemStructTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::raw_string::RawStringItemStructTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::raw_string::RawStringItemStructTwinNormal {
            r#type: self_.get(0).cst_decode(),
        }
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::raw_string_twin_rust_async::RawStringItemStructTwinRustAsync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::raw_string_twin_rust_async::RawStringItemStructTwinRustAsync
    {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::raw_string_twin_rust_async::RawStringItemStructTwinRustAsync {
            r#type: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::raw_string_twin_sync::RawStringItemStructTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::raw_string_twin_sync::RawStringItemStructTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::raw_string_twin_sync::RawStringItemStructTwinSync {
            r#type: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync_sse::RawStringMirrored>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::mirror_twin_sync_sse::RawStringMirrored {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_sync_sse::RawStringMirrored {
            value: self_.get(0).cst_decode(),
        }
    }
}
impl
    CstDecode<(
        crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationSettings,
        crate::api::pseudo_manual::mirror_twin_sync_sse::RawStringEnumMirrored,
    )> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> (
        crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationSettings,
        crate::api::pseudo_manual::mirror_twin_sync_sse::RawStringEnumMirrored,
    ) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(OpaqueOneTwinMoi, OpaqueTwoTwinMoi)>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (OpaqueOneTwinMoi, OpaqueTwoTwinMoi) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(OpaqueOneTwinNormal, OpaqueTwoTwinNormal)>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (OpaqueOneTwinNormal, OpaqueTwoTwinNormal) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(OpaqueOneTwinRustAsync, OpaqueTwoTwinRustAsync)>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (OpaqueOneTwinRustAsync, OpaqueTwoTwinRustAsync) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(OpaqueOneTwinRustAsyncMoi, OpaqueTwoTwinRustAsyncMoi)>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (OpaqueOneTwinRustAsyncMoi, OpaqueTwoTwinRustAsyncMoi) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(OpaqueOneTwinSync, OpaqueTwoTwinSync)>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (OpaqueOneTwinSync, OpaqueTwoTwinSync) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(OpaqueOneTwinSyncMoi, OpaqueTwoTwinSyncMoi)>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (OpaqueOneTwinSyncMoi, OpaqueTwoTwinSyncMoi) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl
    CstDecode<(
        i32,
        crate::api::pseudo_manual::basic::BasicGeneralEnumTwinNormal,
    )> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> (
        i32,
        crate::api::pseudo_manual::basic::BasicGeneralEnumTwinNormal,
    ) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl
    CstDecode<(
        i32,
        crate::api::pseudo_manual::basic_twin_rust_async::BasicGeneralEnumTwinRustAsync,
    )> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> (
        i32,
        crate::api::pseudo_manual::basic_twin_rust_async::BasicGeneralEnumTwinRustAsync,
    ) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl
    CstDecode<(
        i32,
        crate::api::pseudo_manual::basic_twin_sync::BasicGeneralEnumTwinSync,
    )> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> (
        i32,
        crate::api::pseudo_manual::basic_twin_sync::BasicGeneralEnumTwinSync,
    ) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl
    CstDecode<(
        i32,
        crate::api::pseudo_manual::basic::BasicPrimitiveEnumTwinNormal,
    )> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> (
        i32,
        crate::api::pseudo_manual::basic::BasicPrimitiveEnumTwinNormal,
    ) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl
    CstDecode<(
        i32,
        crate::api::pseudo_manual::basic_twin_rust_async::BasicPrimitiveEnumTwinRustAsync,
    )> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> (
        i32,
        crate::api::pseudo_manual::basic_twin_rust_async::BasicPrimitiveEnumTwinRustAsync,
    ) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl
    CstDecode<(
        i32,
        crate::api::pseudo_manual::basic_twin_sync::BasicPrimitiveEnumTwinSync,
    )> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> (
        i32,
        crate::api::pseudo_manual::basic_twin_sync::BasicPrimitiveEnumTwinSync,
    ) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, crate::api::pseudo_manual::basic::BasicStructTwinNormal)>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, crate::api::pseudo_manual::basic::BasicStructTwinNormal) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl
    CstDecode<(
        i32,
        crate::api::pseudo_manual::basic_twin_rust_async::BasicStructTwinRustAsync,
    )> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> (
        i32,
        crate::api::pseudo_manual::basic_twin_rust_async::BasicStructTwinRustAsync,
    ) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl
    CstDecode<(
        i32,
        crate::api::pseudo_manual::basic_twin_sync::BasicStructTwinSync,
    )> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> (
        i32,
        crate::api::pseudo_manual::basic_twin_sync::BasicStructTwinSync,
    ) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, bool)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, bool) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, f32)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, f32) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, f64)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, f64) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, i16)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, i16) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, i32)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, i32) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, i64)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, i64) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, i8)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, i8) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, isize)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, isize) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, Vec<u8>)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, Vec<u8>) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, String)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, String) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, u16)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, u16) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, u32)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, u32) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, u64)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, u64) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, u8)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, u8) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(i32, usize)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (i32, usize) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(String, crate::api::enumeration::EnumSimpleTwinNormal)>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (String, crate::api::enumeration::EnumSimpleTwinNormal) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl
    CstDecode<(
        String,
        crate::api::pseudo_manual::enumeration_twin_rust_async::EnumSimpleTwinRustAsync,
    )> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> (
        String,
        crate::api::pseudo_manual::enumeration_twin_rust_async::EnumSimpleTwinRustAsync,
    ) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl
    CstDecode<(
        String,
        crate::api::pseudo_manual::enumeration_twin_sync::EnumSimpleTwinSync,
    )> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> (
        String,
        crate::api::pseudo_manual::enumeration_twin_sync::EnumSimpleTwinSync,
    ) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl
    CstDecode<(
        String,
        crate::api::pseudo_manual::mirror_twin_sync_sse::HashMapValue,
    )> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> (
        String,
        crate::api::pseudo_manual::mirror_twin_sync_sse::HashMapValue,
    ) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(String, i32)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (String, i32) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(String, crate::api::enumeration::KitchenSinkTwinNormal)>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (String, crate::api::enumeration::KitchenSinkTwinNormal) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl
    CstDecode<(
        String,
        crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync,
    )> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> (
        String,
        crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync,
    ) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl
    CstDecode<(
        String,
        crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync,
    )> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> (
        String,
        crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync,
    ) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(String, Vec<u8>)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (String, Vec<u8>) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(String, crate::auxiliary::sample_types::MySize)>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (String, crate::auxiliary::sample_types::MySize) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<(String, String)> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> (String, String) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl
    CstDecode<(
        u8,
        crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode,
    )> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> (
        u8,
        crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode,
    ) {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        (self_.get(0).cst_decode(), self_.get(1).cst_decode())
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync_sse::Sequences>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::mirror_twin_sync_sse::Sequences {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_sync_sse::Sequences(self_.get(0).cst_decode())
    }
}
impl CstDecode<crate::api::method::SimpleStructTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::method::SimpleStructTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::method::SimpleStructTwinNormal {
            one: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::method_twin_rust_async::SimpleStructTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::method_twin_rust_async::SimpleStructTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::method_twin_rust_async::SimpleStructTwinRustAsync {
            one: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::method_twin_sync::SimpleStructTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::method_twin_sync::SimpleStructTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::method_twin_sync::SimpleStructTwinSync {
            one: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::exception::SomeStructTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::exception::SomeStructTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::exception::SomeStructTwinNormal {
            value: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::exception_twin_rust_async::SomeStructTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::exception_twin_rust_async::SomeStructTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::exception_twin_rust_async::SomeStructTwinRustAsync {
            value: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::exception_twin_sync::SomeStructTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::exception_twin_sync::SomeStructTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::exception_twin_sync::SomeStructTwinSync {
            value: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::enumeration::SpeedTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::enumeration::SpeedTwinNormal {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::enumeration::SpeedTwinNormal::Unknown,
            1 => crate::api::enumeration::SpeedTwinNormal::GPS(self_.get(1).cst_decode()),
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_rust_async::SpeedTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::enumeration_twin_rust_async::SpeedTwinRustAsync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => {
                crate::api::pseudo_manual::enumeration_twin_rust_async::SpeedTwinRustAsync::Unknown
            }
            1 => crate::api::pseudo_manual::enumeration_twin_rust_async::SpeedTwinRustAsync::GPS(
                self_.get(1).cst_decode(),
            ),
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_sync::SpeedTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::enumeration_twin_sync::SpeedTwinSync {
        let self_ = self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Array>();
        match self_.get(0).unchecked_into_f64() as _ {
            0 => crate::api::pseudo_manual::enumeration_twin_sync::SpeedTwinSync::Unknown,
            1 => crate::api::pseudo_manual::enumeration_twin_sync::SpeedTwinSync::GPS(
                self_.get(1).cst_decode(),
            ),
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::deliberate_name_conflict::StructInLowerLevel>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::deliberate_name_conflict::StructInLowerLevel {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::deliberate_name_conflict::StructInLowerLevel {
            inner: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::deliberate_name_conflict::StructInUpperLevel>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::deliberate_name_conflict::StructInUpperLevel {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::deliberate_name_conflict::StructInUpperLevel {
            upper: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::comment::StructWithCommentsTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::comment::StructWithCommentsTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::comment::StructWithCommentsTwinNormal {
            field_with_comments: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::comment_twin_rust_async::StructWithCommentsTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::comment_twin_rust_async::StructWithCommentsTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::comment_twin_rust_async::StructWithCommentsTwinRustAsync {
            field_with_comments: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::comment_twin_sync::StructWithCommentsTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::comment_twin_sync::StructWithCommentsTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::comment_twin_sync::StructWithCommentsTwinSync {
            field_with_comments: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::misc_example::StructWithEnumTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::misc_example::StructWithEnumTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::misc_example::StructWithEnumTwinNormal {
            abc1: self_.get(0).cst_decode(),
            abc2: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_rust_async::StructWithEnumTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::misc_example_twin_rust_async::StructWithEnumTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_example_twin_rust_async::StructWithEnumTwinRustAsync {
            abc1: self_.get(0).cst_decode(),
            abc2: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_sync::StructWithEnumTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::misc_example_twin_sync::StructWithEnumTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::misc_example_twin_sync::StructWithEnumTwinSync {
            abc1: self_.get(0).cst_decode(),
            abc2: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::rust_auto_opaque_twin_moi::StructWithExplicitAutoOpaqueFieldTwinMoi> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> crate::api::pseudo_manual::rust_auto_opaque_twin_moi::StructWithExplicitAutoOpaqueFieldTwinMoi {
                let self_ = self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>().unwrap();
                assert_eq!(self_.length(), 2, "Expected 2 elements, got {}", self_.length());
                crate::api::pseudo_manual::rust_auto_opaque_twin_moi::StructWithExplicitAutoOpaqueFieldTwinMoi{auto_opaque:  self_.get(0).cst_decode(),normal:  self_.get(1).cst_decode()}
            }
        }
impl CstDecode<crate::api::rust_auto_opaque::StructWithExplicitAutoOpaqueFieldTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::rust_auto_opaque::StructWithExplicitAutoOpaqueFieldTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::rust_auto_opaque::StructWithExplicitAutoOpaqueFieldTwinNormal {
            auto_opaque: self_.get(0).cst_decode(),
            normal: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async::StructWithExplicitAutoOpaqueFieldTwinRustAsync> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async::StructWithExplicitAutoOpaqueFieldTwinRustAsync {
                let self_ = self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>().unwrap();
                assert_eq!(self_.length(), 2, "Expected 2 elements, got {}", self_.length());
                crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async::StructWithExplicitAutoOpaqueFieldTwinRustAsync{auto_opaque:  self_.get(0).cst_decode(),normal:  self_.get(1).cst_decode()}
            }
        }
impl CstDecode<crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async_moi::StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async_moi::StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi {
                let self_ = self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>().unwrap();
                assert_eq!(self_.length(), 2, "Expected 2 elements, got {}", self_.length());
                crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async_moi::StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi{auto_opaque:  self_.get(0).cst_decode(),normal:  self_.get(1).cst_decode()}
            }
        }
impl CstDecode<crate::api::pseudo_manual::rust_auto_opaque_twin_sync::StructWithExplicitAutoOpaqueFieldTwinSync> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> crate::api::pseudo_manual::rust_auto_opaque_twin_sync::StructWithExplicitAutoOpaqueFieldTwinSync {
                let self_ = self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>().unwrap();
                assert_eq!(self_.length(), 2, "Expected 2 elements, got {}", self_.length());
                crate::api::pseudo_manual::rust_auto_opaque_twin_sync::StructWithExplicitAutoOpaqueFieldTwinSync{auto_opaque:  self_.get(0).cst_decode(),normal:  self_.get(1).cst_decode()}
            }
        }
impl CstDecode<crate::api::pseudo_manual::rust_auto_opaque_twin_sync_moi::StructWithExplicitAutoOpaqueFieldTwinSyncMoi> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> crate::api::pseudo_manual::rust_auto_opaque_twin_sync_moi::StructWithExplicitAutoOpaqueFieldTwinSyncMoi {
                let self_ = self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>().unwrap();
                assert_eq!(self_.length(), 2, "Expected 2 elements, got {}", self_.length());
                crate::api::pseudo_manual::rust_auto_opaque_twin_sync_moi::StructWithExplicitAutoOpaqueFieldTwinSyncMoi{auto_opaque:  self_.get(0).cst_decode(),normal:  self_.get(1).cst_decode()}
            }
        }
impl
    CstDecode<
        crate::api::pseudo_manual::rust_auto_opaque_twin_moi::StructWithGoodAndOpaqueFieldTwinMoi,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::rust_auto_opaque_twin_moi::StructWithGoodAndOpaqueFieldTwinMoi
    {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            3,
            "Expected 3 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::rust_auto_opaque_twin_moi::StructWithGoodAndOpaqueFieldTwinMoi {
            good: self_.get(0).cst_decode(),
            opaque: self_.get(1).cst_decode(),
            option_opaque: self_.get(2).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::rust_auto_opaque::StructWithGoodAndOpaqueFieldTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::rust_auto_opaque::StructWithGoodAndOpaqueFieldTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            3,
            "Expected 3 elements, got {}",
            self_.length()
        );
        crate::api::rust_auto_opaque::StructWithGoodAndOpaqueFieldTwinNormal {
            good: self_.get(0).cst_decode(),
            opaque: self_.get(1).cst_decode(),
            option_opaque: self_.get(2).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async::StructWithGoodAndOpaqueFieldTwinRustAsync> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async::StructWithGoodAndOpaqueFieldTwinRustAsync {
                let self_ = self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>().unwrap();
                assert_eq!(self_.length(), 3, "Expected 3 elements, got {}", self_.length());
                crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async::StructWithGoodAndOpaqueFieldTwinRustAsync{good:  self_.get(0).cst_decode(),opaque:  self_.get(1).cst_decode(),option_opaque:  self_.get(2).cst_decode()}
            }
        }
impl CstDecode<crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async_moi::StructWithGoodAndOpaqueFieldTwinRustAsyncMoi> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async_moi::StructWithGoodAndOpaqueFieldTwinRustAsyncMoi {
                let self_ = self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>().unwrap();
                assert_eq!(self_.length(), 3, "Expected 3 elements, got {}", self_.length());
                crate::api::pseudo_manual::rust_auto_opaque_twin_rust_async_moi::StructWithGoodAndOpaqueFieldTwinRustAsyncMoi{good:  self_.get(0).cst_decode(),opaque:  self_.get(1).cst_decode(),option_opaque:  self_.get(2).cst_decode()}
            }
        }
impl
    CstDecode<
        crate::api::pseudo_manual::rust_auto_opaque_twin_sync::StructWithGoodAndOpaqueFieldTwinSync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::rust_auto_opaque_twin_sync::StructWithGoodAndOpaqueFieldTwinSync
    {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            3,
            "Expected 3 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::rust_auto_opaque_twin_sync::StructWithGoodAndOpaqueFieldTwinSync{good:  self_.get(0).cst_decode(),opaque:  self_.get(1).cst_decode(),option_opaque:  self_.get(2).cst_decode()}
    }
}
impl CstDecode<crate::api::pseudo_manual::rust_auto_opaque_twin_sync_moi::StructWithGoodAndOpaqueFieldTwinSyncMoi> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> crate::api::pseudo_manual::rust_auto_opaque_twin_sync_moi::StructWithGoodAndOpaqueFieldTwinSyncMoi {
                let self_ = self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>().unwrap();
                assert_eq!(self_.length(), 3, "Expected 3 elements, got {}", self_.length());
                crate::api::pseudo_manual::rust_auto_opaque_twin_sync_moi::StructWithGoodAndOpaqueFieldTwinSyncMoi{good:  self_.get(0).cst_decode(),opaque:  self_.get(1).cst_decode(),option_opaque:  self_.get(2).cst_decode()}
            }
        }
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync_sse::StructWithHashMap>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::mirror_twin_sync_sse::StructWithHashMap {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::mirror_twin_sync_sse::StructWithHashMap {
            map: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::structure::StructWithOneFieldTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::structure::StructWithOneFieldTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::structure::StructWithOneFieldTwinNormal {
            a: self_.get(0).cst_decode(),
        }
    }
}
impl
    CstDecode<crate::api::pseudo_manual::structure_twin_rust_async::StructWithOneFieldTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::structure_twin_rust_async::StructWithOneFieldTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::structure_twin_rust_async::StructWithOneFieldTwinRustAsync {
            a: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::structure_twin_sync::StructWithOneFieldTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::structure_twin_sync::StructWithOneFieldTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::structure_twin_sync::StructWithOneFieldTwinSync {
            a: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::structure::StructWithTwoFieldTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::structure::StructWithTwoFieldTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::structure::StructWithTwoFieldTwinNormal {
            a: self_.get(0).cst_decode(),
            b: self_.get(1).cst_decode(),
        }
    }
}
impl
    CstDecode<crate::api::pseudo_manual::structure_twin_rust_async::StructWithTwoFieldTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::structure_twin_rust_async::StructWithTwoFieldTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::structure_twin_rust_async::StructWithTwoFieldTwinRustAsync {
            a: self_.get(0).cst_decode(),
            b: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::structure_twin_sync::StructWithTwoFieldTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::structure_twin_sync::StructWithTwoFieldTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::structure_twin_sync::StructWithTwoFieldTwinSync {
            a: self_.get(0).cst_decode(),
            b: self_.get(1).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::structure::StructWithZeroFieldTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::structure::StructWithZeroFieldTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            0,
            "Expected 0 elements, got {}",
            self_.length()
        );
        crate::api::structure::StructWithZeroFieldTwinNormal {}
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::structure_twin_rust_async::StructWithZeroFieldTwinRustAsync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::structure_twin_rust_async::StructWithZeroFieldTwinRustAsync
    {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            0,
            "Expected 0 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::structure_twin_rust_async::StructWithZeroFieldTwinRustAsync {}
    }
}
impl CstDecode<crate::api::pseudo_manual::structure_twin_sync::StructWithZeroFieldTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::structure_twin_sync::StructWithZeroFieldTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            0,
            "Expected 0 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::structure_twin_sync::StructWithZeroFieldTwinSync {}
    }
}
impl CstDecode<crate::api::method::SumWithTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::method::SumWithTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::method::SumWithTwinNormal {
            x: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::method_twin_rust_async::SumWithTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::method_twin_rust_async::SumWithTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::method_twin_rust_async::SumWithTwinRustAsync {
            x: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::method_twin_sync::SumWithTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::method_twin_sync::SumWithTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::method_twin_sync::SumWithTwinSync {
            x: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::chrono_type::TestChronoTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::chrono_type::TestChronoTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            3,
            "Expected 3 elements, got {}",
            self_.length()
        );
        crate::api::chrono_type::TestChronoTwinNormal {
            dt: self_.get(0).cst_decode(),
            dt2: self_.get(1).cst_decode(),
            du: self_.get(2).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::chrono_type_twin_rust_async::TestChronoTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::chrono_type_twin_rust_async::TestChronoTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            3,
            "Expected 3 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::chrono_type_twin_rust_async::TestChronoTwinRustAsync {
            dt: self_.get(0).cst_decode(),
            dt2: self_.get(1).cst_decode(),
            du: self_.get(2).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::chrono_type_twin_sync::TestChronoTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::chrono_type_twin_sync::TestChronoTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            3,
            "Expected 3 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::chrono_type_twin_sync::TestChronoTwinSync {
            dt: self_.get(0).cst_decode(),
            dt2: self_.get(1).cst_decode(),
            du: self_.get(2).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::array::TestIdTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::array::TestIdTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::array::TestIdTwinNormal(self_.get(0).cst_decode())
    }
}
impl CstDecode<crate::api::pseudo_manual::array_twin_rust_async::TestIdTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::array_twin_rust_async::TestIdTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::array_twin_rust_async::TestIdTwinRustAsync(
            self_.get(0).cst_decode(),
        )
    }
}
impl CstDecode<crate::api::pseudo_manual::array_twin_sync::TestIdTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::array_twin_sync::TestIdTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::array_twin_sync::TestIdTwinSync(self_.get(0).cst_decode())
    }
}
impl CstDecode<crate::api::type_alias::TestModelTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::type_alias::TestModelTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::type_alias::TestModelTwinNormal {
            id: self_.get(0).cst_decode(),
            name: self_.get(1).cst_decode(),
            alias_enum: self_.get(2).cst_decode(),
            alias_struct: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::type_alias_twin_rust_async::TestModelTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::type_alias_twin_rust_async::TestModelTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::type_alias_twin_rust_async::TestModelTwinRustAsync {
            id: self_.get(0).cst_decode(),
            name: self_.get(1).cst_decode(),
            alias_enum: self_.get(2).cst_decode(),
            alias_struct: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::type_alias_twin_sync::TestModelTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::type_alias_twin_sync::TestModelTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            4,
            "Expected 4 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::type_alias_twin_sync::TestModelTwinSync {
            id: self_.get(0).cst_decode(),
            name: self_.get(1).cst_decode(),
            alias_enum: self_.get(2).cst_decode(),
            alias_struct: self_.get(3).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::structure::TupleStructWithOneFieldTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::structure::TupleStructWithOneFieldTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::structure::TupleStructWithOneFieldTwinNormal(self_.get(0).cst_decode())
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::structure_twin_rust_async::TupleStructWithOneFieldTwinRustAsync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::structure_twin_rust_async::TupleStructWithOneFieldTwinRustAsync
    {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::structure_twin_rust_async::TupleStructWithOneFieldTwinRustAsync(
            self_.get(0).cst_decode(),
        )
    }
}
impl CstDecode<crate::api::pseudo_manual::structure_twin_sync::TupleStructWithOneFieldTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::structure_twin_sync::TupleStructWithOneFieldTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::structure_twin_sync::TupleStructWithOneFieldTwinSync(
            self_.get(0).cst_decode(),
        )
    }
}
impl CstDecode<crate::api::structure::TupleStructWithTwoFieldTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::structure::TupleStructWithTwoFieldTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::structure::TupleStructWithTwoFieldTwinNormal(
            self_.get(0).cst_decode(),
            self_.get(1).cst_decode(),
        )
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::structure_twin_rust_async::TupleStructWithTwoFieldTwinRustAsync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::structure_twin_rust_async::TupleStructWithTwoFieldTwinRustAsync
    {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::structure_twin_rust_async::TupleStructWithTwoFieldTwinRustAsync(
            self_.get(0).cst_decode(),
            self_.get(1).cst_decode(),
        )
    }
}
impl CstDecode<crate::api::pseudo_manual::structure_twin_sync::TupleStructWithTwoFieldTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::structure_twin_sync::TupleStructWithTwoFieldTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            2,
            "Expected 2 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::structure_twin_sync::TupleStructWithTwoFieldTwinSync(
            self_.get(0).cst_decode(),
            self_.get(1).cst_decode(),
        )
    }
}
impl CstDecode<[u8; 1600]> for Box<[u8]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [u8; 1600] {
        let vec: Vec<u8> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[u8; 2]> for Box<[u8]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [u8; 2] {
        let vec: Vec<u8> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[u8; 32]> for Box<[u8]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [u8; 32] {
        let vec: Vec<u8> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[u8; 5]> for Box<[u8]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [u8; 5] {
        let vec: Vec<u8> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[u8; 8]> for Box<[u8]> {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [u8; 8] {
        let vec: Vec<u8> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<crate::api::attribute::UserIdTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::attribute::UserIdTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::attribute::UserIdTwinNormal {
            value: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::attribute_twin_rust_async::UserIdTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::attribute_twin_rust_async::UserIdTwinRustAsync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::attribute_twin_rust_async::UserIdTwinRustAsync {
            value: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::attribute_twin_sync::UserIdTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::attribute_twin_sync::UserIdTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            1,
            "Expected 1 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::attribute_twin_sync::UserIdTwinSync {
            value: self_.get(0).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::primitive_list_misc::VecOfPrimitivePackTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::primitive_list_misc::VecOfPrimitivePackTwinNormal {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            11,
            "Expected 11 elements, got {}",
            self_.length()
        );
        crate::api::primitive_list_misc::VecOfPrimitivePackTwinNormal {
            int8list: self_.get(0).cst_decode(),
            uint8list: self_.get(1).cst_decode(),
            int16list: self_.get(2).cst_decode(),
            uint16list: self_.get(3).cst_decode(),
            uint32list: self_.get(4).cst_decode(),
            int32list: self_.get(5).cst_decode(),
            uint64list: self_.get(6).cst_decode(),
            int64list: self_.get(7).cst_decode(),
            float32list: self_.get(8).cst_decode(),
            float64list: self_.get(9).cst_decode(),
            bool_list: self_.get(10).cst_decode(),
        }
    }
}
impl CstDecode<crate::api::pseudo_manual::primitive_list_misc_twin_rust_async::VecOfPrimitivePackTwinRustAsync> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> crate::api::pseudo_manual::primitive_list_misc_twin_rust_async::VecOfPrimitivePackTwinRustAsync {
                let self_ = self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>().unwrap();
                assert_eq!(self_.length(), 11, "Expected 11 elements, got {}", self_.length());
                crate::api::pseudo_manual::primitive_list_misc_twin_rust_async::VecOfPrimitivePackTwinRustAsync{int8list:  self_.get(0).cst_decode(),uint8list:  self_.get(1).cst_decode(),int16list:  self_.get(2).cst_decode(),uint16list:  self_.get(3).cst_decode(),uint32list:  self_.get(4).cst_decode(),int32list:  self_.get(5).cst_decode(),uint64list:  self_.get(6).cst_decode(),int64list:  self_.get(7).cst_decode(),float32list:  self_.get(8).cst_decode(),float64list:  self_.get(9).cst_decode(),bool_list:  self_.get(10).cst_decode()}
            }
        }
impl CstDecode<crate::api::pseudo_manual::primitive_list_misc_twin_sync::VecOfPrimitivePackTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::primitive_list_misc_twin_sync::VecOfPrimitivePackTwinSync {
        let self_ = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::Array>()
            .unwrap();
        assert_eq!(
            self_.length(),
            11,
            "Expected 11 elements, got {}",
            self_.length()
        );
        crate::api::pseudo_manual::primitive_list_misc_twin_sync::VecOfPrimitivePackTwinSync {
            int8list: self_.get(0).cst_decode(),
            uint8list: self_.get(1).cst_decode(),
            int16list: self_.get(2).cst_decode(),
            uint16list: self_.get(3).cst_decode(),
            uint32list: self_.get(4).cst_decode(),
            int32list: self_.get(5).cst_decode(),
            uint64list: self_.get(6).cst_decode(),
            int64list: self_.get(7).cst_decode(),
            float32list: self_.get(8).cst_decode(),
            float64list: self_.get(9).cst_decode(),
            bool_list: self_.get(10).cst_decode(),
        }
    }
}
impl CstDecode<flutter_rust_bridge::for_generated::anyhow::Error>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> flutter_rust_bridge::for_generated::anyhow::Error {
        unimplemented!()
    }
}
impl CstDecode<Box<dyn Fn(String) -> String + Send + Sync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<dyn Fn(String) -> String + Send + Sync> {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    Box<dyn Fn(String) -> String + Send + Sync>,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<Box<dyn HelloTraitTwinMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<dyn HelloTraitTwinMoi> {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinMoi>>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<Box<dyn HelloTraitTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<dyn HelloTraitTwinNormal> {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    Box<dyn HelloTraitTwinNormal>,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<Box<dyn HelloTraitTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<dyn HelloTraitTwinRustAsync> {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    Box<dyn HelloTraitTwinRustAsync>,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<Box<dyn HelloTraitTwinRustAsyncMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<dyn HelloTraitTwinRustAsyncMoi> {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    Box<dyn HelloTraitTwinRustAsyncMoi>,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<Box<dyn HelloTraitTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<dyn HelloTraitTwinSync> {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinSync>>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<Box<dyn HelloTraitTwinSyncMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<dyn HelloTraitTwinSyncMoi> {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    Box<dyn HelloTraitTwinSyncMoi>,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<Box<dyn MyTraitTwinMoi + Send + Sync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<dyn MyTraitTwinMoi + Send + Sync> {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    Box<dyn MyTraitTwinMoi + Send + Sync>,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<Box<dyn MyTraitTwinNormal + Send + Sync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<dyn MyTraitTwinNormal + Send + Sync> {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    Box<dyn MyTraitTwinNormal + Send + Sync>,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<Box<dyn MyTraitTwinRustAsyncMoi + Send + Sync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<dyn MyTraitTwinRustAsyncMoi + Send + Sync> {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    Box<dyn MyTraitTwinRustAsyncMoi + Send + Sync>,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<Box<dyn MyTraitTwinRustAsync + Send + Sync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<dyn MyTraitTwinRustAsync + Send + Sync> {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    Box<dyn MyTraitTwinRustAsync + Send + Sync>,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<Box<dyn MyTraitTwinSyncMoi + Send + Sync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<dyn MyTraitTwinSyncMoi + Send + Sync> {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    Box<dyn MyTraitTwinSyncMoi + Send + Sync>,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<Box<dyn MyTraitTwinSync + Send + Sync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<dyn MyTraitTwinSync + Send + Sync> {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    Box<dyn MyTraitTwinSync + Send + Sync>,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<ConstructorOpaqueStructTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> ConstructorOpaqueStructTwinNormal {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    ConstructorOpaqueStructTwinNormal,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<ConstructorOpaqueSyncStructTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> ConstructorOpaqueSyncStructTwinNormal {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    ConstructorOpaqueSyncStructTwinNormal,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<DroppableTwinNormal> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> DroppableTwinNormal {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinNormal>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<DroppableTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> DroppableTwinRustAsync {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinRustAsync>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<DroppableTwinSync> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> DroppableTwinSync {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinSync>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<EnumWithGoodAndOpaqueWithoutOptionTwinMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> EnumWithGoodAndOpaqueWithoutOptionTwinMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    EnumWithGoodAndOpaqueWithoutOptionTwinMoi,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<EnumWithGoodAndOpaqueWithoutOptionTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> EnumWithGoodAndOpaqueWithoutOptionTwinNormal {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    EnumWithGoodAndOpaqueWithoutOptionTwinNormal,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<EnumWithGoodAndOpaqueWithoutOptionTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> EnumWithGoodAndOpaqueWithoutOptionTwinSync {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    EnumWithGoodAndOpaqueWithoutOptionTwinSync,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<NonCloneSimpleEnumTwinMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> NonCloneSimpleEnumTwinMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinMoi>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<NonCloneSimpleEnumTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> NonCloneSimpleEnumTwinNormal {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    NonCloneSimpleEnumTwinNormal,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<NonCloneSimpleEnumTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> NonCloneSimpleEnumTwinRustAsync {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    NonCloneSimpleEnumTwinRustAsync,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<NonCloneSimpleEnumTwinRustAsyncMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> NonCloneSimpleEnumTwinRustAsyncMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    NonCloneSimpleEnumTwinRustAsyncMoi,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<NonCloneSimpleEnumTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> NonCloneSimpleEnumTwinSync {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSync>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<NonCloneSimpleEnumTwinSyncMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> NonCloneSimpleEnumTwinSyncMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    NonCloneSimpleEnumTwinSyncMoi,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<NonCloneSimpleTwinMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> NonCloneSimpleTwinMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinMoi>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<NonCloneSimpleTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> NonCloneSimpleTwinNormal {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinNormal>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<NonCloneSimpleTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> NonCloneSimpleTwinRustAsync {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinRustAsync>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<NonCloneSimpleTwinRustAsyncMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> NonCloneSimpleTwinRustAsyncMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    NonCloneSimpleTwinRustAsyncMoi,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<NonCloneSimpleTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> NonCloneSimpleTwinSync {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSync>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<NonCloneSimpleTwinSyncMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> NonCloneSimpleTwinSyncMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSyncMoi>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<OpaqueOneTwinMoi> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> OpaqueOneTwinMoi {
        CstDecode::<
            RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinMoi>>,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<OpaqueOneTwinNormal> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> OpaqueOneTwinNormal {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinNormal>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<OpaqueOneTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> OpaqueOneTwinRustAsync {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinRustAsync>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<OpaqueOneTwinRustAsyncMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> OpaqueOneTwinRustAsyncMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinRustAsyncMoi>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<OpaqueOneTwinSync> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> OpaqueOneTwinSync {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSync>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<OpaqueOneTwinSyncMoi> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> OpaqueOneTwinSyncMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSyncMoi>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<OpaqueTwoTwinMoi> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> OpaqueTwoTwinMoi {
        CstDecode::<
            RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinMoi>>,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<OpaqueTwoTwinNormal> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> OpaqueTwoTwinNormal {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinNormal>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<OpaqueTwoTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> OpaqueTwoTwinRustAsync {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinRustAsync>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<OpaqueTwoTwinRustAsyncMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> OpaqueTwoTwinRustAsyncMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinRustAsyncMoi>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<OpaqueTwoTwinSync> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> OpaqueTwoTwinSync {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSync>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<OpaqueTwoTwinSyncMoi> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> OpaqueTwoTwinSyncMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSyncMoi>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<StructInMiscNoTwinExampleA>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> StructInMiscNoTwinExampleA {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<StructInMiscNoTwinExampleA>,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<StructWithGoodAndOpaqueFieldWithoutOptionTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> StructWithGoodAndOpaqueFieldWithoutOptionTwinSync {
        CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    StructWithGoodAndOpaqueFieldWithoutOptionTwinSync,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi {
        CstDecode::<
            RustOpaqueMoi<
                flutter_rust_bridge::for_generated::rust_async::RwLock<
                    StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi,
                >,
            >,
        >::cst_decode(self)
        .rust_auto_opaque_decode_owned()
    }
}
impl CstDecode<backtrace::Backtrace> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> backtrace::Backtrace {
        unimplemented!()
    }
}
impl CstDecode<chrono::Duration> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> chrono::Duration {
        CstDecode::<i64>::cst_decode(self).cst_decode()
    }
}
impl CstDecode<chrono::DateTime<chrono::Local>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> chrono::DateTime<chrono::Local> {
        CstDecode::<i64>::cst_decode(self).cst_decode()
    }
}
impl CstDecode<chrono::NaiveDateTime>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> chrono::NaiveDateTime {
        CstDecode::<i64>::cst_decode(self).cst_decode()
    }
}
impl CstDecode<chrono::DateTime<chrono::Utc>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> chrono::DateTime<chrono::Utc> {
        CstDecode::<i64>::cst_decode(self).cst_decode()
    }
}
impl CstDecode<[flutter_rust_bridge::DartOpaque; 1]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [flutter_rust_bridge::DartOpaque; 1] {
        let vec: Vec<flutter_rust_bridge::DartOpaque> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<std::collections::HashMap<String, String>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<String, String> {
        let vec: Vec<(String, String)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<String, crate::api::enumeration::EnumSimpleTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<String, crate::api::enumeration::EnumSimpleTwinNormal> {
        let vec: Vec<(String, crate::api::enumeration::EnumSimpleTwinNormal)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashMap<
            String,
            crate::api::pseudo_manual::enumeration_twin_rust_async::EnumSimpleTwinRustAsync,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<
        String,
        crate::api::pseudo_manual::enumeration_twin_rust_async::EnumSimpleTwinRustAsync,
    > {
        let vec: Vec<(
            String,
            crate::api::pseudo_manual::enumeration_twin_rust_async::EnumSimpleTwinRustAsync,
        )> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashMap<
            String,
            crate::api::pseudo_manual::enumeration_twin_sync::EnumSimpleTwinSync,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<
        String,
        crate::api::pseudo_manual::enumeration_twin_sync::EnumSimpleTwinSync,
    > {
        let vec: Vec<(
            String,
            crate::api::pseudo_manual::enumeration_twin_sync::EnumSimpleTwinSync,
        )> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashMap<
            String,
            crate::api::pseudo_manual::mirror_twin_sync_sse::HashMapValue,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<
        String,
        crate::api::pseudo_manual::mirror_twin_sync_sse::HashMapValue,
    > {
        let vec: Vec<(
            String,
            crate::api::pseudo_manual::mirror_twin_sync_sse::HashMapValue,
        )> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<String, crate::api::enumeration::KitchenSinkTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<String, crate::api::enumeration::KitchenSinkTwinNormal> {
        let vec: Vec<(String, crate::api::enumeration::KitchenSinkTwinNormal)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashMap<
            String,
            crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<
        String,
        crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync,
    > {
        let vec: Vec<(
            String,
            crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync,
        )> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashMap<
            String,
            crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<
        String,
        crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync,
    > {
        let vec: Vec<(
            String,
            crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync,
        )> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<String, Vec<u8>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<String, Vec<u8>> {
        let vec: Vec<(String, Vec<u8>)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<String, crate::auxiliary::sample_types::MySize>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<String, crate::auxiliary::sample_types::MySize> {
        let vec: Vec<(String, crate::auxiliary::sample_types::MySize)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<i32, String>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<i32, String> {
        let vec: Vec<(i32, String)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashMap<
            i32,
            crate::api::pseudo_manual::basic::BasicGeneralEnumTwinNormal,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<i32, crate::api::pseudo_manual::basic::BasicGeneralEnumTwinNormal>
    {
        let vec: Vec<(
            i32,
            crate::api::pseudo_manual::basic::BasicGeneralEnumTwinNormal,
        )> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashMap<
            i32,
            crate::api::pseudo_manual::basic_twin_rust_async::BasicGeneralEnumTwinRustAsync,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<
        i32,
        crate::api::pseudo_manual::basic_twin_rust_async::BasicGeneralEnumTwinRustAsync,
    > {
        let vec: Vec<(
            i32,
            crate::api::pseudo_manual::basic_twin_rust_async::BasicGeneralEnumTwinRustAsync,
        )> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashMap<
            i32,
            crate::api::pseudo_manual::basic_twin_sync::BasicGeneralEnumTwinSync,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<
        i32,
        crate::api::pseudo_manual::basic_twin_sync::BasicGeneralEnumTwinSync,
    > {
        let vec: Vec<(
            i32,
            crate::api::pseudo_manual::basic_twin_sync::BasicGeneralEnumTwinSync,
        )> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashMap<
            i32,
            crate::api::pseudo_manual::basic::BasicPrimitiveEnumTwinNormal,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<
        i32,
        crate::api::pseudo_manual::basic::BasicPrimitiveEnumTwinNormal,
    > {
        let vec: Vec<(
            i32,
            crate::api::pseudo_manual::basic::BasicPrimitiveEnumTwinNormal,
        )> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashMap<
            i32,
            crate::api::pseudo_manual::basic_twin_rust_async::BasicPrimitiveEnumTwinRustAsync,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<
        i32,
        crate::api::pseudo_manual::basic_twin_rust_async::BasicPrimitiveEnumTwinRustAsync,
    > {
        let vec: Vec<(
            i32,
            crate::api::pseudo_manual::basic_twin_rust_async::BasicPrimitiveEnumTwinRustAsync,
        )> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashMap<
            i32,
            crate::api::pseudo_manual::basic_twin_sync::BasicPrimitiveEnumTwinSync,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<
        i32,
        crate::api::pseudo_manual::basic_twin_sync::BasicPrimitiveEnumTwinSync,
    > {
        let vec: Vec<(
            i32,
            crate::api::pseudo_manual::basic_twin_sync::BasicPrimitiveEnumTwinSync,
        )> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashMap<i32, crate::api::pseudo_manual::basic::BasicStructTwinNormal>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<i32, crate::api::pseudo_manual::basic::BasicStructTwinNormal>
    {
        let vec: Vec<(i32, crate::api::pseudo_manual::basic::BasicStructTwinNormal)> =
            self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashMap<
            i32,
            crate::api::pseudo_manual::basic_twin_rust_async::BasicStructTwinRustAsync,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<
        i32,
        crate::api::pseudo_manual::basic_twin_rust_async::BasicStructTwinRustAsync,
    > {
        let vec: Vec<(
            i32,
            crate::api::pseudo_manual::basic_twin_rust_async::BasicStructTwinRustAsync,
        )> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashMap<
            i32,
            crate::api::pseudo_manual::basic_twin_sync::BasicStructTwinSync,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<
        i32,
        crate::api::pseudo_manual::basic_twin_sync::BasicStructTwinSync,
    > {
        let vec: Vec<(
            i32,
            crate::api::pseudo_manual::basic_twin_sync::BasicStructTwinSync,
        )> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<i32, bool>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<i32, bool> {
        let vec: Vec<(i32, bool)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<i32, f32>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<i32, f32> {
        let vec: Vec<(i32, f32)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<i32, f64>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<i32, f64> {
        let vec: Vec<(i32, f64)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<i32, i16>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<i32, i16> {
        let vec: Vec<(i32, i16)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<i32, i32>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<i32, i32> {
        let vec: Vec<(i32, i32)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<i32, i64>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<i32, i64> {
        let vec: Vec<(i32, i64)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<i32, i8>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<i32, i8> {
        let vec: Vec<(i32, i8)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<i32, isize>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<i32, isize> {
        let vec: Vec<(i32, isize)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<i32, Vec<u8>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<i32, Vec<u8>> {
        let vec: Vec<(i32, Vec<u8>)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<i32, u16>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<i32, u16> {
        let vec: Vec<(i32, u16)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<i32, u32>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<i32, u32> {
        let vec: Vec<(i32, u32)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<i32, u64>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<i32, u64> {
        let vec: Vec<(i32, u64)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<i32, u8>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<i32, u8> {
        let vec: Vec<(i32, u8)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashMap<i32, usize>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashMap<i32, usize> {
        let vec: Vec<(i32, usize)> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashMap<
            u8,
            crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashMap<
        u8,
        crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode,
    > {
        let vec: Vec<(
            u8,
            crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode,
        )> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<RustOpaqueMoi<Box<dyn DartDebugTwinMoi>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<Box<dyn DartDebugTwinMoi>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueNom<Box<dyn DartDebugTwinNormal>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<Box<dyn DartDebugTwinNormal>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueNom<Box<dyn DartDebugTwinRustAsync>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<Box<dyn DartDebugTwinRustAsync>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueMoi<Box<dyn DartDebugTwinRustAsyncMoi>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<Box<dyn DartDebugTwinRustAsyncMoi>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueNom<Box<dyn DartDebugTwinSync>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<Box<dyn DartDebugTwinSync>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueMoi<Box<dyn DartDebugTwinSyncMoi>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<Box<dyn DartDebugTwinSyncMoi>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueMoi<FrbOpaqueReturnTwinMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<FrbOpaqueReturnTwinMoi> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueNom<FrbOpaqueReturnTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<FrbOpaqueReturnTwinNormal> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueNom<FrbOpaqueReturnTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<FrbOpaqueReturnTwinRustAsync> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueMoi<FrbOpaqueReturnTwinRustAsyncMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<FrbOpaqueReturnTwinRustAsyncMoi> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueNom<FrbOpaqueReturnTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<FrbOpaqueReturnTwinSync> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueMoi<FrbOpaqueReturnTwinSyncMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<FrbOpaqueReturnTwinSyncMoi> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueMoi<FrbOpaqueSyncReturnTwinMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<FrbOpaqueSyncReturnTwinMoi> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueNom<FrbOpaqueSyncReturnTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<FrbOpaqueSyncReturnTwinNormal> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueMoi<HideDataAnotherTwinMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<HideDataAnotherTwinMoi> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueNom<HideDataAnotherTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<HideDataAnotherTwinNormal> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueMoi<HideDataTwinMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<HideDataTwinMoi> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<[RustOpaqueMoi<HideDataTwinMoi>; 2]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [RustOpaqueMoi<HideDataTwinMoi>; 2] {
        let vec: Vec<RustOpaqueMoi<HideDataTwinMoi>> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<RustOpaqueNom<HideDataTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<HideDataTwinNormal> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<[RustOpaqueNom<HideDataTwinNormal>; 2]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [RustOpaqueNom<HideDataTwinNormal>; 2] {
        let vec: Vec<RustOpaqueNom<HideDataTwinNormal>> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<RustOpaqueNom<HideDataTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<HideDataTwinRustAsync> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueMoi<HideDataTwinRustAsyncMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<HideDataTwinRustAsyncMoi> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<[RustOpaqueMoi<HideDataTwinRustAsyncMoi>; 2]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [RustOpaqueMoi<HideDataTwinRustAsyncMoi>; 2] {
        let vec: Vec<RustOpaqueMoi<HideDataTwinRustAsyncMoi>> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[RustOpaqueNom<HideDataTwinRustAsync>; 2]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [RustOpaqueNom<HideDataTwinRustAsync>; 2] {
        let vec: Vec<RustOpaqueNom<HideDataTwinRustAsync>> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<RustOpaqueNom<HideDataTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<HideDataTwinSync> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueMoi<HideDataTwinSyncMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<HideDataTwinSyncMoi> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<[RustOpaqueMoi<HideDataTwinSyncMoi>; 2]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [RustOpaqueMoi<HideDataTwinSyncMoi>; 2] {
        let vec: Vec<RustOpaqueMoi<HideDataTwinSyncMoi>> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[RustOpaqueNom<HideDataTwinSync>; 2]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [RustOpaqueNom<HideDataTwinSync>; 2] {
        let vec: Vec<RustOpaqueNom<HideDataTwinSync>> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<RustOpaqueMoi<Mutex<HideDataTwinMoi>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<Mutex<HideDataTwinMoi>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueNom<Mutex<HideDataTwinNormal>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<Mutex<HideDataTwinNormal>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueNom<Mutex<HideDataTwinRustAsync>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<Mutex<HideDataTwinRustAsync>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueMoi<Mutex<HideDataTwinRustAsyncMoi>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<Mutex<HideDataTwinRustAsyncMoi>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueNom<Mutex<HideDataTwinSync>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<Mutex<HideDataTwinSync>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueMoi<Mutex<HideDataTwinSyncMoi>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<Mutex<HideDataTwinSyncMoi>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueMoi<NonCloneDataTwinMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<NonCloneDataTwinMoi> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueNom<NonCloneDataTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<NonCloneDataTwinNormal> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueNom<NonCloneDataTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<NonCloneDataTwinRustAsync> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueMoi<NonCloneDataTwinRustAsyncMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<NonCloneDataTwinRustAsyncMoi> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueNom<NonCloneDataTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<NonCloneDataTwinSync> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueMoi<NonCloneDataTwinSyncMoi>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<NonCloneDataTwinSyncMoi> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueMoi<RwLock<HideDataTwinMoi>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<RwLock<HideDataTwinMoi>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueNom<RwLock<HideDataTwinNormal>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<RwLock<HideDataTwinNormal>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueNom<RwLock<HideDataTwinRustAsync>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<RwLock<HideDataTwinRustAsync>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueMoi<RwLock<HideDataTwinRustAsyncMoi>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<RwLock<HideDataTwinRustAsyncMoi>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueNom<RwLock<HideDataTwinSync>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<RwLock<HideDataTwinSync>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueMoi<RwLock<HideDataTwinSyncMoi>>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<RwLock<HideDataTwinSyncMoi>> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn Fn(String) -> String + Send + Sync>,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn Fn(String) -> String + Send + Sync>,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinMoi>>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinMoi>>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinNormal>>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinNormal>>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn HelloTraitTwinRustAsync>,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinRustAsync>>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn HelloTraitTwinRustAsyncMoi>,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinRustAsyncMoi>>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinSync>>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinSync>>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinSyncMoi>>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinSyncMoi>>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinMoi + Send + Sync>,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinMoi + Send + Sync>,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinNormal + Send + Sync>,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinNormal + Send + Sync>,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinRustAsyncMoi + Send + Sync>,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinRustAsyncMoi + Send + Sync>,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinRustAsync + Send + Sync>,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinRustAsync + Send + Sync>,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinSyncMoi + Send + Sync>,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinSyncMoi + Send + Sync>,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinSync + Send + Sync>,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinSync + Send + Sync>,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                ConstructorOpaqueStructTwinNormal,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<ConstructorOpaqueStructTwinNormal>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                ConstructorOpaqueSyncStructTwinNormal,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            ConstructorOpaqueSyncStructTwinNormal,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinNormal>>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinNormal>>
    {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinRustAsync>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinRustAsync>>
    {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinSync>>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinSync>>
    {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinMoi,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinMoi,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinNormal,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinNormal,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinSync,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinSync,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinMoi>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinMoi>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinNormal>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinNormal>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinRustAsync>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinRustAsync>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                NonCloneSimpleEnumTwinRustAsyncMoi,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinRustAsyncMoi>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSync>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSync>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSyncMoi>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSyncMoi>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinMoi>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinMoi>>
    {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinNormal>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinNormal>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinRustAsync>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinRustAsync>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinRustAsyncMoi>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinRustAsyncMoi>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSync>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSync>>
    {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSyncMoi>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSyncMoi>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinMoi>>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinMoi>>
    {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinNormal>>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinNormal>>
    {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinRustAsync>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinRustAsync>>
    {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinRustAsyncMoi>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinRustAsyncMoi>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSync>>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSync>>
    {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSyncMoi>>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSyncMoi>>
    {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinMoi>>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinMoi>>
    {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinNormal>>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinNormal>>
    {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinRustAsync>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinRustAsync>>
    {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinRustAsyncMoi>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinRustAsyncMoi>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSync>>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSync>>
    {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSyncMoi>>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSyncMoi>>
    {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<StructInMiscNoTwinExampleA>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<StructInMiscNoTwinExampleA>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<StructInMiscNoTwinExampleB>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<StructInMiscNoTwinExampleB>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinSync,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinSync,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl
    CstDecode<
        RustOpaqueMoi<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi,
            >,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueMoi<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi,
        >,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl
    CstDecode<
        RustOpaqueNom<
            flutter_rust_bridge::for_generated::rust_async::RwLock<StructWithImplBlockInMultiFile>,
        >,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<
        flutter_rust_bridge::for_generated::rust_async::RwLock<StructWithImplBlockInMultiFile>,
    > {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<RustOpaqueMoi<i16>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueMoi<i16> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        decode_rust_opaque_moi((self.as_f64().unwrap() as usize) as _)
    }
}
impl CstDecode<RustOpaqueNom<i32>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> RustOpaqueNom<i32> {
        #[cfg(target_pointer_width = "64")]
        {
            compile_error!("64-bit pointers are not supported.");
        }
        unsafe { decode_rust_opaque_nom((self.as_f64().unwrap() as usize) as _) }
    }
}
impl CstDecode<std::collections::HashSet<String>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashSet<String> {
        let vec: Vec<String> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl
    CstDecode<
        std::collections::HashSet<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> std::collections::HashSet<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode>
    {
        let vec: Vec<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode> =
            self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<std::collections::HashSet<i32>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> std::collections::HashSet<i32> {
        let vec: Vec<i32> = self.cst_decode();
        vec.into_iter().collect()
    }
}
impl CstDecode<String> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> String {
        self.as_string().expect("non-UTF-8 string, or not a string")
    }
}
impl CstDecode<uuid::Uuid> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> uuid::Uuid {
        self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Uint8Array>()
            .to_vec()
            .into_boxed_slice()
            .cst_decode()
    }
}
impl CstDecode<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode {
        (self.unchecked_into_f64() as i32).cst_decode()
    }
}
impl CstDecode<[crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode; 2]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode; 2] {
        let vec: Vec<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationMode> =
            self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<crate::api::pseudo_manual::basic::BasicPrimitiveEnumTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::basic::BasicPrimitiveEnumTwinNormal {
        (self.unchecked_into_f64() as i32).cst_decode()
    }
}
impl CstDecode<crate::api::pseudo_manual::basic_twin_rust_async::BasicPrimitiveEnumTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::basic_twin_rust_async::BasicPrimitiveEnumTwinRustAsync {
        (self.unchecked_into_f64() as i32).cst_decode()
    }
}
impl CstDecode<crate::api::pseudo_manual::basic_twin_sync::BasicPrimitiveEnumTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::basic_twin_sync::BasicPrimitiveEnumTwinSync {
        (self.unchecked_into_f64() as i32).cst_decode()
    }
}
impl CstDecode<bool> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> bool {
        self.is_truthy()
    }
}
impl CstDecode<Box<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationEnv>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<crate::api::pseudo_manual::mirror_twin_sync_sse::ApplicationEnv> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::pseudo_manual::benchmark_api::BenchmarkBinaryTreeTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Box<crate::api::pseudo_manual::benchmark_api::BenchmarkBinaryTreeTwinNormal> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::pseudo_manual::benchmark_api_twin_rust_async::BenchmarkBinaryTreeTwinRustAsync>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> Box<crate::api::pseudo_manual::benchmark_api_twin_rust_async::BenchmarkBinaryTreeTwinRustAsync> {
                Box::new(self.cst_decode())
            }
        }
impl CstDecode<Box<crate::api::pseudo_manual::benchmark_api_twin_sync::BenchmarkBinaryTreeTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Box<crate::api::pseudo_manual::benchmark_api_twin_sync::BenchmarkBinaryTreeTwinSync> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::array::BlobTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<crate::api::array::BlobTwinNormal> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::pseudo_manual::array_twin_rust_async::BlobTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Box<crate::api::pseudo_manual::array_twin_rust_async::BlobTwinRustAsync> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::pseudo_manual::array_twin_sync::BlobTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<crate::api::pseudo_manual::array_twin_sync::BlobTwinSync> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<bool>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<bool> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::enumeration::DistanceTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<crate::api::enumeration::DistanceTwinNormal> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::pseudo_manual::enumeration_twin_rust_async::DistanceTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Box<crate::api::pseudo_manual::enumeration_twin_rust_async::DistanceTwinRustAsync> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::pseudo_manual::enumeration_twin_sync::DistanceTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<crate::api::pseudo_manual::enumeration_twin_sync::DistanceTwinSync> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::optional::ExoticOptionalsTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<crate::api::optional::ExoticOptionalsTwinNormal> {
        Box::new(self.cst_decode())
    }
}
impl
    CstDecode<
        Box<crate::api::pseudo_manual::optional_twin_rust_async::ExoticOptionalsTwinRustAsync>,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Box<crate::api::pseudo_manual::optional_twin_rust_async::ExoticOptionalsTwinRustAsync>
    {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::pseudo_manual::optional_twin_sync::ExoticOptionalsTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Box<crate::api::pseudo_manual::optional_twin_sync::ExoticOptionalsTwinSync> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<f64>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<f64> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::array::FeedIdTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<crate::api::array::FeedIdTwinNormal> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::pseudo_manual::array_twin_rust_async::FeedIdTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Box<crate::api::pseudo_manual::array_twin_rust_async::FeedIdTwinRustAsync> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::pseudo_manual::array_twin_sync::FeedIdTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<crate::api::pseudo_manual::array_twin_sync::FeedIdTwinSync> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<i32>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<i32> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<i64>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<i64> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<i8>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<i8> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::enumeration::KitchenSinkTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<crate::api::enumeration::KitchenSinkTwinNormal> {
        Box::new(self.cst_decode())
    }
}
impl
    CstDecode<Box<crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Box<crate::api::pseudo_manual::enumeration_twin_rust_async::KitchenSinkTwinRustAsync> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Box<crate::api::pseudo_manual::enumeration_twin_sync::KitchenSinkTwinSync> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::auxiliary::sample_types::MySize>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<crate::auxiliary::sample_types::MySize> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::enumeration::SpeedTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<crate::api::enumeration::SpeedTwinNormal> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::pseudo_manual::enumeration_twin_rust_async::SpeedTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Box<crate::api::pseudo_manual::enumeration_twin_rust_async::SpeedTwinRustAsync> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<crate::api::pseudo_manual::enumeration_twin_sync::SpeedTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<crate::api::pseudo_manual::enumeration_twin_sync::SpeedTwinSync> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<u8>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<u8> {
        Box::new(self.cst_decode())
    }
}
impl CstDecode<Box<[u8; 1600]>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<[u8; 1600]> {
        let vec: Vec<u8> = self.cst_decode();
        Box::new(flutter_rust_bridge::for_generated::from_vec_to_array(vec))
    }
}
impl CstDecode<Box<[u8; 8]>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<[u8; 8]> {
        let vec: Vec<u8> = self.cst_decode();
        Box::new(flutter_rust_bridge::for_generated::from_vec_to_array(vec))
    }
}
impl CstDecode<Box<crate::api::misc_example::WeekdaysTwinNormal>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Box<crate::api::misc_example::WeekdaysTwinNormal> {
        let ptr: Box<i32> = self.cst_decode();
        Box::new(ptr.cst_decode())
    }
}
impl CstDecode<Box<crate::api::pseudo_manual::misc_example_twin_rust_async::WeekdaysTwinRustAsync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Box<crate::api::pseudo_manual::misc_example_twin_rust_async::WeekdaysTwinRustAsync> {
        let ptr: Box<i32> = self.cst_decode();
        Box::new(ptr.cst_decode())
    }
}
impl CstDecode<Box<crate::api::pseudo_manual::misc_example_twin_sync::WeekdaysTwinSync>>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> Box<crate::api::pseudo_manual::misc_example_twin_sync::WeekdaysTwinSync> {
        let ptr: Box<i32> = self.cst_decode();
        Box::new(ptr.cst_decode())
    }
}
impl CstDecode<[crate::api::pseudo_manual::rust_opaque_twin_moi::EnumOpaqueTwinMoi; 5]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [crate::api::pseudo_manual::rust_opaque_twin_moi::EnumOpaqueTwinMoi; 5] {
        let vec: Vec<crate::api::pseudo_manual::rust_opaque_twin_moi::EnumOpaqueTwinMoi> =
            self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[crate::api::rust_opaque::EnumOpaqueTwinNormal; 5]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [crate::api::rust_opaque::EnumOpaqueTwinNormal; 5] {
        let vec: Vec<crate::api::rust_opaque::EnumOpaqueTwinNormal> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[crate::api::pseudo_manual::rust_opaque_twin_rust_async::EnumOpaqueTwinRustAsync; 5]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> [crate::api::pseudo_manual::rust_opaque_twin_rust_async::EnumOpaqueTwinRustAsync; 5] {
        let vec: Vec<
            crate::api::pseudo_manual::rust_opaque_twin_rust_async::EnumOpaqueTwinRustAsync,
        > = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl
    CstDecode<
        [crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::EnumOpaqueTwinRustAsyncMoi; 5],
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> [crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::EnumOpaqueTwinRustAsyncMoi; 5]
    {
        let vec: Vec<
            crate::api::pseudo_manual::rust_opaque_twin_rust_async_moi::EnumOpaqueTwinRustAsyncMoi,
        > = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[crate::api::pseudo_manual::rust_opaque_twin_sync::EnumOpaqueTwinSync; 5]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> [crate::api::pseudo_manual::rust_opaque_twin_sync::EnumOpaqueTwinSync; 5] {
        let vec: Vec<crate::api::pseudo_manual::rust_opaque_twin_sync::EnumOpaqueTwinSync> =
            self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[crate::api::pseudo_manual::rust_opaque_twin_sync_moi::EnumOpaqueTwinSyncMoi; 5]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> [crate::api::pseudo_manual::rust_opaque_twin_sync_moi::EnumOpaqueTwinSyncMoi; 5] {
        let vec: Vec<crate::api::pseudo_manual::rust_opaque_twin_sync_moi::EnumOpaqueTwinSyncMoi> =
            self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<crate::api::enumeration::EnumSimpleTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::enumeration::EnumSimpleTwinNormal {
        (self.unchecked_into_f64() as i32).cst_decode()
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_rust_async::EnumSimpleTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::enumeration_twin_rust_async::EnumSimpleTwinRustAsync {
        (self.unchecked_into_f64() as i32).cst_decode()
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_sync::EnumSimpleTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::enumeration_twin_sync::EnumSimpleTwinSync {
        (self.unchecked_into_f64() as i32).cst_decode()
    }
}
impl CstDecode<crate::api::enumeration::EnumWithDiscriminantTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::enumeration::EnumWithDiscriminantTwinNormal {
        (self.unchecked_into_f64() as i32).cst_decode()
    }
}
impl
    CstDecode<
        crate::api::pseudo_manual::enumeration_twin_rust_async::EnumWithDiscriminantTwinRustAsync,
    > for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::enumeration_twin_rust_async::EnumWithDiscriminantTwinRustAsync
    {
        (self.unchecked_into_f64() as i32).cst_decode()
    }
}
impl CstDecode<crate::api::pseudo_manual::enumeration_twin_sync::EnumWithDiscriminantTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::enumeration_twin_sync::EnumWithDiscriminantTwinSync {
        (self.unchecked_into_f64() as i32).cst_decode()
    }
}
impl CstDecode<f32> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> f32 {
        self.unchecked_into_f64() as _
    }
}
impl CstDecode<f64> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> f64 {
        self.unchecked_into_f64() as _
    }
}
impl CstDecode<[f64; 16]> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [f64; 16] {
        let vec: Vec<f64> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<i16> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> i16 {
        self.unchecked_into_f64() as _
    }
}
impl CstDecode<i32> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> i32 {
        self.unchecked_into_f64() as _
    }
}
impl CstDecode<[i32; 2]> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [i32; 2] {
        let vec: Vec<i32> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<i64> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> i64 {
        ::std::convert::TryInto::try_into(
            self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::BigInt>()
                .unwrap(),
        )
        .unwrap()
    }
}
impl CstDecode<i8> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> i8 {
        self.unchecked_into_f64() as _
    }
}
impl CstDecode<isize> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> isize {
        self.unchecked_into_f64() as _
    }
}
impl CstDecode<Vec<f32>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<f32> {
        self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Float32Array>()
            .to_vec()
            .into()
    }
}
impl CstDecode<Vec<f64>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<f64> {
        self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Float64Array>()
            .to_vec()
            .into()
    }
}
impl CstDecode<Vec<i16>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<i16> {
        self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Int16Array>()
            .to_vec()
            .into()
    }
}
impl CstDecode<Vec<i32>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<i32> {
        self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Int32Array>()
            .to_vec()
            .into()
    }
}
impl CstDecode<Vec<i64>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<i64> {
        let buf = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::BigInt64Array>()
            .unwrap();
        let buf = flutter_rust_bridge::for_generated::js_sys::Uint8Array::new(&buf.buffer());
        flutter_rust_bridge::for_generated::slice_from_byte_buffer(buf.to_vec()).into()
    }
}
impl CstDecode<Vec<i8>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<i8> {
        self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Int8Array>()
            .to_vec()
            .into()
    }
}
impl CstDecode<Vec<u16>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<u16> {
        self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Uint16Array>()
            .to_vec()
            .into()
    }
}
impl CstDecode<Vec<u32>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<u32> {
        self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Uint32Array>()
            .to_vec()
            .into()
    }
}
impl CstDecode<Vec<u64>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<u64> {
        let buf = self
            .dyn_into::<flutter_rust_bridge::for_generated::js_sys::BigUint64Array>()
            .unwrap();
        let buf = flutter_rust_bridge::for_generated::js_sys::Uint8Array::new(&buf.buffer());
        flutter_rust_bridge::for_generated::slice_from_byte_buffer(buf.to_vec()).into()
    }
}
impl CstDecode<Vec<u8>> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<u8> {
        self.unchecked_into::<flutter_rust_bridge::for_generated::js_sys::Uint8Array>()
            .to_vec()
            .into()
    }
}
impl CstDecode<crate::auxiliary::sample_types::MyEnum>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::auxiliary::sample_types::MyEnum {
        (self.unchecked_into_f64() as i32).cst_decode()
    }
}
impl CstDecode<[crate::api::array::PointTwinNormal; 2]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [crate::api::array::PointTwinNormal; 2] {
        let vec: Vec<crate::api::array::PointTwinNormal> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[crate::api::pseudo_manual::array_twin_rust_async::PointTwinRustAsync; 2]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> [crate::api::pseudo_manual::array_twin_rust_async::PointTwinRustAsync; 2] {
        let vec: Vec<crate::api::pseudo_manual::array_twin_rust_async::PointTwinRustAsync> =
            self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[crate::api::pseudo_manual::array_twin_sync::PointTwinSync; 2]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [crate::api::pseudo_manual::array_twin_sync::PointTwinSync; 2] {
        let vec: Vec<crate::api::pseudo_manual::array_twin_sync::PointTwinSync> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[crate::api::method::SumWithTwinNormal; 3]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [crate::api::method::SumWithTwinNormal; 3] {
        let vec: Vec<crate::api::method::SumWithTwinNormal> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[crate::api::pseudo_manual::method_twin_rust_async::SumWithTwinRustAsync; 3]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> [crate::api::pseudo_manual::method_twin_rust_async::SumWithTwinRustAsync; 3] {
        let vec: Vec<crate::api::pseudo_manual::method_twin_rust_async::SumWithTwinRustAsync> =
            self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[crate::api::pseudo_manual::method_twin_sync::SumWithTwinSync; 3]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [crate::api::pseudo_manual::method_twin_sync::SumWithTwinSync; 3] {
        let vec: Vec<crate::api::pseudo_manual::method_twin_sync::SumWithTwinSync> =
            self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[crate::api::array::TestIdTwinNormal; 2]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [crate::api::array::TestIdTwinNormal; 2] {
        let vec: Vec<crate::api::array::TestIdTwinNormal> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[crate::api::array::TestIdTwinNormal; 4]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [crate::api::array::TestIdTwinNormal; 4] {
        let vec: Vec<crate::api::array::TestIdTwinNormal> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[crate::api::pseudo_manual::array_twin_rust_async::TestIdTwinRustAsync; 2]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> [crate::api::pseudo_manual::array_twin_rust_async::TestIdTwinRustAsync; 2] {
        let vec: Vec<crate::api::pseudo_manual::array_twin_rust_async::TestIdTwinRustAsync> =
            self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[crate::api::pseudo_manual::array_twin_rust_async::TestIdTwinRustAsync; 4]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> [crate::api::pseudo_manual::array_twin_rust_async::TestIdTwinRustAsync; 4] {
        let vec: Vec<crate::api::pseudo_manual::array_twin_rust_async::TestIdTwinRustAsync> =
            self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[crate::api::pseudo_manual::array_twin_sync::TestIdTwinSync; 2]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [crate::api::pseudo_manual::array_twin_sync::TestIdTwinSync; 2] {
        let vec: Vec<crate::api::pseudo_manual::array_twin_sync::TestIdTwinSync> =
            self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[crate::api::pseudo_manual::array_twin_sync::TestIdTwinSync; 4]>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [crate::api::pseudo_manual::array_twin_sync::TestIdTwinSync; 4] {
        let vec: Vec<crate::api::pseudo_manual::array_twin_sync::TestIdTwinSync> =
            self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<u16> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> u16 {
        self.unchecked_into_f64() as _
    }
}
impl CstDecode<u32> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> u32 {
        self.unchecked_into_f64() as _
    }
}
impl CstDecode<u64> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> u64 {
        ::std::convert::TryInto::try_into(
            self.dyn_into::<flutter_rust_bridge::for_generated::js_sys::BigInt>()
                .unwrap(),
        )
        .unwrap()
    }
}
impl CstDecode<u8> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> u8 {
        self.unchecked_into_f64() as _
    }
}
impl CstDecode<[u8; 1600]> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [u8; 1600] {
        let vec: Vec<u8> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[u8; 2]> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [u8; 2] {
        let vec: Vec<u8> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[u8; 32]> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [u8; 32] {
        let vec: Vec<u8> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[u8; 5]> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [u8; 5] {
        let vec: Vec<u8> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<[u8; 8]> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> [u8; 8] {
        let vec: Vec<u8> = self.cst_decode();
        flutter_rust_bridge::for_generated::from_vec_to_array(vec)
    }
}
impl CstDecode<usize> for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> usize {
        self.unchecked_into_f64() as _
    }
}
impl CstDecode<crate::api::misc_example::WeekdaysTwinNormal>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::misc_example::WeekdaysTwinNormal {
        (self.unchecked_into_f64() as i32).cst_decode()
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_rust_async::WeekdaysTwinRustAsync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> crate::api::pseudo_manual::misc_example_twin_rust_async::WeekdaysTwinRustAsync {
        (self.unchecked_into_f64() as i32).cst_decode()
    }
}
impl CstDecode<crate::api::pseudo_manual::misc_example_twin_sync::WeekdaysTwinSync>
    for flutter_rust_bridge::for_generated::wasm_bindgen::JsValue
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::pseudo_manual::misc_example_twin_sync::WeekdaysTwinSync {
        (self.unchecked_into_f64() as i32).cst_decode()
    }
}

#[wasm_bindgen]
pub fn wire_boxed_blob_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    blob: Box<[u8]>,
) {
    wire_boxed_blob_twin_normal_impl(port_, blob)
}

#[wasm_bindgen]
pub fn wire_func_test_id_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_test_id_twin_normal_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_get_array_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_get_array_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_get_complex_array_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_get_complex_array_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_last_number_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    array: Box<[f64]>,
) {
    wire_last_number_twin_normal_impl(port_, array)
}

#[wasm_bindgen]
pub fn wire_nested_id_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_nested_id_twin_normal_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_new_msgid_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: Box<[u8]>,
) {
    wire_new_msgid_twin_normal_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_return_boxed_feed_id_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: Box<[u8]>,
) {
    wire_return_boxed_feed_id_twin_normal_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_return_boxed_raw_feed_id_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_return_boxed_raw_feed_id_twin_normal_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_use_boxed_blob_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    blob: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_use_boxed_blob_twin_normal_impl(port_, blob)
}

#[wasm_bindgen]
pub fn wire_use_msgid_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_use_msgid_twin_normal_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_func_async_simple_add_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: i32,
    b: i32,
) {
    wire_func_async_simple_add_twin_normal_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_func_async_void_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_func_async_void_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_simple_use_async_spawn(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: String,
) {
    wire_simple_use_async_spawn_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_simple_use_async_spawn_blocking(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: String,
) {
    wire_simple_use_async_spawn_blocking_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_simple_use_async_spawn_local(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: String,
) {
    wire_simple_use_async_spawn_local_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_handle_customized_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    val: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_customized_struct_twin_normal_impl(port_, val)
}

#[wasm_bindgen]
pub fn wire_next_user_id_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    user_id: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_next_user_id_twin_normal_impl(port_, user_id)
}

#[wasm_bindgen]
pub fn wire_benchmark_void_semi_serialize(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_void_semi_serialize_impl()
}

#[wasm_bindgen]
pub fn wire_datetime_local_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    d: i64,
) {
    wire_datetime_local_twin_normal_impl(port_, d)
}

#[wasm_bindgen]
pub fn wire_datetime_utc_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    d: i64,
) {
    wire_datetime_utc_twin_normal_impl(port_, d)
}

#[wasm_bindgen]
pub fn wire_duration_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort, d: i64) {
    wire_duration_twin_normal_impl(port_, d)
}

#[wasm_bindgen]
pub fn wire_handle_durations_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    durations: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    since: i64,
) {
    wire_handle_durations_twin_normal_impl(port_, durations, since)
}

#[wasm_bindgen]
pub fn wire_handle_timestamps_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    timestamps: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    epoch: i64,
) {
    wire_handle_timestamps_twin_normal_impl(port_, timestamps, epoch)
}

#[wasm_bindgen]
pub fn wire_how_long_does_it_take_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    mine: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_how_long_does_it_take_twin_normal_impl(port_, mine)
}

#[wasm_bindgen]
pub fn wire_naivedatetime_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    d: i64,
) {
    wire_naivedatetime_twin_normal_impl(port_, d)
}

#[wasm_bindgen]
pub fn wire_optional_empty_datetime_utc_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    d: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_optional_empty_datetime_utc_twin_normal_impl(port_, d)
}

#[wasm_bindgen]
pub fn wire_test_chrono_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_test_chrono_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_precise_chrono_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_precise_chrono_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_StructWithCommentsTwinNormal_instance_method_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_StructWithCommentsTwinNormal_instance_method_twin_normal_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_StructWithCommentsTwinNormal_static_method_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_StructWithCommentsTwinNormal_static_method_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_function_with_comments_slash_star_star_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_function_with_comments_slash_star_star_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_function_with_comments_triple_slash_multi_line_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_function_with_comments_triple_slash_multi_line_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_function_with_comments_triple_slash_single_line_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_function_with_comments_triple_slash_single_line_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_ConstructorOpaqueStructTwinNormal_check(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_ConstructorOpaqueStructTwinNormal_check_impl(that)
}

#[wasm_bindgen]
pub fn wire_ConstructorOpaqueStructTwinNormal_new(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_ConstructorOpaqueStructTwinNormal_new_impl(port_)
}

#[wasm_bindgen]
pub fn wire_ConstructorOpaqueSyncStructTwinNormal_check(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_ConstructorOpaqueSyncStructTwinNormal_check_impl(that)
}

#[wasm_bindgen]
pub fn wire_ConstructorOpaqueSyncStructTwinNormal_new(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_ConstructorOpaqueSyncStructTwinNormal_new_impl()
}

#[wasm_bindgen]
pub fn wire_ConstructorTranslatableStructTwinNormal_new(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_ConstructorTranslatableStructTwinNormal_new_impl(port_)
}

#[wasm_bindgen]
pub fn wire_ConstructorTranslatableSyncStructTwinNormal_new(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_ConstructorTranslatableSyncStructTwinNormal_new_impl()
}

#[wasm_bindgen]
pub fn wire_check_init_done(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_check_init_done_impl(port_)
}

#[wasm_bindgen]
pub fn wire_init_app(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_init_app_impl(port_)
}

#[wasm_bindgen]
pub fn wire_my_init_one(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_my_init_one_impl(port_)
}

#[wasm_bindgen]
pub fn wire_my_init_two(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_my_init_two_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_dart_dynamic_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_dart_dynamic_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_loopback_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_call_dart_loopback_twin_normal_impl(port_, callback)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_multi_times_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    num_times: i32,
) {
    wire_rust_call_dart_multi_times_twin_normal_impl(port_, callback, num_times)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_one_arg_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_call_dart_one_arg_twin_normal_impl(port_, callback)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_return_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_call_dart_return_twin_normal_impl(port_, callback)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_simple_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_call_dart_simple_twin_normal_impl(port_, callback)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_two_args_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_call_dart_two_args_twin_normal_impl(port_, callback)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_with_dart_opaque_arg_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    input: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_call_dart_with_dart_opaque_arg_twin_normal_impl(port_, input, callback)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_with_dart_opaque_result_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_call_dart_with_dart_opaque_result_twin_normal_impl(port_, callback)
}

#[wasm_bindgen]
pub fn wire_async_accept_dart_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_async_accept_dart_opaque_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_clone_dart_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_clone_dart_opaque_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_create_enum_dart_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_create_enum_dart_opaque_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_create_nested_dart_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque1: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    opaque2: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_create_nested_dart_opaque_twin_normal_impl(port_, opaque1, opaque2)
}

#[wasm_bindgen]
pub fn wire_drop_static_dart_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: i32,
) {
    wire_drop_static_dart_opaque_twin_normal_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_get_enum_dart_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_get_enum_dart_opaque_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_get_nested_dart_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_get_nested_dart_opaque_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_array_get_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_loop_back_array_get_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_array_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_loop_back_array_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_option_get_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_loop_back_option_get_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_option_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_loop_back_option_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_loop_back_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_vec_get_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_loop_back_vec_get_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_vec_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_loop_back_vec_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_panic_unwrap_dart_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_panic_unwrap_dart_opaque_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_set_static_dart_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: i32,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_set_static_dart_opaque_twin_normal_impl(port_, id, opaque)
}

#[wasm_bindgen]
pub fn wire_sync_accept_dart_opaque_twin_normal(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_sync_accept_dart_opaque_twin_normal_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_sync_loopback_twin_normal(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_sync_loopback_twin_normal_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_sync_option_dart_opaque_twin_normal(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_sync_option_dart_opaque_twin_normal_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_sync_option_loopback_twin_normal(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_sync_option_loopback_twin_normal_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_unwrap_dart_opaque_twin_normal(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_unwrap_dart_opaque_twin_normal_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_test_duplicated_module_names(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    s: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_test_duplicated_module_names_impl(port_, s)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinNormal_create_stream(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_DroppableTwinNormal_create_stream_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinNormal_get_drop_count_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_DroppableTwinNormal_get_drop_count_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinNormal_new_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_DroppableTwinNormal_new_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinNormal_simple_method_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_DroppableTwinNormal_simple_method_twin_normal_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_func_enum_simple_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: i32,
) {
    wire_func_enum_simple_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_discriminant_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: i32,
) {
    wire_func_enum_with_discriminant_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_mixed_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_enum_with_item_mixed_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_enum_with_item_struct_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_tuple_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_enum_with_item_tuple_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_handle_enum_parameter_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    weekday: i32,
) {
    wire_handle_enum_parameter_twin_normal_impl(port_, weekday)
}

#[wasm_bindgen]
pub fn wire_handle_enum_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    val: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_enum_struct_twin_normal_impl(port_, val)
}

#[wasm_bindgen]
pub fn wire_handle_return_enum_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    input: String,
) {
    wire_handle_return_enum_twin_normal_impl(port_, input)
}

#[wasm_bindgen]
pub fn wire_multiply_by_ten_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    measure: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_multiply_by_ten_twin_normal_impl(port_, measure)
}

#[wasm_bindgen]
pub fn wire_print_note_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    note: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_print_note_twin_normal_impl(port_, note)
}

#[wasm_bindgen]
pub fn wire_EventTwinNormal_as_string_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_EventTwinNormal_as_string_twin_normal_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_close_event_listener_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_close_event_listener_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_create_event_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    address: String,
    payload: String,
) {
    wire_create_event_twin_normal_impl(port_, address, payload)
}

#[wasm_bindgen]
pub fn wire_register_event_listener_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_register_event_listener_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinNormal_new_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    message: String,
) {
    wire_CustomStructTwinNormal_new_twin_normal_impl(port_, message)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normal_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normal_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinNormal_new_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    value: u32,
) {
    wire_SomeStructTwinNormal_new_twin_normal_impl(port_, value)
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normal_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normal_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_panic_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_custom_enum_error_panic_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_return_error_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_custom_enum_error_return_error_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_return_ok_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: u32,
) {
    wire_custom_enum_error_return_ok_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_custom_nested_error_return_error_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_custom_nested_error_return_error_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_custom_struct_error_return_error_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_custom_struct_error_return_error_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_return_error_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_func_return_error_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_func_type_fallible_panic_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_func_type_fallible_panic_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_func_type_infallible_panic_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_func_type_infallible_panic_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_panic_with_custom_result_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_panic_with_custom_result_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_1_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_custom_nested_error_1_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_1_variant1_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_custom_nested_error_1_variant1_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_2_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_custom_nested_error_2_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_custom_struct_error_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_custom_struct_error_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_custom_struct_ok_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_custom_struct_ok_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_err_custom_error_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_err_custom_error_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_error_variant_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    variant: u32,
) {
    wire_return_error_variant_twin_normal_impl(port_, variant)
}

#[wasm_bindgen]
pub fn wire_return_ok_custom_error_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_ok_custom_error_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_stream_sink_throw_anyhow_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_stream_sink_throw_anyhow_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_throw_anyhow_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_throw_anyhow_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_call_new_module_system_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_call_new_module_system_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_call_old_module_system_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_call_old_module_system_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_use_imported_enum_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    my_enum: i32,
) {
    wire_use_imported_enum_twin_normal_impl(port_, my_enum)
}

#[wasm_bindgen]
pub fn wire_use_imported_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    my_struct: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_use_imported_struct_twin_normal_impl(port_, my_struct)
}

#[wasm_bindgen]
pub fn wire_another_macro_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_another_macro_struct_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_func_macro_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_macro_struct_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_i32_i32_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_hash_map_i32_i32_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_bytes_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_hash_map_string_bytes_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_complex_enum_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_hash_map_string_complex_enum_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_simple_enum_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_hash_map_string_simple_enum_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_string_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_hash_map_string_string_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_hash_map_string_struct_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_set_i32_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[i32]>,
) {
    wire_func_hash_set_i32_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_set_string_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_hash_set_string_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinNormal_concatenate_static_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: String,
    b: String,
) {
    wire_ConcatenateWithTwinNormal_concatenate_static_twin_normal_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinNormal_concatenate_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: String,
) {
    wire_ConcatenateWithTwinNormal_concatenate_twin_normal_impl(port_, that, b)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    key: u32,
    max: u32,
) {
    wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normal_impl(port_, key, max)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normal_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    key: u32,
    max: u32,
) {
    wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normal_impl(port_, that, key, max)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinNormal_new_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: String,
) {
    wire_ConcatenateWithTwinNormal_new_twin_normal_impl(port_, a)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinNormal_simple_getter_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_ConcatenateWithTwinNormal_simple_getter_twin_normal_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_MyCallableTwinNormal_call(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    two: String,
) {
    wire_MyCallableTwinNormal_call_impl(port_, that, two)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinNormal_arg_self_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_SimpleStructTwinNormal_arg_self_twin_normal_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinNormal_return_self_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    one: String,
) {
    wire_SimpleStructTwinNormal_return_self_twin_normal_impl(port_, one)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinNormal_vec_self_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_SimpleStructTwinNormal_vec_self_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_SumWithTwinNormal_sum_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    y: u32,
    z: u32,
) {
    wire_SumWithTwinNormal_sum_twin_normal_impl(port_, that, y, z)
}

#[wasm_bindgen]
pub fn wire_get_sum_array_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: u32,
    b: u32,
    c: u32,
) {
    wire_get_sum_array_twin_normal_impl(port_, a, b, c)
}

#[wasm_bindgen]
pub fn wire_get_sum_struct_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_get_sum_struct_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_app_settings_stream_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_app_settings_stream_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_app_settings_vec_stream_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_app_settings_vec_stream_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_first_number_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    nums: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_first_number_twin_normal_impl(port_, nums)
}

#[wasm_bindgen]
pub fn wire_first_sequence_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    seqs: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_first_sequence_twin_normal_impl(port_, seqs)
}

#[wasm_bindgen]
pub fn wire_get_app_settings_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_get_app_settings_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_get_fallible_app_settings_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_get_fallible_app_settings_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_get_message_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_get_message_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_is_app_embedded_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    app_settings: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_is_app_embedded_twin_normal_impl(port_, app_settings)
}

#[wasm_bindgen]
pub fn wire_mirror_array_enum_stream_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_array_enum_stream_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_enum_stream_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_mirror_enum_stream_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_map_enum_stream_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_map_enum_stream_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_option_enum_stream_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_option_enum_stream_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_set_enum_stream_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_set_enum_stream_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_struct_stream_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_struct_stream_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_tuple_stream_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_tuple_stream_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_vec_enum_stream_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_vec_enum_stream_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_repeat_number_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    num: i32,
    times: usize,
) {
    wire_repeat_number_twin_normal_impl(port_, num, times)
}

#[wasm_bindgen]
pub fn wire_repeat_sequence_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    seq: i32,
    times: usize,
) {
    wire_repeat_sequence_twin_normal_impl(port_, seq, times)
}

#[wasm_bindgen]
pub fn wire_test_contains_mirrored_sub_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_contains_mirrored_sub_struct_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_fallible_of_raw_string_mirrored_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_fallible_of_raw_string_mirrored_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_hashmap_with_mirrored_value_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_hashmap_with_mirrored_value_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_list_of_nested_enums_mirrored_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_list_of_nested_enums_mirrored_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_list_of_raw_nested_string_mirrored_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_list_of_raw_nested_string_mirrored_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_nested_raw_string_mirrored_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_nested_raw_string_mirrored_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_raw_string_enum_mirrored_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    nested: bool,
) {
    wire_test_raw_string_enum_mirrored_twin_normal_impl(port_, nested)
}

#[wasm_bindgen]
pub fn wire_test_raw_string_mirrored_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_raw_string_mirrored_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_handle_big_buffers_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_handle_big_buffers_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_handle_complex_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    s: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_complex_struct_twin_normal_impl(port_, s)
}

#[wasm_bindgen]
pub fn wire_handle_nested_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    s: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_nested_struct_twin_normal_impl(port_, s)
}

#[wasm_bindgen]
pub fn wire_handle_string_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    s: String,
) {
    wire_handle_string_twin_normal_impl(port_, s)
}

#[wasm_bindgen]
pub fn wire_handle_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    boxed: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_struct_twin_normal_impl(port_, arg, boxed)
}

#[wasm_bindgen]
pub fn wire_handle_vec_u8_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    v: Box<[u8]>,
) {
    wire_handle_vec_u8_twin_normal_impl(port_, v)
}

#[wasm_bindgen]
pub fn wire_list_of_primitive_enums_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    weekdays: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_list_of_primitive_enums_twin_normal_impl(port_, weekdays)
}

#[wasm_bindgen]
pub fn wire_test_abc_enum_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    abc: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_test_abc_enum_twin_normal_impl(port_, abc)
}

#[wasm_bindgen]
pub fn wire_test_struct_with_enum_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    se: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_test_struct_with_enum_twin_normal_impl(port_, se)
}

#[wasm_bindgen]
pub fn wire_StructInMiscNoTwinExampleA_sample_function_a(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_StructInMiscNoTwinExampleA_sample_function_a_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_StructWithImplBlockInMultiFile_method_in_a(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_StructWithImplBlockInMultiFile_method_in_a_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_StructInMiscNoTwinExampleB_get_struct_in_misc_no_twin_example_a(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_StructInMiscNoTwinExampleB_get_struct_in_misc_no_twin_example_a_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_StructInMiscNoTwinExampleB_sample_function_b(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_StructInMiscNoTwinExampleB_sample_function_b_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_StructWithImplBlockInMultiFile_method_in_b(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_StructWithImplBlockInMultiFile_method_in_b_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_empty_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    empty: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_empty_struct_twin_normal_impl(port_, empty)
}

#[wasm_bindgen]
pub fn wire_func_return_unit_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_func_return_unit_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_handle_list_of_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    l: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_list_of_struct_twin_normal_impl(port_, l)
}

#[wasm_bindgen]
pub fn wire_handle_string_list_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    names: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_string_list_twin_normal_impl(port_, names)
}

#[wasm_bindgen]
pub fn wire_handle_newtype_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_newtype_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_handle_increment_boxed_optional_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opt: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_increment_boxed_optional_twin_normal_impl(port_, opt)
}

#[wasm_bindgen]
pub fn wire_handle_option_box_arguments_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    i8box: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    u8box: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    i32box: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    i64box: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    f64box: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    boolbox: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    structbox: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_option_box_arguments_twin_normal_impl(
        port_, i8box, u8box, i32box, i64box, f64box, boolbox, structbox,
    )
}

#[wasm_bindgen]
pub fn wire_handle_optional_increment_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opt: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_optional_increment_twin_normal_impl(port_, opt)
}

#[wasm_bindgen]
pub fn wire_handle_optional_return_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    left: f64,
    right: f64,
) {
    wire_handle_optional_return_twin_normal_impl(port_, left, right)
}

#[wasm_bindgen]
pub fn wire_handle_optional_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    document: Option<String>,
) {
    wire_handle_optional_struct_twin_normal_impl(port_, document)
}

#[wasm_bindgen]
pub fn wire_handle_vec_of_opts_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opt: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_vec_of_opts_twin_normal_impl(port_, opt)
}

#[wasm_bindgen]
pub fn wire_primitive_optional_types_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    my_i32: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    my_i64: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    my_f64: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    my_bool: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_primitive_optional_types_twin_normal_impl(port_, my_i32, my_i64, my_f64, my_bool)
}

#[wasm_bindgen]
pub fn wire_handle_vec_of_primitive_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    n: i32,
) {
    wire_handle_vec_of_primitive_twin_normal_impl(port_, n)
}

#[wasm_bindgen]
pub fn wire_primitive_types_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    my_i32: i32,
    my_i64: i64,
    my_f64: f64,
    my_bool: bool,
) {
    wire_primitive_types_twin_normal_impl(port_, my_i32, my_i64, my_f64, my_bool)
}

#[wasm_bindgen]
pub fn wire_primitive_u32_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    my_u32: u32,
) {
    wire_primitive_u32_twin_normal_impl(port_, my_u32)
}

#[wasm_bindgen]
pub fn wire_boxed_blob_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    blob: Box<[u8]>,
) {
    wire_boxed_blob_twin_rust_async_impl(port_, blob)
}

#[wasm_bindgen]
pub fn wire_func_test_id_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_test_id_twin_rust_async_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_get_array_twin_rust_async(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_get_array_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_get_complex_array_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_get_complex_array_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_last_number_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    array: Box<[f64]>,
) {
    wire_last_number_twin_rust_async_impl(port_, array)
}

#[wasm_bindgen]
pub fn wire_nested_id_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_nested_id_twin_rust_async_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_new_msgid_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: Box<[u8]>,
) {
    wire_new_msgid_twin_rust_async_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_return_boxed_feed_id_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: Box<[u8]>,
) {
    wire_return_boxed_feed_id_twin_rust_async_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_return_boxed_raw_feed_id_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_return_boxed_raw_feed_id_twin_rust_async_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_use_boxed_blob_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    blob: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_use_boxed_blob_twin_rust_async_impl(port_, blob)
}

#[wasm_bindgen]
pub fn wire_use_msgid_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_use_msgid_twin_rust_async_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_boxed_blob_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_boxed_blob_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_test_id_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_test_id_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_array_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_array_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_complex_array_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_complex_array_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_last_number_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_last_number_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_nested_id_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_nested_id_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_new_msgid_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_new_msgid_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_boxed_feed_id_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_boxed_feed_id_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_boxed_raw_feed_id_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_boxed_raw_feed_id_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_use_boxed_blob_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_use_boxed_blob_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_use_msgid_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_use_msgid_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_boxed_blob_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_boxed_blob_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_test_id_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_test_id_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_array_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_array_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_complex_array_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_complex_array_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_last_number_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_last_number_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_nested_id_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_nested_id_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_new_msgid_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_new_msgid_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_boxed_feed_id_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_boxed_feed_id_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_boxed_raw_feed_id_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_boxed_raw_feed_id_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_use_boxed_blob_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_use_boxed_blob_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_use_msgid_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_use_msgid_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_boxed_blob_twin_sync(
    blob: Box<[u8]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_boxed_blob_twin_sync_impl(blob)
}

#[wasm_bindgen]
pub fn wire_func_test_id_twin_sync(
    id: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_test_id_twin_sync_impl(id)
}

#[wasm_bindgen]
pub fn wire_get_array_twin_sync() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_get_array_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_get_complex_array_twin_sync() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco
{
    wire_get_complex_array_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_last_number_twin_sync(
    array: Box<[f64]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_last_number_twin_sync_impl(array)
}

#[wasm_bindgen]
pub fn wire_nested_id_twin_sync(
    id: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_nested_id_twin_sync_impl(id)
}

#[wasm_bindgen]
pub fn wire_new_msgid_twin_sync(
    id: Box<[u8]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_new_msgid_twin_sync_impl(id)
}

#[wasm_bindgen]
pub fn wire_return_boxed_feed_id_twin_sync(
    id: Box<[u8]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_return_boxed_feed_id_twin_sync_impl(id)
}

#[wasm_bindgen]
pub fn wire_return_boxed_raw_feed_id_twin_sync(
    id: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_return_boxed_raw_feed_id_twin_sync_impl(id)
}

#[wasm_bindgen]
pub fn wire_use_boxed_blob_twin_sync(
    blob: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_use_boxed_blob_twin_sync_impl(blob)
}

#[wasm_bindgen]
pub fn wire_use_msgid_twin_sync(
    id: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_use_msgid_twin_sync_impl(id)
}

#[wasm_bindgen]
pub fn wire_boxed_blob_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_boxed_blob_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_test_id_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_test_id_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_array_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_get_array_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_complex_array_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_get_complex_array_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_last_number_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_last_number_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_nested_id_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_nested_id_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_new_msgid_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_new_msgid_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_boxed_feed_id_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_return_boxed_feed_id_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_boxed_raw_feed_id_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_return_boxed_raw_feed_id_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_use_boxed_blob_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_use_boxed_blob_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_use_msgid_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_use_msgid_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_async_simple_add_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_async_simple_add_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_async_void_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_async_void_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_customized_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    val: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_customized_struct_twin_rust_async_impl(port_, val)
}

#[wasm_bindgen]
pub fn wire_next_user_id_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    user_id: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_next_user_id_twin_rust_async_impl(port_, user_id)
}

#[wasm_bindgen]
pub fn wire_handle_customized_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_customized_struct_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_next_user_id_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_next_user_id_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_customized_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_customized_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_next_user_id_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_next_user_id_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_customized_struct_twin_sync(
    val: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_customized_struct_twin_sync_impl(val)
}

#[wasm_bindgen]
pub fn wire_next_user_id_twin_sync(
    user_id: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_next_user_id_twin_sync_impl(user_id)
}

#[wasm_bindgen]
pub fn wire_handle_customized_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_customized_struct_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_next_user_id_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_next_user_id_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_general_enum_twin_normal_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_type_basic_general_enum_twin_normal_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_primitive_enum_twin_normal_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: i32,
) {
    wire_example_basic_type_basic_primitive_enum_twin_normal_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_struct_twin_normal_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_type_basic_struct_twin_normal_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_bool_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: bool,
) {
    wire_example_basic_type_bool_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_bytes_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[u8]>,
) {
    wire_example_basic_type_bytes_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_f32_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: f32,
) {
    wire_example_basic_type_f32_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_f64_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: f64,
) {
    wire_example_basic_type_f64_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i16_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: i16,
) {
    wire_example_basic_type_i16_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i32_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: i32,
) {
    wire_example_basic_type_i32_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i64_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: i64,
) {
    wire_example_basic_type_i64_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i8_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: i8,
) {
    wire_example_basic_type_i8_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_isize_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: isize,
) {
    wire_example_basic_type_isize_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_string_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: String,
) {
    wire_example_basic_type_string_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u16_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: u16,
) {
    wire_example_basic_type_u16_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u32_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: u32,
) {
    wire_example_basic_type_u32_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u64_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: u64,
) {
    wire_example_basic_type_u64_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u8_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: u8,
) {
    wire_example_basic_type_u8_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_usize_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: usize,
) {
    wire_example_basic_type_usize_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_general_enum_twin_normal_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_list_type_basic_general_enum_twin_normal_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_primitive_enum_twin_normal_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_list_type_basic_primitive_enum_twin_normal_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_struct_twin_normal_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_list_type_basic_struct_twin_normal_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_bool_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_list_type_bool_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_bytes_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_list_type_bytes_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_f32_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[f32]>,
) {
    wire_example_basic_list_type_f32_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_f64_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[f64]>,
) {
    wire_example_basic_list_type_f64_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i16_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[i16]>,
) {
    wire_example_basic_list_type_i16_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i32_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[i32]>,
) {
    wire_example_basic_list_type_i32_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i64_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[i64]>,
) {
    wire_example_basic_list_type_i64_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i8_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[i8]>,
) {
    wire_example_basic_list_type_i8_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_string_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_list_type_string_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u16_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[u16]>,
) {
    wire_example_basic_list_type_u16_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u32_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[u32]>,
) {
    wire_example_basic_list_type_u32_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u64_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[u64]>,
) {
    wire_example_basic_list_type_u64_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u8_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[u8]>,
) {
    wire_example_basic_list_type_u8_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_general_enum_twin_rust_async_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_list_type_basic_general_enum_twin_rust_async_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_twin_rust_async_impl(
        port_, arg,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_struct_twin_rust_async_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_list_type_basic_struct_twin_rust_async_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_bool_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_list_type_bool_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_bytes_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_list_type_bytes_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_f32_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[f32]>,
) {
    wire_example_basic_list_type_f32_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_f64_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[f64]>,
) {
    wire_example_basic_list_type_f64_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i16_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[i16]>,
) {
    wire_example_basic_list_type_i16_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i32_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[i32]>,
) {
    wire_example_basic_list_type_i32_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i64_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[i64]>,
) {
    wire_example_basic_list_type_i64_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i8_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[i8]>,
) {
    wire_example_basic_list_type_i8_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_string_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_list_type_string_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u16_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[u16]>,
) {
    wire_example_basic_list_type_u16_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u32_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[u32]>,
) {
    wire_example_basic_list_type_u32_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u64_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[u64]>,
) {
    wire_example_basic_list_type_u64_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u8_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[u8]>,
) {
    wire_example_basic_list_type_u8_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_bool_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_bool_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_bytes_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_bytes_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_f32_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_f32_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_f64_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_f64_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i16_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_i16_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i32_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_i32_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i64_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_i64_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i8_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_i8_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_string_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_string_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u16_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_u16_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u32_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_u32_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u64_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_u64_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u8_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_u8_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_general_enum_twin_sse_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_basic_general_enum_twin_sse_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_primitive_enum_twin_sse_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_basic_primitive_enum_twin_sse_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_struct_twin_sse_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_basic_struct_twin_sse_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_bool_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_bool_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_bytes_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_bytes_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_f32_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_f32_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_f64_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_f64_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i16_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_i16_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i32_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_i32_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i64_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_i64_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i8_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_i8_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_string_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_string_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u16_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_u16_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u32_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_u32_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u64_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_u64_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u8_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_list_type_u8_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_general_enum_twin_sync_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_basic_general_enum_twin_sync_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_primitive_enum_twin_sync_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_basic_primitive_enum_twin_sync_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_struct_twin_sync_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_basic_struct_twin_sync_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_bool_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_bool_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_bytes_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_bytes_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_f32_twin_sync(
    arg: Box<[f32]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_f32_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_f64_twin_sync(
    arg: Box<[f64]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_f64_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i16_twin_sync(
    arg: Box<[i16]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_i16_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i32_twin_sync(
    arg: Box<[i32]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_i32_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i64_twin_sync(
    arg: Box<[i64]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_i64_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i8_twin_sync(
    arg: Box<[i8]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_i8_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_string_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_string_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u16_twin_sync(
    arg: Box<[u16]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_u16_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u32_twin_sync(
    arg: Box<[u32]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_u32_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u64_twin_sync(
    arg: Box<[u64]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_u64_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u8_twin_sync(
    arg: Box<[u8]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_list_type_u8_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_basic_general_enum_twin_sync_sse_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_basic_struct_twin_sync_sse_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_basic_struct_twin_sync_sse_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_bool_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_bool_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_bytes_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_bytes_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_f32_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_f32_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_f64_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_f64_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i16_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_i16_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i32_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_i32_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i64_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_i64_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_i8_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_i8_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_string_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_string_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u16_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_u16_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u32_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_u32_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u64_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_u64_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_list_type_u8_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_list_type_u8_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_general_enum_twin_normal_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_basic_general_enum_twin_normal_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_primitive_enum_twin_normal_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_basic_primitive_enum_twin_normal_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_struct_twin_normal_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_basic_struct_twin_normal_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_bool_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_bool_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_bytes_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_bytes_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_f32_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_f32_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_f64_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_f64_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i16_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_i16_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i32_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_i32_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i64_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_i64_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i8_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_i8_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_isize_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_isize_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_string_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_string_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u16_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_u16_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u32_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_u32_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u64_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_u64_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u8_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_u8_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_usize_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_usize_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_general_enum_twin_rust_async_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_basic_general_enum_twin_rust_async_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_twin_rust_async_impl(
        port_, arg,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_struct_twin_rust_async_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_basic_struct_twin_rust_async_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_bool_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_bool_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_bytes_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_bytes_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_f32_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_f32_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_f64_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_f64_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i16_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_i16_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i32_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_i32_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i64_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_i64_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i8_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_i8_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_isize_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_isize_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_string_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_string_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u16_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_u16_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u32_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_u32_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u64_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_u64_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u8_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_u8_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_usize_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_map_type_usize_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_bool_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_bool_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_bytes_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_bytes_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_f32_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_f32_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_f64_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_f64_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i16_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_i16_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i32_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_i32_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i64_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_i64_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i8_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_i8_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_isize_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_isize_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_string_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_string_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u16_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_u16_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u32_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_u32_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u64_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_u64_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u8_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_u8_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_usize_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_usize_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_general_enum_twin_sse_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_basic_general_enum_twin_sse_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_primitive_enum_twin_sse_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_basic_primitive_enum_twin_sse_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_struct_twin_sse_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_basic_struct_twin_sse_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_bool_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_bool_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_bytes_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_bytes_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_f32_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_f32_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_f64_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_f64_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i16_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_i16_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i32_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_i32_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i64_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_i64_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i8_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_i8_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_isize_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_isize_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_string_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_string_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u16_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_u16_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u32_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_u32_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u64_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_u64_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u8_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_u8_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_usize_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_map_type_usize_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_general_enum_twin_sync_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_basic_general_enum_twin_sync_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_primitive_enum_twin_sync_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_basic_primitive_enum_twin_sync_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_struct_twin_sync_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_basic_struct_twin_sync_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_bool_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_bool_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_bytes_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_bytes_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_f32_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_f32_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_f64_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_f64_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i16_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_i16_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i32_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_i32_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i64_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_i64_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i8_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_i8_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_isize_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_isize_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_string_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_string_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u16_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_u16_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u32_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_u32_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u64_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_u64_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u8_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_u8_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_usize_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_map_type_usize_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_basic_general_enum_twin_sync_sse_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_basic_struct_twin_sync_sse_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_basic_struct_twin_sync_sse_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_bool_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_bool_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_bytes_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_bytes_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_f32_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_f32_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_f64_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_f64_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i16_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_i16_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i32_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_i32_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i64_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_i64_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_i8_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_i8_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_isize_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_isize_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_string_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_string_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u16_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_u16_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u32_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_u32_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u64_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_u64_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_u8_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_u8_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_map_type_usize_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_map_type_usize_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_general_enum_twin_normal_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_basic_general_enum_twin_normal_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_primitive_enum_twin_normal_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_basic_primitive_enum_twin_normal_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_struct_twin_normal_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_basic_struct_twin_normal_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_bool_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_bool_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_bytes_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Option<Box<[u8]>>,
) {
    wire_example_basic_optional_type_bytes_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_f32_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_f32_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_f64_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_f64_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i16_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_i16_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i32_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_i32_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i64_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_i64_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i8_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_i8_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_isize_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_isize_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_string_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Option<String>,
) {
    wire_example_basic_optional_type_string_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u16_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_u16_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u32_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_u32_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u64_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_u64_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u8_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_u8_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_usize_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_usize_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_general_enum_twin_rust_async_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_basic_general_enum_twin_rust_async_twin_rust_async_impl(
        port_, arg,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_twin_rust_async_impl(
        port_, arg,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_struct_twin_rust_async_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_basic_struct_twin_rust_async_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_bool_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_bool_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_bytes_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Option<Box<[u8]>>,
) {
    wire_example_basic_optional_type_bytes_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_f32_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_f32_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_f64_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_f64_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i16_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_i16_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i32_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_i32_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i64_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_i64_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i8_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_i8_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_isize_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_isize_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_string_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Option<String>,
) {
    wire_example_basic_optional_type_string_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u16_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_u16_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u32_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_u32_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u64_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_u64_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u8_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_u8_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_usize_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_optional_type_usize_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_bool_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_bool_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_bytes_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_bytes_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_f32_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_f32_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_f64_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_f64_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i16_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_i16_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i32_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_i32_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i64_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_i64_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i8_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_i8_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_isize_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_isize_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_string_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_string_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u16_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_u16_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u32_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_u32_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u64_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_u64_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u8_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_u8_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_usize_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_usize_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_general_enum_twin_sse_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_basic_general_enum_twin_sse_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_primitive_enum_twin_sse_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_basic_primitive_enum_twin_sse_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_struct_twin_sse_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_basic_struct_twin_sse_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_bool_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_bool_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_bytes_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_bytes_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_f32_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_f32_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_f64_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_f64_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i16_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_i16_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i32_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_i32_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i64_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_i64_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i8_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_i8_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_isize_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_isize_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_string_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_string_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u16_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_u16_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u32_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_u32_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u64_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_u64_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u8_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_u8_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_usize_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_optional_type_usize_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_general_enum_twin_sync_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_basic_general_enum_twin_sync_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_primitive_enum_twin_sync_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_basic_primitive_enum_twin_sync_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_struct_twin_sync_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_basic_struct_twin_sync_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_bool_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_bool_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_bytes_twin_sync(
    arg: Option<Box<[u8]>>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_bytes_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_f32_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_f32_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_f64_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_f64_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i16_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_i16_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i32_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_i32_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i64_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_i64_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i8_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_i8_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_isize_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_isize_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_string_twin_sync(
    arg: Option<String>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_string_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u16_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_u16_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u32_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_u32_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u64_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_u64_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u8_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_u8_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_usize_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_optional_type_usize_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_basic_general_enum_twin_sync_sse_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_basic_struct_twin_sync_sse_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_basic_struct_twin_sync_sse_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_bool_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_bool_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_bytes_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_bytes_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_f32_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_f32_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_f64_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_f64_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i16_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_i16_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i32_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_i32_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i64_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_i64_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_i8_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_i8_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_isize_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_isize_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_string_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_string_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u16_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_u16_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u32_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_u32_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u64_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_u64_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_u8_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_u8_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_optional_type_usize_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_optional_type_usize_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_general_enum_twin_rust_async_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_type_basic_general_enum_twin_rust_async_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: i32,
) {
    wire_example_basic_type_basic_primitive_enum_twin_rust_async_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_struct_twin_rust_async_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_example_basic_type_basic_struct_twin_rust_async_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_bool_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: bool,
) {
    wire_example_basic_type_bool_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_bytes_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[u8]>,
) {
    wire_example_basic_type_bytes_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_f32_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: f32,
) {
    wire_example_basic_type_f32_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_f64_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: f64,
) {
    wire_example_basic_type_f64_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i16_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: i16,
) {
    wire_example_basic_type_i16_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i32_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: i32,
) {
    wire_example_basic_type_i32_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i64_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: i64,
) {
    wire_example_basic_type_i64_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i8_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: i8,
) {
    wire_example_basic_type_i8_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_isize_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: isize,
) {
    wire_example_basic_type_isize_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_string_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: String,
) {
    wire_example_basic_type_string_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u16_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: u16,
) {
    wire_example_basic_type_u16_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u32_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: u32,
) {
    wire_example_basic_type_u32_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u64_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: u64,
) {
    wire_example_basic_type_u64_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u8_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: u8,
) {
    wire_example_basic_type_u8_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_usize_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: usize,
) {
    wire_example_basic_type_usize_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_type_bool_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_bool_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_bytes_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_bytes_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_f32_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_f32_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_f64_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_f64_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i16_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_i16_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i32_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_i32_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i64_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_i64_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i8_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_i8_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_isize_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_isize_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_string_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_string_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u16_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_u16_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u32_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_u32_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u64_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_u64_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u8_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_u8_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_usize_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_usize_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_general_enum_twin_sse_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_basic_general_enum_twin_sse_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_primitive_enum_twin_sse_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_basic_primitive_enum_twin_sse_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_struct_twin_sse_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_basic_struct_twin_sse_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_type_bool_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_bool_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_bytes_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_bytes_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_f32_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_f32_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_f64_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_f64_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i16_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_i16_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i32_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_i32_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i64_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_i64_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i8_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_i8_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_isize_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_isize_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_string_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_string_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u16_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_u16_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u32_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_u32_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u64_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_u64_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u8_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_u8_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_usize_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_example_basic_type_usize_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_general_enum_twin_sync_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_basic_general_enum_twin_sync_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_primitive_enum_twin_sync_twin_sync(
    arg: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_basic_primitive_enum_twin_sync_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_struct_twin_sync_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_basic_struct_twin_sync_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_bool_twin_sync(
    arg: bool,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_bool_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_bytes_twin_sync(
    arg: Box<[u8]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_bytes_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_f32_twin_sync(
    arg: f32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_f32_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_f64_twin_sync(
    arg: f64,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_f64_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i16_twin_sync(
    arg: i16,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_i16_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i32_twin_sync(
    arg: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_i32_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i64_twin_sync(
    arg: i64,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_i64_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i8_twin_sync(
    arg: i8,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_i8_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_isize_twin_sync(
    arg: isize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_isize_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_string_twin_sync(
    arg: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_string_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u16_twin_sync(
    arg: u16,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_u16_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u32_twin_sync(
    arg: u32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_u32_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u64_twin_sync(
    arg: u64,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_u64_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u8_twin_sync(
    arg: u8,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_u8_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_usize_twin_sync(
    arg: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_example_basic_type_usize_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_basic_general_enum_twin_sync_sse_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_type_basic_struct_twin_sync_sse_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_basic_struct_twin_sync_sse_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_example_basic_type_bool_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_bool_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_bytes_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_bytes_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_f32_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_f32_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_f64_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_f64_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i16_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_i16_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i32_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_i32_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i64_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_i64_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_i8_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_i8_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_isize_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_isize_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_string_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_string_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u16_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_u16_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u32_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_u32_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u64_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_u64_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_u8_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_u8_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_example_basic_type_usize_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_example_basic_type_usize_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_json_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    raw: String,
) {
    wire_benchmark_binary_tree_input_json_twin_normal_impl(port_, raw)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_protobuf_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    raw: Box<[u8]>,
) {
    wire_benchmark_binary_tree_input_protobuf_twin_normal_impl(port_, raw)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    tree: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_benchmark_binary_tree_input_twin_normal_impl(port_, tree)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_json_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    depth: i32,
) {
    wire_benchmark_binary_tree_output_json_twin_normal_impl(port_, depth)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_protobuf_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    depth: i32,
) {
    wire_benchmark_binary_tree_output_protobuf_twin_normal_impl(port_, depth)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    depth: i32,
) {
    wire_benchmark_binary_tree_output_twin_normal_impl(port_, depth)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_json_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    raw: String,
) {
    wire_benchmark_blob_input_json_twin_normal_impl(port_, raw)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_protobuf_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    raw: Box<[u8]>,
) {
    wire_benchmark_blob_input_protobuf_twin_normal_impl(port_, raw)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    blob: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_benchmark_blob_input_twin_normal_impl(port_, blob)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_json_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    size: i32,
) {
    wire_benchmark_blob_output_json_twin_normal_impl(port_, size)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_protobuf_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    size: i32,
) {
    wire_benchmark_blob_output_protobuf_twin_normal_impl(port_, size)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    size: i32,
) {
    wire_benchmark_blob_output_twin_normal_impl(port_, size)
}

#[wasm_bindgen]
pub fn wire_benchmark_input_bytes_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    bytes: Box<[u8]>,
) {
    wire_benchmark_input_bytes_twin_normal_impl(port_, bytes)
}

#[wasm_bindgen]
pub fn wire_benchmark_output_bytes_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    size: i32,
) {
    wire_benchmark_output_bytes_twin_normal_impl(port_, size)
}

#[wasm_bindgen]
pub fn wire_benchmark_void_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_benchmark_void_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_json_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    raw: String,
) {
    wire_benchmark_binary_tree_input_json_twin_rust_async_impl(port_, raw)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_protobuf_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    raw: Box<[u8]>,
) {
    wire_benchmark_binary_tree_input_protobuf_twin_rust_async_impl(port_, raw)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    tree: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_benchmark_binary_tree_input_twin_rust_async_impl(port_, tree)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_json_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    depth: i32,
) {
    wire_benchmark_binary_tree_output_json_twin_rust_async_impl(port_, depth)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_protobuf_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    depth: i32,
) {
    wire_benchmark_binary_tree_output_protobuf_twin_rust_async_impl(port_, depth)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    depth: i32,
) {
    wire_benchmark_binary_tree_output_twin_rust_async_impl(port_, depth)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_json_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    raw: String,
) {
    wire_benchmark_blob_input_json_twin_rust_async_impl(port_, raw)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_protobuf_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    raw: Box<[u8]>,
) {
    wire_benchmark_blob_input_protobuf_twin_rust_async_impl(port_, raw)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    blob: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_benchmark_blob_input_twin_rust_async_impl(port_, blob)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_json_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    size: i32,
) {
    wire_benchmark_blob_output_json_twin_rust_async_impl(port_, size)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_protobuf_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    size: i32,
) {
    wire_benchmark_blob_output_protobuf_twin_rust_async_impl(port_, size)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    size: i32,
) {
    wire_benchmark_blob_output_twin_rust_async_impl(port_, size)
}

#[wasm_bindgen]
pub fn wire_benchmark_input_bytes_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    bytes: Box<[u8]>,
) {
    wire_benchmark_input_bytes_twin_rust_async_impl(port_, bytes)
}

#[wasm_bindgen]
pub fn wire_benchmark_output_bytes_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    size: i32,
) {
    wire_benchmark_output_bytes_twin_rust_async_impl(port_, size)
}

#[wasm_bindgen]
pub fn wire_benchmark_void_twin_rust_async(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_benchmark_void_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_json_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_binary_tree_input_json_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_protobuf_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_binary_tree_input_protobuf_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_binary_tree_input_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_json_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_binary_tree_output_json_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_protobuf_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_binary_tree_output_protobuf_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_binary_tree_output_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_json_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_blob_input_json_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_protobuf_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_blob_input_protobuf_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_blob_input_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_json_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_blob_output_json_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_protobuf_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_blob_output_protobuf_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_blob_output_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_input_bytes_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_input_bytes_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_output_bytes_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_output_bytes_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_void_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_void_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_json_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_binary_tree_input_json_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_protobuf_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_binary_tree_input_protobuf_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_binary_tree_input_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_json_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_binary_tree_output_json_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_protobuf_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_binary_tree_output_protobuf_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_binary_tree_output_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_json_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_blob_input_json_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_protobuf_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_blob_input_protobuf_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_blob_input_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_json_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_blob_output_json_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_protobuf_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_blob_output_protobuf_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_blob_output_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_input_bytes_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_input_bytes_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_output_bytes_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_output_bytes_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_void_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_benchmark_void_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_json_twin_sync(
    raw: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_benchmark_binary_tree_input_json_twin_sync_impl(raw)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_protobuf_twin_sync(
    raw: Box<[u8]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_benchmark_binary_tree_input_protobuf_twin_sync_impl(raw)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_twin_sync(
    tree: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_benchmark_binary_tree_input_twin_sync_impl(tree)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_json_twin_sync(
    depth: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_benchmark_binary_tree_output_json_twin_sync_impl(depth)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_protobuf_twin_sync(
    depth: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_benchmark_binary_tree_output_protobuf_twin_sync_impl(depth)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_twin_sync(
    depth: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_benchmark_binary_tree_output_twin_sync_impl(depth)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_json_twin_sync(
    raw: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_benchmark_blob_input_json_twin_sync_impl(raw)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_protobuf_twin_sync(
    raw: Box<[u8]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_benchmark_blob_input_protobuf_twin_sync_impl(raw)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_twin_sync(
    blob: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_benchmark_blob_input_twin_sync_impl(blob)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_json_twin_sync(
    size: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_benchmark_blob_output_json_twin_sync_impl(size)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_protobuf_twin_sync(
    size: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_benchmark_blob_output_protobuf_twin_sync_impl(size)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_twin_sync(
    size: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_benchmark_blob_output_twin_sync_impl(size)
}

#[wasm_bindgen]
pub fn wire_benchmark_input_bytes_twin_sync(
    bytes: Box<[u8]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_benchmark_input_bytes_twin_sync_impl(bytes)
}

#[wasm_bindgen]
pub fn wire_benchmark_output_bytes_twin_sync(
    size: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_benchmark_output_bytes_twin_sync_impl(size)
}

#[wasm_bindgen]
pub fn wire_benchmark_void_twin_sync() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_benchmark_void_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_json_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_binary_tree_input_json_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_protobuf_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_binary_tree_input_protobuf_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_input_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_binary_tree_input_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_json_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_binary_tree_output_json_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_protobuf_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_binary_tree_output_protobuf_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_binary_tree_output_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_binary_tree_output_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_json_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_blob_input_json_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_protobuf_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_blob_input_protobuf_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_input_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_blob_input_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_json_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_blob_output_json_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_protobuf_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_blob_output_protobuf_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_blob_output_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_blob_output_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_input_bytes_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_input_bytes_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_output_bytes_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_output_bytes_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_benchmark_void_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_benchmark_void_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_datetime_local_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    d: i64,
) {
    wire_datetime_local_twin_rust_async_impl(port_, d)
}

#[wasm_bindgen]
pub fn wire_datetime_utc_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    d: i64,
) {
    wire_datetime_utc_twin_rust_async_impl(port_, d)
}

#[wasm_bindgen]
pub fn wire_duration_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    d: i64,
) {
    wire_duration_twin_rust_async_impl(port_, d)
}

#[wasm_bindgen]
pub fn wire_handle_durations_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    durations: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    since: i64,
) {
    wire_handle_durations_twin_rust_async_impl(port_, durations, since)
}

#[wasm_bindgen]
pub fn wire_handle_timestamps_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    timestamps: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    epoch: i64,
) {
    wire_handle_timestamps_twin_rust_async_impl(port_, timestamps, epoch)
}

#[wasm_bindgen]
pub fn wire_how_long_does_it_take_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    mine: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_how_long_does_it_take_twin_rust_async_impl(port_, mine)
}

#[wasm_bindgen]
pub fn wire_naivedatetime_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    d: i64,
) {
    wire_naivedatetime_twin_rust_async_impl(port_, d)
}

#[wasm_bindgen]
pub fn wire_optional_empty_datetime_utc_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    d: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_optional_empty_datetime_utc_twin_rust_async_impl(port_, d)
}

#[wasm_bindgen]
pub fn wire_test_chrono_twin_rust_async(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_test_chrono_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_precise_chrono_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_precise_chrono_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_datetime_local_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_datetime_local_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_datetime_utc_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_datetime_utc_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_duration_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_duration_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_durations_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_durations_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_timestamps_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_timestamps_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_how_long_does_it_take_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_how_long_does_it_take_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_naivedatetime_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_naivedatetime_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_optional_empty_datetime_utc_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_optional_empty_datetime_utc_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_chrono_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_chrono_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_precise_chrono_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_precise_chrono_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_datetime_local_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_datetime_local_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_datetime_utc_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_datetime_utc_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_duration_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_duration_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_durations_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_durations_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_timestamps_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_timestamps_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_how_long_does_it_take_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_how_long_does_it_take_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_naivedatetime_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_naivedatetime_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_optional_empty_datetime_utc_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_optional_empty_datetime_utc_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_chrono_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_chrono_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_precise_chrono_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_precise_chrono_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_datetime_local_twin_sync(
    d: i64,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_datetime_local_twin_sync_impl(d)
}

#[wasm_bindgen]
pub fn wire_datetime_utc_twin_sync(
    d: i64,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_datetime_utc_twin_sync_impl(d)
}

#[wasm_bindgen]
pub fn wire_duration_twin_sync(d: i64) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_duration_twin_sync_impl(d)
}

#[wasm_bindgen]
pub fn wire_handle_durations_twin_sync(
    durations: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    since: i64,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_durations_twin_sync_impl(durations, since)
}

#[wasm_bindgen]
pub fn wire_handle_timestamps_twin_sync(
    timestamps: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    epoch: i64,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_timestamps_twin_sync_impl(timestamps, epoch)
}

#[wasm_bindgen]
pub fn wire_how_long_does_it_take_twin_sync(
    mine: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_how_long_does_it_take_twin_sync_impl(mine)
}

#[wasm_bindgen]
pub fn wire_naivedatetime_twin_sync(
    d: i64,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_naivedatetime_twin_sync_impl(d)
}

#[wasm_bindgen]
pub fn wire_optional_empty_datetime_utc_twin_sync(
    d: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_optional_empty_datetime_utc_twin_sync_impl(d)
}

#[wasm_bindgen]
pub fn wire_test_chrono_twin_sync() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_chrono_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_test_precise_chrono_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_precise_chrono_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_datetime_local_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_datetime_local_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_datetime_utc_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_datetime_utc_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_duration_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_duration_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_durations_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_durations_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_timestamps_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_timestamps_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_how_long_does_it_take_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_how_long_does_it_take_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_naivedatetime_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_naivedatetime_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_optional_empty_datetime_utc_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_optional_empty_datetime_utc_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_chrono_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_chrono_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_precise_chrono_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_precise_chrono_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_async_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_function_with_comments_slash_star_star_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_function_with_comments_slash_star_star_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_function_with_comments_triple_slash_multi_line_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_function_with_comments_triple_slash_multi_line_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_function_with_comments_triple_slash_single_line_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_function_with_comments_triple_slash_single_line_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_function_with_comments_slash_star_star_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_function_with_comments_slash_star_star_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_function_with_comments_triple_slash_multi_line_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_function_with_comments_triple_slash_multi_line_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_function_with_comments_triple_slash_single_line_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_function_with_comments_triple_slash_single_line_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_StructWithCommentsTwinSse_instance_method_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_StructWithCommentsTwinSse_instance_method_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_StructWithCommentsTwinSse_static_method_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_StructWithCommentsTwinSse_static_method_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_function_with_comments_slash_star_star_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_function_with_comments_slash_star_star_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_function_with_comments_triple_slash_multi_line_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_function_with_comments_triple_slash_multi_line_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_function_with_comments_triple_slash_single_line_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_function_with_comments_triple_slash_single_line_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_StructWithCommentsTwinSync_instance_method_twin_sync(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_StructWithCommentsTwinSync_instance_method_twin_sync_impl(that)
}

#[wasm_bindgen]
pub fn wire_StructWithCommentsTwinSync_static_method_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_StructWithCommentsTwinSync_static_method_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_function_with_comments_slash_star_star_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_function_with_comments_slash_star_star_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_function_with_comments_triple_slash_multi_line_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_function_with_comments_triple_slash_multi_line_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_function_with_comments_triple_slash_single_line_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_function_with_comments_triple_slash_single_line_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_function_with_comments_slash_star_star_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_function_with_comments_slash_star_star_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_function_with_comments_triple_slash_multi_line_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_function_with_comments_triple_slash_multi_line_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_function_with_comments_triple_slash_single_line_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_function_with_comments_triple_slash_single_line_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_return_dart_dynamic_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_dart_dynamic_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_dart_dynamic_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_return_dart_dynamic_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_loopback_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_call_dart_loopback_twin_rust_async_impl(port_, callback)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_multi_times_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    num_times: i32,
) {
    wire_rust_call_dart_multi_times_twin_rust_async_impl(port_, callback, num_times)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_one_arg_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_call_dart_one_arg_twin_rust_async_impl(port_, callback)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_return_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_call_dart_return_twin_rust_async_impl(port_, callback)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_simple_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_call_dart_simple_twin_rust_async_impl(port_, callback)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_two_args_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_call_dart_two_args_twin_rust_async_impl(port_, callback)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    input: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_impl(port_, input, callback)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_with_dart_opaque_result_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    callback: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_impl(port_, callback)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_loopback_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_loopback_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_multi_times_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_multi_times_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_one_arg_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_one_arg_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_return_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_return_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_simple_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_simple_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_two_args_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_two_args_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_loopback_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_loopback_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_multi_times_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_multi_times_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_one_arg_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_one_arg_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_return_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_return_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_simple_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_simple_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_two_args_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_two_args_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_with_dart_opaque_arg_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_with_dart_opaque_arg_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_call_dart_with_dart_opaque_result_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_call_dart_with_dart_opaque_result_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_sync_accept_dart_opaque_twin_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_sync_accept_dart_opaque_twin_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_sync_loopback_twin_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_sync_loopback_twin_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_sync_option_dart_opaque_twin_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_sync_option_dart_opaque_twin_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_sync_option_loopback_twin_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_sync_option_loopback_twin_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_unwrap_dart_opaque_twin_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_unwrap_dart_opaque_twin_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_async_accept_dart_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_async_accept_dart_opaque_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_clone_dart_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_clone_dart_opaque_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_create_enum_dart_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_create_enum_dart_opaque_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_create_nested_dart_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque1: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    opaque2: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_create_nested_dart_opaque_twin_rust_async_impl(port_, opaque1, opaque2)
}

#[wasm_bindgen]
pub fn wire_drop_static_dart_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: i32,
) {
    wire_drop_static_dart_opaque_twin_rust_async_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_get_enum_dart_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_get_enum_dart_opaque_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_get_nested_dart_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_get_nested_dart_opaque_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_array_get_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_loop_back_array_get_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_array_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_loop_back_array_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_option_get_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_loop_back_option_get_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_option_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_loop_back_option_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_loop_back_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_vec_get_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_loop_back_vec_get_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_vec_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_loop_back_vec_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_panic_unwrap_dart_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_panic_unwrap_dart_opaque_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_set_static_dart_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: i32,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_set_static_dart_opaque_twin_rust_async_impl(port_, id, opaque)
}

#[wasm_bindgen]
pub fn wire_async_accept_dart_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_async_accept_dart_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_clone_dart_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_clone_dart_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_enum_dart_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_enum_dart_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_nested_dart_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_nested_dart_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_drop_static_dart_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_drop_static_dart_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_enum_dart_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_enum_dart_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_nested_dart_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_nested_dart_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_array_get_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_loop_back_array_get_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_array_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_loop_back_array_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_option_get_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_loop_back_option_get_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_option_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_loop_back_option_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_loop_back_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_vec_get_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_loop_back_vec_get_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_vec_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_loop_back_vec_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_panic_unwrap_dart_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_panic_unwrap_dart_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_set_static_dart_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_set_static_dart_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_async_accept_dart_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_async_accept_dart_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_clone_dart_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_clone_dart_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_enum_dart_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_enum_dart_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_nested_dart_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_nested_dart_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_drop_static_dart_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_drop_static_dart_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_enum_dart_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_enum_dart_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_nested_dart_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_nested_dart_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_array_get_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_loop_back_array_get_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_array_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_loop_back_array_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_option_get_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_loop_back_option_get_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_option_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_loop_back_option_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_loop_back_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_vec_get_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_loop_back_vec_get_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_vec_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_loop_back_vec_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_panic_unwrap_dart_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_panic_unwrap_dart_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_set_static_dart_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_set_static_dart_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_async_accept_dart_opaque_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_async_accept_dart_opaque_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_clone_dart_opaque_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_clone_dart_opaque_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_create_enum_dart_opaque_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_create_enum_dart_opaque_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_create_nested_dart_opaque_twin_sync(
    opaque1: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    opaque2: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_create_nested_dart_opaque_twin_sync_impl(opaque1, opaque2)
}

#[wasm_bindgen]
pub fn wire_drop_static_dart_opaque_twin_sync(
    id: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_drop_static_dart_opaque_twin_sync_impl(id)
}

#[wasm_bindgen]
pub fn wire_get_enum_dart_opaque_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_get_enum_dart_opaque_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_get_nested_dart_opaque_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_get_nested_dart_opaque_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_array_get_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_loop_back_array_get_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_array_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_loop_back_array_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_option_get_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_loop_back_option_get_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_option_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_loop_back_option_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_loop_back_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_vec_get_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_loop_back_vec_get_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_loop_back_vec_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_loop_back_vec_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_panic_unwrap_dart_opaque_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_panic_unwrap_dart_opaque_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_set_static_dart_opaque_twin_sync(
    id: i32,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_set_static_dart_opaque_twin_sync_impl(id, opaque)
}

#[wasm_bindgen]
pub fn wire_async_accept_dart_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_async_accept_dart_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_clone_dart_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_clone_dart_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_enum_dart_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_create_enum_dart_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_nested_dart_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_create_nested_dart_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_drop_static_dart_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_drop_static_dart_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_enum_dart_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_get_enum_dart_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_nested_dart_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_get_nested_dart_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_array_get_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_loop_back_array_get_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_array_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_loop_back_array_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_option_get_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_loop_back_option_get_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_option_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_loop_back_option_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_loop_back_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_vec_get_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_loop_back_vec_get_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_loop_back_vec_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_loop_back_vec_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_panic_unwrap_dart_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_panic_unwrap_dart_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_set_static_dart_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_set_static_dart_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinRustAsync_create_stream_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_DroppableTwinRustAsync_create_stream_twin_rust_async_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinRustAsync_get_drop_count_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_DroppableTwinRustAsync_get_drop_count_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinRustAsync_new_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_DroppableTwinRustAsync_new_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinRustAsync_simple_method_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_DroppableTwinRustAsync_simple_method_twin_rust_async_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinRustAsyncSse_create_stream_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_DroppableTwinRustAsyncSse_create_stream_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_DroppableTwinRustAsyncSse_get_drop_count_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_DroppableTwinRustAsyncSse_get_drop_count_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_DroppableTwinRustAsyncSse_new_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_DroppableTwinRustAsyncSse_new_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_DroppableTwinRustAsyncSse_simple_method_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_DroppableTwinRustAsyncSse_simple_method_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_DroppableTwinSse_create_stream_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_DroppableTwinSse_create_stream_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinSse_get_drop_count_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_DroppableTwinSse_get_drop_count_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinSse_new_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_DroppableTwinSse_new_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinSse_simple_method_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_DroppableTwinSse_simple_method_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinSync_create_stream_twin_sync(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_DroppableTwinSync_create_stream_twin_sync_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinSync_get_drop_count_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_DroppableTwinSync_get_drop_count_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_DroppableTwinSync_new_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_DroppableTwinSync_new_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_DroppableTwinSync_simple_method_twin_sync(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_DroppableTwinSync_simple_method_twin_sync_impl(that)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinSyncSse_create_stream_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_DroppableTwinSyncSse_create_stream_twin_sync_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_DroppableTwinSyncSse_get_drop_count_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_DroppableTwinSyncSse_get_drop_count_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinSyncSse_new_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_DroppableTwinSyncSse_new_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_DroppableTwinSyncSse_simple_method_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_DroppableTwinSyncSse_simple_method_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_enum_simple_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: i32,
) {
    wire_func_enum_simple_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_discriminant_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: i32,
) {
    wire_func_enum_with_discriminant_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_mixed_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_enum_with_item_mixed_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_enum_with_item_struct_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_tuple_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_enum_with_item_tuple_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_handle_enum_parameter_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    weekday: i32,
) {
    wire_handle_enum_parameter_twin_rust_async_impl(port_, weekday)
}

#[wasm_bindgen]
pub fn wire_handle_enum_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    val: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_enum_struct_twin_rust_async_impl(port_, val)
}

#[wasm_bindgen]
pub fn wire_handle_return_enum_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    input: String,
) {
    wire_handle_return_enum_twin_rust_async_impl(port_, input)
}

#[wasm_bindgen]
pub fn wire_multiply_by_ten_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    measure: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_multiply_by_ten_twin_rust_async_impl(port_, measure)
}

#[wasm_bindgen]
pub fn wire_print_note_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    note: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_print_note_twin_rust_async_impl(port_, note)
}

#[wasm_bindgen]
pub fn wire_func_enum_simple_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_enum_simple_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_discriminant_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_enum_with_discriminant_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_mixed_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_enum_with_item_mixed_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_enum_with_item_struct_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_tuple_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_enum_with_item_tuple_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_enum_parameter_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_enum_parameter_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_enum_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_enum_struct_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_return_enum_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_return_enum_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_multiply_by_ten_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_multiply_by_ten_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_print_note_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_print_note_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_enum_simple_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_enum_simple_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_discriminant_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_enum_with_discriminant_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_mixed_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_enum_with_item_mixed_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_enum_with_item_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_tuple_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_enum_with_item_tuple_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_enum_parameter_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_enum_parameter_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_enum_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_enum_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_return_enum_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_return_enum_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_multiply_by_ten_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_multiply_by_ten_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_print_note_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_print_note_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_enum_simple_twin_sync(
    arg: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_enum_simple_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_discriminant_twin_sync(
    arg: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_enum_with_discriminant_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_mixed_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_enum_with_item_mixed_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_struct_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_enum_with_item_struct_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_tuple_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_enum_with_item_tuple_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_handle_enum_parameter_twin_sync(
    weekday: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_enum_parameter_twin_sync_impl(weekday)
}

#[wasm_bindgen]
pub fn wire_handle_enum_struct_twin_sync(
    val: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_enum_struct_twin_sync_impl(val)
}

#[wasm_bindgen]
pub fn wire_handle_return_enum_twin_sync(
    input: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_return_enum_twin_sync_impl(input)
}

#[wasm_bindgen]
pub fn wire_multiply_by_ten_twin_sync(
    measure: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_multiply_by_ten_twin_sync_impl(measure)
}

#[wasm_bindgen]
pub fn wire_print_note_twin_sync(
    note: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_print_note_twin_sync_impl(note)
}

#[wasm_bindgen]
pub fn wire_func_enum_simple_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_enum_simple_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_discriminant_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_enum_with_discriminant_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_mixed_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_enum_with_item_mixed_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_enum_with_item_struct_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_enum_with_item_tuple_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_enum_with_item_tuple_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_enum_parameter_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_enum_parameter_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_enum_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_enum_struct_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_return_enum_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_return_enum_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_multiply_by_ten_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_multiply_by_ten_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_print_note_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_print_note_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_EventTwinRustAsync_as_string_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_EventTwinRustAsync_as_string_twin_rust_async_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_close_event_listener_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_close_event_listener_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_create_event_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    address: String,
    payload: String,
) {
    wire_create_event_twin_rust_async_impl(port_, address, payload)
}

#[wasm_bindgen]
pub fn wire_register_event_listener_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_register_event_listener_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_EventTwinRustAsyncSse_as_string_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_EventTwinRustAsyncSse_as_string_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_close_event_listener_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_close_event_listener_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_event_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_event_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_register_event_listener_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_register_event_listener_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_EventTwinSse_as_string_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_EventTwinSse_as_string_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_close_event_listener_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_close_event_listener_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_event_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_event_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_register_event_listener_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_register_event_listener_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinRustAsync_new_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    message: String,
) {
    wire_CustomStructTwinRustAsync_new_twin_rust_async_impl(port_, message)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_async_impl(
        port_, that,
    )
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_async_impl(
        port_, that,
    )
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinRustAsync_new_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    value: u32,
) {
    wire_SomeStructTwinRustAsync_new_twin_rust_async_impl(port_, value)
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_async_impl(
        port_, that,
    )
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_async_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_panic_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_custom_enum_error_panic_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_return_error_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_custom_enum_error_return_error_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_return_ok_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: u32,
) {
    wire_custom_enum_error_return_ok_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_custom_nested_error_return_error_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_custom_nested_error_return_error_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_custom_struct_error_return_error_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_custom_struct_error_return_error_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_return_error_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_func_return_error_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_func_type_fallible_panic_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_func_type_fallible_panic_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_func_type_infallible_panic_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_func_type_infallible_panic_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_panic_with_custom_result_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_panic_with_custom_result_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_1_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_custom_nested_error_1_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_1_variant1_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_custom_nested_error_1_variant1_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_2_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_custom_nested_error_2_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_custom_struct_error_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_custom_struct_error_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_custom_struct_ok_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_custom_struct_ok_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_err_custom_error_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_err_custom_error_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_return_error_variant_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    variant: u32,
) {
    wire_return_error_variant_twin_rust_async_impl(port_, variant)
}

#[wasm_bindgen]
pub fn wire_return_ok_custom_error_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_return_ok_custom_error_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_stream_sink_throw_anyhow_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_stream_sink_throw_anyhow_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_throw_anyhow_twin_rust_async(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_throw_anyhow_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_panic_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_custom_enum_error_panic_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_return_error_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_custom_enum_error_return_error_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_return_ok_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_custom_enum_error_return_ok_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_custom_nested_error_return_error_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_custom_nested_error_return_error_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_custom_struct_error_return_error_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_custom_struct_error_return_error_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_func_return_error_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_return_error_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_type_fallible_panic_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_type_fallible_panic_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_type_infallible_panic_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_type_infallible_panic_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_panic_with_custom_result_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_panic_with_custom_result_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_1_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_custom_nested_error_1_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_1_variant1_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_custom_nested_error_1_variant1_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_2_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_custom_nested_error_2_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_return_custom_struct_error_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_custom_struct_error_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_custom_struct_ok_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_custom_struct_ok_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_err_custom_error_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_err_custom_error_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_error_variant_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_error_variant_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_ok_custom_error_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_ok_custom_error_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_stream_sink_throw_anyhow_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_stream_sink_throw_anyhow_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_throw_anyhow_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_throw_anyhow_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinSse_new_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_CustomStructTwinSse_new_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinSse_static_return_custom_struct_error_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_CustomStructTwinSse_static_return_custom_struct_error_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinSse_new_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SomeStructTwinSse_new_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinSse_static_return_err_custom_error_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SomeStructTwinSse_static_return_err_custom_error_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinSse_static_return_ok_custom_error_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SomeStructTwinSse_static_return_ok_custom_error_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_panic_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_custom_enum_error_panic_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_return_error_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_custom_enum_error_return_error_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_return_ok_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_custom_enum_error_return_ok_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_custom_nested_error_return_error_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_custom_nested_error_return_error_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_custom_struct_error_return_error_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_custom_struct_error_return_error_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_return_error_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_return_error_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_type_fallible_panic_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_type_fallible_panic_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_type_infallible_panic_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_type_infallible_panic_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_panic_with_custom_result_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_panic_with_custom_result_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_1_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_custom_nested_error_1_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_1_variant1_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_custom_nested_error_1_variant1_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_2_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_custom_nested_error_2_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_custom_struct_error_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_custom_struct_error_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_custom_struct_ok_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_custom_struct_ok_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_err_custom_error_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_err_custom_error_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_error_variant_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_error_variant_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_ok_custom_error_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_return_ok_custom_error_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_stream_sink_throw_anyhow_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_stream_sink_throw_anyhow_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_throw_anyhow_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_throw_anyhow_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinSync_new_twin_sync(
    message: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_CustomStructTwinSync_new_twin_sync_impl(message)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_sync(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_sync_impl(that)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_sync(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_sync_impl(that)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinSync_static_return_custom_struct_error_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_CustomStructTwinSync_static_return_custom_struct_error_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinSync_new_twin_sync(
    value: u32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_SomeStructTwinSync_new_twin_sync_impl(value)
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_sync(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_sync_impl(that)
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_sync(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_sync_impl(that)
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinSync_static_return_err_custom_error_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_SomeStructTwinSync_static_return_err_custom_error_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinSync_static_return_ok_custom_error_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_SomeStructTwinSync_static_return_ok_custom_error_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_panic_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_custom_enum_error_panic_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_return_error_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_custom_enum_error_return_error_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_return_ok_twin_sync(
    arg: u32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_custom_enum_error_return_ok_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_custom_nested_error_return_error_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_custom_nested_error_return_error_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_custom_struct_error_return_error_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_custom_struct_error_return_error_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_return_error_twin_sync() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco
{
    wire_func_return_error_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_func_type_fallible_panic_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_type_fallible_panic_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_func_type_infallible_panic_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_type_infallible_panic_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_panic_with_custom_result_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_panic_with_custom_result_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_1_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_return_custom_nested_error_1_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_1_variant1_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_return_custom_nested_error_1_variant1_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_2_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_return_custom_nested_error_2_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_return_custom_struct_error_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_return_custom_struct_error_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_return_custom_struct_ok_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_return_custom_struct_ok_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_return_err_custom_error_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_return_err_custom_error_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_return_error_variant_twin_sync(
    variant: u32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_return_error_variant_twin_sync_impl(variant)
}

#[wasm_bindgen]
pub fn wire_return_ok_custom_error_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_return_ok_custom_error_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_stream_sink_throw_anyhow_twin_sync(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_stream_sink_throw_anyhow_twin_sync_impl(port_)
}

#[wasm_bindgen]
pub fn wire_throw_anyhow_twin_sync() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_throw_anyhow_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinSyncSse_new_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_CustomStructTwinSyncSse_new_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinSyncSse_new_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_SomeStructTwinSyncSse_new_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_panic_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_custom_enum_error_panic_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_return_error_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_custom_enum_error_return_error_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_custom_enum_error_return_ok_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_custom_enum_error_return_ok_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_custom_nested_error_return_error_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_custom_nested_error_return_error_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_custom_struct_error_return_error_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_custom_struct_error_return_error_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_return_error_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_return_error_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_type_fallible_panic_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_type_fallible_panic_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_type_infallible_panic_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_type_infallible_panic_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_panic_with_custom_result_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_panic_with_custom_result_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_1_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_return_custom_nested_error_1_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_1_variant1_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_return_custom_nested_error_1_variant1_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_custom_nested_error_2_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_return_custom_nested_error_2_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_custom_struct_error_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_return_custom_struct_error_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_custom_struct_ok_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_return_custom_struct_ok_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_err_custom_error_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_return_err_custom_error_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_error_variant_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_return_error_variant_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_return_ok_custom_error_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_return_ok_custom_error_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_stream_sink_throw_anyhow_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_stream_sink_throw_anyhow_twin_sync_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_throw_anyhow_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_throw_anyhow_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_call_new_module_system_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_call_new_module_system_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_call_old_module_system_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_call_old_module_system_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_use_imported_enum_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    my_enum: i32,
) {
    wire_use_imported_enum_twin_rust_async_impl(port_, my_enum)
}

#[wasm_bindgen]
pub fn wire_use_imported_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    my_struct: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_use_imported_struct_twin_rust_async_impl(port_, my_struct)
}

#[wasm_bindgen]
pub fn wire_call_new_module_system_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_call_new_module_system_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_call_old_module_system_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_call_old_module_system_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_use_imported_enum_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_use_imported_enum_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_use_imported_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_use_imported_struct_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_call_new_module_system_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_call_new_module_system_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_call_old_module_system_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_call_old_module_system_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_use_imported_enum_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_use_imported_enum_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_use_imported_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_use_imported_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_call_new_module_system_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_call_new_module_system_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_call_old_module_system_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_call_old_module_system_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_use_imported_enum_twin_sync(
    my_enum: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_use_imported_enum_twin_sync_impl(my_enum)
}

#[wasm_bindgen]
pub fn wire_use_imported_struct_twin_sync(
    my_struct: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_use_imported_struct_twin_sync_impl(my_struct)
}

#[wasm_bindgen]
pub fn wire_call_new_module_system_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_call_new_module_system_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_call_old_module_system_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_call_old_module_system_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_use_imported_enum_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_use_imported_enum_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_use_imported_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_use_imported_struct_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_i32_i32_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_hash_map_i32_i32_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_bytes_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_hash_map_string_bytes_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_complex_enum_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_hash_map_string_complex_enum_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_simple_enum_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_hash_map_string_simple_enum_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_string_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_hash_map_string_string_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_hash_map_string_struct_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_set_i32_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: Box<[i32]>,
) {
    wire_func_hash_set_i32_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_set_string_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_hash_set_string_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_i32_i32_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_map_i32_i32_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_bytes_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_map_string_bytes_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_complex_enum_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_map_string_complex_enum_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_simple_enum_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_map_string_simple_enum_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_string_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_map_string_string_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_map_string_struct_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_set_i32_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_set_i32_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_set_string_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_set_string_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_i32_i32_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_map_i32_i32_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_bytes_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_map_string_bytes_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_complex_enum_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_map_string_complex_enum_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_simple_enum_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_map_string_simple_enum_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_string_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_map_string_string_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_map_string_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_set_i32_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_set_i32_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_set_string_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_hash_set_string_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_i32_i32_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_hash_map_i32_i32_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_bytes_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_hash_map_string_bytes_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_complex_enum_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_hash_map_string_complex_enum_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_simple_enum_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_hash_map_string_simple_enum_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_string_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_hash_map_string_string_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_struct_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_hash_map_string_struct_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_set_i32_twin_sync(
    arg: Box<[i32]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_hash_set_i32_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_set_string_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_hash_set_string_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_i32_i32_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_hash_map_i32_i32_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_bytes_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_hash_map_string_bytes_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_complex_enum_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_hash_map_string_complex_enum_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_simple_enum_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_hash_map_string_simple_enum_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_string_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_hash_map_string_string_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_map_string_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_hash_map_string_struct_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_set_i32_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_hash_set_i32_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_hash_set_string_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_hash_set_string_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: String,
    b: String,
) {
    wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_async_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: String,
) {
    wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_async_impl(port_, that, b)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_async_impl(
        port_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    key: u32,
    max: u32,
) {
    wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_async_impl(
        port_, key, max,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_async_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    key: u32,
    max: u32,
) {
    wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_async_impl(
        port_, that, key, max,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsync_new_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: String,
) {
    wire_ConcatenateWithTwinRustAsync_new_twin_rust_async_impl(port_, a)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsync_simple_getter_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_ConcatenateWithTwinRustAsync_simple_getter_twin_rust_async_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_MyCallableTwinRustAsync_call(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    two: String,
) {
    wire_MyCallableTwinRustAsync_call_impl(port_, that, two)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinRustAsync_arg_self_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_SimpleStructTwinRustAsync_arg_self_twin_rust_async_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinRustAsync_return_self_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    one: String,
) {
    wire_SimpleStructTwinRustAsync_return_self_twin_rust_async_impl(port_, one)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinRustAsync_vec_self_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_SimpleStructTwinRustAsync_vec_self_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_SumWithTwinRustAsync_sum_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    y: u32,
    z: u32,
) {
    wire_SumWithTwinRustAsync_sum_twin_rust_async_impl(port_, that, y, z)
}

#[wasm_bindgen]
pub fn wire_get_sum_array_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: u32,
    b: u32,
    c: u32,
) {
    wire_get_sum_array_twin_rust_async_impl(port_, a, b, c)
}

#[wasm_bindgen]
pub fn wire_get_sum_struct_twin_rust_async(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_get_sum_struct_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinRustAsyncSse_simple_getter_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinRustAsyncSse_simple_getter_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_MyCallableTwinRustAsyncSse_call(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_MyCallableTwinRustAsyncSse_call_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinRustAsyncSse_arg_self_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SimpleStructTwinRustAsyncSse_arg_self_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinRustAsyncSse_return_self_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SimpleStructTwinRustAsyncSse_return_self_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinRustAsyncSse_vec_self_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SimpleStructTwinRustAsyncSse_vec_self_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_sum_array_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_sum_array_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_sum_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_sum_struct_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSse_concatenate_static_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinSse_concatenate_static_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSse_concatenate_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinSse_concatenate_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSse_new_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinSse_new_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSse_simple_getter_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinSse_simple_getter_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_MyCallableTwinSse_call(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_MyCallableTwinSse_call_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinSse_arg_self_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SimpleStructTwinSse_arg_self_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinSse_return_self_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SimpleStructTwinSse_return_self_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinSse_vec_self_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SimpleStructTwinSse_vec_self_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_SumWithTwinSse_sum_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_SumWithTwinSse_sum_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_sum_array_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_sum_array_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_sum_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_sum_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSync_concatenate_static_twin_sync(
    a: String,
    b: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_ConcatenateWithTwinSync_concatenate_static_twin_sync_impl(a, b)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSync_concatenate_twin_sync(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_ConcatenateWithTwinSync_concatenate_twin_sync_impl(that, b)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_sync(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_sync_impl(port_)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_sync(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    key: u32,
    max: u32,
) {
    wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_sync_impl(port_, key, max)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_sync(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_sync_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_sync(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    key: u32,
    max: u32,
) {
    wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_sync_impl(port_, that, key, max)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSync_new_twin_sync(
    a: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_ConcatenateWithTwinSync_new_twin_sync_impl(a)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSync_simple_getter_twin_sync(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_ConcatenateWithTwinSync_simple_getter_twin_sync_impl(that)
}

#[wasm_bindgen]
pub fn wire_MyCallableTwinSync_call(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    two: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_MyCallableTwinSync_call_impl(that, two)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinSync_arg_self_twin_sync(
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_SimpleStructTwinSync_arg_self_twin_sync_impl(a, b)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinSync_return_self_twin_sync(
    one: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_SimpleStructTwinSync_return_self_twin_sync_impl(one)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinSync_vec_self_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_SimpleStructTwinSync_vec_self_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_SumWithTwinSync_sum_twin_sync(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    y: u32,
    z: u32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_SumWithTwinSync_sum_twin_sync_impl(that, y, z)
}

#[wasm_bindgen]
pub fn wire_get_sum_array_twin_sync(
    a: u32,
    b: u32,
    c: u32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_get_sum_array_twin_sync_impl(a, b, c)
}

#[wasm_bindgen]
pub fn wire_get_sum_struct_twin_sync() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_get_sum_struct_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSyncSse_new_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_ConcatenateWithTwinSyncSse_new_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_ConcatenateWithTwinSyncSse_simple_getter_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_ConcatenateWithTwinSyncSse_simple_getter_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_MyCallableTwinSyncSse_call(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_MyCallableTwinSyncSse_call_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinSyncSse_arg_self_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_SimpleStructTwinSyncSse_arg_self_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinSyncSse_return_self_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_SimpleStructTwinSyncSse_return_self_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_SimpleStructTwinSyncSse_vec_self_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_SimpleStructTwinSyncSse_vec_self_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_SumWithTwinSyncSse_sum_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_SumWithTwinSyncSse_sum_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_sum_array_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_get_sum_array_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_sum_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_get_sum_struct_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_app_settings_stream_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_app_settings_stream_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_app_settings_vec_stream_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_app_settings_vec_stream_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_first_number_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    nums: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_first_number_twin_rust_async_impl(port_, nums)
}

#[wasm_bindgen]
pub fn wire_first_sequence_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    seqs: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_first_sequence_twin_rust_async_impl(port_, seqs)
}

#[wasm_bindgen]
pub fn wire_get_app_settings_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_get_app_settings_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_get_fallible_app_settings_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_get_fallible_app_settings_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_get_message_twin_rust_async(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_get_message_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_is_app_embedded_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    app_settings: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_is_app_embedded_twin_rust_async_impl(port_, app_settings)
}

#[wasm_bindgen]
pub fn wire_mirror_array_enum_stream_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_array_enum_stream_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_enum_stream_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_enum_stream_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_map_enum_stream_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_map_enum_stream_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_option_enum_stream_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_option_enum_stream_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_set_enum_stream_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_set_enum_stream_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_struct_stream_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_struct_stream_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_tuple_stream_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_tuple_stream_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_vec_enum_stream_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_vec_enum_stream_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_repeat_number_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    num: i32,
    times: usize,
) {
    wire_repeat_number_twin_rust_async_impl(port_, num, times)
}

#[wasm_bindgen]
pub fn wire_repeat_sequence_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    seq: i32,
    times: usize,
) {
    wire_repeat_sequence_twin_rust_async_impl(port_, seq, times)
}

#[wasm_bindgen]
pub fn wire_test_contains_mirrored_sub_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_contains_mirrored_sub_struct_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_fallible_of_raw_string_mirrored_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_fallible_of_raw_string_mirrored_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_hashmap_with_mirrored_value_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_hashmap_with_mirrored_value_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_list_of_nested_enums_mirrored_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_list_of_nested_enums_mirrored_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_list_of_raw_nested_string_mirrored_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_nested_raw_string_mirrored_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_nested_raw_string_mirrored_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_raw_string_enum_mirrored_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    nested: bool,
) {
    wire_test_raw_string_enum_mirrored_twin_rust_async_impl(port_, nested)
}

#[wasm_bindgen]
pub fn wire_test_raw_string_mirrored_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_raw_string_mirrored_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_app_settings_stream_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_app_settings_stream_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_app_settings_vec_stream_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_app_settings_vec_stream_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_first_number_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_first_number_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_first_sequence_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_first_sequence_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_app_settings_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_app_settings_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_fallible_app_settings_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_fallible_app_settings_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_message_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_message_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_is_app_embedded_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_is_app_embedded_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_array_enum_stream_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_array_enum_stream_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_enum_stream_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_enum_stream_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_map_enum_stream_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_map_enum_stream_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_option_enum_stream_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_option_enum_stream_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_set_enum_stream_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_set_enum_stream_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_struct_stream_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_struct_stream_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_tuple_stream_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_tuple_stream_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_vec_enum_stream_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_vec_enum_stream_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_repeat_number_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_repeat_number_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_repeat_sequence_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_repeat_sequence_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_contains_mirrored_sub_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_contains_mirrored_sub_struct_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_test_fallible_of_raw_string_mirrored_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_fallible_of_raw_string_mirrored_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_test_hashmap_with_mirrored_value_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_hashmap_with_mirrored_value_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_test_list_of_nested_enums_mirrored_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_list_of_nested_enums_mirrored_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_test_nested_raw_string_mirrored_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_nested_raw_string_mirrored_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_test_raw_string_enum_mirrored_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_raw_string_enum_mirrored_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_test_raw_string_mirrored_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_raw_string_mirrored_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_app_settings_stream_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_app_settings_stream_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_app_settings_vec_stream_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_app_settings_vec_stream_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_first_number_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_first_number_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_first_sequence_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_first_sequence_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_app_settings_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_app_settings_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_fallible_app_settings_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_fallible_app_settings_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_message_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_get_message_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_is_app_embedded_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_is_app_embedded_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_array_enum_stream_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_array_enum_stream_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_enum_stream_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_enum_stream_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_map_enum_stream_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_map_enum_stream_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_option_enum_stream_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_option_enum_stream_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_set_enum_stream_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_set_enum_stream_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_struct_stream_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_struct_stream_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_tuple_stream_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_tuple_stream_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_vec_enum_stream_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_vec_enum_stream_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_repeat_number_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_repeat_number_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_repeat_sequence_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_repeat_sequence_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_contains_mirrored_sub_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_contains_mirrored_sub_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_fallible_of_raw_string_mirrored_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_fallible_of_raw_string_mirrored_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_hashmap_with_mirrored_value_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_hashmap_with_mirrored_value_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_list_of_nested_enums_mirrored_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_list_of_nested_enums_mirrored_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_list_of_raw_nested_string_mirrored_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_list_of_raw_nested_string_mirrored_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_test_nested_raw_string_mirrored_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_nested_raw_string_mirrored_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_raw_string_enum_mirrored_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_raw_string_enum_mirrored_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_raw_string_mirrored_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_raw_string_mirrored_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_app_settings_stream_twin_sync(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_app_settings_stream_twin_sync_impl(port_)
}

#[wasm_bindgen]
pub fn wire_app_settings_vec_stream_twin_sync(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_app_settings_vec_stream_twin_sync_impl(port_)
}

#[wasm_bindgen]
pub fn wire_first_number_twin_sync(
    nums: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_first_number_twin_sync_impl(nums)
}

#[wasm_bindgen]
pub fn wire_first_sequence_twin_sync(
    seqs: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_first_sequence_twin_sync_impl(seqs)
}

#[wasm_bindgen]
pub fn wire_get_app_settings_twin_sync() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco
{
    wire_get_app_settings_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_get_fallible_app_settings_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_get_fallible_app_settings_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_get_message_twin_sync() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_get_message_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_is_app_embedded_twin_sync(
    app_settings: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_is_app_embedded_twin_sync_impl(app_settings)
}

#[wasm_bindgen]
pub fn wire_mirror_array_enum_stream_twin_sync(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_array_enum_stream_twin_sync_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_enum_stream_twin_sync(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_mirror_enum_stream_twin_sync_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_map_enum_stream_twin_sync(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_map_enum_stream_twin_sync_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_option_enum_stream_twin_sync(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_option_enum_stream_twin_sync_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_set_enum_stream_twin_sync(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_set_enum_stream_twin_sync_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_struct_stream_twin_sync(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_mirror_struct_stream_twin_sync_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_tuple_stream_twin_sync(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_mirror_tuple_stream_twin_sync_impl(port_)
}

#[wasm_bindgen]
pub fn wire_mirror_vec_enum_stream_twin_sync(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_mirror_vec_enum_stream_twin_sync_impl(port_)
}

#[wasm_bindgen]
pub fn wire_repeat_number_twin_sync(
    num: i32,
    times: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_repeat_number_twin_sync_impl(num, times)
}

#[wasm_bindgen]
pub fn wire_repeat_sequence_twin_sync(
    seq: i32,
    times: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_repeat_sequence_twin_sync_impl(seq, times)
}

#[wasm_bindgen]
pub fn wire_test_contains_mirrored_sub_struct_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_contains_mirrored_sub_struct_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_test_fallible_of_raw_string_mirrored_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_fallible_of_raw_string_mirrored_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_test_hashmap_with_mirrored_value_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_hashmap_with_mirrored_value_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_test_list_of_nested_enums_mirrored_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_list_of_nested_enums_mirrored_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_test_list_of_raw_nested_string_mirrored_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_list_of_raw_nested_string_mirrored_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_test_nested_raw_string_mirrored_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_nested_raw_string_mirrored_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_test_raw_string_enum_mirrored_twin_sync(
    nested: bool,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_raw_string_enum_mirrored_twin_sync_impl(nested)
}

#[wasm_bindgen]
pub fn wire_test_raw_string_mirrored_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_raw_string_mirrored_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_app_settings_stream_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_app_settings_stream_twin_sync_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_app_settings_vec_stream_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_app_settings_vec_stream_twin_sync_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_first_number_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_first_number_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_first_sequence_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_first_sequence_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_app_settings_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_get_app_settings_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_fallible_app_settings_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_get_fallible_app_settings_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_get_message_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_get_message_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_is_app_embedded_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_is_app_embedded_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_array_enum_stream_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_array_enum_stream_twin_sync_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_enum_stream_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_enum_stream_twin_sync_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_map_enum_stream_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_map_enum_stream_twin_sync_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_option_enum_stream_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_option_enum_stream_twin_sync_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_set_enum_stream_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_set_enum_stream_twin_sync_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_struct_stream_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_struct_stream_twin_sync_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_tuple_stream_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_tuple_stream_twin_sync_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_mirror_vec_enum_stream_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_mirror_vec_enum_stream_twin_sync_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_repeat_number_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_repeat_number_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_repeat_sequence_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_repeat_sequence_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_contains_mirrored_sub_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_contains_mirrored_sub_struct_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_fallible_of_raw_string_mirrored_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_fallible_of_raw_string_mirrored_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_hashmap_with_mirrored_value_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_hashmap_with_mirrored_value_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_list_of_nested_enums_mirrored_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_list_of_nested_enums_mirrored_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_list_of_raw_nested_string_mirrored_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_list_of_raw_nested_string_mirrored_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_nested_raw_string_mirrored_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_nested_raw_string_mirrored_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_raw_string_enum_mirrored_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_raw_string_enum_mirrored_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_raw_string_mirrored_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_raw_string_mirrored_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_big_buffers_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_handle_big_buffers_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_handle_complex_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    s: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_complex_struct_twin_rust_async_impl(port_, s)
}

#[wasm_bindgen]
pub fn wire_handle_nested_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    s: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_nested_struct_twin_rust_async_impl(port_, s)
}

#[wasm_bindgen]
pub fn wire_handle_string_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    s: String,
) {
    wire_handle_string_twin_rust_async_impl(port_, s)
}

#[wasm_bindgen]
pub fn wire_handle_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    boxed: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_struct_twin_rust_async_impl(port_, arg, boxed)
}

#[wasm_bindgen]
pub fn wire_handle_vec_u8_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    v: Box<[u8]>,
) {
    wire_handle_vec_u8_twin_rust_async_impl(port_, v)
}

#[wasm_bindgen]
pub fn wire_list_of_primitive_enums_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    weekdays: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_list_of_primitive_enums_twin_rust_async_impl(port_, weekdays)
}

#[wasm_bindgen]
pub fn wire_test_abc_enum_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    abc: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_test_abc_enum_twin_rust_async_impl(port_, abc)
}

#[wasm_bindgen]
pub fn wire_test_struct_with_enum_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    se: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_test_struct_with_enum_twin_rust_async_impl(port_, se)
}

#[wasm_bindgen]
pub fn wire_handle_big_buffers_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_big_buffers_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_complex_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_complex_struct_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_nested_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_nested_struct_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_string_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_string_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_struct_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_vec_u8_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_vec_u8_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_list_of_primitive_enums_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_list_of_primitive_enums_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_abc_enum_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_abc_enum_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_struct_with_enum_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_struct_with_enum_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_big_buffers_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_big_buffers_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_complex_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_complex_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_nested_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_nested_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_string_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_string_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_vec_u8_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_vec_u8_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_list_of_primitive_enums_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_list_of_primitive_enums_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_abc_enum_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_abc_enum_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_struct_with_enum_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_struct_with_enum_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_big_buffers_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_big_buffers_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_handle_complex_struct_twin_sync(
    s: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_complex_struct_twin_sync_impl(s)
}

#[wasm_bindgen]
pub fn wire_handle_nested_struct_twin_sync(
    s: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_nested_struct_twin_sync_impl(s)
}

#[wasm_bindgen]
pub fn wire_handle_string_twin_sync(
    s: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_string_twin_sync_impl(s)
}

#[wasm_bindgen]
pub fn wire_handle_struct_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    boxed: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_struct_twin_sync_impl(arg, boxed)
}

#[wasm_bindgen]
pub fn wire_handle_vec_u8_twin_sync(
    v: Box<[u8]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_vec_u8_twin_sync_impl(v)
}

#[wasm_bindgen]
pub fn wire_list_of_primitive_enums_twin_sync(
    weekdays: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_list_of_primitive_enums_twin_sync_impl(weekdays)
}

#[wasm_bindgen]
pub fn wire_test_abc_enum_twin_sync(
    abc: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_abc_enum_twin_sync_impl(abc)
}

#[wasm_bindgen]
pub fn wire_test_struct_with_enum_twin_sync(
    se: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_struct_with_enum_twin_sync_impl(se)
}

#[wasm_bindgen]
pub fn wire_handle_big_buffers_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_big_buffers_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_complex_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_complex_struct_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_nested_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_nested_struct_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_string_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_string_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_struct_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_vec_u8_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_vec_u8_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_list_of_primitive_enums_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_list_of_primitive_enums_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_abc_enum_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_abc_enum_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_struct_with_enum_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_struct_with_enum_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_empty_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    empty: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_empty_struct_twin_rust_async_impl(port_, empty)
}

#[wasm_bindgen]
pub fn wire_func_return_unit_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_func_return_unit_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_handle_list_of_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    l: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_list_of_struct_twin_rust_async_impl(port_, l)
}

#[wasm_bindgen]
pub fn wire_handle_string_list_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    names: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_string_list_twin_rust_async_impl(port_, names)
}

#[wasm_bindgen]
pub fn wire_empty_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_empty_struct_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_return_unit_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_return_unit_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_list_of_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_list_of_struct_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_string_list_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_string_list_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_empty_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_empty_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_return_unit_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_return_unit_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_list_of_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_list_of_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_string_list_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_string_list_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_empty_struct_twin_sync(
    empty: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_empty_struct_twin_sync_impl(empty)
}

#[wasm_bindgen]
pub fn wire_func_return_unit_twin_sync() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco
{
    wire_func_return_unit_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_handle_list_of_struct_twin_sync(
    l: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_list_of_struct_twin_sync_impl(l)
}

#[wasm_bindgen]
pub fn wire_handle_string_list_twin_sync(
    names: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_string_list_twin_sync_impl(names)
}

#[wasm_bindgen]
pub fn wire_empty_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_empty_struct_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_return_unit_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_return_unit_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_list_of_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_list_of_struct_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_string_list_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_string_list_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_newtype_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_newtype_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_handle_newtype_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_newtype_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_newtype_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_newtype_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_newtype_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_newtype_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_handle_newtype_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_newtype_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_primitive_optional_types_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    my_i32: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    my_i64: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    my_f64: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    my_bool: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_primitive_optional_types_twin_rust_async_impl(port_, my_i32, my_i64, my_f64, my_bool)
}

#[wasm_bindgen]
pub fn wire_primitive_optional_types_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_primitive_optional_types_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_primitive_optional_types_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_primitive_optional_types_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_primitive_optional_types_twin_sync(
    my_i32: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    my_i64: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    my_f64: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    my_bool: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_primitive_optional_types_twin_sync_impl(my_i32, my_i64, my_f64, my_bool)
}

#[wasm_bindgen]
pub fn wire_primitive_optional_types_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_primitive_optional_types_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_increment_boxed_optional_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opt: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_increment_boxed_optional_twin_rust_async_impl(port_, opt)
}

#[wasm_bindgen]
pub fn wire_handle_option_box_arguments_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    i8box: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    u8box: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    i32box: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    i64box: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    f64box: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    boolbox: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    structbox: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_option_box_arguments_twin_rust_async_impl(
        port_, i8box, u8box, i32box, i64box, f64box, boolbox, structbox,
    )
}

#[wasm_bindgen]
pub fn wire_handle_optional_increment_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opt: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_optional_increment_twin_rust_async_impl(port_, opt)
}

#[wasm_bindgen]
pub fn wire_handle_optional_return_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    left: f64,
    right: f64,
) {
    wire_handle_optional_return_twin_rust_async_impl(port_, left, right)
}

#[wasm_bindgen]
pub fn wire_handle_optional_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    document: Option<String>,
) {
    wire_handle_optional_struct_twin_rust_async_impl(port_, document)
}

#[wasm_bindgen]
pub fn wire_handle_vec_of_opts_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opt: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_vec_of_opts_twin_rust_async_impl(port_, opt)
}

#[wasm_bindgen]
pub fn wire_handle_increment_boxed_optional_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_increment_boxed_optional_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_handle_option_box_arguments_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_option_box_arguments_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_optional_increment_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_optional_increment_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_optional_return_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_optional_return_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_optional_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_optional_struct_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_vec_of_opts_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_vec_of_opts_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_increment_boxed_optional_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_increment_boxed_optional_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_option_box_arguments_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_option_box_arguments_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_optional_increment_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_optional_increment_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_optional_return_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_optional_return_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_optional_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_optional_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_vec_of_opts_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_vec_of_opts_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_increment_boxed_optional_twin_sync(
    opt: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_increment_boxed_optional_twin_sync_impl(opt)
}

#[wasm_bindgen]
pub fn wire_handle_option_box_arguments_twin_sync(
    i8box: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    u8box: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    i32box: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    i64box: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    f64box: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    boolbox: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    structbox: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_option_box_arguments_twin_sync_impl(
        i8box, u8box, i32box, i64box, f64box, boolbox, structbox,
    )
}

#[wasm_bindgen]
pub fn wire_handle_optional_increment_twin_sync(
    opt: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_optional_increment_twin_sync_impl(opt)
}

#[wasm_bindgen]
pub fn wire_handle_optional_return_twin_sync(
    left: f64,
    right: f64,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_optional_return_twin_sync_impl(left, right)
}

#[wasm_bindgen]
pub fn wire_handle_optional_struct_twin_sync(
    document: Option<String>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_optional_struct_twin_sync_impl(document)
}

#[wasm_bindgen]
pub fn wire_handle_vec_of_opts_twin_sync(
    opt: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_vec_of_opts_twin_sync_impl(opt)
}

#[wasm_bindgen]
pub fn wire_handle_increment_boxed_optional_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_increment_boxed_optional_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_option_box_arguments_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_option_box_arguments_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_optional_increment_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_optional_increment_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_optional_return_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_optional_return_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_optional_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_optional_struct_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_vec_of_opts_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_vec_of_opts_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_vec_of_primitive_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    n: i32,
) {
    wire_handle_vec_of_primitive_twin_rust_async_impl(port_, n)
}

#[wasm_bindgen]
pub fn wire_handle_vec_of_primitive_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_vec_of_primitive_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_vec_of_primitive_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_vec_of_primitive_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_vec_of_primitive_twin_sync(
    n: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_vec_of_primitive_twin_sync_impl(n)
}

#[wasm_bindgen]
pub fn wire_handle_vec_of_primitive_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_vec_of_primitive_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_primitive_types_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    my_i32: i32,
    my_i64: i64,
    my_f64: f64,
    my_bool: bool,
) {
    wire_primitive_types_twin_rust_async_impl(port_, my_i32, my_i64, my_f64, my_bool)
}

#[wasm_bindgen]
pub fn wire_primitive_u32_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    my_u32: u32,
) {
    wire_primitive_u32_twin_rust_async_impl(port_, my_u32)
}

#[wasm_bindgen]
pub fn wire_primitive_types_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_primitive_types_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_primitive_u32_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_primitive_u32_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_primitive_types_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_primitive_types_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_primitive_u32_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_primitive_u32_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_primitive_types_twin_sync(
    my_i32: i32,
    my_i64: i64,
    my_f64: f64,
    my_bool: bool,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_primitive_types_twin_sync_impl(my_i32, my_i64, my_f64, my_bool)
}

#[wasm_bindgen]
pub fn wire_primitive_u32_twin_sync(
    my_u32: u32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_primitive_u32_twin_sync_impl(my_u32)
}

#[wasm_bindgen]
pub fn wire_primitive_types_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_primitive_types_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_primitive_u32_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_primitive_u32_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_more_than_just_one_raw_string_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_more_than_just_one_raw_string_struct_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_raw_string_item_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_raw_string_item_struct_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_more_than_just_one_raw_string_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_more_than_just_one_raw_string_struct_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_test_raw_string_item_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_raw_string_item_struct_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_more_than_just_one_raw_string_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_more_than_just_one_raw_string_struct_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_test_raw_string_item_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_raw_string_item_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_more_than_just_one_raw_string_struct_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_more_than_just_one_raw_string_struct_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_test_raw_string_item_struct_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_raw_string_item_struct_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_test_more_than_just_one_raw_string_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_more_than_just_one_raw_string_struct_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_test_raw_string_item_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_raw_string_item_struct_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinMoi_instance_method_arg_borrow_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinMoi_instance_method_arg_borrow_twin_moi_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinMoi_instance_method_arg_mut_borrow_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinMoi_instance_method_arg_mut_borrow_twin_moi_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinMoi_instance_method_arg_own_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinMoi_instance_method_arg_own_twin_moi_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinMoi_instance_method_getter_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinMoi_instance_method_getter_twin_moi_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinMoi_instance_method_return_own_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinMoi_instance_method_return_own_twin_moi_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinMoi_new_custom_name_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinMoi_new_custom_name_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinMoi_new_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinMoi_new_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinMoi_new_with_result_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinMoi_new_with_result_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinMoi_static_method_arg_borrow_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinMoi_static_method_arg_borrow_twin_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinMoi_static_method_arg_mut_borrow_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinMoi_static_method_arg_mut_borrow_twin_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinMoi_static_method_arg_own_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinMoi_static_method_arg_own_twin_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinMoi_static_method_return_own_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinMoi_static_method_return_own_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_borrow_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) {
    wire_rust_auto_opaque_arg_borrow_twin_moi_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_mut_borrow_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
    adder: i32,
) {
    wire_rust_auto_opaque_arg_mut_borrow_twin_moi_impl(port_, arg, expect, adder)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_and_return_own_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_arg_own_and_return_own_twin_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) {
    wire_rust_auto_opaque_arg_own_twin_moi_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_vec_own_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: Box<[i32]>,
) {
    wire_rust_auto_opaque_arg_vec_own_twin_moi_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_borrow_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_borrow_and_borrow_twin_moi_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_mut_borrow_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    borrow: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    mut_borrow: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_borrow_and_mut_borrow_twin_moi_impl(port_, borrow, mut_borrow)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_arg_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_callable_arg_twin_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_return_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_callable_return_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_dummy_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_dummy_twin_moi_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_arg_borrow_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_enum_arg_borrow_twin_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_return_own_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_enum_return_own_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_arg_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) {
    wire_rust_auto_opaque_explicit_arg_twin_moi_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_return_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    initial: i32,
) {
    wire_rust_auto_opaque_explicit_return_twin_moi_impl(port_, initial)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_struct_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_explicit_struct_twin_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_normal_and_opaque_arg_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: String,
) {
    wire_rust_auto_opaque_normal_and_opaque_arg_twin_moi_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_arg_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_plus_sign_arg_twin_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_return_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_plus_sign_return_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_one_and_two_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_return_opaque_one_and_two_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_two_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_return_opaque_two_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_own_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    initial: i32,
) {
    wire_rust_auto_opaque_return_own_twin_moi_impl(port_, initial)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_vec_own_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_return_vec_own_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_stream_sink_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_stream_sink_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_borrow_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) {
    wire_rust_auto_opaque_trait_object_arg_borrow_twin_moi_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) {
    wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_moi_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_own_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) {
    wire_rust_auto_opaque_trait_object_arg_own_twin_moi_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_one_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_trait_object_return_own_one_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_two_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_trait_object_return_own_two_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_two_args_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_two_args_twin_moi_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsync_instance_method_arg_borrow_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsync_instance_method_arg_borrow_twin_rust_async_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsync_instance_method_arg_mut_borrow_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsync_instance_method_arg_mut_borrow_twin_rust_async_impl(
        port_, that,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsync_instance_method_arg_own_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsync_instance_method_arg_own_twin_rust_async_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsync_instance_method_getter_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsync_instance_method_getter_twin_rust_async_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsync_instance_method_return_own_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsync_instance_method_return_own_twin_rust_async_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsync_new_custom_name_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinRustAsync_new_custom_name_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsync_new_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinRustAsync_new_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsync_new_with_result_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinRustAsync_new_with_result_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsync_static_method_arg_borrow_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsync_static_method_arg_borrow_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsync_static_method_arg_mut_borrow_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsync_static_method_arg_mut_borrow_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsync_static_method_arg_own_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsync_static_method_arg_own_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsync_static_method_return_own_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinRustAsync_static_method_return_own_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_borrow_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) {
    wire_rust_auto_opaque_arg_borrow_twin_rust_async_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
    adder: i32,
) {
    wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_impl(port_, arg, expect, adder)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) {
    wire_rust_auto_opaque_arg_own_twin_rust_async_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_vec_own_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: Box<[i32]>,
) {
    wire_rust_auto_opaque_arg_vec_own_twin_rust_async_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    borrow: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    mut_borrow: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_impl(port_, borrow, mut_borrow)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_arg_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_callable_arg_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_return_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_callable_return_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_dummy_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_dummy_twin_rust_async_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_return_own_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_enum_return_own_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_arg_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) {
    wire_rust_auto_opaque_explicit_arg_twin_rust_async_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_return_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    initial: i32,
) {
    wire_rust_auto_opaque_explicit_return_twin_rust_async_impl(port_, initial)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_explicit_struct_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: String,
) {
    wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_arg_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_return_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_plus_sign_return_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_two_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_return_opaque_two_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_own_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    initial: i32,
) {
    wire_rust_auto_opaque_return_own_twin_rust_async_impl(port_, initial)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_vec_own_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_return_vec_own_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_stream_sink_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_stream_sink_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) {
    wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) {
    wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) {
    wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_two_args_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_two_args_twin_rust_async_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_borrow_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_borrow_twin_rust_async_moi_impl(
        port_, that,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_mut_borrow_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_mut_borrow_twin_rust_async_moi_impl(
        port_, that,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_own_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_own_twin_rust_async_moi_impl(
        port_, that,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_getter_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_getter_twin_rust_async_moi_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_return_own_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_return_own_twin_rust_async_moi_impl(
        port_, that,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncMoi_new_custom_name_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinRustAsyncMoi_new_custom_name_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncMoi_new_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinRustAsyncMoi_new_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncMoi_new_with_result_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinRustAsyncMoi_new_with_result_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_borrow_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_borrow_twin_rust_async_moi_impl(
        port_, arg,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_mut_borrow_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_mut_borrow_twin_rust_async_moi_impl(
        port_, arg,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_own_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_own_twin_rust_async_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncMoi_static_method_return_own_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinRustAsyncMoi_static_method_return_own_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_borrow_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) {
    wire_rust_auto_opaque_arg_borrow_twin_rust_async_moi_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
    adder: i32,
) {
    wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_moi_impl(port_, arg, expect, adder)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) {
    wire_rust_auto_opaque_arg_own_twin_rust_async_moi_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_vec_own_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: Box<[i32]>,
) {
    wire_rust_auto_opaque_arg_vec_own_twin_rust_async_moi_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_moi_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    borrow: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    mut_borrow: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_moi_impl(port_, borrow, mut_borrow)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_arg_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_callable_arg_twin_rust_async_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_return_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_callable_return_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_dummy_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_dummy_twin_rust_async_moi_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_return_own_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_enum_return_own_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_moi_impl(
        port_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_arg_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) {
    wire_rust_auto_opaque_explicit_arg_twin_rust_async_moi_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_return_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    initial: i32,
) {
    wire_rust_auto_opaque_explicit_return_twin_rust_async_moi_impl(port_, initial)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_struct_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_explicit_struct_twin_rust_async_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: String,
) {
    wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_moi_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_moi_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_return_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_plus_sign_return_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_two_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_return_opaque_two_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_own_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    initial: i32,
) {
    wire_rust_auto_opaque_return_own_twin_rust_async_moi_impl(port_, initial)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_vec_own_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_return_vec_own_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_stream_sink_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_stream_sink_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_moi_impl(
        port_, arg,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_moi_impl(
        port_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) {
    wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_moi_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) {
    wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_moi_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) {
    wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_moi_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_two_args_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_two_args_twin_rust_async_moi_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_borrow_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_borrow_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_mut_borrow_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_mut_borrow_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_own_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_own_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSse_instance_method_getter_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSse_instance_method_getter_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSse_instance_method_return_own_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSse_instance_method_return_own_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSse_new_custom_name_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSse_new_custom_name_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSse_new_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSse_new_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSse_new_with_result_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSse_new_with_result_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_borrow_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_borrow_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_mut_borrow_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_mut_borrow_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_own_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_own_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSse_static_method_return_own_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSse_static_method_return_own_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_own_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_arg_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_callable_arg_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_return_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_callable_return_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_dummy_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_dummy_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_return_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_explicit_return_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_own_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_own_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_stream_sink_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_stream_sink_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_two_args_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_two_args_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_borrow_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_borrow_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_mut_borrow_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_mut_borrow_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_own_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_own_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_getter_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_getter_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_return_own_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_return_own_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSseMoi_new_custom_name_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSseMoi_new_custom_name_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSseMoi_new_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSseMoi_new_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSseMoi_new_with_result_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSseMoi_new_with_result_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_borrow_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_borrow_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_mut_borrow_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_mut_borrow_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_own_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_own_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_return_own_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_return_own_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_own_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_arg_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_callable_arg_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_return_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_callable_return_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_dummy_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_dummy_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_return_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_explicit_return_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_own_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_own_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_stream_sink_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_stream_sink_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_two_args_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_two_args_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSse_instance_method_getter_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSse_instance_method_getter_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSse_new_custom_name_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSse_new_custom_name_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSse_new_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSse_new_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSse_new_with_result_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSse_new_with_result_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSse_static_method_return_own_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSse_static_method_return_own_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_borrow_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_borrow_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_mut_borrow_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_mut_borrow_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_and_return_own_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_own_and_return_own_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_own_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_vec_own_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_vec_own_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_borrow_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_borrow_and_borrow_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_arg_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_callable_arg_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_return_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_callable_return_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_dummy_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_dummy_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_arg_borrow_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_arg_borrow_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_return_own_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_return_own_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_arg_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_explicit_arg_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_return_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_explicit_return_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_explicit_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_arg_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_plus_sign_arg_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_return_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_plus_sign_return_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_two_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_opaque_two_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_own_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_own_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_vec_own_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_vec_own_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_stream_sink_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_stream_sink_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_own_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_arg_own_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_one_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_return_own_one_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_two_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_return_own_two_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_two_args_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_two_args_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSseMoi_instance_method_arg_borrow_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSseMoi_instance_method_arg_borrow_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSseMoi_instance_method_arg_mut_borrow_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSseMoi_instance_method_arg_mut_borrow_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSseMoi_instance_method_arg_own_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSseMoi_instance_method_arg_own_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSseMoi_instance_method_getter_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSseMoi_instance_method_getter_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSseMoi_instance_method_return_own_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSseMoi_instance_method_return_own_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSseMoi_new_custom_name_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSseMoi_new_custom_name_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSseMoi_new_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSseMoi_new_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSseMoi_new_with_result_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSseMoi_new_with_result_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSseMoi_static_method_arg_borrow_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSseMoi_static_method_arg_borrow_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSseMoi_static_method_arg_mut_borrow_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSseMoi_static_method_arg_mut_borrow_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSseMoi_static_method_arg_own_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSseMoi_static_method_arg_own_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSseMoi_static_method_return_own_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_NonCloneSimpleTwinSseMoi_static_method_return_own_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_borrow_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_borrow_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_mut_borrow_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_mut_borrow_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_and_return_own_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_own_and_return_own_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_own_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_vec_own_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_arg_vec_own_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_borrow_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_borrow_and_borrow_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_arg_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_callable_arg_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_return_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_callable_return_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_dummy_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_dummy_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_arg_borrow_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_arg_borrow_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_return_own_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_return_own_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_arg_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_explicit_arg_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_return_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_explicit_return_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_struct_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_explicit_struct_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_arg_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_plus_sign_arg_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_return_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_plus_sign_return_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_two_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_opaque_two_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_own_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_own_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_vec_own_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_return_vec_own_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_stream_sink_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_stream_sink_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_own_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_arg_own_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_one_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_return_own_one_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_two_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_trait_object_return_own_two_twin_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_two_args_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_two_args_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_sync(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_sync_impl(that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_sync(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_sync_impl(that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_sync(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_sync_impl(that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSync_instance_method_getter_twin_sync(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSync_instance_method_getter_twin_sync_impl(that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_sync(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_sync_impl(that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSync_new_custom_name_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSync_new_custom_name_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSync_new_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSync_new_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSync_new_with_result_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSync_new_with_result_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSync_static_method_return_own_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSync_static_method_return_own_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_borrow_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_arg_borrow_twin_sync_impl(arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_mut_borrow_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
    adder: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_arg_mut_borrow_twin_sync_impl(arg, expect, adder)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_and_return_own_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_arg_own_twin_sync_impl(arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_vec_own_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: Box<[i32]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_arg_vec_own_twin_sync_impl(arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_borrow_twin_sync(
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_borrow_and_borrow_twin_sync_impl(a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync(
    borrow: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    mut_borrow: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_impl(borrow, mut_borrow)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_arg_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_callable_arg_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_return_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_callable_return_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_dummy_twin_sync(
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_dummy_twin_sync_impl(a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_arg_borrow_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_enum_arg_borrow_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_return_own_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_enum_return_own_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_arg_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_explicit_arg_twin_sync_impl(arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_return_twin_sync(
    initial: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_explicit_return_twin_sync_impl(initial)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_struct_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_explicit_struct_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync(
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_impl(a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_arg_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_plus_sign_arg_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_return_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_plus_sign_return_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_two_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_return_opaque_two_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_own_twin_sync(
    initial: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_return_own_twin_sync_impl(initial)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_vec_own_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_return_vec_own_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_stream_sink_twin_sync(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_stream_sink_twin_sync_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_impl(arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_impl(arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_own_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_trait_object_arg_own_twin_sync_impl(arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_one_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_two_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_two_args_twin_sync(
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_two_args_twin_sync_impl(a, b)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_borrow_twin_sync_moi(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_borrow_twin_sync_moi_impl(that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_mut_borrow_twin_sync_moi(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_mut_borrow_twin_sync_moi_impl(that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_own_twin_sync_moi(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_own_twin_sync_moi_impl(that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncMoi_instance_method_getter_twin_sync_moi(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSyncMoi_instance_method_getter_twin_sync_moi_impl(that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncMoi_instance_method_return_own_twin_sync_moi(
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSyncMoi_instance_method_return_own_twin_sync_moi_impl(that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncMoi_new_custom_name_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSyncMoi_new_custom_name_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncMoi_new_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSyncMoi_new_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncMoi_new_with_result_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSyncMoi_new_with_result_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncMoi_static_method_arg_borrow_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSyncMoi_static_method_arg_borrow_twin_sync_moi_impl(arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncMoi_static_method_arg_mut_borrow_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSyncMoi_static_method_arg_mut_borrow_twin_sync_moi_impl(arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncMoi_static_method_arg_own_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSyncMoi_static_method_arg_own_twin_sync_moi_impl(arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncMoi_static_method_return_own_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_NonCloneSimpleTwinSyncMoi_static_method_return_own_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_borrow_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_arg_borrow_twin_sync_moi_impl(arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_mut_borrow_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
    adder: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_arg_mut_borrow_twin_sync_moi_impl(arg, expect, adder)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_moi_impl(arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_arg_own_twin_sync_moi_impl(arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_vec_own_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: Box<[i32]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_arg_vec_own_twin_sync_moi_impl(arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_borrow_twin_sync_moi(
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_borrow_and_borrow_twin_sync_moi_impl(a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_moi(
    borrow: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    mut_borrow: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_moi_impl(borrow, mut_borrow)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_arg_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_callable_arg_twin_sync_moi_impl(arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_return_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_callable_return_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_dummy_twin_sync_moi(
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_dummy_twin_sync_moi_impl(a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_arg_borrow_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_enum_arg_borrow_twin_sync_moi_impl(arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_return_own_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_enum_return_own_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_moi_impl(arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_arg_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_explicit_arg_twin_sync_moi_impl(arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_return_twin_sync_moi(
    initial: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_explicit_return_twin_sync_moi_impl(initial)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_struct_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_explicit_struct_twin_sync_moi_impl(arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_moi(
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_moi_impl(a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_arg_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_plus_sign_arg_twin_sync_moi_impl(arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_return_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_plus_sign_return_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_two_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_return_opaque_two_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_own_twin_sync_moi(
    initial: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_return_own_twin_sync_moi_impl(initial)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_vec_own_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_return_vec_own_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_stream_sink_twin_sync_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_stream_sink_twin_sync_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_moi_impl(arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_moi_impl(arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_moi_impl(arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_own_twin_sync_moi(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_trait_object_arg_own_twin_sync_moi_impl(arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_two_args_twin_sync_moi(
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_rust_auto_opaque_two_args_twin_sync_moi_impl(a, b)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSse_instance_method_getter_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSse_instance_method_getter_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSse_new_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSse_new_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_borrow_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_arg_borrow_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_arg_own_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_vec_own_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_arg_vec_own_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_arg_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_callable_arg_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_return_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_callable_return_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_dummy_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_dummy_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_return_own_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_enum_return_own_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_arg_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_explicit_arg_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_return_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_explicit_return_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_struct_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_explicit_struct_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_return_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_plus_sign_return_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_two_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_return_opaque_two_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_own_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_return_own_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_vec_own_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_return_vec_own_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_stream_sink_twin_sync_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_stream_sink_twin_sync_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_two_args_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_two_args_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_borrow_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_borrow_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_mut_borrow_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_mut_borrow_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_own_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_own_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSseMoi_instance_method_getter_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSseMoi_instance_method_getter_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSseMoi_instance_method_return_own_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSseMoi_instance_method_return_own_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSseMoi_new_custom_name_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSseMoi_new_custom_name_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSseMoi_new_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSseMoi_new_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSseMoi_new_with_result_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSseMoi_new_with_result_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_borrow_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_borrow_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_mut_borrow_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_mut_borrow_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_own_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_own_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinSyncSseMoi_static_method_return_own_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_NonCloneSimpleTwinSyncSseMoi_static_method_return_own_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_borrow_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_arg_borrow_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_arg_own_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_vec_own_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_arg_vec_own_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_arg_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_callable_arg_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_return_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_callable_return_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_dummy_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_dummy_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_return_own_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_enum_return_own_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_arg_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_explicit_arg_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_return_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_explicit_return_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_struct_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_explicit_struct_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_return_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_plus_sign_return_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_two_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_return_opaque_two_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_own_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_return_own_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_vec_own_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_return_vec_own_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_stream_sink_twin_sync_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_rust_auto_opaque_stream_sink_twin_sync_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse_moi_impl(
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_two_args_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_rust_auto_opaque_two_args_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_frb_sync_generator_test_twin_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_frb_sync_generator_test_twin_moi_impl()
}

#[wasm_bindgen]
pub fn wire_sync_create_non_clone_twin_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_sync_create_non_clone_twin_moi_impl()
}

#[wasm_bindgen]
pub fn wire_sync_create_opaque_twin_moi() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco
{
    wire_sync_create_opaque_twin_moi_impl()
}

#[wasm_bindgen]
pub fn wire_sync_option_rust_opaque_twin_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_sync_option_rust_opaque_twin_moi_impl()
}

#[wasm_bindgen]
pub fn wire_frb_sync_generator_test_twin_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_frb_sync_generator_test_twin_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_sync_create_non_clone_twin_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_sync_create_non_clone_twin_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_sync_create_opaque_twin_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_sync_create_opaque_twin_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_sync_option_rust_opaque_twin_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_sync_option_rust_opaque_twin_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_frb_sync_generator_test_twin_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_frb_sync_generator_test_twin_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_sync_create_non_clone_twin_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_sync_create_non_clone_twin_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_sync_create_opaque_twin_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_sync_create_opaque_twin_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_sync_option_rust_opaque_twin_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_sync_option_rust_opaque_twin_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_array_opaque_enum_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_create_array_opaque_enum_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_create_nested_opaque_twin_moi(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_create_nested_opaque_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_create_opaque_twin_moi(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_create_opaque_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_create_option_opaque_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_create_option_opaque_twin_moi_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_frb_generator_test_twin_moi(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_frb_generator_test_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_run_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    data: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_opaque_array_run_twin_moi_impl(port_, data)
}

#[wasm_bindgen]
pub fn wire_opaque_array_twin_moi(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_opaque_array_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_run_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    data: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_opaque_vec_run_twin_moi_impl(port_, data)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_twin_moi(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_opaque_vec_twin_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_run_enum_opaque_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_enum_opaque_twin_moi_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_run_nested_opaque_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_nested_opaque_twin_moi_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_run_non_clone_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    clone: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_non_clone_twin_moi_impl(port_, clone)
}

#[wasm_bindgen]
pub fn wire_run_opaque_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_opaque_twin_moi_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_run_opaque_with_delay_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_opaque_with_delay_twin_moi_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_unwrap_rust_opaque_twin_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_unwrap_rust_opaque_twin_moi_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_create_array_opaque_enum_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_create_array_opaque_enum_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_create_nested_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_create_nested_opaque_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_create_opaque_twin_rust_async(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_create_opaque_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_create_option_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_create_option_opaque_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_frb_generator_test_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_frb_generator_test_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_run_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    data: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_opaque_array_run_twin_rust_async_impl(port_, data)
}

#[wasm_bindgen]
pub fn wire_opaque_array_twin_rust_async(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_opaque_array_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_run_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    data: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_opaque_vec_run_twin_rust_async_impl(port_, data)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_twin_rust_async(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_opaque_vec_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_run_enum_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_enum_opaque_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_run_nested_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_nested_opaque_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_run_non_clone_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    clone: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_non_clone_twin_rust_async_impl(port_, clone)
}

#[wasm_bindgen]
pub fn wire_run_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_opaque_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_run_opaque_with_delay_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_opaque_with_delay_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_unwrap_rust_opaque_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_unwrap_rust_opaque_twin_rust_async_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_create_array_opaque_enum_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_create_array_opaque_enum_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_create_nested_opaque_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_create_nested_opaque_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_create_opaque_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_create_opaque_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_create_option_opaque_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_create_option_opaque_twin_rust_async_moi_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_frb_generator_test_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_frb_generator_test_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_run_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    data: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_opaque_array_run_twin_rust_async_moi_impl(port_, data)
}

#[wasm_bindgen]
pub fn wire_opaque_array_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_opaque_array_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_run_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    data: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_opaque_vec_run_twin_rust_async_moi_impl(port_, data)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_twin_rust_async_moi(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_opaque_vec_twin_rust_async_moi_impl(port_)
}

#[wasm_bindgen]
pub fn wire_run_enum_opaque_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_enum_opaque_twin_rust_async_moi_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_run_nested_opaque_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_nested_opaque_twin_rust_async_moi_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_run_non_clone_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    clone: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_non_clone_twin_rust_async_moi_impl(port_, clone)
}

#[wasm_bindgen]
pub fn wire_run_opaque_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_opaque_twin_rust_async_moi_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_run_opaque_with_delay_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_opaque_with_delay_twin_rust_async_moi_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_unwrap_rust_opaque_twin_rust_async_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_unwrap_rust_opaque_twin_rust_async_moi_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_create_array_opaque_enum_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_array_opaque_enum_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_nested_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_nested_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_option_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_option_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_frb_generator_test_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_frb_generator_test_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_run_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_array_run_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_array_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_run_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_vec_run_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_vec_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_enum_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_enum_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_nested_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_nested_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_non_clone_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_non_clone_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_opaque_with_delay_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_opaque_with_delay_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_unwrap_rust_opaque_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_unwrap_rust_opaque_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_array_opaque_enum_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_array_opaque_enum_twin_rust_async_sse_moi_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_create_nested_opaque_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_nested_opaque_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_opaque_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_opaque_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_option_opaque_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_option_opaque_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_frb_generator_test_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_frb_generator_test_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_run_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_array_run_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_array_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_run_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_vec_run_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_vec_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_enum_opaque_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_enum_opaque_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_nested_opaque_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_nested_opaque_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_non_clone_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_non_clone_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_opaque_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_opaque_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_opaque_with_delay_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_opaque_with_delay_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_unwrap_rust_opaque_twin_rust_async_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_unwrap_rust_opaque_twin_rust_async_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_array_opaque_enum_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_array_opaque_enum_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_nested_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_nested_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_option_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_option_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_frb_generator_test_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_frb_generator_test_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_run_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_array_run_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_array_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_run_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_vec_run_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_vec_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_enum_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_enum_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_nested_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_nested_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_non_clone_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_non_clone_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_opaque_with_delay_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_opaque_with_delay_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_unwrap_rust_opaque_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_unwrap_rust_opaque_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_array_opaque_enum_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_array_opaque_enum_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_nested_opaque_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_nested_opaque_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_opaque_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_opaque_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_option_opaque_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_create_option_opaque_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_frb_generator_test_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_frb_generator_test_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_run_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_array_run_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_array_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_run_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_vec_run_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_opaque_vec_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_enum_opaque_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_enum_opaque_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_nested_opaque_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_nested_opaque_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_non_clone_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_non_clone_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_opaque_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_opaque_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_opaque_with_delay_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_run_opaque_with_delay_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_unwrap_rust_opaque_twin_sse_moi(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_unwrap_rust_opaque_twin_sse_moi_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_array_opaque_enum_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_create_array_opaque_enum_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_create_nested_opaque_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_create_nested_opaque_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_create_opaque_twin_sync() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_create_opaque_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_create_option_opaque_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_create_option_opaque_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_frb_generator_test_twin_sync(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_frb_generator_test_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_opaque_array_run_twin_sync(
    data: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_opaque_array_run_twin_sync_impl(data)
}

#[wasm_bindgen]
pub fn wire_opaque_array_twin_sync() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_opaque_array_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_opaque_vec_run_twin_sync(
    data: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_opaque_vec_run_twin_sync_impl(data)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_twin_sync() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_opaque_vec_twin_sync_impl()
}

#[wasm_bindgen]
pub fn wire_run_enum_opaque_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_run_enum_opaque_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_run_nested_opaque_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_run_nested_opaque_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_run_non_clone_twin_sync(
    clone: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_run_non_clone_twin_sync_impl(clone)
}

#[wasm_bindgen]
pub fn wire_run_opaque_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_run_opaque_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_run_opaque_with_delay_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_run_opaque_with_delay_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_unwrap_rust_opaque_twin_sync(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_unwrap_rust_opaque_twin_sync_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_create_array_opaque_enum_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_create_array_opaque_enum_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_create_nested_opaque_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_create_nested_opaque_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_create_opaque_twin_sync_moi() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco
{
    wire_create_opaque_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_create_option_opaque_twin_sync_moi(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_create_option_opaque_twin_sync_moi_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_frb_generator_test_twin_sync_moi(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_frb_generator_test_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_opaque_array_run_twin_sync_moi(
    data: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_opaque_array_run_twin_sync_moi_impl(data)
}

#[wasm_bindgen]
pub fn wire_opaque_array_twin_sync_moi() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco
{
    wire_opaque_array_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_opaque_vec_run_twin_sync_moi(
    data: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_opaque_vec_run_twin_sync_moi_impl(data)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_twin_sync_moi() -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_opaque_vec_twin_sync_moi_impl()
}

#[wasm_bindgen]
pub fn wire_run_enum_opaque_twin_sync_moi(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_run_enum_opaque_twin_sync_moi_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_run_nested_opaque_twin_sync_moi(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_run_nested_opaque_twin_sync_moi_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_run_non_clone_twin_sync_moi(
    clone: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_run_non_clone_twin_sync_moi_impl(clone)
}

#[wasm_bindgen]
pub fn wire_run_opaque_twin_sync_moi(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_run_opaque_twin_sync_moi_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_run_opaque_with_delay_twin_sync_moi(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_run_opaque_with_delay_twin_sync_moi_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_unwrap_rust_opaque_twin_sync_moi(
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_unwrap_rust_opaque_twin_sync_moi_impl(opaque)
}

#[wasm_bindgen]
pub fn wire_create_array_opaque_enum_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_create_array_opaque_enum_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_nested_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_create_nested_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_create_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_option_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_create_option_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_frb_generator_test_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_frb_generator_test_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_run_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_opaque_array_run_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_opaque_array_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_run_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_opaque_vec_run_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_opaque_vec_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_enum_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_run_enum_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_nested_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_run_nested_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_non_clone_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_run_non_clone_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_run_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_opaque_with_delay_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_run_opaque_with_delay_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_unwrap_rust_opaque_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_unwrap_rust_opaque_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_array_opaque_enum_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_create_array_opaque_enum_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_nested_opaque_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_create_nested_opaque_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_opaque_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_create_opaque_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_create_option_opaque_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_create_option_opaque_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_frb_generator_test_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_frb_generator_test_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_run_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_opaque_array_run_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_opaque_array_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_run_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_opaque_vec_run_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_opaque_vec_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_enum_opaque_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_run_enum_opaque_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_nested_opaque_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_run_nested_opaque_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_non_clone_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_run_non_clone_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_opaque_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_run_opaque_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_run_opaque_with_delay_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_run_opaque_with_delay_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_unwrap_rust_opaque_twin_sync_sse_moi(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_unwrap_rust_opaque_twin_sync_sse_moi_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_simple_adder_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: i32,
    b: i32,
) {
    wire_simple_adder_twin_rust_async_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_simple_adder_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_simple_adder_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_simple_adder_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_simple_adder_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_simple_adder_twin_sync(
    a: i32,
    b: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_simple_adder_twin_sync_impl(a, b)
}

#[wasm_bindgen]
pub fn wire_simple_adder_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_simple_adder_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_stream_realistic_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_stream_realistic_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_stream_return_error_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_func_stream_return_error_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_func_stream_return_panic_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_func_stream_return_panic_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_func_stream_sink_arg_position_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: u32,
    b: u32,
) {
    wire_func_stream_sink_arg_position_twin_rust_async_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_handle_stream_of_struct_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_handle_stream_of_struct_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_handle_stream_sink_at_1_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    key: u32,
    max: u32,
) {
    wire_handle_stream_sink_at_1_twin_rust_async_impl(port_, key, max)
}

#[wasm_bindgen]
pub fn wire_handle_stream_sink_at_2_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    key: u32,
    max: u32,
) {
    wire_handle_stream_sink_at_2_twin_rust_async_impl(port_, key, max)
}

#[wasm_bindgen]
pub fn wire_handle_stream_sink_at_3_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    key: u32,
    max: u32,
) {
    wire_handle_stream_sink_at_3_twin_rust_async_impl(port_, key, max)
}

#[wasm_bindgen]
pub fn wire_stream_sink_fixed_sized_primitive_array_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_stream_sink_fixed_sized_primitive_array_twin_rust_async_impl(port_)
}

#[wasm_bindgen]
pub fn wire_func_stream_return_error_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_stream_return_error_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_stream_return_panic_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_stream_return_panic_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_stream_sink_arg_position_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_stream_sink_arg_position_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_handle_stream_of_struct_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_stream_of_struct_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_stream_sink_at_1_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_stream_sink_at_1_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_stream_sink_at_2_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_stream_sink_at_2_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_stream_sink_at_3_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_stream_sink_at_3_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_stream_sink_fixed_sized_primitive_array_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_stream_sink_fixed_sized_primitive_array_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_func_stream_return_error_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_stream_return_error_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_stream_return_panic_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_stream_return_panic_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_stream_sink_arg_position_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_stream_sink_arg_position_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_stream_of_struct_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_stream_of_struct_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_stream_sink_at_1_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_stream_sink_at_1_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_stream_sink_at_2_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_stream_sink_at_2_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_stream_sink_at_3_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_stream_sink_at_3_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_stream_sink_fixed_sized_primitive_array_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_stream_sink_fixed_sized_primitive_array_twin_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_func_struct_with_one_field_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_struct_with_one_field_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_two_field_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_struct_with_two_field_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_zero_field_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_struct_with_zero_field_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_tuple_struct_with_one_field_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_tuple_struct_with_one_field_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_tuple_struct_with_two_field_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_tuple_struct_with_two_field_twin_rust_async_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_one_field_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_struct_with_one_field_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_two_field_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_struct_with_two_field_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_zero_field_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_struct_with_zero_field_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_tuple_struct_with_one_field_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_tuple_struct_with_one_field_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_func_tuple_struct_with_two_field_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_tuple_struct_with_two_field_twin_rust_async_sse_impl(
        port_,
        ptr_,
        rust_vec_len_,
        data_len_,
    )
}

#[wasm_bindgen]
pub fn wire_func_struct_with_one_field_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_struct_with_one_field_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_two_field_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_struct_with_two_field_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_zero_field_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_struct_with_zero_field_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_tuple_struct_with_one_field_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_tuple_struct_with_one_field_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_tuple_struct_with_two_field_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_func_tuple_struct_with_two_field_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_one_field_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_struct_with_one_field_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_two_field_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_struct_with_two_field_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_zero_field_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_struct_with_zero_field_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_tuple_struct_with_one_field_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_tuple_struct_with_one_field_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_tuple_struct_with_two_field_twin_sync(
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_func_tuple_struct_with_two_field_twin_sync_impl(arg)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_one_field_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_struct_with_one_field_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_two_field_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_struct_with_two_field_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_zero_field_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_struct_with_zero_field_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_tuple_struct_with_one_field_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_tuple_struct_with_one_field_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_func_tuple_struct_with_two_field_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_func_tuple_struct_with_two_field_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_tuple_2_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    value: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_test_tuple_2_twin_rust_async_impl(port_, value)
}

#[wasm_bindgen]
pub fn wire_test_tuple_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    value: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_test_tuple_twin_rust_async_impl(port_, value)
}

#[wasm_bindgen]
pub fn wire_test_tuple_2_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_tuple_2_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_tuple_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_tuple_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_tuple_2_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_tuple_2_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_tuple_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_test_tuple_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_tuple_2_twin_sync(
    value: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_tuple_2_twin_sync_impl(value)
}

#[wasm_bindgen]
pub fn wire_test_tuple_twin_sync(
    value: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_test_tuple_twin_sync_impl(value)
}

#[wasm_bindgen]
pub fn wire_test_tuple_2_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_tuple_2_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_tuple_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_test_tuple_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_type_alias_id_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    input: u64,
) {
    wire_handle_type_alias_id_twin_rust_async_impl(port_, input)
}

#[wasm_bindgen]
pub fn wire_handle_type_alias_model_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    input: u64,
) {
    wire_handle_type_alias_model_twin_rust_async_impl(port_, input)
}

#[wasm_bindgen]
pub fn wire_handle_type_nest_alias_id_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    input: u64,
) {
    wire_handle_type_nest_alias_id_twin_rust_async_impl(port_, input)
}

#[wasm_bindgen]
pub fn wire_handle_type_alias_id_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_type_alias_id_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_type_alias_model_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_type_alias_model_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_type_nest_alias_id_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_type_nest_alias_id_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_type_alias_id_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_type_alias_id_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_type_alias_model_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_type_alias_model_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_type_nest_alias_id_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_type_nest_alias_id_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_type_alias_id_twin_sync(
    input: u64,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_type_alias_id_twin_sync_impl(input)
}

#[wasm_bindgen]
pub fn wire_handle_type_alias_model_twin_sync(
    input: u64,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_type_alias_model_twin_sync_impl(input)
}

#[wasm_bindgen]
pub fn wire_handle_type_nest_alias_id_twin_sync(
    input: u64,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_type_nest_alias_id_twin_sync_impl(input)
}

#[wasm_bindgen]
pub fn wire_handle_type_alias_id_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_type_alias_id_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_type_alias_model_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_type_alias_model_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_type_nest_alias_id_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_type_nest_alias_id_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_nested_uuids_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ids: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_nested_uuids_twin_rust_async_impl(port_, ids)
}

#[wasm_bindgen]
pub fn wire_handle_uuid_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: Box<[u8]>,
) {
    wire_handle_uuid_twin_rust_async_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_handle_uuids_twin_rust_async(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ids: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_uuids_twin_rust_async_impl(port_, ids)
}

#[wasm_bindgen]
pub fn wire_handle_nested_uuids_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_nested_uuids_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_uuid_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_uuid_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_uuids_twin_rust_async_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_uuids_twin_rust_async_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_nested_uuids_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_nested_uuids_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_uuid_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_uuid_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_uuids_twin_sse(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    wire_handle_uuids_twin_sse_impl(port_, ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_nested_uuids_twin_sync(
    ids: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_nested_uuids_twin_sync_impl(ids)
}

#[wasm_bindgen]
pub fn wire_handle_uuid_twin_sync(
    id: Box<[u8]>,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_uuid_twin_sync_impl(id)
}

#[wasm_bindgen]
pub fn wire_handle_uuids_twin_sync(
    ids: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_handle_uuids_twin_sync_impl(ids)
}

#[wasm_bindgen]
pub fn wire_handle_nested_uuids_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_nested_uuids_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_uuid_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_uuid_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_handle_uuids_twin_sync_sse(
    ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,
    rust_vec_len_: i32,
    data_len_: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {
    wire_handle_uuids_twin_sync_sse_impl(ptr_, rust_vec_len_, data_len_)
}

#[wasm_bindgen]
pub fn wire_test_more_than_just_one_raw_string_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_more_than_just_one_raw_string_struct_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_test_raw_string_item_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_test_raw_string_item_struct_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normal_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normal_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normal_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinNormal_instance_method_getter_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinNormal_instance_method_getter_twin_normal_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    that: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normal_impl(port_, that)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinNormal_new_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinNormal_new_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinNormal_new_with_result_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinNormal_new_with_result_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_borrow_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) {
    wire_rust_auto_opaque_arg_borrow_twin_normal_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_mut_borrow_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
    adder: i32,
) {
    wire_rust_auto_opaque_arg_mut_borrow_twin_normal_impl(port_, arg, expect, adder)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_and_return_own_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_arg_own_and_return_own_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_own_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) {
    wire_rust_auto_opaque_arg_own_twin_normal_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_arg_vec_own_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: Box<[i32]>,
) {
    wire_rust_auto_opaque_arg_vec_own_twin_normal_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_borrow_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_borrow_and_borrow_twin_normal_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_borrow_and_mut_borrow_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    borrow: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    mut_borrow: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_borrow_and_mut_borrow_twin_normal_impl(port_, borrow, mut_borrow)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_arg_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_callable_arg_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_callable_return_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_callable_return_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_dummy_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_dummy_twin_normal_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_arg_borrow_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_enum_arg_borrow_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_return_own_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_enum_return_own_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_arg_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: i32,
) {
    wire_rust_auto_opaque_explicit_arg_twin_normal_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_return_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    initial: i32,
) {
    wire_rust_auto_opaque_explicit_return_twin_normal_impl(port_, initial)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_explicit_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_explicit_struct_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_normal_and_opaque_arg_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: String,
) {
    wire_rust_auto_opaque_normal_and_opaque_arg_twin_normal_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_arg_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_plus_sign_arg_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_plus_sign_return_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_plus_sign_return_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_one_and_two_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_return_opaque_one_and_two_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_opaque_two_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_return_opaque_two_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_own_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    initial: i32,
) {
    wire_rust_auto_opaque_return_own_twin_normal_impl(port_, initial)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_return_vec_own_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_return_vec_own_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_stream_sink_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_stream_sink_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_borrow_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) {
    wire_rust_auto_opaque_trait_object_arg_borrow_twin_normal_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) {
    wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normal_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_arg_own_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    expect: String,
) {
    wire_rust_auto_opaque_trait_object_arg_own_twin_normal_impl(port_, arg, expect)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_one_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_trait_object_return_own_one_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_trait_object_return_own_two_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_rust_auto_opaque_trait_object_return_own_two_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_rust_auto_opaque_two_args_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
    b: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_rust_auto_opaque_two_args_twin_normal_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_create_array_opaque_enum_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_create_array_opaque_enum_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_create_nested_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_create_nested_opaque_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_create_opaque_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_create_opaque_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_create_option_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_create_option_opaque_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_frb_generator_test_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_frb_generator_test_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_opaque_array_run_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    data: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_opaque_array_run_twin_normal_impl(port_, data)
}

#[wasm_bindgen]
pub fn wire_opaque_array_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_opaque_array_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_run_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    data: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_opaque_vec_run_twin_normal_impl(port_, data)
}

#[wasm_bindgen]
pub fn wire_opaque_vec_twin_normal(port_: flutter_rust_bridge::for_generated::MessagePort) {
    wire_opaque_vec_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_run_enum_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_enum_opaque_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_run_nested_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_nested_opaque_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_run_non_clone_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    clone: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_non_clone_twin_normal_impl(port_, clone)
}

#[wasm_bindgen]
pub fn wire_run_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_opaque_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_run_opaque_with_delay_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_run_opaque_with_delay_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_unwrap_rust_opaque_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    opaque: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_unwrap_rust_opaque_twin_normal_impl(port_, opaque)
}

#[wasm_bindgen]
pub fn wire_frb_sync_generator_test_twin_normal(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_frb_sync_generator_test_twin_normal_impl()
}

#[wasm_bindgen]
pub fn wire_sync_create_non_clone_twin_normal(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_sync_create_non_clone_twin_normal_impl()
}

#[wasm_bindgen]
pub fn wire_sync_create_opaque_twin_normal(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_sync_create_opaque_twin_normal_impl()
}

#[wasm_bindgen]
pub fn wire_sync_option_rust_opaque_twin_normal(
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_sync_option_rust_opaque_twin_normal_impl()
}

#[wasm_bindgen]
pub fn wire_simple_adder_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: i32,
    b: i32,
) {
    wire_simple_adder_twin_normal_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_func_stream_return_error_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_func_stream_return_error_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_func_stream_return_panic_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_func_stream_return_panic_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_func_stream_sink_arg_position_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    a: u32,
    b: u32,
) {
    wire_func_stream_sink_arg_position_twin_normal_impl(port_, a, b)
}

#[wasm_bindgen]
pub fn wire_handle_stream_of_struct_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_handle_stream_of_struct_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_handle_stream_sink_at_1_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    key: u32,
    max: u32,
) {
    wire_handle_stream_sink_at_1_twin_normal_impl(port_, key, max)
}

#[wasm_bindgen]
pub fn wire_handle_stream_sink_at_2_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    key: u32,
    max: u32,
) {
    wire_handle_stream_sink_at_2_twin_normal_impl(port_, key, max)
}

#[wasm_bindgen]
pub fn wire_handle_stream_sink_at_3_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    key: u32,
    max: u32,
) {
    wire_handle_stream_sink_at_3_twin_normal_impl(port_, key, max)
}

#[wasm_bindgen]
pub fn wire_stream_sink_fixed_sized_primitive_array_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
) {
    wire_stream_sink_fixed_sized_primitive_array_twin_normal_impl(port_)
}

#[wasm_bindgen]
pub fn wire_func_stream_realistic_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: String,
) {
    wire_func_stream_realistic_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_one_field_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_struct_with_one_field_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_two_field_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_struct_with_two_field_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_struct_with_zero_field_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_struct_with_zero_field_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_tuple_struct_with_one_field_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_tuple_struct_with_one_field_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_func_tuple_struct_with_two_field_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    arg: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_func_tuple_struct_with_two_field_twin_normal_impl(port_, arg)
}

#[wasm_bindgen]
pub fn wire_test_tuple_2_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    value: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_test_tuple_2_twin_normal_impl(port_, value)
}

#[wasm_bindgen]
pub fn wire_test_tuple_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    value: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_test_tuple_twin_normal_impl(port_, value)
}

#[wasm_bindgen]
pub fn wire_handle_type_alias_id_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    input: u64,
) {
    wire_handle_type_alias_id_twin_normal_impl(port_, input)
}

#[wasm_bindgen]
pub fn wire_handle_type_alias_model_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    input: u64,
) {
    wire_handle_type_alias_model_twin_normal_impl(port_, input)
}

#[wasm_bindgen]
pub fn wire_handle_type_nest_alias_id_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    input: u64,
) {
    wire_handle_type_nest_alias_id_twin_normal_impl(port_, input)
}

#[wasm_bindgen]
pub fn wire_handle_nested_uuids_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ids: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_nested_uuids_twin_normal_impl(port_, ids)
}

#[wasm_bindgen]
pub fn wire_handle_uuid_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    id: Box<[u8]>,
) {
    wire_handle_uuid_twin_normal_impl(port_, id)
}

#[wasm_bindgen]
pub fn wire_handle_uuids_twin_normal(
    port_: flutter_rust_bridge::for_generated::MessagePort,
    ids: flutter_rust_bridge::for_generated::wasm_bindgen::JsValue,
) {
    wire_handle_uuids_twin_normal_impl(port_, ids)
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Box<dyn DartDebugTwinMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Box<dyn DartDebugTwinMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Box<dyn DartDebugTwinNormal>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Box<dyn DartDebugTwinNormal>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Box<dyn DartDebugTwinRustAsync>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Box<dyn DartDebugTwinRustAsync>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Box<dyn DartDebugTwinRustAsyncMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Box<dyn DartDebugTwinRustAsyncMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Box<dyn DartDebugTwinRustAsyncSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Box<dyn DartDebugTwinRustAsyncSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Box<dyn DartDebugTwinRustAsyncSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Box<dyn DartDebugTwinRustAsyncSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Box<dyn DartDebugTwinSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Box<dyn DartDebugTwinSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Box<dyn DartDebugTwinSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Box<dyn DartDebugTwinSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Box<dyn DartDebugTwinSync>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Box<dyn DartDebugTwinSync>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Box<dyn DartDebugTwinSyncMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Box<dyn DartDebugTwinSyncMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Box<dyn DartDebugTwinSyncSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Box<dyn DartDebugTwinSyncSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Box<dyn DartDebugTwinSyncSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Box<dyn DartDebugTwinSyncSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueReturnTwinMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueReturnTwinMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueReturnTwinNormal>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueReturnTwinNormal>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueReturnTwinRustAsync>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueReturnTwinRustAsync>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueReturnTwinRustAsyncMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueReturnTwinRustAsyncMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueReturnTwinRustAsyncSse>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueReturnTwinRustAsyncSse>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueReturnTwinRustAsyncSseMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueReturnTwinRustAsyncSseMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueReturnTwinSse>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueReturnTwinSse>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueReturnTwinSseMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueReturnTwinSseMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueReturnTwinSync>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueReturnTwinSync>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueReturnTwinSyncMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueReturnTwinSyncMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueReturnTwinSyncSse>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueReturnTwinSyncSse>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueReturnTwinSyncSseMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueReturnTwinSyncSseMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueSyncReturnTwinMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueSyncReturnTwinMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueSyncReturnTwinNormal>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueSyncReturnTwinNormal>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueSyncReturnTwinSse>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<FrbOpaqueSyncReturnTwinSse>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueSyncReturnTwinSseMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<FrbOpaqueSyncReturnTwinSseMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<HideDataAnotherTwinMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<HideDataAnotherTwinMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<HideDataAnotherTwinNormal>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<HideDataAnotherTwinNormal>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<HideDataAnotherTwinSse>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<HideDataAnotherTwinSse>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<HideDataAnotherTwinSseMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<HideDataAnotherTwinSseMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataTwinMoi(ptr: *const std::ffi::c_void) {
    MoiArc::<HideDataTwinMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataTwinMoi(ptr: *const std::ffi::c_void) {
    MoiArc::<HideDataTwinMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataTwinNormal(ptr: *const std::ffi::c_void) {
    unsafe {
        StdArc::<HideDataTwinNormal>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataTwinNormal(ptr: *const std::ffi::c_void) {
    unsafe {
        StdArc::<HideDataTwinNormal>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<HideDataTwinRustAsync>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<HideDataTwinRustAsync>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<HideDataTwinRustAsyncMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<HideDataTwinRustAsyncMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<HideDataTwinRustAsyncSse>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<HideDataTwinRustAsyncSse>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<HideDataTwinRustAsyncSseMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<HideDataTwinRustAsyncSseMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataTwinSse(ptr: *const std::ffi::c_void) {
    unsafe {
        StdArc::<HideDataTwinSse>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSse(ptr: *const std::ffi::c_void) {
    unsafe {
        StdArc::<HideDataTwinSse>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataTwinSseMoi(ptr: *const std::ffi::c_void) {
    MoiArc::<HideDataTwinSseMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSseMoi(ptr: *const std::ffi::c_void) {
    MoiArc::<HideDataTwinSseMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataTwinSync(ptr: *const std::ffi::c_void) {
    unsafe {
        StdArc::<HideDataTwinSync>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSync(ptr: *const std::ffi::c_void) {
    unsafe {
        StdArc::<HideDataTwinSync>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<HideDataTwinSyncMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<HideDataTwinSyncMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<HideDataTwinSyncSse>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<HideDataTwinSyncSse>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<HideDataTwinSyncSseMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<HideDataTwinSyncSseMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Mutex<HideDataTwinMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Mutex<HideDataTwinMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Mutex<HideDataTwinNormal>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Mutex<HideDataTwinNormal>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Mutex<HideDataTwinRustAsync>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Mutex<HideDataTwinRustAsync>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Mutex<HideDataTwinRustAsyncMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Mutex<HideDataTwinRustAsyncMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Mutex<HideDataTwinRustAsyncSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Mutex<HideDataTwinRustAsyncSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Mutex<HideDataTwinRustAsyncSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Mutex<HideDataTwinRustAsyncSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Mutex<HideDataTwinSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Mutex<HideDataTwinSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Mutex<HideDataTwinSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Mutex<HideDataTwinSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Mutex<HideDataTwinSync>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Mutex<HideDataTwinSync>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Mutex<HideDataTwinSyncMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Mutex<HideDataTwinSyncMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Mutex<HideDataTwinSyncSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<Mutex<HideDataTwinSyncSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Mutex<HideDataTwinSyncSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<Mutex<HideDataTwinSyncSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<NonCloneDataTwinMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<NonCloneDataTwinMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<NonCloneDataTwinNormal>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<NonCloneDataTwinNormal>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<NonCloneDataTwinRustAsync>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<NonCloneDataTwinRustAsync>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<NonCloneDataTwinRustAsyncMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<NonCloneDataTwinRustAsyncMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<NonCloneDataTwinRustAsyncSse>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<NonCloneDataTwinRustAsyncSse>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<NonCloneDataTwinRustAsyncSseMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<NonCloneDataTwinRustAsyncSseMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<NonCloneDataTwinSse>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<NonCloneDataTwinSse>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<NonCloneDataTwinSseMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<NonCloneDataTwinSseMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<NonCloneDataTwinSync>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<NonCloneDataTwinSync>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<NonCloneDataTwinSyncMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<NonCloneDataTwinSyncMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<NonCloneDataTwinSyncSse>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<NonCloneDataTwinSyncSse>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<NonCloneDataTwinSyncSseMoi>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<NonCloneDataTwinSyncSseMoi>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<RwLock<HideDataTwinMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<RwLock<HideDataTwinMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<RwLock<HideDataTwinNormal>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<RwLock<HideDataTwinNormal>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<RwLock<HideDataTwinRustAsync>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<RwLock<HideDataTwinRustAsync>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<RwLock<HideDataTwinRustAsyncMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<RwLock<HideDataTwinRustAsyncMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<RwLock<HideDataTwinRustAsyncSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<RwLock<HideDataTwinRustAsyncSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<RwLock<HideDataTwinRustAsyncSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<RwLock<HideDataTwinRustAsyncSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<RwLock<HideDataTwinSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<RwLock<HideDataTwinSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<RwLock<HideDataTwinSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<RwLock<HideDataTwinSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<RwLock<HideDataTwinSync>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<RwLock<HideDataTwinSync>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<RwLock<HideDataTwinSyncMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<RwLock<HideDataTwinSyncMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<RwLock<HideDataTwinSyncSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<RwLock<HideDataTwinSyncSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<RwLock<HideDataTwinSyncSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<RwLock<HideDataTwinSyncSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn Fn(String) -> String + Send + Sync>,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn Fn(String) -> String + Send + Sync>,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<Box < dyn HelloTraitTwinMoi >>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<Box < dyn HelloTraitTwinMoi >>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinNormal>>,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinNormal>>,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn HelloTraitTwinRustAsync>,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn HelloTraitTwinRustAsync>,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinRustAsyncMoi>>,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinRustAsyncMoi>>,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn HelloTraitTwinRustAsyncSse>,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn HelloTraitTwinRustAsyncSse>,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn HelloTraitTwinRustAsyncSseMoi>,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn HelloTraitTwinRustAsyncSseMoi>,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<Box < dyn HelloTraitTwinSse >>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<Box < dyn HelloTraitTwinSse >>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<Box < dyn HelloTraitTwinSseMoi >>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<Box < dyn HelloTraitTwinSseMoi >>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<Box < dyn HelloTraitTwinSync >>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<Box < dyn HelloTraitTwinSync >>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<Box < dyn HelloTraitTwinSyncMoi >>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<Box < dyn HelloTraitTwinSyncMoi >>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinSyncSse>>,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinSyncSse>>,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinSyncSseMoi>>,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinSyncSseMoi>>,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinMoi + Send + Sync>,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinMoi + Send + Sync>,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinNormal + Send + Sync>,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinNormal + Send + Sync>,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinRustAsyncMoi + Send + Sync>,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinRustAsyncMoi + Send + Sync>,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinRustAsync + Send + Sync>,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinRustAsync + Send + Sync>,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinRustAsyncSseMoi + Send + Sync>,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinRustAsyncSseMoi + Send + Sync>,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinRustAsyncSse + Send + Sync>,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinRustAsyncSse + Send + Sync>,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinSseMoi + Send + Sync>,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinSseMoi + Send + Sync>,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinSse + Send + Sync>,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinSse + Send + Sync>,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinSyncMoi + Send + Sync>,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinSyncMoi + Send + Sync>,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinSync + Send + Sync>,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinSync + Send + Sync>,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinSyncSseMoi + Send + Sync>,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            Box<dyn MyTraitTwinSyncSseMoi + Send + Sync>,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinSyncSse + Send + Sync>,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                Box<dyn MyTraitTwinSyncSse + Send + Sync>,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                ConstructorOpaqueStructTwinNormal,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                ConstructorOpaqueStructTwinNormal,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                ConstructorOpaqueSyncStructTwinNormal,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                ConstructorOpaqueSyncStructTwinNormal,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinNormal>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinNormal>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinRustAsync>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinRustAsync>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinRustAsyncSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinRustAsyncSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinSync>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinSync>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinSyncSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinSyncSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinMoi,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinMoi,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinNormal,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinNormal,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinSse,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinSse,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinSseMoi,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinSseMoi,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinSync,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinSync,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinNormal>,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinNormal>,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinRustAsync>,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinRustAsync>,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinRustAsyncMoi>,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinRustAsyncMoi>,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                NonCloneSimpleEnumTwinRustAsyncSse,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                NonCloneSimpleEnumTwinRustAsyncSse,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            NonCloneSimpleEnumTwinRustAsyncSseMoi,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            NonCloneSimpleEnumTwinRustAsyncSseMoi,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSync>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSync>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSyncMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSyncMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSyncSse>,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSyncSse>,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSyncSseMoi>,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSyncSseMoi>,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinNormal>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinNormal>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinRustAsync>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinRustAsync>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinRustAsyncMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinRustAsyncMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinRustAsyncSse>,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinRustAsyncSse>,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinRustAsyncSseMoi>,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinRustAsyncSseMoi>,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSync>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSync>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSyncMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSyncMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSyncSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSyncSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSyncSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSyncSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinNormal>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinNormal>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinRustAsync>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinRustAsync>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinRustAsyncMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinRustAsyncMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinRustAsyncSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinRustAsyncSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinRustAsyncSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinRustAsyncSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSync>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSync>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSyncMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSyncMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSyncSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSyncSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSyncSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSyncSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinNormal>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinNormal>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinRustAsync>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinRustAsync>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinRustAsyncMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinRustAsyncMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinRustAsyncSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinRustAsyncSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinRustAsyncSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinRustAsyncSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSync>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSync>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSyncMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSyncMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSyncSse>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSyncSse>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSyncSseMoi>>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSyncSseMoi>>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<StructInMiscNoTwinExampleA>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<StructInMiscNoTwinExampleA>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<StructInMiscNoTwinExampleB>>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::rust_async::RwLock<StructInMiscNoTwinExampleB>>::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinSse,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinSse,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinSync,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinSync,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse,
            >,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<
                StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse,
            >,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi,
        >,
    >::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
    ptr: *const std::ffi::c_void,
) {
    MoiArc::<
        flutter_rust_bridge::for_generated::rust_async::RwLock<
            StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi,
        >,
    >::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<StructWithImplBlockInMultiFile>,
        >::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<StructWithImplBlockInMultiFile>,
        >::decrement_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_i16(ptr: *const std::ffi::c_void) {
    MoiArc::<i16>::increment_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_i16(ptr: *const std::ffi::c_void) {
    MoiArc::<i16>::decrement_strong_count(ptr as _);
}

#[wasm_bindgen]
pub fn rust_arc_increment_strong_count_RustOpaque_i32(ptr: *const std::ffi::c_void) {
    unsafe {
        StdArc::<i32>::increment_strong_count(ptr as _);
    }
}

#[wasm_bindgen]
pub fn rust_arc_decrement_strong_count_RustOpaque_i32(ptr: *const std::ffi::c_void) {
    unsafe {
        StdArc::<i32>::decrement_strong_count(ptr as _);
    }
}
