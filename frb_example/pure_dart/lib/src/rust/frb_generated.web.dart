// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.29.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/array.dart';
import 'api/async_misc.dart';
import 'api/async_spawn.dart';
import 'api/attribute.dart';
import 'api/benchmark_misc.dart';
import 'api/chrono_type.dart';
import 'api/comment.dart';
import 'api/constructor.dart';
import 'api/customization.dart';
import 'api/dart_dynamic.dart';
import 'api/dart_fn.dart';
import 'api/dart_opaque.dart';
import 'api/dart_opaque_sync.dart';
import 'api/deliberate_name_conflict.dart';
import 'api/dropping.dart';
import 'api/enumeration.dart';
import 'api/event_listener.dart';
import 'api/exception.dart';
import 'api/external_type_in_crate.dart';
import 'api/inside_macro.dart';
import 'api/map_and_set.dart';
import 'api/method.dart';
import 'api/mirror.dart';
import 'api/misc_example.dart';
import 'api/misc_no_twin_example_a.dart';
import 'api/misc_no_twin_example_b.dart';
import 'api/misc_type.dart';
import 'api/newtype_pattern.dart';
import 'api/optional.dart';
import 'api/optional_primitive_misc.dart';
import 'api/primitive_list_misc.dart';
import 'api/primitive_misc.dart';
import 'api/pseudo_manual/array_twin_rust_async.dart';
import 'api/pseudo_manual/array_twin_rust_async_sse.dart';
import 'api/pseudo_manual/array_twin_sse.dart';
import 'api/pseudo_manual/array_twin_sync.dart';
import 'api/pseudo_manual/array_twin_sync_sse.dart';
import 'api/pseudo_manual/async_misc_twin_sse.dart';
import 'api/pseudo_manual/attribute_twin_rust_async.dart';
import 'api/pseudo_manual/attribute_twin_rust_async_sse.dart';
import 'api/pseudo_manual/attribute_twin_sse.dart';
import 'api/pseudo_manual/attribute_twin_sync.dart';
import 'api/pseudo_manual/attribute_twin_sync_sse.dart';
import 'api/pseudo_manual/basic.dart';
import 'api/pseudo_manual/basic_list.dart';
import 'api/pseudo_manual/basic_list_twin_rust_async.dart';
import 'api/pseudo_manual/basic_list_twin_rust_async_sse.dart';
import 'api/pseudo_manual/basic_list_twin_sse.dart';
import 'api/pseudo_manual/basic_list_twin_sync.dart';
import 'api/pseudo_manual/basic_list_twin_sync_sse.dart';
import 'api/pseudo_manual/basic_map.dart';
import 'api/pseudo_manual/basic_map_twin_rust_async.dart';
import 'api/pseudo_manual/basic_map_twin_rust_async_sse.dart';
import 'api/pseudo_manual/basic_map_twin_sse.dart';
import 'api/pseudo_manual/basic_map_twin_sync.dart';
import 'api/pseudo_manual/basic_map_twin_sync_sse.dart';
import 'api/pseudo_manual/basic_optional.dart';
import 'api/pseudo_manual/basic_optional_twin_rust_async.dart';
import 'api/pseudo_manual/basic_optional_twin_rust_async_sse.dart';
import 'api/pseudo_manual/basic_optional_twin_sse.dart';
import 'api/pseudo_manual/basic_optional_twin_sync.dart';
import 'api/pseudo_manual/basic_optional_twin_sync_sse.dart';
import 'api/pseudo_manual/basic_twin_rust_async.dart';
import 'api/pseudo_manual/basic_twin_rust_async_sse.dart';
import 'api/pseudo_manual/basic_twin_sse.dart';
import 'api/pseudo_manual/basic_twin_sync.dart';
import 'api/pseudo_manual/basic_twin_sync_sse.dart';
import 'api/pseudo_manual/benchmark_api.dart';
import 'api/pseudo_manual/benchmark_api_twin_rust_async.dart';
import 'api/pseudo_manual/benchmark_api_twin_rust_async_sse.dart';
import 'api/pseudo_manual/benchmark_api_twin_sse.dart';
import 'api/pseudo_manual/benchmark_api_twin_sync.dart';
import 'api/pseudo_manual/benchmark_api_twin_sync_sse.dart';
import 'api/pseudo_manual/chrono_type_twin_rust_async.dart';
import 'api/pseudo_manual/chrono_type_twin_rust_async_sse.dart';
import 'api/pseudo_manual/chrono_type_twin_sse.dart';
import 'api/pseudo_manual/chrono_type_twin_sync.dart';
import 'api/pseudo_manual/chrono_type_twin_sync_sse.dart';
import 'api/pseudo_manual/comment_twin_rust_async.dart';
import 'api/pseudo_manual/comment_twin_rust_async_sse.dart';
import 'api/pseudo_manual/comment_twin_sse.dart';
import 'api/pseudo_manual/comment_twin_sync.dart';
import 'api/pseudo_manual/comment_twin_sync_sse.dart';
import 'api/pseudo_manual/dart_dynamic_twin_rust_async.dart';
import 'api/pseudo_manual/dart_dynamic_twin_sync.dart';
import 'api/pseudo_manual/dart_fn_twin_rust_async.dart';
import 'api/pseudo_manual/dart_fn_twin_rust_async_sse.dart';
import 'api/pseudo_manual/dart_fn_twin_sse.dart';
import 'api/pseudo_manual/dart_opaque_sync_twin_sse.dart';
import 'api/pseudo_manual/dart_opaque_twin_rust_async.dart';
import 'api/pseudo_manual/dart_opaque_twin_rust_async_sse.dart';
import 'api/pseudo_manual/dart_opaque_twin_sse.dart';
import 'api/pseudo_manual/dart_opaque_twin_sync.dart';
import 'api/pseudo_manual/dart_opaque_twin_sync_sse.dart';
import 'api/pseudo_manual/dropping_twin_rust_async.dart';
import 'api/pseudo_manual/dropping_twin_rust_async_sse.dart';
import 'api/pseudo_manual/dropping_twin_sse.dart';
import 'api/pseudo_manual/dropping_twin_sync.dart';
import 'api/pseudo_manual/dropping_twin_sync_sse.dart';
import 'api/pseudo_manual/enumeration_twin_rust_async.dart';
import 'api/pseudo_manual/enumeration_twin_rust_async_sse.dart';
import 'api/pseudo_manual/enumeration_twin_sse.dart';
import 'api/pseudo_manual/enumeration_twin_sync.dart';
import 'api/pseudo_manual/enumeration_twin_sync_sse.dart';
import 'api/pseudo_manual/event_listener_twin_rust_async.dart';
import 'api/pseudo_manual/event_listener_twin_rust_async_sse.dart';
import 'api/pseudo_manual/event_listener_twin_sse.dart';
import 'api/pseudo_manual/exception_twin_rust_async.dart';
import 'api/pseudo_manual/exception_twin_rust_async_sse.dart';
import 'api/pseudo_manual/exception_twin_sse.dart';
import 'api/pseudo_manual/exception_twin_sync.dart';
import 'api/pseudo_manual/exception_twin_sync_sse.dart';
import 'api/pseudo_manual/external_type_in_crate_twin_rust_async.dart';
import 'api/pseudo_manual/external_type_in_crate_twin_rust_async_sse.dart';
import 'api/pseudo_manual/external_type_in_crate_twin_sse.dart';
import 'api/pseudo_manual/external_type_in_crate_twin_sync.dart';
import 'api/pseudo_manual/external_type_in_crate_twin_sync_sse.dart';
import 'api/pseudo_manual/map_and_set_twin_rust_async.dart';
import 'api/pseudo_manual/map_and_set_twin_rust_async_sse.dart';
import 'api/pseudo_manual/map_and_set_twin_sse.dart';
import 'api/pseudo_manual/map_and_set_twin_sync.dart';
import 'api/pseudo_manual/map_and_set_twin_sync_sse.dart';
import 'api/pseudo_manual/method_twin_rust_async.dart';
import 'api/pseudo_manual/method_twin_rust_async_sse.dart';
import 'api/pseudo_manual/method_twin_sse.dart';
import 'api/pseudo_manual/method_twin_sync.dart';
import 'api/pseudo_manual/method_twin_sync_sse.dart';
import 'api/pseudo_manual/mirror_twin_rust_async.dart';
import 'api/pseudo_manual/mirror_twin_rust_async_sse.dart';
import 'api/pseudo_manual/mirror_twin_sse.dart';
import 'api/pseudo_manual/mirror_twin_sync.dart';
import 'api/pseudo_manual/mirror_twin_sync_sse.dart';
import 'api/pseudo_manual/misc_example_twin_rust_async.dart';
import 'api/pseudo_manual/misc_example_twin_rust_async_sse.dart';
import 'api/pseudo_manual/misc_example_twin_sse.dart';
import 'api/pseudo_manual/misc_example_twin_sync.dart';
import 'api/pseudo_manual/misc_example_twin_sync_sse.dart';
import 'api/pseudo_manual/misc_type_twin_rust_async.dart';
import 'api/pseudo_manual/misc_type_twin_rust_async_sse.dart';
import 'api/pseudo_manual/misc_type_twin_sse.dart';
import 'api/pseudo_manual/misc_type_twin_sync.dart';
import 'api/pseudo_manual/misc_type_twin_sync_sse.dart';
import 'api/pseudo_manual/newtype_pattern_twin_rust_async.dart';
import 'api/pseudo_manual/newtype_pattern_twin_rust_async_sse.dart';
import 'api/pseudo_manual/newtype_pattern_twin_sse.dart';
import 'api/pseudo_manual/newtype_pattern_twin_sync.dart';
import 'api/pseudo_manual/newtype_pattern_twin_sync_sse.dart';
import 'api/pseudo_manual/optional_primitive_misc_twin_rust_async.dart';
import 'api/pseudo_manual/optional_primitive_misc_twin_rust_async_sse.dart';
import 'api/pseudo_manual/optional_primitive_misc_twin_sse.dart';
import 'api/pseudo_manual/optional_primitive_misc_twin_sync.dart';
import 'api/pseudo_manual/optional_primitive_misc_twin_sync_sse.dart';
import 'api/pseudo_manual/optional_twin_rust_async.dart';
import 'api/pseudo_manual/optional_twin_rust_async_sse.dart';
import 'api/pseudo_manual/optional_twin_sse.dart';
import 'api/pseudo_manual/optional_twin_sync.dart';
import 'api/pseudo_manual/optional_twin_sync_sse.dart';
import 'api/pseudo_manual/primitive_list_misc_twin_rust_async.dart';
import 'api/pseudo_manual/primitive_list_misc_twin_rust_async_sse.dart';
import 'api/pseudo_manual/primitive_list_misc_twin_sse.dart';
import 'api/pseudo_manual/primitive_list_misc_twin_sync.dart';
import 'api/pseudo_manual/primitive_list_misc_twin_sync_sse.dart';
import 'api/pseudo_manual/primitive_misc_twin_rust_async.dart';
import 'api/pseudo_manual/primitive_misc_twin_rust_async_sse.dart';
import 'api/pseudo_manual/primitive_misc_twin_sse.dart';
import 'api/pseudo_manual/primitive_misc_twin_sync.dart';
import 'api/pseudo_manual/primitive_misc_twin_sync_sse.dart';
import 'api/pseudo_manual/raw_string_twin_rust_async.dart';
import 'api/pseudo_manual/raw_string_twin_rust_async_sse.dart';
import 'api/pseudo_manual/raw_string_twin_sse.dart';
import 'api/pseudo_manual/raw_string_twin_sync.dart';
import 'api/pseudo_manual/raw_string_twin_sync_sse.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_moi.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_rust_async.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_rust_async_moi.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_rust_async_sse.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_rust_async_sse_moi.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_sse.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_sse_moi.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_sync.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_sync_moi.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_sync_sse.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_sync_sse_moi.dart';
import 'api/pseudo_manual/rust_opaque_sync_twin_moi.dart';
import 'api/pseudo_manual/rust_opaque_sync_twin_sse.dart';
import 'api/pseudo_manual/rust_opaque_sync_twin_sse_moi.dart';
import 'api/pseudo_manual/rust_opaque_twin_moi.dart';
import 'api/pseudo_manual/rust_opaque_twin_rust_async.dart';
import 'api/pseudo_manual/rust_opaque_twin_rust_async_moi.dart';
import 'api/pseudo_manual/rust_opaque_twin_rust_async_sse.dart';
import 'api/pseudo_manual/rust_opaque_twin_rust_async_sse_moi.dart';
import 'api/pseudo_manual/rust_opaque_twin_sse.dart';
import 'api/pseudo_manual/rust_opaque_twin_sse_moi.dart';
import 'api/pseudo_manual/rust_opaque_twin_sync.dart';
import 'api/pseudo_manual/rust_opaque_twin_sync_moi.dart';
import 'api/pseudo_manual/rust_opaque_twin_sync_sse.dart';
import 'api/pseudo_manual/rust_opaque_twin_sync_sse_moi.dart';
import 'api/pseudo_manual/simple_twin_rust_async.dart';
import 'api/pseudo_manual/simple_twin_rust_async_sse.dart';
import 'api/pseudo_manual/simple_twin_sse.dart';
import 'api/pseudo_manual/simple_twin_sync.dart';
import 'api/pseudo_manual/simple_twin_sync_sse.dart';
import 'api/pseudo_manual/stream_misc_twin_sse.dart';
import 'api/pseudo_manual/stream_twin_rust_async.dart';
import 'api/pseudo_manual/stream_twin_rust_async_sse.dart';
import 'api/pseudo_manual/stream_twin_sse.dart';
import 'api/pseudo_manual/structure_twin_rust_async.dart';
import 'api/pseudo_manual/structure_twin_rust_async_sse.dart';
import 'api/pseudo_manual/structure_twin_sse.dart';
import 'api/pseudo_manual/structure_twin_sync.dart';
import 'api/pseudo_manual/structure_twin_sync_sse.dart';
import 'api/pseudo_manual/tuple_twin_rust_async.dart';
import 'api/pseudo_manual/tuple_twin_rust_async_sse.dart';
import 'api/pseudo_manual/tuple_twin_sse.dart';
import 'api/pseudo_manual/tuple_twin_sync.dart';
import 'api/pseudo_manual/tuple_twin_sync_sse.dart';
import 'api/pseudo_manual/type_alias_twin_rust_async.dart';
import 'api/pseudo_manual/type_alias_twin_rust_async_sse.dart';
import 'api/pseudo_manual/type_alias_twin_sse.dart';
import 'api/pseudo_manual/type_alias_twin_sync.dart';
import 'api/pseudo_manual/type_alias_twin_sync_sse.dart';
import 'api/pseudo_manual/uuid_type_twin_rust_async.dart';
import 'api/pseudo_manual/uuid_type_twin_rust_async_sse.dart';
import 'api/pseudo_manual/uuid_type_twin_sse.dart';
import 'api/pseudo_manual/uuid_type_twin_sync.dart';
import 'api/pseudo_manual/uuid_type_twin_sync_sse.dart';
import 'api/raw_string.dart';
import 'api/rust_auto_opaque.dart';
import 'api/rust_opaque.dart';
import 'api/rust_opaque_sync.dart';
import 'api/simple.dart';
import 'api/stream.dart';
import 'api/stream_misc.dart';
import 'api/structure.dart';
import 'api/tuple.dart';
import 'api/type_alias.dart';
import 'api/uuid_type.dart';
import 'auxiliary/new_module_system/sub_module.dart';
import 'auxiliary/old_module_system/sub_module.dart';
import 'auxiliary/sample_types.dart';
import 'dart:async';
import 'dart:convert';
import 'deliberate_name_conflict.dart';
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';
import 'package:meta/meta.dart' as meta;
import 'package:uuid/uuid.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinNormalPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinRustAsyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinRustAsyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinRustAsyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinRustAsyncSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinSyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinSyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinSyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinSyncSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinNormalPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinRustAsyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinRustAsyncMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinRustAsyncSsePtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinRustAsyncSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinSyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinSyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinSyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinSyncSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueSyncReturnTwinMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueSyncReturnTwinNormalPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueSyncReturnTwinSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueSyncReturnTwinSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataAnotherTwinMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataAnotherTwinNormalPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataAnotherTwinSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataAnotherTwinSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_HideDataTwinMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinNormalPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_HideDataTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinRustAsyncPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinRustAsyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinRustAsyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinRustAsyncSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinSsePtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinSyncPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinSyncMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinSyncSsePtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinSyncSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinNormalPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinRustAsyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinRustAsyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinRustAsyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinRustAsyncSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinSsePtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinSyncPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinSyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinSyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinSyncSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinNormalPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinRustAsyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinRustAsyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinRustAsyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinRustAsyncSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinSsePtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinSyncPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinSyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinSyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinSyncSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinNormalPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinRustAsyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinRustAsyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinRustAsyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinRustAsyncSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinSsePtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinSyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinSyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinSyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinSyncSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxFnStringStringPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinNormalPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinRustAsyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinRustAsyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinRustAsyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinRustAsyncSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinNormalPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinRustAsyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinRustAsyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinRustAsyncSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinRustAsyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinSyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinSyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinSyncSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinSyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_ConstructorOpaqueStructTwinNormalPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_ConstructorOpaqueSyncStructTwinNormalPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DroppableTwinNormalPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DroppableTwinRustAsyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DroppableTwinRustAsyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DroppableTwinSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DroppableTwinSyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DroppableTwinSyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinNormalPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSsePtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSsePtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSyncPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSyncSsePtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinNormalPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinRustAsyncPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinRustAsyncMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinRustAsyncSsePtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinRustAsyncSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSyncSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinNormalPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinRustAsyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinRustAsyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinRustAsyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinRustAsyncSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinNormalPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinRustAsyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinRustAsyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinRustAsyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinRustAsyncSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinSyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinSyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinSyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinSyncSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinNormalPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinRustAsyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinRustAsyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinRustAsyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinRustAsyncSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinSyncPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinSyncMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinSyncSsePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinSyncSseMoiPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructInMiscNoTwinExampleAPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructInMiscNoTwinExampleBPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinNormalPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSsePtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSsePtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSsePtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoiPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithImplBlockInMultiFilePtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_I16Ptr =>
      wire.rust_arc_decrement_strong_count_RustOpaque_i16;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_I32Ptr =>
      wire.rust_arc_decrement_strong_count_RustOpaque_i32;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  BoxFnStringString
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          dynamic raw);

  @protected
  BoxMyTraitTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          dynamic raw);

  @protected
  ConstructorOpaqueStructTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          dynamic raw);

  @protected
  ConstructorOpaqueSyncStructTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          dynamic raw);

  @protected
  DroppableTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          dynamic raw);

  @protected
  DroppableTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          dynamic raw);

  @protected
  DroppableTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          dynamic raw);

  @protected
  DroppableTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          dynamic raw);

  @protected
  DroppableTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          dynamic raw);

  @protected
  DroppableTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          dynamic raw);

  @protected
  OpaqueOneTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          dynamic raw);

  @protected
  OpaqueOneTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          dynamic raw);

  @protected
  OpaqueOneTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          dynamic raw);

  @protected
  OpaqueTwoTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          dynamic raw);

  @protected
  OpaqueTwoTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          dynamic raw);

  @protected
  OpaqueTwoTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          dynamic raw);

  @protected
  StructInMiscNoTwinExampleA
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinNormal
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsync
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSseMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSync
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          dynamic raw);

  @protected
  DroppableTwinNormal
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          dynamic raw);

  @protected
  DroppableTwinRustAsync
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          dynamic raw);

  @protected
  DroppableTwinRustAsyncSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          dynamic raw);

  @protected
  DroppableTwinSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          dynamic raw);

  @protected
  DroppableTwinSync
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          dynamic raw);

  @protected
  DroppableTwinSyncSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsync
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSseMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSync
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinNormal
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          dynamic raw);

  @protected
  ConstructorOpaqueStructTwinNormal
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          dynamic raw);

  @protected
  ConstructorOpaqueSyncStructTwinNormal
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          dynamic raw);

  @protected
  DroppableTwinNormal
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          dynamic raw);

  @protected
  DroppableTwinRustAsync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          dynamic raw);

  @protected
  DroppableTwinRustAsyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          dynamic raw);

  @protected
  DroppableTwinSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          dynamic raw);

  @protected
  DroppableTwinSync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          dynamic raw);

  @protected
  DroppableTwinSyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinNormal
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic raw);

  @protected
  StructInMiscNoTwinExampleA
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          dynamic raw);

  @protected
  StructInMiscNoTwinExampleB
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          dynamic raw);

  @protected
  StructWithImplBlockInMultiFile
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          dynamic raw);

  @protected
  String dco_decode_Backtrace(dynamic raw);

  @protected
  Duration dco_decode_Chrono_Duration(dynamic raw);

  @protected
  DateTime dco_decode_Chrono_Local(dynamic raw);

  @protected
  DateTime dco_decode_Chrono_Naive(dynamic raw);

  @protected
  DateTime dco_decode_Chrono_Utc(dynamic raw);

  @protected
  FutureOr<void> Function(Object)
      dco_decode_DartFn_Inputs_DartOpaque_Output_unit(dynamic raw);

  @protected
  FutureOr<void> Function(String) dco_decode_DartFn_Inputs_String_Output_unit(
      dynamic raw);

  @protected
  FutureOr<void> Function(String, DemoStructForRustCallDartTwinNormal)
      dco_decode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_normal_Output_unit(
          dynamic raw);

  @protected
  FutureOr<void> Function(String, DemoStructForRustCallDartTwinRustAsync)
      dco_decode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_Output_unit(
          dynamic raw);

  @protected
  FutureOr<void> Function(String, DemoStructForRustCallDartTwinRustAsyncSse)
      dco_decode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_sse_Output_unit(
          dynamic raw);

  @protected
  FutureOr<void> Function(String, DemoStructForRustCallDartTwinSse)
      dco_decode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_sse_Output_unit(
          dynamic raw);

  @protected
  FutureOr<Object> Function() dco_decode_DartFn_Inputs__Output_DartOpaque(
      dynamic raw);

  @protected
  FutureOr<String> Function() dco_decode_DartFn_Inputs__Output_String(
      dynamic raw);

  @protected
  FutureOr<void> Function() dco_decode_DartFn_Inputs__Output_unit(dynamic raw);

  @protected
  FutureOr<DemoStructForRustCallDartTwinNormal> Function(
          DemoStructForRustCallDartTwinNormal)
      dco_decode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_normal_Output_demo_struct_for_rust_call_dart_twin_normal(
          dynamic raw);

  @protected
  FutureOr<DemoStructForRustCallDartTwinRustAsync> Function(
          DemoStructForRustCallDartTwinRustAsync)
      dco_decode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_Output_demo_struct_for_rust_call_dart_twin_rust_async(
          dynamic raw);

  @protected
  FutureOr<DemoStructForRustCallDartTwinRustAsyncSse> Function(
          DemoStructForRustCallDartTwinRustAsyncSse)
      dco_decode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_sse_Output_demo_struct_for_rust_call_dart_twin_rust_async_sse(
          dynamic raw);

  @protected
  FutureOr<DemoStructForRustCallDartTwinSse> Function(
          DemoStructForRustCallDartTwinSse)
      dco_decode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_sse_Output_demo_struct_for_rust_call_dart_twin_sse(
          dynamic raw);

  @protected
  Object dco_decode_DartOpaque(dynamic raw);

  @protected
  ObjectArray1 dco_decode_DartOpaque_array_1(dynamic raw);

  @protected
  Map<String, String> dco_decode_Map_String_String(dynamic raw);

  @protected
  Map<String, EnumSimpleTwinNormal>
      dco_decode_Map_String_enum_simple_twin_normal(dynamic raw);

  @protected
  Map<String, EnumSimpleTwinRustAsync>
      dco_decode_Map_String_enum_simple_twin_rust_async(dynamic raw);

  @protected
  Map<String, EnumSimpleTwinRustAsyncSse>
      dco_decode_Map_String_enum_simple_twin_rust_async_sse(dynamic raw);

  @protected
  Map<String, EnumSimpleTwinSse> dco_decode_Map_String_enum_simple_twin_sse(
      dynamic raw);

  @protected
  Map<String, EnumSimpleTwinSync> dco_decode_Map_String_enum_simple_twin_sync(
      dynamic raw);

  @protected
  Map<String, EnumSimpleTwinSyncSse>
      dco_decode_Map_String_enum_simple_twin_sync_sse(dynamic raw);

  @protected
  Map<String, HashMapValue> dco_decode_Map_String_hash_map_value(dynamic raw);

  @protected
  Map<String, KitchenSinkTwinNormal>
      dco_decode_Map_String_kitchen_sink_twin_normal(dynamic raw);

  @protected
  Map<String, KitchenSinkTwinRustAsync>
      dco_decode_Map_String_kitchen_sink_twin_rust_async(dynamic raw);

  @protected
  Map<String, KitchenSinkTwinRustAsyncSse>
      dco_decode_Map_String_kitchen_sink_twin_rust_async_sse(dynamic raw);

  @protected
  Map<String, KitchenSinkTwinSse> dco_decode_Map_String_kitchen_sink_twin_sse(
      dynamic raw);

  @protected
  Map<String, KitchenSinkTwinSync> dco_decode_Map_String_kitchen_sink_twin_sync(
      dynamic raw);

  @protected
  Map<String, KitchenSinkTwinSyncSse>
      dco_decode_Map_String_kitchen_sink_twin_sync_sse(dynamic raw);

  @protected
  Map<String, Uint8List> dco_decode_Map_String_list_prim_u_8_strict(
      dynamic raw);

  @protected
  Map<String, MySize> dco_decode_Map_String_my_size(dynamic raw);

  @protected
  Map<int, String> dco_decode_Map_i_32_String(dynamic raw);

  @protected
  Map<int, BasicGeneralEnumTwinNormal>
      dco_decode_Map_i_32_basic_general_enum_twin_normal(dynamic raw);

  @protected
  Map<int, BasicGeneralEnumTwinRustAsync>
      dco_decode_Map_i_32_basic_general_enum_twin_rust_async(dynamic raw);

  @protected
  Map<int, BasicGeneralEnumTwinRustAsyncSse>
      dco_decode_Map_i_32_basic_general_enum_twin_rust_async_sse(dynamic raw);

  @protected
  Map<int, BasicGeneralEnumTwinSse>
      dco_decode_Map_i_32_basic_general_enum_twin_sse(dynamic raw);

  @protected
  Map<int, BasicGeneralEnumTwinSync>
      dco_decode_Map_i_32_basic_general_enum_twin_sync(dynamic raw);

  @protected
  Map<int, BasicGeneralEnumTwinSyncSse>
      dco_decode_Map_i_32_basic_general_enum_twin_sync_sse(dynamic raw);

  @protected
  Map<int, BasicPrimitiveEnumTwinNormal>
      dco_decode_Map_i_32_basic_primitive_enum_twin_normal(dynamic raw);

  @protected
  Map<int, BasicPrimitiveEnumTwinRustAsync>
      dco_decode_Map_i_32_basic_primitive_enum_twin_rust_async(dynamic raw);

  @protected
  Map<int, BasicPrimitiveEnumTwinRustAsyncSse>
      dco_decode_Map_i_32_basic_primitive_enum_twin_rust_async_sse(dynamic raw);

  @protected
  Map<int, BasicPrimitiveEnumTwinSse>
      dco_decode_Map_i_32_basic_primitive_enum_twin_sse(dynamic raw);

  @protected
  Map<int, BasicPrimitiveEnumTwinSync>
      dco_decode_Map_i_32_basic_primitive_enum_twin_sync(dynamic raw);

  @protected
  Map<int, BasicPrimitiveEnumTwinSyncSse>
      dco_decode_Map_i_32_basic_primitive_enum_twin_sync_sse(dynamic raw);

  @protected
  Map<int, BasicStructTwinNormal> dco_decode_Map_i_32_basic_struct_twin_normal(
      dynamic raw);

  @protected
  Map<int, BasicStructTwinRustAsync>
      dco_decode_Map_i_32_basic_struct_twin_rust_async(dynamic raw);

  @protected
  Map<int, BasicStructTwinRustAsyncSse>
      dco_decode_Map_i_32_basic_struct_twin_rust_async_sse(dynamic raw);

  @protected
  Map<int, BasicStructTwinSse> dco_decode_Map_i_32_basic_struct_twin_sse(
      dynamic raw);

  @protected
  Map<int, BasicStructTwinSync> dco_decode_Map_i_32_basic_struct_twin_sync(
      dynamic raw);

  @protected
  Map<int, BasicStructTwinSyncSse>
      dco_decode_Map_i_32_basic_struct_twin_sync_sse(dynamic raw);

  @protected
  Map<int, bool> dco_decode_Map_i_32_bool(dynamic raw);

  @protected
  Map<int, double> dco_decode_Map_i_32_f_32(dynamic raw);

  @protected
  Map<int, double> dco_decode_Map_i_32_f_64(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_i_16(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_i_32(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_i_64(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_i_8(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_isize(dynamic raw);

  @protected
  Map<int, Uint8List> dco_decode_Map_i_32_list_prim_u_8_strict(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_u_16(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_u_32(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_u_64(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_u_8(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_usize(dynamic raw);

  @protected
  Map<int, ApplicationMode> dco_decode_Map_u_8_application_mode(dynamic raw);

  @protected
  BoxDartDebugTwinMoi dco_decode_RustOpaque_BoxdynDartDebugTwinMoi(dynamic raw);

  @protected
  BoxDartDebugTwinNormal dco_decode_RustOpaque_BoxdynDartDebugTwinNormal(
      dynamic raw);

  @protected
  BoxDartDebugTwinRustAsync dco_decode_RustOpaque_BoxdynDartDebugTwinRustAsync(
      dynamic raw);

  @protected
  BoxDartDebugTwinRustAsyncMoi
      dco_decode_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(dynamic raw);

  @protected
  BoxDartDebugTwinRustAsyncSse
      dco_decode_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(dynamic raw);

  @protected
  BoxDartDebugTwinRustAsyncSseMoi
      dco_decode_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(dynamic raw);

  @protected
  BoxDartDebugTwinSse dco_decode_RustOpaque_BoxdynDartDebugTwinSse(dynamic raw);

  @protected
  BoxDartDebugTwinSseMoi dco_decode_RustOpaque_BoxdynDartDebugTwinSseMoi(
      dynamic raw);

  @protected
  BoxDartDebugTwinSync dco_decode_RustOpaque_BoxdynDartDebugTwinSync(
      dynamic raw);

  @protected
  BoxDartDebugTwinSyncMoi dco_decode_RustOpaque_BoxdynDartDebugTwinSyncMoi(
      dynamic raw);

  @protected
  BoxDartDebugTwinSyncSse dco_decode_RustOpaque_BoxdynDartDebugTwinSyncSse(
      dynamic raw);

  @protected
  BoxDartDebugTwinSyncSseMoi
      dco_decode_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(dynamic raw);

  @protected
  FrbOpaqueReturnTwinMoi dco_decode_RustOpaque_FrbOpaqueReturnTwinMoi(
      dynamic raw);

  @protected
  FrbOpaqueReturnTwinNormal dco_decode_RustOpaque_FrbOpaqueReturnTwinNormal(
      dynamic raw);

  @protected
  FrbOpaqueReturnTwinRustAsync
      dco_decode_RustOpaque_FrbOpaqueReturnTwinRustAsync(dynamic raw);

  @protected
  FrbOpaqueReturnTwinRustAsyncMoi
      dco_decode_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(dynamic raw);

  @protected
  FrbOpaqueReturnTwinRustAsyncSse
      dco_decode_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(dynamic raw);

  @protected
  FrbOpaqueReturnTwinRustAsyncSseMoi
      dco_decode_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(dynamic raw);

  @protected
  FrbOpaqueReturnTwinSse dco_decode_RustOpaque_FrbOpaqueReturnTwinSse(
      dynamic raw);

  @protected
  FrbOpaqueReturnTwinSseMoi dco_decode_RustOpaque_FrbOpaqueReturnTwinSseMoi(
      dynamic raw);

  @protected
  FrbOpaqueReturnTwinSync dco_decode_RustOpaque_FrbOpaqueReturnTwinSync(
      dynamic raw);

  @protected
  FrbOpaqueReturnTwinSyncMoi dco_decode_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
      dynamic raw);

  @protected
  FrbOpaqueReturnTwinSyncSse dco_decode_RustOpaque_FrbOpaqueReturnTwinSyncSse(
      dynamic raw);

  @protected
  FrbOpaqueReturnTwinSyncSseMoi
      dco_decode_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(dynamic raw);

  @protected
  FrbOpaqueSyncReturnTwinMoi dco_decode_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
      dynamic raw);

  @protected
  FrbOpaqueSyncReturnTwinNormal
      dco_decode_RustOpaque_FrbOpaqueSyncReturnTwinNormal(dynamic raw);

  @protected
  FrbOpaqueSyncReturnTwinSse dco_decode_RustOpaque_FrbOpaqueSyncReturnTwinSse(
      dynamic raw);

  @protected
  FrbOpaqueSyncReturnTwinSseMoi
      dco_decode_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(dynamic raw);

  @protected
  HideDataAnotherTwinMoi dco_decode_RustOpaque_HideDataAnotherTwinMoi(
      dynamic raw);

  @protected
  HideDataAnotherTwinNormal dco_decode_RustOpaque_HideDataAnotherTwinNormal(
      dynamic raw);

  @protected
  HideDataAnotherTwinSse dco_decode_RustOpaque_HideDataAnotherTwinSse(
      dynamic raw);

  @protected
  HideDataAnotherTwinSseMoi dco_decode_RustOpaque_HideDataAnotherTwinSseMoi(
      dynamic raw);

  @protected
  HideDataTwinMoi dco_decode_RustOpaque_HideDataTwinMoi(dynamic raw);

  @protected
  HideDataTwinMoiArray2 dco_decode_RustOpaque_HideDataTwinMoi_array_2(
      dynamic raw);

  @protected
  HideDataTwinNormal dco_decode_RustOpaque_HideDataTwinNormal(dynamic raw);

  @protected
  HideDataTwinNormalArray2 dco_decode_RustOpaque_HideDataTwinNormal_array_2(
      dynamic raw);

  @protected
  HideDataTwinRustAsync dco_decode_RustOpaque_HideDataTwinRustAsync(
      dynamic raw);

  @protected
  HideDataTwinRustAsyncMoi dco_decode_RustOpaque_HideDataTwinRustAsyncMoi(
      dynamic raw);

  @protected
  HideDataTwinRustAsyncMoiArray2
      dco_decode_RustOpaque_HideDataTwinRustAsyncMoi_array_2(dynamic raw);

  @protected
  HideDataTwinRustAsyncSse dco_decode_RustOpaque_HideDataTwinRustAsyncSse(
      dynamic raw);

  @protected
  HideDataTwinRustAsyncSseMoi dco_decode_RustOpaque_HideDataTwinRustAsyncSseMoi(
      dynamic raw);

  @protected
  HideDataTwinRustAsyncSseMoiArray2
      dco_decode_RustOpaque_HideDataTwinRustAsyncSseMoi_array_2(dynamic raw);

  @protected
  HideDataTwinRustAsyncSseArray2
      dco_decode_RustOpaque_HideDataTwinRustAsyncSse_array_2(dynamic raw);

  @protected
  HideDataTwinRustAsyncArray2
      dco_decode_RustOpaque_HideDataTwinRustAsync_array_2(dynamic raw);

  @protected
  HideDataTwinSse dco_decode_RustOpaque_HideDataTwinSse(dynamic raw);

  @protected
  HideDataTwinSseMoi dco_decode_RustOpaque_HideDataTwinSseMoi(dynamic raw);

  @protected
  HideDataTwinSseMoiArray2 dco_decode_RustOpaque_HideDataTwinSseMoi_array_2(
      dynamic raw);

  @protected
  HideDataTwinSseArray2 dco_decode_RustOpaque_HideDataTwinSse_array_2(
      dynamic raw);

  @protected
  HideDataTwinSync dco_decode_RustOpaque_HideDataTwinSync(dynamic raw);

  @protected
  HideDataTwinSyncMoi dco_decode_RustOpaque_HideDataTwinSyncMoi(dynamic raw);

  @protected
  HideDataTwinSyncMoiArray2 dco_decode_RustOpaque_HideDataTwinSyncMoi_array_2(
      dynamic raw);

  @protected
  HideDataTwinSyncSse dco_decode_RustOpaque_HideDataTwinSyncSse(dynamic raw);

  @protected
  HideDataTwinSyncSseMoi dco_decode_RustOpaque_HideDataTwinSyncSseMoi(
      dynamic raw);

  @protected
  HideDataTwinSyncSseMoiArray2
      dco_decode_RustOpaque_HideDataTwinSyncSseMoi_array_2(dynamic raw);

  @protected
  HideDataTwinSyncSseArray2 dco_decode_RustOpaque_HideDataTwinSyncSse_array_2(
      dynamic raw);

  @protected
  HideDataTwinSyncArray2 dco_decode_RustOpaque_HideDataTwinSync_array_2(
      dynamic raw);

  @protected
  MutexHideDataTwinMoi dco_decode_RustOpaque_MutexHideDataTwinMoi(dynamic raw);

  @protected
  MutexHideDataTwinNormal dco_decode_RustOpaque_MutexHideDataTwinNormal(
      dynamic raw);

  @protected
  MutexHideDataTwinRustAsync dco_decode_RustOpaque_MutexHideDataTwinRustAsync(
      dynamic raw);

  @protected
  MutexHideDataTwinRustAsyncMoi
      dco_decode_RustOpaque_MutexHideDataTwinRustAsyncMoi(dynamic raw);

  @protected
  MutexHideDataTwinRustAsyncSse
      dco_decode_RustOpaque_MutexHideDataTwinRustAsyncSse(dynamic raw);

  @protected
  MutexHideDataTwinRustAsyncSseMoi
      dco_decode_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(dynamic raw);

  @protected
  MutexHideDataTwinSse dco_decode_RustOpaque_MutexHideDataTwinSse(dynamic raw);

  @protected
  MutexHideDataTwinSseMoi dco_decode_RustOpaque_MutexHideDataTwinSseMoi(
      dynamic raw);

  @protected
  MutexHideDataTwinSync dco_decode_RustOpaque_MutexHideDataTwinSync(
      dynamic raw);

  @protected
  MutexHideDataTwinSyncMoi dco_decode_RustOpaque_MutexHideDataTwinSyncMoi(
      dynamic raw);

  @protected
  MutexHideDataTwinSyncSse dco_decode_RustOpaque_MutexHideDataTwinSyncSse(
      dynamic raw);

  @protected
  MutexHideDataTwinSyncSseMoi dco_decode_RustOpaque_MutexHideDataTwinSyncSseMoi(
      dynamic raw);

  @protected
  NonCloneDataTwinMoi dco_decode_RustOpaque_NonCloneDataTwinMoi(dynamic raw);

  @protected
  NonCloneDataTwinNormal dco_decode_RustOpaque_NonCloneDataTwinNormal(
      dynamic raw);

  @protected
  NonCloneDataTwinRustAsync dco_decode_RustOpaque_NonCloneDataTwinRustAsync(
      dynamic raw);

  @protected
  NonCloneDataTwinRustAsyncMoi
      dco_decode_RustOpaque_NonCloneDataTwinRustAsyncMoi(dynamic raw);

  @protected
  NonCloneDataTwinRustAsyncSse
      dco_decode_RustOpaque_NonCloneDataTwinRustAsyncSse(dynamic raw);

  @protected
  NonCloneDataTwinRustAsyncSseMoi
      dco_decode_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(dynamic raw);

  @protected
  NonCloneDataTwinSse dco_decode_RustOpaque_NonCloneDataTwinSse(dynamic raw);

  @protected
  NonCloneDataTwinSseMoi dco_decode_RustOpaque_NonCloneDataTwinSseMoi(
      dynamic raw);

  @protected
  NonCloneDataTwinSync dco_decode_RustOpaque_NonCloneDataTwinSync(dynamic raw);

  @protected
  NonCloneDataTwinSyncMoi dco_decode_RustOpaque_NonCloneDataTwinSyncMoi(
      dynamic raw);

  @protected
  NonCloneDataTwinSyncSse dco_decode_RustOpaque_NonCloneDataTwinSyncSse(
      dynamic raw);

  @protected
  NonCloneDataTwinSyncSseMoi dco_decode_RustOpaque_NonCloneDataTwinSyncSseMoi(
      dynamic raw);

  @protected
  RwLockHideDataTwinMoi dco_decode_RustOpaque_RwLockHideDataTwinMoi(
      dynamic raw);

  @protected
  RwLockHideDataTwinNormal dco_decode_RustOpaque_RwLockHideDataTwinNormal(
      dynamic raw);

  @protected
  RwLockHideDataTwinRustAsync dco_decode_RustOpaque_RwLockHideDataTwinRustAsync(
      dynamic raw);

  @protected
  RwLockHideDataTwinRustAsyncMoi
      dco_decode_RustOpaque_RwLockHideDataTwinRustAsyncMoi(dynamic raw);

  @protected
  RwLockHideDataTwinRustAsyncSse
      dco_decode_RustOpaque_RwLockHideDataTwinRustAsyncSse(dynamic raw);

  @protected
  RwLockHideDataTwinRustAsyncSseMoi
      dco_decode_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(dynamic raw);

  @protected
  RwLockHideDataTwinSse dco_decode_RustOpaque_RwLockHideDataTwinSse(
      dynamic raw);

  @protected
  RwLockHideDataTwinSseMoi dco_decode_RustOpaque_RwLockHideDataTwinSseMoi(
      dynamic raw);

  @protected
  RwLockHideDataTwinSync dco_decode_RustOpaque_RwLockHideDataTwinSync(
      dynamic raw);

  @protected
  RwLockHideDataTwinSyncMoi dco_decode_RustOpaque_RwLockHideDataTwinSyncMoi(
      dynamic raw);

  @protected
  RwLockHideDataTwinSyncSse dco_decode_RustOpaque_RwLockHideDataTwinSyncSse(
      dynamic raw);

  @protected
  RwLockHideDataTwinSyncSseMoi
      dco_decode_RustOpaque_RwLockHideDataTwinSyncSseMoi(dynamic raw);

  @protected
  BoxFnStringString
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          dynamic raw);

  @protected
  BoxMyTraitTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          dynamic raw);

  @protected
  ConstructorOpaqueStructTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          dynamic raw);

  @protected
  ConstructorOpaqueSyncStructTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          dynamic raw);

  @protected
  DroppableTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          dynamic raw);

  @protected
  DroppableTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          dynamic raw);

  @protected
  DroppableTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          dynamic raw);

  @protected
  DroppableTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          dynamic raw);

  @protected
  DroppableTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          dynamic raw);

  @protected
  DroppableTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          dynamic raw);

  @protected
  OpaqueOneTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          dynamic raw);

  @protected
  OpaqueOneTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          dynamic raw);

  @protected
  OpaqueOneTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          dynamic raw);

  @protected
  OpaqueTwoTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          dynamic raw);

  @protected
  OpaqueTwoTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          dynamic raw);

  @protected
  OpaqueTwoTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          dynamic raw);

  @protected
  StructInMiscNoTwinExampleA
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          dynamic raw);

  @protected
  StructInMiscNoTwinExampleB
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          dynamic raw);

  @protected
  StructWithImplBlockInMultiFile
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          dynamic raw);

  @protected
  I16 dco_decode_RustOpaque_i16(dynamic raw);

  @protected
  I32 dco_decode_RustOpaque_i32(dynamic raw);

  @protected
  Set<String> dco_decode_Set_String(dynamic raw);

  @protected
  Set<ApplicationMode> dco_decode_Set_application_mode(dynamic raw);

  @protected
  Set<int> dco_decode_Set_i_32(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  UuidValue dco_decode_Uuid(dynamic raw);

  @protected
  ATwinNormal dco_decode_a_twin_normal(dynamic raw);

  @protected
  ATwinRustAsync dco_decode_a_twin_rust_async(dynamic raw);

  @protected
  ATwinRustAsyncSse dco_decode_a_twin_rust_async_sse(dynamic raw);

  @protected
  ATwinSse dco_decode_a_twin_sse(dynamic raw);

  @protected
  ATwinSync dco_decode_a_twin_sync(dynamic raw);

  @protected
  ATwinSyncSse dco_decode_a_twin_sync_sse(dynamic raw);

  @protected
  AbcTwinNormal dco_decode_abc_twin_normal(dynamic raw);

  @protected
  AbcTwinRustAsync dco_decode_abc_twin_rust_async(dynamic raw);

  @protected
  AbcTwinRustAsyncSse dco_decode_abc_twin_rust_async_sse(dynamic raw);

  @protected
  AbcTwinSse dco_decode_abc_twin_sse(dynamic raw);

  @protected
  AbcTwinSync dco_decode_abc_twin_sync(dynamic raw);

  @protected
  AbcTwinSyncSse dco_decode_abc_twin_sync_sse(dynamic raw);

  @protected
  AnotherMacroStructTwinNormal dco_decode_another_macro_struct_twin_normal(
      dynamic raw);

  @protected
  AnotherTwinNormal dco_decode_another_twin_normal(dynamic raw);

  @protected
  AnotherTwinRustAsync dco_decode_another_twin_rust_async(dynamic raw);

  @protected
  AnotherTwinRustAsyncSse dco_decode_another_twin_rust_async_sse(dynamic raw);

  @protected
  AnotherTwinSse dco_decode_another_twin_sse(dynamic raw);

  @protected
  AnotherTwinSync dco_decode_another_twin_sync(dynamic raw);

  @protected
  AnotherTwinSyncSse dco_decode_another_twin_sync_sse(dynamic raw);

  @protected
  ApplicationEnv dco_decode_application_env(dynamic raw);

  @protected
  ApplicationEnvVar dco_decode_application_env_var(dynamic raw);

  @protected
  ApplicationMessage dco_decode_application_message(dynamic raw);

  @protected
  ApplicationMode dco_decode_application_mode(dynamic raw);

  @protected
  ApplicationModeArray2 dco_decode_application_mode_array_2(dynamic raw);

  @protected
  ApplicationSettings dco_decode_application_settings(dynamic raw);

  @protected
  AttributeTwinNormal dco_decode_attribute_twin_normal(dynamic raw);

  @protected
  AttributeTwinRustAsync dco_decode_attribute_twin_rust_async(dynamic raw);

  @protected
  AttributeTwinRustAsyncSse dco_decode_attribute_twin_rust_async_sse(
      dynamic raw);

  @protected
  AttributeTwinSse dco_decode_attribute_twin_sse(dynamic raw);

  @protected
  AttributeTwinSync dco_decode_attribute_twin_sync(dynamic raw);

  @protected
  AttributeTwinSyncSse dco_decode_attribute_twin_sync_sse(dynamic raw);

  @protected
  BTwinNormal dco_decode_b_twin_normal(dynamic raw);

  @protected
  BTwinRustAsync dco_decode_b_twin_rust_async(dynamic raw);

  @protected
  BTwinRustAsyncSse dco_decode_b_twin_rust_async_sse(dynamic raw);

  @protected
  BTwinSse dco_decode_b_twin_sse(dynamic raw);

  @protected
  BTwinSync dco_decode_b_twin_sync(dynamic raw);

  @protected
  BTwinSyncSse dco_decode_b_twin_sync_sse(dynamic raw);

  @protected
  BasicGeneralEnumTwinNormal dco_decode_basic_general_enum_twin_normal(
      dynamic raw);

  @protected
  BasicGeneralEnumTwinRustAsync dco_decode_basic_general_enum_twin_rust_async(
      dynamic raw);

  @protected
  BasicGeneralEnumTwinRustAsyncSse
      dco_decode_basic_general_enum_twin_rust_async_sse(dynamic raw);

  @protected
  BasicGeneralEnumTwinSse dco_decode_basic_general_enum_twin_sse(dynamic raw);

  @protected
  BasicGeneralEnumTwinSync dco_decode_basic_general_enum_twin_sync(dynamic raw);

  @protected
  BasicGeneralEnumTwinSyncSse dco_decode_basic_general_enum_twin_sync_sse(
      dynamic raw);

  @protected
  BasicPrimitiveEnumTwinNormal dco_decode_basic_primitive_enum_twin_normal(
      dynamic raw);

  @protected
  BasicPrimitiveEnumTwinRustAsync
      dco_decode_basic_primitive_enum_twin_rust_async(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinRustAsyncSse
      dco_decode_basic_primitive_enum_twin_rust_async_sse(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSse dco_decode_basic_primitive_enum_twin_sse(
      dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSync dco_decode_basic_primitive_enum_twin_sync(
      dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSyncSse dco_decode_basic_primitive_enum_twin_sync_sse(
      dynamic raw);

  @protected
  BasicStructTwinNormal dco_decode_basic_struct_twin_normal(dynamic raw);

  @protected
  BasicStructTwinRustAsync dco_decode_basic_struct_twin_rust_async(dynamic raw);

  @protected
  BasicStructTwinRustAsyncSse dco_decode_basic_struct_twin_rust_async_sse(
      dynamic raw);

  @protected
  BasicStructTwinSse dco_decode_basic_struct_twin_sse(dynamic raw);

  @protected
  BasicStructTwinSync dco_decode_basic_struct_twin_sync(dynamic raw);

  @protected
  BasicStructTwinSyncSse dco_decode_basic_struct_twin_sync_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinNormal dco_decode_benchmark_binary_tree_twin_normal(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      dco_decode_benchmark_binary_tree_twin_rust_async(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      dco_decode_benchmark_binary_tree_twin_rust_async_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSse dco_decode_benchmark_binary_tree_twin_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSync dco_decode_benchmark_binary_tree_twin_sync(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSyncSse dco_decode_benchmark_binary_tree_twin_sync_sse(
      dynamic raw);

  @protected
  BenchmarkBlobTwinNormal dco_decode_benchmark_blob_twin_normal(dynamic raw);

  @protected
  BenchmarkBlobTwinRustAsync dco_decode_benchmark_blob_twin_rust_async(
      dynamic raw);

  @protected
  BenchmarkBlobTwinRustAsyncSse dco_decode_benchmark_blob_twin_rust_async_sse(
      dynamic raw);

  @protected
  BenchmarkBlobTwinSse dco_decode_benchmark_blob_twin_sse(dynamic raw);

  @protected
  BenchmarkBlobTwinSync dco_decode_benchmark_blob_twin_sync(dynamic raw);

  @protected
  BenchmarkBlobTwinSyncSse dco_decode_benchmark_blob_twin_sync_sse(dynamic raw);

  @protected
  BigBuffersTwinNormal dco_decode_big_buffers_twin_normal(dynamic raw);

  @protected
  BigBuffersTwinRustAsync dco_decode_big_buffers_twin_rust_async(dynamic raw);

  @protected
  BigBuffersTwinRustAsyncSse dco_decode_big_buffers_twin_rust_async_sse(
      dynamic raw);

  @protected
  BigBuffersTwinSse dco_decode_big_buffers_twin_sse(dynamic raw);

  @protected
  BigBuffersTwinSync dco_decode_big_buffers_twin_sync(dynamic raw);

  @protected
  BigBuffersTwinSyncSse dco_decode_big_buffers_twin_sync_sse(dynamic raw);

  @protected
  BlobTwinNormal dco_decode_blob_twin_normal(dynamic raw);

  @protected
  BlobTwinRustAsync dco_decode_blob_twin_rust_async(dynamic raw);

  @protected
  BlobTwinRustAsyncSse dco_decode_blob_twin_rust_async_sse(dynamic raw);

  @protected
  BlobTwinSse dco_decode_blob_twin_sse(dynamic raw);

  @protected
  BlobTwinSync dco_decode_blob_twin_sync(dynamic raw);

  @protected
  BlobTwinSyncSse dco_decode_blob_twin_sync_sse(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  ApplicationEnv dco_decode_box_application_env(dynamic raw);

  @protected
  NonCloneSimpleTwinMoi
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsync
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSse
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSseMoi
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSync
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncMoi
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic raw);

  @protected
  Duration dco_decode_box_autoadd_Chrono_Duration(dynamic raw);

  @protected
  DateTime dco_decode_box_autoadd_Chrono_Naive(dynamic raw);

  @protected
  DateTime dco_decode_box_autoadd_Chrono_Utc(dynamic raw);

  @protected
  Object dco_decode_box_autoadd_DartOpaque(dynamic raw);

  @protected
  HideDataAnotherTwinMoi
      dco_decode_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(dynamic raw);

  @protected
  HideDataAnotherTwinNormal
      dco_decode_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(dynamic raw);

  @protected
  HideDataAnotherTwinSse
      dco_decode_box_autoadd_RustOpaque_HideDataAnotherTwinSse(dynamic raw);

  @protected
  HideDataAnotherTwinSseMoi
      dco_decode_box_autoadd_RustOpaque_HideDataAnotherTwinSseMoi(dynamic raw);

  @protected
  HideDataTwinMoi dco_decode_box_autoadd_RustOpaque_HideDataTwinMoi(
      dynamic raw);

  @protected
  HideDataTwinNormal dco_decode_box_autoadd_RustOpaque_HideDataTwinNormal(
      dynamic raw);

  @protected
  HideDataTwinRustAsync dco_decode_box_autoadd_RustOpaque_HideDataTwinRustAsync(
      dynamic raw);

  @protected
  HideDataTwinRustAsyncMoi
      dco_decode_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(dynamic raw);

  @protected
  HideDataTwinRustAsyncSse
      dco_decode_box_autoadd_RustOpaque_HideDataTwinRustAsyncSse(dynamic raw);

  @protected
  HideDataTwinRustAsyncSseMoi
      dco_decode_box_autoadd_RustOpaque_HideDataTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  HideDataTwinSse dco_decode_box_autoadd_RustOpaque_HideDataTwinSse(
      dynamic raw);

  @protected
  HideDataTwinSseMoi dco_decode_box_autoadd_RustOpaque_HideDataTwinSseMoi(
      dynamic raw);

  @protected
  HideDataTwinSync dco_decode_box_autoadd_RustOpaque_HideDataTwinSync(
      dynamic raw);

  @protected
  HideDataTwinSyncMoi dco_decode_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
      dynamic raw);

  @protected
  HideDataTwinSyncSse dco_decode_box_autoadd_RustOpaque_HideDataTwinSyncSse(
      dynamic raw);

  @protected
  HideDataTwinSyncSseMoi
      dco_decode_box_autoadd_RustOpaque_HideDataTwinSyncSseMoi(dynamic raw);

  @protected
  ATwinNormal dco_decode_box_autoadd_a_twin_normal(dynamic raw);

  @protected
  ATwinRustAsync dco_decode_box_autoadd_a_twin_rust_async(dynamic raw);

  @protected
  ATwinRustAsyncSse dco_decode_box_autoadd_a_twin_rust_async_sse(dynamic raw);

  @protected
  ATwinSse dco_decode_box_autoadd_a_twin_sse(dynamic raw);

  @protected
  ATwinSync dco_decode_box_autoadd_a_twin_sync(dynamic raw);

  @protected
  ATwinSyncSse dco_decode_box_autoadd_a_twin_sync_sse(dynamic raw);

  @protected
  AbcTwinNormal dco_decode_box_autoadd_abc_twin_normal(dynamic raw);

  @protected
  AbcTwinRustAsync dco_decode_box_autoadd_abc_twin_rust_async(dynamic raw);

  @protected
  AbcTwinRustAsyncSse dco_decode_box_autoadd_abc_twin_rust_async_sse(
      dynamic raw);

  @protected
  AbcTwinSse dco_decode_box_autoadd_abc_twin_sse(dynamic raw);

  @protected
  AbcTwinSync dco_decode_box_autoadd_abc_twin_sync(dynamic raw);

  @protected
  AbcTwinSyncSse dco_decode_box_autoadd_abc_twin_sync_sse(dynamic raw);

  @protected
  ApplicationEnv dco_decode_box_autoadd_application_env(dynamic raw);

  @protected
  ApplicationMode dco_decode_box_autoadd_application_mode(dynamic raw);

  @protected
  ApplicationSettings dco_decode_box_autoadd_application_settings(dynamic raw);

  @protected
  AttributeTwinNormal dco_decode_box_autoadd_attribute_twin_normal(dynamic raw);

  @protected
  AttributeTwinRustAsync dco_decode_box_autoadd_attribute_twin_rust_async(
      dynamic raw);

  @protected
  AttributeTwinRustAsyncSse
      dco_decode_box_autoadd_attribute_twin_rust_async_sse(dynamic raw);

  @protected
  AttributeTwinSse dco_decode_box_autoadd_attribute_twin_sse(dynamic raw);

  @protected
  AttributeTwinSync dco_decode_box_autoadd_attribute_twin_sync(dynamic raw);

  @protected
  AttributeTwinSyncSse dco_decode_box_autoadd_attribute_twin_sync_sse(
      dynamic raw);

  @protected
  BTwinNormal dco_decode_box_autoadd_b_twin_normal(dynamic raw);

  @protected
  BTwinRustAsync dco_decode_box_autoadd_b_twin_rust_async(dynamic raw);

  @protected
  BTwinRustAsyncSse dco_decode_box_autoadd_b_twin_rust_async_sse(dynamic raw);

  @protected
  BTwinSse dco_decode_box_autoadd_b_twin_sse(dynamic raw);

  @protected
  BTwinSync dco_decode_box_autoadd_b_twin_sync(dynamic raw);

  @protected
  BTwinSyncSse dco_decode_box_autoadd_b_twin_sync_sse(dynamic raw);

  @protected
  BasicGeneralEnumTwinNormal
      dco_decode_box_autoadd_basic_general_enum_twin_normal(dynamic raw);

  @protected
  BasicGeneralEnumTwinRustAsync
      dco_decode_box_autoadd_basic_general_enum_twin_rust_async(dynamic raw);

  @protected
  BasicGeneralEnumTwinRustAsyncSse
      dco_decode_box_autoadd_basic_general_enum_twin_rust_async_sse(
          dynamic raw);

  @protected
  BasicGeneralEnumTwinSse dco_decode_box_autoadd_basic_general_enum_twin_sse(
      dynamic raw);

  @protected
  BasicGeneralEnumTwinSync dco_decode_box_autoadd_basic_general_enum_twin_sync(
      dynamic raw);

  @protected
  BasicGeneralEnumTwinSyncSse
      dco_decode_box_autoadd_basic_general_enum_twin_sync_sse(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinNormal
      dco_decode_box_autoadd_basic_primitive_enum_twin_normal(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinRustAsync
      dco_decode_box_autoadd_basic_primitive_enum_twin_rust_async(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinRustAsyncSse
      dco_decode_box_autoadd_basic_primitive_enum_twin_rust_async_sse(
          dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSse
      dco_decode_box_autoadd_basic_primitive_enum_twin_sse(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSync
      dco_decode_box_autoadd_basic_primitive_enum_twin_sync(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSyncSse
      dco_decode_box_autoadd_basic_primitive_enum_twin_sync_sse(dynamic raw);

  @protected
  BasicStructTwinNormal dco_decode_box_autoadd_basic_struct_twin_normal(
      dynamic raw);

  @protected
  BasicStructTwinRustAsync dco_decode_box_autoadd_basic_struct_twin_rust_async(
      dynamic raw);

  @protected
  BasicStructTwinRustAsyncSse
      dco_decode_box_autoadd_basic_struct_twin_rust_async_sse(dynamic raw);

  @protected
  BasicStructTwinSse dco_decode_box_autoadd_basic_struct_twin_sse(dynamic raw);

  @protected
  BasicStructTwinSync dco_decode_box_autoadd_basic_struct_twin_sync(
      dynamic raw);

  @protected
  BasicStructTwinSyncSse dco_decode_box_autoadd_basic_struct_twin_sync_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinNormal
      dco_decode_box_autoadd_benchmark_binary_tree_twin_normal(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      dco_decode_box_autoadd_benchmark_binary_tree_twin_rust_async(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      dco_decode_box_autoadd_benchmark_binary_tree_twin_rust_async_sse(
          dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSse
      dco_decode_box_autoadd_benchmark_binary_tree_twin_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSync
      dco_decode_box_autoadd_benchmark_binary_tree_twin_sync(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSyncSse
      dco_decode_box_autoadd_benchmark_binary_tree_twin_sync_sse(dynamic raw);

  @protected
  BenchmarkBlobTwinNormal dco_decode_box_autoadd_benchmark_blob_twin_normal(
      dynamic raw);

  @protected
  BenchmarkBlobTwinRustAsync
      dco_decode_box_autoadd_benchmark_blob_twin_rust_async(dynamic raw);

  @protected
  BenchmarkBlobTwinRustAsyncSse
      dco_decode_box_autoadd_benchmark_blob_twin_rust_async_sse(dynamic raw);

  @protected
  BenchmarkBlobTwinSse dco_decode_box_autoadd_benchmark_blob_twin_sse(
      dynamic raw);

  @protected
  BenchmarkBlobTwinSync dco_decode_box_autoadd_benchmark_blob_twin_sync(
      dynamic raw);

  @protected
  BenchmarkBlobTwinSyncSse dco_decode_box_autoadd_benchmark_blob_twin_sync_sse(
      dynamic raw);

  @protected
  bool dco_decode_box_autoadd_bool(dynamic raw);

  @protected
  CTwinNormal dco_decode_box_autoadd_c_twin_normal(dynamic raw);

  @protected
  CTwinRustAsync dco_decode_box_autoadd_c_twin_rust_async(dynamic raw);

  @protected
  CTwinRustAsyncSse dco_decode_box_autoadd_c_twin_rust_async_sse(dynamic raw);

  @protected
  CTwinSse dco_decode_box_autoadd_c_twin_sse(dynamic raw);

  @protected
  CTwinSync dco_decode_box_autoadd_c_twin_sync(dynamic raw);

  @protected
  CTwinSyncSse dco_decode_box_autoadd_c_twin_sync_sse(dynamic raw);

  @protected
  ConcatenateWithTwinNormal dco_decode_box_autoadd_concatenate_with_twin_normal(
      dynamic raw);

  @protected
  ConcatenateWithTwinRustAsync
      dco_decode_box_autoadd_concatenate_with_twin_rust_async(dynamic raw);

  @protected
  ConcatenateWithTwinRustAsyncSse
      dco_decode_box_autoadd_concatenate_with_twin_rust_async_sse(dynamic raw);

  @protected
  ConcatenateWithTwinSse dco_decode_box_autoadd_concatenate_with_twin_sse(
      dynamic raw);

  @protected
  ConcatenateWithTwinSync dco_decode_box_autoadd_concatenate_with_twin_sync(
      dynamic raw);

  @protected
  ConcatenateWithTwinSyncSse
      dco_decode_box_autoadd_concatenate_with_twin_sync_sse(dynamic raw);

  @protected
  CustomNestedError2TwinNormal
      dco_decode_box_autoadd_custom_nested_error_2_twin_normal(dynamic raw);

  @protected
  CustomNestedError2TwinRustAsync
      dco_decode_box_autoadd_custom_nested_error_2_twin_rust_async(dynamic raw);

  @protected
  CustomNestedError2TwinRustAsyncSse
      dco_decode_box_autoadd_custom_nested_error_2_twin_rust_async_sse(
          dynamic raw);

  @protected
  CustomNestedError2TwinSse
      dco_decode_box_autoadd_custom_nested_error_2_twin_sse(dynamic raw);

  @protected
  CustomNestedError2TwinSync
      dco_decode_box_autoadd_custom_nested_error_2_twin_sync(dynamic raw);

  @protected
  CustomNestedError2TwinSyncSse
      dco_decode_box_autoadd_custom_nested_error_2_twin_sync_sse(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinNormal
      dco_decode_box_autoadd_custom_nested_error_inner_twin_normal(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinRustAsync
      dco_decode_box_autoadd_custom_nested_error_inner_twin_rust_async(
          dynamic raw);

  @protected
  CustomNestedErrorInnerTwinRustAsyncSse
      dco_decode_box_autoadd_custom_nested_error_inner_twin_rust_async_sse(
          dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSse
      dco_decode_box_autoadd_custom_nested_error_inner_twin_sse(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSync
      dco_decode_box_autoadd_custom_nested_error_inner_twin_sync(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSyncSse
      dco_decode_box_autoadd_custom_nested_error_inner_twin_sync_sse(
          dynamic raw);

  @protected
  CustomNestedErrorOuterTwinNormal
      dco_decode_box_autoadd_custom_nested_error_outer_twin_normal(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinRustAsync
      dco_decode_box_autoadd_custom_nested_error_outer_twin_rust_async(
          dynamic raw);

  @protected
  CustomNestedErrorOuterTwinRustAsyncSse
      dco_decode_box_autoadd_custom_nested_error_outer_twin_rust_async_sse(
          dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSse
      dco_decode_box_autoadd_custom_nested_error_outer_twin_sse(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSync
      dco_decode_box_autoadd_custom_nested_error_outer_twin_sync(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSyncSse
      dco_decode_box_autoadd_custom_nested_error_outer_twin_sync_sse(
          dynamic raw);

  @protected
  CustomStructErrorTwinNormal
      dco_decode_box_autoadd_custom_struct_error_twin_normal(dynamic raw);

  @protected
  CustomStructErrorTwinRustAsync
      dco_decode_box_autoadd_custom_struct_error_twin_rust_async(dynamic raw);

  @protected
  CustomStructErrorTwinRustAsyncSse
      dco_decode_box_autoadd_custom_struct_error_twin_rust_async_sse(
          dynamic raw);

  @protected
  CustomStructErrorTwinSse dco_decode_box_autoadd_custom_struct_error_twin_sse(
      dynamic raw);

  @protected
  CustomStructErrorTwinSync
      dco_decode_box_autoadd_custom_struct_error_twin_sync(dynamic raw);

  @protected
  CustomStructErrorTwinSyncSse
      dco_decode_box_autoadd_custom_struct_error_twin_sync_sse(dynamic raw);

  @protected
  CustomStructTwinNormal dco_decode_box_autoadd_custom_struct_twin_normal(
      dynamic raw);

  @protected
  CustomStructTwinRustAsync
      dco_decode_box_autoadd_custom_struct_twin_rust_async(dynamic raw);

  @protected
  CustomStructTwinRustAsyncSse
      dco_decode_box_autoadd_custom_struct_twin_rust_async_sse(dynamic raw);

  @protected
  CustomStructTwinSse dco_decode_box_autoadd_custom_struct_twin_sse(
      dynamic raw);

  @protected
  CustomStructTwinSync dco_decode_box_autoadd_custom_struct_twin_sync(
      dynamic raw);

  @protected
  CustomStructTwinSyncSse dco_decode_box_autoadd_custom_struct_twin_sync_sse(
      dynamic raw);

  @protected
  CustomizedTwinNormal dco_decode_box_autoadd_customized_twin_normal(
      dynamic raw);

  @protected
  CustomizedTwinRustAsync dco_decode_box_autoadd_customized_twin_rust_async(
      dynamic raw);

  @protected
  CustomizedTwinRustAsyncSse
      dco_decode_box_autoadd_customized_twin_rust_async_sse(dynamic raw);

  @protected
  CustomizedTwinSse dco_decode_box_autoadd_customized_twin_sse(dynamic raw);

  @protected
  CustomizedTwinSync dco_decode_box_autoadd_customized_twin_sync(dynamic raw);

  @protected
  CustomizedTwinSyncSse dco_decode_box_autoadd_customized_twin_sync_sse(
      dynamic raw);

  @protected
  DartOpaqueNestedTwinNormal
      dco_decode_box_autoadd_dart_opaque_nested_twin_normal(dynamic raw);

  @protected
  DartOpaqueNestedTwinRustAsync
      dco_decode_box_autoadd_dart_opaque_nested_twin_rust_async(dynamic raw);

  @protected
  DartOpaqueNestedTwinRustAsyncSse
      dco_decode_box_autoadd_dart_opaque_nested_twin_rust_async_sse(
          dynamic raw);

  @protected
  DartOpaqueNestedTwinSse dco_decode_box_autoadd_dart_opaque_nested_twin_sse(
      dynamic raw);

  @protected
  DartOpaqueNestedTwinSync dco_decode_box_autoadd_dart_opaque_nested_twin_sync(
      dynamic raw);

  @protected
  DartOpaqueNestedTwinSyncSse
      dco_decode_box_autoadd_dart_opaque_nested_twin_sync_sse(dynamic raw);

  @protected
  ElementTwinNormal dco_decode_box_autoadd_element_twin_normal(dynamic raw);

  @protected
  ElementTwinRustAsync dco_decode_box_autoadd_element_twin_rust_async(
      dynamic raw);

  @protected
  ElementTwinRustAsyncSse dco_decode_box_autoadd_element_twin_rust_async_sse(
      dynamic raw);

  @protected
  ElementTwinSse dco_decode_box_autoadd_element_twin_sse(dynamic raw);

  @protected
  ElementTwinSync dco_decode_box_autoadd_element_twin_sync(dynamic raw);

  @protected
  ElementTwinSyncSse dco_decode_box_autoadd_element_twin_sync_sse(dynamic raw);

  @protected
  EmptyTwinNormal dco_decode_box_autoadd_empty_twin_normal(dynamic raw);

  @protected
  EmptyTwinRustAsync dco_decode_box_autoadd_empty_twin_rust_async(dynamic raw);

  @protected
  EmptyTwinRustAsyncSse dco_decode_box_autoadd_empty_twin_rust_async_sse(
      dynamic raw);

  @protected
  EmptyTwinSse dco_decode_box_autoadd_empty_twin_sse(dynamic raw);

  @protected
  EmptyTwinSync dco_decode_box_autoadd_empty_twin_sync(dynamic raw);

  @protected
  EmptyTwinSyncSse dco_decode_box_autoadd_empty_twin_sync_sse(dynamic raw);

  @protected
  EnumDartOpaqueTwinNormal dco_decode_box_autoadd_enum_dart_opaque_twin_normal(
      dynamic raw);

  @protected
  EnumDartOpaqueTwinRustAsync
      dco_decode_box_autoadd_enum_dart_opaque_twin_rust_async(dynamic raw);

  @protected
  EnumDartOpaqueTwinRustAsyncSse
      dco_decode_box_autoadd_enum_dart_opaque_twin_rust_async_sse(dynamic raw);

  @protected
  EnumDartOpaqueTwinSse dco_decode_box_autoadd_enum_dart_opaque_twin_sse(
      dynamic raw);

  @protected
  EnumDartOpaqueTwinSync dco_decode_box_autoadd_enum_dart_opaque_twin_sync(
      dynamic raw);

  @protected
  EnumDartOpaqueTwinSyncSse
      dco_decode_box_autoadd_enum_dart_opaque_twin_sync_sse(dynamic raw);

  @protected
  EnumOpaqueTwinMoi dco_decode_box_autoadd_enum_opaque_twin_moi(dynamic raw);

  @protected
  EnumOpaqueTwinNormal dco_decode_box_autoadd_enum_opaque_twin_normal(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsync dco_decode_box_autoadd_enum_opaque_twin_rust_async(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncMoi
      dco_decode_box_autoadd_enum_opaque_twin_rust_async_moi(dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncSse
      dco_decode_box_autoadd_enum_opaque_twin_rust_async_sse(dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncSseMoi
      dco_decode_box_autoadd_enum_opaque_twin_rust_async_sse_moi(dynamic raw);

  @protected
  EnumOpaqueTwinSse dco_decode_box_autoadd_enum_opaque_twin_sse(dynamic raw);

  @protected
  EnumOpaqueTwinSseMoi dco_decode_box_autoadd_enum_opaque_twin_sse_moi(
      dynamic raw);

  @protected
  EnumOpaqueTwinSync dco_decode_box_autoadd_enum_opaque_twin_sync(dynamic raw);

  @protected
  EnumOpaqueTwinSyncMoi dco_decode_box_autoadd_enum_opaque_twin_sync_moi(
      dynamic raw);

  @protected
  EnumOpaqueTwinSyncSse dco_decode_box_autoadd_enum_opaque_twin_sync_sse(
      dynamic raw);

  @protected
  EnumOpaqueTwinSyncSseMoi dco_decode_box_autoadd_enum_opaque_twin_sync_sse_moi(
      dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinMoi
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_moi(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinNormal
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_normal(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsync
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncMoi
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSse
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_sse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSseMoi
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_sse_moi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSse
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_sse(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSseMoi
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_sse_moi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSync
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_sync(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSyncMoi
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_sync_moi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSse
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_sync_sse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSseMoi
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_sync_sse_moi(
          dynamic raw);

  @protected
  EnumWithItemMixedTwinNormal
      dco_decode_box_autoadd_enum_with_item_mixed_twin_normal(dynamic raw);

  @protected
  EnumWithItemMixedTwinRustAsync
      dco_decode_box_autoadd_enum_with_item_mixed_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemMixedTwinRustAsyncSse
      dco_decode_box_autoadd_enum_with_item_mixed_twin_rust_async_sse(
          dynamic raw);

  @protected
  EnumWithItemMixedTwinSse dco_decode_box_autoadd_enum_with_item_mixed_twin_sse(
      dynamic raw);

  @protected
  EnumWithItemMixedTwinSync
      dco_decode_box_autoadd_enum_with_item_mixed_twin_sync(dynamic raw);

  @protected
  EnumWithItemMixedTwinSyncSse
      dco_decode_box_autoadd_enum_with_item_mixed_twin_sync_sse(dynamic raw);

  @protected
  EnumWithItemStructTwinNormal
      dco_decode_box_autoadd_enum_with_item_struct_twin_normal(dynamic raw);

  @protected
  EnumWithItemStructTwinRustAsync
      dco_decode_box_autoadd_enum_with_item_struct_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemStructTwinRustAsyncSse
      dco_decode_box_autoadd_enum_with_item_struct_twin_rust_async_sse(
          dynamic raw);

  @protected
  EnumWithItemStructTwinSse
      dco_decode_box_autoadd_enum_with_item_struct_twin_sse(dynamic raw);

  @protected
  EnumWithItemStructTwinSync
      dco_decode_box_autoadd_enum_with_item_struct_twin_sync(dynamic raw);

  @protected
  EnumWithItemStructTwinSyncSse
      dco_decode_box_autoadd_enum_with_item_struct_twin_sync_sse(dynamic raw);

  @protected
  EnumWithItemTupleTwinNormal
      dco_decode_box_autoadd_enum_with_item_tuple_twin_normal(dynamic raw);

  @protected
  EnumWithItemTupleTwinRustAsync
      dco_decode_box_autoadd_enum_with_item_tuple_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemTupleTwinRustAsyncSse
      dco_decode_box_autoadd_enum_with_item_tuple_twin_rust_async_sse(
          dynamic raw);

  @protected
  EnumWithItemTupleTwinSse dco_decode_box_autoadd_enum_with_item_tuple_twin_sse(
      dynamic raw);

  @protected
  EnumWithItemTupleTwinSync
      dco_decode_box_autoadd_enum_with_item_tuple_twin_sync(dynamic raw);

  @protected
  EnumWithItemTupleTwinSyncSse
      dco_decode_box_autoadd_enum_with_item_tuple_twin_sync_sse(dynamic raw);

  @protected
  EventTwinNormal dco_decode_box_autoadd_event_twin_normal(dynamic raw);

  @protected
  EventTwinRustAsync dco_decode_box_autoadd_event_twin_rust_async(dynamic raw);

  @protected
  EventTwinRustAsyncSse dco_decode_box_autoadd_event_twin_rust_async_sse(
      dynamic raw);

  @protected
  EventTwinSse dco_decode_box_autoadd_event_twin_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinNormal dco_decode_box_autoadd_exotic_optionals_twin_normal(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsync
      dco_decode_box_autoadd_exotic_optionals_twin_rust_async(dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      dco_decode_box_autoadd_exotic_optionals_twin_rust_async_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSse dco_decode_box_autoadd_exotic_optionals_twin_sse(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSync dco_decode_box_autoadd_exotic_optionals_twin_sync(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSyncSse
      dco_decode_box_autoadd_exotic_optionals_twin_sync_sse(dynamic raw);

  @protected
  double dco_decode_box_autoadd_f_32(dynamic raw);

  @protected
  double dco_decode_box_autoadd_f_64(dynamic raw);

  @protected
  FeatureChronoTwinNormal dco_decode_box_autoadd_feature_chrono_twin_normal(
      dynamic raw);

  @protected
  FeatureChronoTwinRustAsync
      dco_decode_box_autoadd_feature_chrono_twin_rust_async(dynamic raw);

  @protected
  FeatureChronoTwinRustAsyncSse
      dco_decode_box_autoadd_feature_chrono_twin_rust_async_sse(dynamic raw);

  @protected
  FeatureChronoTwinSse dco_decode_box_autoadd_feature_chrono_twin_sse(
      dynamic raw);

  @protected
  FeatureChronoTwinSync dco_decode_box_autoadd_feature_chrono_twin_sync(
      dynamic raw);

  @protected
  FeatureChronoTwinSyncSse dco_decode_box_autoadd_feature_chrono_twin_sync_sse(
      dynamic raw);

  @protected
  FeatureUuidTwinNormal dco_decode_box_autoadd_feature_uuid_twin_normal(
      dynamic raw);

  @protected
  FeatureUuidTwinRustAsync dco_decode_box_autoadd_feature_uuid_twin_rust_async(
      dynamic raw);

  @protected
  FeatureUuidTwinRustAsyncSse
      dco_decode_box_autoadd_feature_uuid_twin_rust_async_sse(dynamic raw);

  @protected
  FeatureUuidTwinSse dco_decode_box_autoadd_feature_uuid_twin_sse(dynamic raw);

  @protected
  FeatureUuidTwinSync dco_decode_box_autoadd_feature_uuid_twin_sync(
      dynamic raw);

  @protected
  FeatureUuidTwinSyncSse dco_decode_box_autoadd_feature_uuid_twin_sync_sse(
      dynamic raw);

  @protected
  FeedIdTwinNormal dco_decode_box_autoadd_feed_id_twin_normal(dynamic raw);

  @protected
  FeedIdTwinRustAsync dco_decode_box_autoadd_feed_id_twin_rust_async(
      dynamic raw);

  @protected
  FeedIdTwinRustAsyncSse dco_decode_box_autoadd_feed_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  FeedIdTwinSse dco_decode_box_autoadd_feed_id_twin_sse(dynamic raw);

  @protected
  FeedIdTwinSync dco_decode_box_autoadd_feed_id_twin_sync(dynamic raw);

  @protected
  FeedIdTwinSyncSse dco_decode_box_autoadd_feed_id_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_16(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_32(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_64(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_8(dynamic raw);

  @protected
  int dco_decode_box_autoadd_isize(dynamic raw);

  @protected
  KitchenSinkTwinNormal dco_decode_box_autoadd_kitchen_sink_twin_normal(
      dynamic raw);

  @protected
  KitchenSinkTwinRustAsync dco_decode_box_autoadd_kitchen_sink_twin_rust_async(
      dynamic raw);

  @protected
  KitchenSinkTwinRustAsyncSse
      dco_decode_box_autoadd_kitchen_sink_twin_rust_async_sse(dynamic raw);

  @protected
  KitchenSinkTwinSse dco_decode_box_autoadd_kitchen_sink_twin_sse(dynamic raw);

  @protected
  KitchenSinkTwinSync dco_decode_box_autoadd_kitchen_sink_twin_sync(
      dynamic raw);

  @protected
  KitchenSinkTwinSyncSse dco_decode_box_autoadd_kitchen_sink_twin_sync_sse(
      dynamic raw);

  @protected
  ListOfNestedRawStringMirrored
      dco_decode_box_autoadd_list_of_nested_raw_string_mirrored(dynamic raw);

  @protected
  MacroStruct dco_decode_box_autoadd_macro_struct(dynamic raw);

  @protected
  MeasureTwinNormal dco_decode_box_autoadd_measure_twin_normal(dynamic raw);

  @protected
  MeasureTwinRustAsync dco_decode_box_autoadd_measure_twin_rust_async(
      dynamic raw);

  @protected
  MeasureTwinRustAsyncSse dco_decode_box_autoadd_measure_twin_rust_async_sse(
      dynamic raw);

  @protected
  MeasureTwinSse dco_decode_box_autoadd_measure_twin_sse(dynamic raw);

  @protected
  MeasureTwinSync dco_decode_box_autoadd_measure_twin_sync(dynamic raw);

  @protected
  MeasureTwinSyncSse dco_decode_box_autoadd_measure_twin_sync_sse(dynamic raw);

  @protected
  MessageIdTwinNormal dco_decode_box_autoadd_message_id_twin_normal(
      dynamic raw);

  @protected
  MessageIdTwinRustAsync dco_decode_box_autoadd_message_id_twin_rust_async(
      dynamic raw);

  @protected
  MessageIdTwinRustAsyncSse
      dco_decode_box_autoadd_message_id_twin_rust_async_sse(dynamic raw);

  @protected
  MessageIdTwinSse dco_decode_box_autoadd_message_id_twin_sse(dynamic raw);

  @protected
  MessageIdTwinSync dco_decode_box_autoadd_message_id_twin_sync(dynamic raw);

  @protected
  MessageIdTwinSyncSse dco_decode_box_autoadd_message_id_twin_sync_sse(
      dynamic raw);

  @protected
  MyCallableTwinNormal dco_decode_box_autoadd_my_callable_twin_normal(
      dynamic raw);

  @protected
  MyCallableTwinRustAsync dco_decode_box_autoadd_my_callable_twin_rust_async(
      dynamic raw);

  @protected
  MyCallableTwinRustAsyncSse
      dco_decode_box_autoadd_my_callable_twin_rust_async_sse(dynamic raw);

  @protected
  MyCallableTwinSse dco_decode_box_autoadd_my_callable_twin_sse(dynamic raw);

  @protected
  MyCallableTwinSync dco_decode_box_autoadd_my_callable_twin_sync(dynamic raw);

  @protected
  MyCallableTwinSyncSse dco_decode_box_autoadd_my_callable_twin_sync_sse(
      dynamic raw);

  @protected
  MyNestedStructTwinNormal dco_decode_box_autoadd_my_nested_struct_twin_normal(
      dynamic raw);

  @protected
  MyNestedStructTwinRustAsync
      dco_decode_box_autoadd_my_nested_struct_twin_rust_async(dynamic raw);

  @protected
  MyNestedStructTwinRustAsyncSse
      dco_decode_box_autoadd_my_nested_struct_twin_rust_async_sse(dynamic raw);

  @protected
  MyNestedStructTwinSse dco_decode_box_autoadd_my_nested_struct_twin_sse(
      dynamic raw);

  @protected
  MyNestedStructTwinSync dco_decode_box_autoadd_my_nested_struct_twin_sync(
      dynamic raw);

  @protected
  MyNestedStructTwinSyncSse
      dco_decode_box_autoadd_my_nested_struct_twin_sync_sse(dynamic raw);

  @protected
  MySize dco_decode_box_autoadd_my_size(dynamic raw);

  @protected
  MyStruct dco_decode_box_autoadd_my_struct(dynamic raw);

  @protected
  MyTreeNodeTwinNormal dco_decode_box_autoadd_my_tree_node_twin_normal(
      dynamic raw);

  @protected
  MyTreeNodeTwinRustAsync dco_decode_box_autoadd_my_tree_node_twin_rust_async(
      dynamic raw);

  @protected
  MyTreeNodeTwinRustAsyncSse
      dco_decode_box_autoadd_my_tree_node_twin_rust_async_sse(dynamic raw);

  @protected
  MyTreeNodeTwinSse dco_decode_box_autoadd_my_tree_node_twin_sse(dynamic raw);

  @protected
  MyTreeNodeTwinSync dco_decode_box_autoadd_my_tree_node_twin_sync(dynamic raw);

  @protected
  MyTreeNodeTwinSyncSse dco_decode_box_autoadd_my_tree_node_twin_sync_sse(
      dynamic raw);

  @protected
  NestedRawStringMirrored dco_decode_box_autoadd_nested_raw_string_mirrored(
      dynamic raw);

  @protected
  NewTypeIntTwinNormal dco_decode_box_autoadd_new_type_int_twin_normal(
      dynamic raw);

  @protected
  NewTypeIntTwinRustAsync dco_decode_box_autoadd_new_type_int_twin_rust_async(
      dynamic raw);

  @protected
  NewTypeIntTwinRustAsyncSse
      dco_decode_box_autoadd_new_type_int_twin_rust_async_sse(dynamic raw);

  @protected
  NewTypeIntTwinSse dco_decode_box_autoadd_new_type_int_twin_sse(dynamic raw);

  @protected
  NewTypeIntTwinSync dco_decode_box_autoadd_new_type_int_twin_sync(dynamic raw);

  @protected
  NewTypeIntTwinSyncSse dco_decode_box_autoadd_new_type_int_twin_sync_sse(
      dynamic raw);

  @protected
  NoteTwinNormal dco_decode_box_autoadd_note_twin_normal(dynamic raw);

  @protected
  NoteTwinRustAsync dco_decode_box_autoadd_note_twin_rust_async(dynamic raw);

  @protected
  NoteTwinRustAsyncSse dco_decode_box_autoadd_note_twin_rust_async_sse(
      dynamic raw);

  @protected
  NoteTwinSse dco_decode_box_autoadd_note_twin_sse(dynamic raw);

  @protected
  NoteTwinSync dco_decode_box_autoadd_note_twin_sync(dynamic raw);

  @protected
  NoteTwinSyncSse dco_decode_box_autoadd_note_twin_sync_sse(dynamic raw);

  @protected
  Numbers dco_decode_box_autoadd_numbers(dynamic raw);

  @protected
  OpaqueNestedTwinMoi dco_decode_box_autoadd_opaque_nested_twin_moi(
      dynamic raw);

  @protected
  OpaqueNestedTwinNormal dco_decode_box_autoadd_opaque_nested_twin_normal(
      dynamic raw);

  @protected
  OpaqueNestedTwinRustAsync
      dco_decode_box_autoadd_opaque_nested_twin_rust_async(dynamic raw);

  @protected
  OpaqueNestedTwinRustAsyncMoi
      dco_decode_box_autoadd_opaque_nested_twin_rust_async_moi(dynamic raw);

  @protected
  OpaqueNestedTwinRustAsyncSse
      dco_decode_box_autoadd_opaque_nested_twin_rust_async_sse(dynamic raw);

  @protected
  OpaqueNestedTwinRustAsyncSseMoi
      dco_decode_box_autoadd_opaque_nested_twin_rust_async_sse_moi(dynamic raw);

  @protected
  OpaqueNestedTwinSse dco_decode_box_autoadd_opaque_nested_twin_sse(
      dynamic raw);

  @protected
  OpaqueNestedTwinSseMoi dco_decode_box_autoadd_opaque_nested_twin_sse_moi(
      dynamic raw);

  @protected
  OpaqueNestedTwinSync dco_decode_box_autoadd_opaque_nested_twin_sync(
      dynamic raw);

  @protected
  OpaqueNestedTwinSyncMoi dco_decode_box_autoadd_opaque_nested_twin_sync_moi(
      dynamic raw);

  @protected
  OpaqueNestedTwinSyncSse dco_decode_box_autoadd_opaque_nested_twin_sync_sse(
      dynamic raw);

  @protected
  OpaqueNestedTwinSyncSseMoi
      dco_decode_box_autoadd_opaque_nested_twin_sync_sse_moi(dynamic raw);

  @protected
  OptVecsTwinNormal dco_decode_box_autoadd_opt_vecs_twin_normal(dynamic raw);

  @protected
  OptVecsTwinRustAsync dco_decode_box_autoadd_opt_vecs_twin_rust_async(
      dynamic raw);

  @protected
  OptVecsTwinRustAsyncSse dco_decode_box_autoadd_opt_vecs_twin_rust_async_sse(
      dynamic raw);

  @protected
  OptVecsTwinSse dco_decode_box_autoadd_opt_vecs_twin_sse(dynamic raw);

  @protected
  OptVecsTwinSync dco_decode_box_autoadd_opt_vecs_twin_sync(dynamic raw);

  @protected
  OptVecsTwinSyncSse dco_decode_box_autoadd_opt_vecs_twin_sync_sse(dynamic raw);

  @protected
  RawStringMirrored dco_decode_box_autoadd_raw_string_mirrored(dynamic raw);

  @protected
  (String, int) dco_decode_box_autoadd_record_string_i_32(dynamic raw);

  @protected
  Sequences dco_decode_box_autoadd_sequences(dynamic raw);

  @protected
  SimpleStructTwinNormal dco_decode_box_autoadd_simple_struct_twin_normal(
      dynamic raw);

  @protected
  SimpleStructTwinRustAsync
      dco_decode_box_autoadd_simple_struct_twin_rust_async(dynamic raw);

  @protected
  SimpleStructTwinRustAsyncSse
      dco_decode_box_autoadd_simple_struct_twin_rust_async_sse(dynamic raw);

  @protected
  SimpleStructTwinSse dco_decode_box_autoadd_simple_struct_twin_sse(
      dynamic raw);

  @protected
  SimpleStructTwinSync dco_decode_box_autoadd_simple_struct_twin_sync(
      dynamic raw);

  @protected
  SimpleStructTwinSyncSse dco_decode_box_autoadd_simple_struct_twin_sync_sse(
      dynamic raw);

  @protected
  SomeStructTwinNormal dco_decode_box_autoadd_some_struct_twin_normal(
      dynamic raw);

  @protected
  SomeStructTwinRustAsync dco_decode_box_autoadd_some_struct_twin_rust_async(
      dynamic raw);

  @protected
  SomeStructTwinRustAsyncSse
      dco_decode_box_autoadd_some_struct_twin_rust_async_sse(dynamic raw);

  @protected
  SomeStructTwinSse dco_decode_box_autoadd_some_struct_twin_sse(dynamic raw);

  @protected
  SomeStructTwinSync dco_decode_box_autoadd_some_struct_twin_sync(dynamic raw);

  @protected
  SomeStructTwinSyncSse dco_decode_box_autoadd_some_struct_twin_sync_sse(
      dynamic raw);

  @protected
  StructInLowerLevel dco_decode_box_autoadd_struct_in_lower_level(dynamic raw);

  @protected
  StructWithCommentsTwinNormal
      dco_decode_box_autoadd_struct_with_comments_twin_normal(dynamic raw);

  @protected
  StructWithCommentsTwinRustAsync
      dco_decode_box_autoadd_struct_with_comments_twin_rust_async(dynamic raw);

  @protected
  StructWithCommentsTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_comments_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithCommentsTwinSse
      dco_decode_box_autoadd_struct_with_comments_twin_sse(dynamic raw);

  @protected
  StructWithCommentsTwinSync
      dco_decode_box_autoadd_struct_with_comments_twin_sync(dynamic raw);

  @protected
  StructWithCommentsTwinSyncSse
      dco_decode_box_autoadd_struct_with_comments_twin_sync_sse(dynamic raw);

  @protected
  StructWithEnumTwinNormal dco_decode_box_autoadd_struct_with_enum_twin_normal(
      dynamic raw);

  @protected
  StructWithEnumTwinRustAsync
      dco_decode_box_autoadd_struct_with_enum_twin_rust_async(dynamic raw);

  @protected
  StructWithEnumTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_enum_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithEnumTwinSse dco_decode_box_autoadd_struct_with_enum_twin_sse(
      dynamic raw);

  @protected
  StructWithEnumTwinSync dco_decode_box_autoadd_struct_with_enum_twin_sync(
      dynamic raw);

  @protected
  StructWithEnumTwinSyncSse
      dco_decode_box_autoadd_struct_with_enum_twin_sync_sse(dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinMoi
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinNormal
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normal(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsync
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSseMoi
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_sse_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSse
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sse(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSseMoi
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sse_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSync
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncMoi
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSse
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_sse(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSseMoi
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_sse_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinMoi
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_normal(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsync
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncMoi
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSseMoi
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_sse_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSseMoi
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sse_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncMoi
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_sse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSseMoi
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_sse_moi(
          dynamic raw);

  @protected
  StructWithOneFieldTwinNormal
      dco_decode_box_autoadd_struct_with_one_field_twin_normal(dynamic raw);

  @protected
  StructWithOneFieldTwinRustAsync
      dco_decode_box_autoadd_struct_with_one_field_twin_rust_async(dynamic raw);

  @protected
  StructWithOneFieldTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_one_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithOneFieldTwinSse
      dco_decode_box_autoadd_struct_with_one_field_twin_sse(dynamic raw);

  @protected
  StructWithOneFieldTwinSync
      dco_decode_box_autoadd_struct_with_one_field_twin_sync(dynamic raw);

  @protected
  StructWithOneFieldTwinSyncSse
      dco_decode_box_autoadd_struct_with_one_field_twin_sync_sse(dynamic raw);

  @protected
  StructWithTwoFieldTwinNormal
      dco_decode_box_autoadd_struct_with_two_field_twin_normal(dynamic raw);

  @protected
  StructWithTwoFieldTwinRustAsync
      dco_decode_box_autoadd_struct_with_two_field_twin_rust_async(dynamic raw);

  @protected
  StructWithTwoFieldTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_two_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithTwoFieldTwinSse
      dco_decode_box_autoadd_struct_with_two_field_twin_sse(dynamic raw);

  @protected
  StructWithTwoFieldTwinSync
      dco_decode_box_autoadd_struct_with_two_field_twin_sync(dynamic raw);

  @protected
  StructWithTwoFieldTwinSyncSse
      dco_decode_box_autoadd_struct_with_two_field_twin_sync_sse(dynamic raw);

  @protected
  StructWithZeroFieldTwinNormal
      dco_decode_box_autoadd_struct_with_zero_field_twin_normal(dynamic raw);

  @protected
  StructWithZeroFieldTwinRustAsync
      dco_decode_box_autoadd_struct_with_zero_field_twin_rust_async(
          dynamic raw);

  @protected
  StructWithZeroFieldTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_zero_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithZeroFieldTwinSse
      dco_decode_box_autoadd_struct_with_zero_field_twin_sse(dynamic raw);

  @protected
  StructWithZeroFieldTwinSync
      dco_decode_box_autoadd_struct_with_zero_field_twin_sync(dynamic raw);

  @protected
  StructWithZeroFieldTwinSyncSse
      dco_decode_box_autoadd_struct_with_zero_field_twin_sync_sse(dynamic raw);

  @protected
  SumWithTwinNormal dco_decode_box_autoadd_sum_with_twin_normal(dynamic raw);

  @protected
  SumWithTwinRustAsync dco_decode_box_autoadd_sum_with_twin_rust_async(
      dynamic raw);

  @protected
  SumWithTwinRustAsyncSse dco_decode_box_autoadd_sum_with_twin_rust_async_sse(
      dynamic raw);

  @protected
  SumWithTwinSse dco_decode_box_autoadd_sum_with_twin_sse(dynamic raw);

  @protected
  SumWithTwinSync dco_decode_box_autoadd_sum_with_twin_sync(dynamic raw);

  @protected
  SumWithTwinSyncSse dco_decode_box_autoadd_sum_with_twin_sync_sse(dynamic raw);

  @protected
  TestIdTwinNormal dco_decode_box_autoadd_test_id_twin_normal(dynamic raw);

  @protected
  TestIdTwinRustAsync dco_decode_box_autoadd_test_id_twin_rust_async(
      dynamic raw);

  @protected
  TestIdTwinRustAsyncSse dco_decode_box_autoadd_test_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  TestIdTwinSse dco_decode_box_autoadd_test_id_twin_sse(dynamic raw);

  @protected
  TestIdTwinSync dco_decode_box_autoadd_test_id_twin_sync(dynamic raw);

  @protected
  TestIdTwinSyncSse dco_decode_box_autoadd_test_id_twin_sync_sse(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinNormal
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_normal(
          dynamic raw);

  @protected
  TupleStructWithOneFieldTwinRustAsync
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_rust_async(
          dynamic raw);

  @protected
  TupleStructWithOneFieldTwinRustAsyncSse
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSse
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_sse(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSync
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_sync(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSyncSse
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_sync_sse(
          dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinNormal
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_normal(
          dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinRustAsync
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_rust_async(
          dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinRustAsyncSse
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSse
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_sse(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSync
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_sync(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSyncSse
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_sync_sse(
          dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_16(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_32(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_64(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_8(dynamic raw);

  @protected
  UserIdTwinNormal dco_decode_box_autoadd_user_id_twin_normal(dynamic raw);

  @protected
  UserIdTwinRustAsync dco_decode_box_autoadd_user_id_twin_rust_async(
      dynamic raw);

  @protected
  UserIdTwinRustAsyncSse dco_decode_box_autoadd_user_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  UserIdTwinSse dco_decode_box_autoadd_user_id_twin_sse(dynamic raw);

  @protected
  UserIdTwinSync dco_decode_box_autoadd_user_id_twin_sync(dynamic raw);

  @protected
  UserIdTwinSyncSse dco_decode_box_autoadd_user_id_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_box_autoadd_usize(dynamic raw);

  @protected
  WeekdaysTwinNormal dco_decode_box_autoadd_weekdays_twin_normal(dynamic raw);

  @protected
  WeekdaysTwinRustAsync dco_decode_box_autoadd_weekdays_twin_rust_async(
      dynamic raw);

  @protected
  WeekdaysTwinRustAsyncSse dco_decode_box_autoadd_weekdays_twin_rust_async_sse(
      dynamic raw);

  @protected
  WeekdaysTwinSse dco_decode_box_autoadd_weekdays_twin_sse(dynamic raw);

  @protected
  WeekdaysTwinSync dco_decode_box_autoadd_weekdays_twin_sync(dynamic raw);

  @protected
  WeekdaysTwinSyncSse dco_decode_box_autoadd_weekdays_twin_sync_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinNormal
      dco_decode_box_benchmark_binary_tree_twin_normal(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      dco_decode_box_benchmark_binary_tree_twin_rust_async(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      dco_decode_box_benchmark_binary_tree_twin_rust_async_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSse dco_decode_box_benchmark_binary_tree_twin_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSync dco_decode_box_benchmark_binary_tree_twin_sync(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSyncSse
      dco_decode_box_benchmark_binary_tree_twin_sync_sse(dynamic raw);

  @protected
  BlobTwinNormal dco_decode_box_blob_twin_normal(dynamic raw);

  @protected
  BlobTwinRustAsync dco_decode_box_blob_twin_rust_async(dynamic raw);

  @protected
  BlobTwinRustAsyncSse dco_decode_box_blob_twin_rust_async_sse(dynamic raw);

  @protected
  BlobTwinSse dco_decode_box_blob_twin_sse(dynamic raw);

  @protected
  BlobTwinSync dco_decode_box_blob_twin_sync(dynamic raw);

  @protected
  BlobTwinSyncSse dco_decode_box_blob_twin_sync_sse(dynamic raw);

  @protected
  bool dco_decode_box_bool(dynamic raw);

  @protected
  DistanceTwinNormal dco_decode_box_distance_twin_normal(dynamic raw);

  @protected
  DistanceTwinRustAsync dco_decode_box_distance_twin_rust_async(dynamic raw);

  @protected
  DistanceTwinRustAsyncSse dco_decode_box_distance_twin_rust_async_sse(
      dynamic raw);

  @protected
  DistanceTwinSse dco_decode_box_distance_twin_sse(dynamic raw);

  @protected
  DistanceTwinSync dco_decode_box_distance_twin_sync(dynamic raw);

  @protected
  DistanceTwinSyncSse dco_decode_box_distance_twin_sync_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinNormal dco_decode_box_exotic_optionals_twin_normal(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsync dco_decode_box_exotic_optionals_twin_rust_async(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      dco_decode_box_exotic_optionals_twin_rust_async_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSse dco_decode_box_exotic_optionals_twin_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSync dco_decode_box_exotic_optionals_twin_sync(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSyncSse dco_decode_box_exotic_optionals_twin_sync_sse(
      dynamic raw);

  @protected
  double dco_decode_box_f_64(dynamic raw);

  @protected
  FeedIdTwinNormal dco_decode_box_feed_id_twin_normal(dynamic raw);

  @protected
  FeedIdTwinRustAsync dco_decode_box_feed_id_twin_rust_async(dynamic raw);

  @protected
  FeedIdTwinRustAsyncSse dco_decode_box_feed_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  FeedIdTwinSse dco_decode_box_feed_id_twin_sse(dynamic raw);

  @protected
  FeedIdTwinSync dco_decode_box_feed_id_twin_sync(dynamic raw);

  @protected
  FeedIdTwinSyncSse dco_decode_box_feed_id_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_box_i_32(dynamic raw);

  @protected
  int dco_decode_box_i_64(dynamic raw);

  @protected
  int dco_decode_box_i_8(dynamic raw);

  @protected
  KitchenSinkTwinNormal dco_decode_box_kitchen_sink_twin_normal(dynamic raw);

  @protected
  KitchenSinkTwinRustAsync dco_decode_box_kitchen_sink_twin_rust_async(
      dynamic raw);

  @protected
  KitchenSinkTwinRustAsyncSse dco_decode_box_kitchen_sink_twin_rust_async_sse(
      dynamic raw);

  @protected
  KitchenSinkTwinSse dco_decode_box_kitchen_sink_twin_sse(dynamic raw);

  @protected
  KitchenSinkTwinSync dco_decode_box_kitchen_sink_twin_sync(dynamic raw);

  @protected
  KitchenSinkTwinSyncSse dco_decode_box_kitchen_sink_twin_sync_sse(dynamic raw);

  @protected
  MySize dco_decode_box_my_size(dynamic raw);

  @protected
  SpeedTwinNormal dco_decode_box_speed_twin_normal(dynamic raw);

  @protected
  SpeedTwinRustAsync dco_decode_box_speed_twin_rust_async(dynamic raw);

  @protected
  SpeedTwinRustAsyncSse dco_decode_box_speed_twin_rust_async_sse(dynamic raw);

  @protected
  SpeedTwinSse dco_decode_box_speed_twin_sse(dynamic raw);

  @protected
  SpeedTwinSync dco_decode_box_speed_twin_sync(dynamic raw);

  @protected
  SpeedTwinSyncSse dco_decode_box_speed_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_box_u_8(dynamic raw);

  @protected
  U8Array1600 dco_decode_box_u_8_array_1600(dynamic raw);

  @protected
  U8Array8 dco_decode_box_u_8_array_8(dynamic raw);

  @protected
  WeekdaysTwinNormal dco_decode_box_weekdays_twin_normal(dynamic raw);

  @protected
  WeekdaysTwinRustAsync dco_decode_box_weekdays_twin_rust_async(dynamic raw);

  @protected
  WeekdaysTwinRustAsyncSse dco_decode_box_weekdays_twin_rust_async_sse(
      dynamic raw);

  @protected
  WeekdaysTwinSse dco_decode_box_weekdays_twin_sse(dynamic raw);

  @protected
  WeekdaysTwinSync dco_decode_box_weekdays_twin_sync(dynamic raw);

  @protected
  WeekdaysTwinSyncSse dco_decode_box_weekdays_twin_sync_sse(dynamic raw);

  @protected
  CTwinNormal dco_decode_c_twin_normal(dynamic raw);

  @protected
  CTwinRustAsync dco_decode_c_twin_rust_async(dynamic raw);

  @protected
  CTwinRustAsyncSse dco_decode_c_twin_rust_async_sse(dynamic raw);

  @protected
  CTwinSse dco_decode_c_twin_sse(dynamic raw);

  @protected
  CTwinSync dco_decode_c_twin_sync(dynamic raw);

  @protected
  CTwinSyncSse dco_decode_c_twin_sync_sse(dynamic raw);

  @protected
  ConcatenateWithTwinNormal dco_decode_concatenate_with_twin_normal(
      dynamic raw);

  @protected
  ConcatenateWithTwinRustAsync dco_decode_concatenate_with_twin_rust_async(
      dynamic raw);

  @protected
  ConcatenateWithTwinRustAsyncSse
      dco_decode_concatenate_with_twin_rust_async_sse(dynamic raw);

  @protected
  ConcatenateWithTwinSse dco_decode_concatenate_with_twin_sse(dynamic raw);

  @protected
  ConcatenateWithTwinSync dco_decode_concatenate_with_twin_sync(dynamic raw);

  @protected
  ConcatenateWithTwinSyncSse dco_decode_concatenate_with_twin_sync_sse(
      dynamic raw);

  @protected
  ConstructorTranslatableStructTwinNormal
      dco_decode_constructor_translatable_struct_twin_normal(dynamic raw);

  @protected
  ConstructorTranslatableSyncStructTwinNormal
      dco_decode_constructor_translatable_sync_struct_twin_normal(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinNormal
      dco_decode_contains_mirrored_sub_struct_twin_normal(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinRustAsync
      dco_decode_contains_mirrored_sub_struct_twin_rust_async(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinRustAsyncSse
      dco_decode_contains_mirrored_sub_struct_twin_rust_async_sse(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinSse
      dco_decode_contains_mirrored_sub_struct_twin_sse(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinSync
      dco_decode_contains_mirrored_sub_struct_twin_sync(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinSyncSse
      dco_decode_contains_mirrored_sub_struct_twin_sync_sse(dynamic raw);

  @protected
  CustomEnumErrorTwinNormal dco_decode_custom_enum_error_twin_normal(
      dynamic raw);

  @protected
  CustomEnumErrorTwinRustAsync dco_decode_custom_enum_error_twin_rust_async(
      dynamic raw);

  @protected
  CustomEnumErrorTwinRustAsyncSse
      dco_decode_custom_enum_error_twin_rust_async_sse(dynamic raw);

  @protected
  CustomEnumErrorTwinSse dco_decode_custom_enum_error_twin_sse(dynamic raw);

  @protected
  CustomEnumErrorTwinSync dco_decode_custom_enum_error_twin_sync(dynamic raw);

  @protected
  CustomEnumErrorTwinSyncSse dco_decode_custom_enum_error_twin_sync_sse(
      dynamic raw);

  @protected
  CustomErrorTwinNormal dco_decode_custom_error_twin_normal(dynamic raw);

  @protected
  CustomErrorTwinRustAsync dco_decode_custom_error_twin_rust_async(dynamic raw);

  @protected
  CustomErrorTwinRustAsyncSse dco_decode_custom_error_twin_rust_async_sse(
      dynamic raw);

  @protected
  CustomErrorTwinSse dco_decode_custom_error_twin_sse(dynamic raw);

  @protected
  CustomErrorTwinSync dco_decode_custom_error_twin_sync(dynamic raw);

  @protected
  CustomErrorTwinSyncSse dco_decode_custom_error_twin_sync_sse(dynamic raw);

  @protected
  CustomNestedError1TwinNormal dco_decode_custom_nested_error_1_twin_normal(
      dynamic raw);

  @protected
  CustomNestedError1TwinRustAsync
      dco_decode_custom_nested_error_1_twin_rust_async(dynamic raw);

  @protected
  CustomNestedError1TwinRustAsyncSse
      dco_decode_custom_nested_error_1_twin_rust_async_sse(dynamic raw);

  @protected
  CustomNestedError1TwinSse dco_decode_custom_nested_error_1_twin_sse(
      dynamic raw);

  @protected
  CustomNestedError1TwinSync dco_decode_custom_nested_error_1_twin_sync(
      dynamic raw);

  @protected
  CustomNestedError1TwinSyncSse dco_decode_custom_nested_error_1_twin_sync_sse(
      dynamic raw);

  @protected
  CustomNestedError2TwinNormal dco_decode_custom_nested_error_2_twin_normal(
      dynamic raw);

  @protected
  CustomNestedError2TwinRustAsync
      dco_decode_custom_nested_error_2_twin_rust_async(dynamic raw);

  @protected
  CustomNestedError2TwinRustAsyncSse
      dco_decode_custom_nested_error_2_twin_rust_async_sse(dynamic raw);

  @protected
  CustomNestedError2TwinSse dco_decode_custom_nested_error_2_twin_sse(
      dynamic raw);

  @protected
  CustomNestedError2TwinSync dco_decode_custom_nested_error_2_twin_sync(
      dynamic raw);

  @protected
  CustomNestedError2TwinSyncSse dco_decode_custom_nested_error_2_twin_sync_sse(
      dynamic raw);

  @protected
  CustomNestedErrorInnerTwinNormal
      dco_decode_custom_nested_error_inner_twin_normal(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinRustAsync
      dco_decode_custom_nested_error_inner_twin_rust_async(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinRustAsyncSse
      dco_decode_custom_nested_error_inner_twin_rust_async_sse(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSse dco_decode_custom_nested_error_inner_twin_sse(
      dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSync dco_decode_custom_nested_error_inner_twin_sync(
      dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSyncSse
      dco_decode_custom_nested_error_inner_twin_sync_sse(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinNormal
      dco_decode_custom_nested_error_outer_twin_normal(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinRustAsync
      dco_decode_custom_nested_error_outer_twin_rust_async(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinRustAsyncSse
      dco_decode_custom_nested_error_outer_twin_rust_async_sse(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSse dco_decode_custom_nested_error_outer_twin_sse(
      dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSync dco_decode_custom_nested_error_outer_twin_sync(
      dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSyncSse
      dco_decode_custom_nested_error_outer_twin_sync_sse(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinNormal
      dco_decode_custom_struct_error_another_twin_normal(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinRustAsync
      dco_decode_custom_struct_error_another_twin_rust_async(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinRustAsyncSse
      dco_decode_custom_struct_error_another_twin_rust_async_sse(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinSse
      dco_decode_custom_struct_error_another_twin_sse(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinSync
      dco_decode_custom_struct_error_another_twin_sync(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinSyncSse
      dco_decode_custom_struct_error_another_twin_sync_sse(dynamic raw);

  @protected
  CustomStructErrorTwinNormal dco_decode_custom_struct_error_twin_normal(
      dynamic raw);

  @protected
  CustomStructErrorTwinRustAsync dco_decode_custom_struct_error_twin_rust_async(
      dynamic raw);

  @protected
  CustomStructErrorTwinRustAsyncSse
      dco_decode_custom_struct_error_twin_rust_async_sse(dynamic raw);

  @protected
  CustomStructErrorTwinSse dco_decode_custom_struct_error_twin_sse(dynamic raw);

  @protected
  CustomStructErrorTwinSync dco_decode_custom_struct_error_twin_sync(
      dynamic raw);

  @protected
  CustomStructErrorTwinSyncSse dco_decode_custom_struct_error_twin_sync_sse(
      dynamic raw);

  @protected
  CustomStructTwinNormal dco_decode_custom_struct_twin_normal(dynamic raw);

  @protected
  CustomStructTwinRustAsync dco_decode_custom_struct_twin_rust_async(
      dynamic raw);

  @protected
  CustomStructTwinRustAsyncSse dco_decode_custom_struct_twin_rust_async_sse(
      dynamic raw);

  @protected
  CustomStructTwinSse dco_decode_custom_struct_twin_sse(dynamic raw);

  @protected
  CustomStructTwinSync dco_decode_custom_struct_twin_sync(dynamic raw);

  @protected
  CustomStructTwinSyncSse dco_decode_custom_struct_twin_sync_sse(dynamic raw);

  @protected
  CustomizedTwinNormal dco_decode_customized_twin_normal(dynamic raw);

  @protected
  CustomizedTwinRustAsync dco_decode_customized_twin_rust_async(dynamic raw);

  @protected
  CustomizedTwinRustAsyncSse dco_decode_customized_twin_rust_async_sse(
      dynamic raw);

  @protected
  CustomizedTwinSse dco_decode_customized_twin_sse(dynamic raw);

  @protected
  CustomizedTwinSync dco_decode_customized_twin_sync(dynamic raw);

  @protected
  CustomizedTwinSyncSse dco_decode_customized_twin_sync_sse(dynamic raw);

  @protected
  DartOpaqueNestedTwinNormal dco_decode_dart_opaque_nested_twin_normal(
      dynamic raw);

  @protected
  DartOpaqueNestedTwinRustAsync dco_decode_dart_opaque_nested_twin_rust_async(
      dynamic raw);

  @protected
  DartOpaqueNestedTwinRustAsyncSse
      dco_decode_dart_opaque_nested_twin_rust_async_sse(dynamic raw);

  @protected
  DartOpaqueNestedTwinSse dco_decode_dart_opaque_nested_twin_sse(dynamic raw);

  @protected
  DartOpaqueNestedTwinSync dco_decode_dart_opaque_nested_twin_sync(dynamic raw);

  @protected
  DartOpaqueNestedTwinSyncSse dco_decode_dart_opaque_nested_twin_sync_sse(
      dynamic raw);

  @protected
  dynamic dco_decode_dartabi(dynamic raw);

  @protected
  DemoStructForRustCallDartTwinNormal
      dco_decode_demo_struct_for_rust_call_dart_twin_normal(dynamic raw);

  @protected
  DemoStructForRustCallDartTwinRustAsync
      dco_decode_demo_struct_for_rust_call_dart_twin_rust_async(dynamic raw);

  @protected
  DemoStructForRustCallDartTwinRustAsyncSse
      dco_decode_demo_struct_for_rust_call_dart_twin_rust_async_sse(
          dynamic raw);

  @protected
  DemoStructForRustCallDartTwinSse
      dco_decode_demo_struct_for_rust_call_dart_twin_sse(dynamic raw);

  @protected
  DistanceTwinNormal dco_decode_distance_twin_normal(dynamic raw);

  @protected
  DistanceTwinRustAsync dco_decode_distance_twin_rust_async(dynamic raw);

  @protected
  DistanceTwinRustAsyncSse dco_decode_distance_twin_rust_async_sse(dynamic raw);

  @protected
  DistanceTwinSse dco_decode_distance_twin_sse(dynamic raw);

  @protected
  DistanceTwinSync dco_decode_distance_twin_sync(dynamic raw);

  @protected
  DistanceTwinSyncSse dco_decode_distance_twin_sync_sse(dynamic raw);

  @protected
  ElementTwinNormal dco_decode_element_twin_normal(dynamic raw);

  @protected
  ElementTwinRustAsync dco_decode_element_twin_rust_async(dynamic raw);

  @protected
  ElementTwinRustAsyncSse dco_decode_element_twin_rust_async_sse(dynamic raw);

  @protected
  ElementTwinSse dco_decode_element_twin_sse(dynamic raw);

  @protected
  ElementTwinSync dco_decode_element_twin_sync(dynamic raw);

  @protected
  ElementTwinSyncSse dco_decode_element_twin_sync_sse(dynamic raw);

  @protected
  EmptyTwinNormal dco_decode_empty_twin_normal(dynamic raw);

  @protected
  EmptyTwinRustAsync dco_decode_empty_twin_rust_async(dynamic raw);

  @protected
  EmptyTwinRustAsyncSse dco_decode_empty_twin_rust_async_sse(dynamic raw);

  @protected
  EmptyTwinSse dco_decode_empty_twin_sse(dynamic raw);

  @protected
  EmptyTwinSync dco_decode_empty_twin_sync(dynamic raw);

  @protected
  EmptyTwinSyncSse dco_decode_empty_twin_sync_sse(dynamic raw);

  @protected
  EnumDartOpaqueTwinNormal dco_decode_enum_dart_opaque_twin_normal(dynamic raw);

  @protected
  EnumDartOpaqueTwinRustAsync dco_decode_enum_dart_opaque_twin_rust_async(
      dynamic raw);

  @protected
  EnumDartOpaqueTwinRustAsyncSse
      dco_decode_enum_dart_opaque_twin_rust_async_sse(dynamic raw);

  @protected
  EnumDartOpaqueTwinSse dco_decode_enum_dart_opaque_twin_sse(dynamic raw);

  @protected
  EnumDartOpaqueTwinSync dco_decode_enum_dart_opaque_twin_sync(dynamic raw);

  @protected
  EnumDartOpaqueTwinSyncSse dco_decode_enum_dart_opaque_twin_sync_sse(
      dynamic raw);

  @protected
  EnumOpaqueTwinMoi dco_decode_enum_opaque_twin_moi(dynamic raw);

  @protected
  EnumOpaqueTwinMoiArray5 dco_decode_enum_opaque_twin_moi_array_5(dynamic raw);

  @protected
  EnumOpaqueTwinNormal dco_decode_enum_opaque_twin_normal(dynamic raw);

  @protected
  EnumOpaqueTwinNormalArray5 dco_decode_enum_opaque_twin_normal_array_5(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsync dco_decode_enum_opaque_twin_rust_async(dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncArray5 dco_decode_enum_opaque_twin_rust_async_array_5(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncMoi dco_decode_enum_opaque_twin_rust_async_moi(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncMoiArray5
      dco_decode_enum_opaque_twin_rust_async_moi_array_5(dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncSse dco_decode_enum_opaque_twin_rust_async_sse(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncSseArray5
      dco_decode_enum_opaque_twin_rust_async_sse_array_5(dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncSseMoi dco_decode_enum_opaque_twin_rust_async_sse_moi(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncSseMoiArray5
      dco_decode_enum_opaque_twin_rust_async_sse_moi_array_5(dynamic raw);

  @protected
  EnumOpaqueTwinSse dco_decode_enum_opaque_twin_sse(dynamic raw);

  @protected
  EnumOpaqueTwinSseArray5 dco_decode_enum_opaque_twin_sse_array_5(dynamic raw);

  @protected
  EnumOpaqueTwinSseMoi dco_decode_enum_opaque_twin_sse_moi(dynamic raw);

  @protected
  EnumOpaqueTwinSseMoiArray5 dco_decode_enum_opaque_twin_sse_moi_array_5(
      dynamic raw);

  @protected
  EnumOpaqueTwinSync dco_decode_enum_opaque_twin_sync(dynamic raw);

  @protected
  EnumOpaqueTwinSyncArray5 dco_decode_enum_opaque_twin_sync_array_5(
      dynamic raw);

  @protected
  EnumOpaqueTwinSyncMoi dco_decode_enum_opaque_twin_sync_moi(dynamic raw);

  @protected
  EnumOpaqueTwinSyncMoiArray5 dco_decode_enum_opaque_twin_sync_moi_array_5(
      dynamic raw);

  @protected
  EnumOpaqueTwinSyncSse dco_decode_enum_opaque_twin_sync_sse(dynamic raw);

  @protected
  EnumOpaqueTwinSyncSseArray5 dco_decode_enum_opaque_twin_sync_sse_array_5(
      dynamic raw);

  @protected
  EnumOpaqueTwinSyncSseMoi dco_decode_enum_opaque_twin_sync_sse_moi(
      dynamic raw);

  @protected
  EnumOpaqueTwinSyncSseMoiArray5
      dco_decode_enum_opaque_twin_sync_sse_moi_array_5(dynamic raw);

  @protected
  EnumSimpleTwinNormal dco_decode_enum_simple_twin_normal(dynamic raw);

  @protected
  EnumSimpleTwinRustAsync dco_decode_enum_simple_twin_rust_async(dynamic raw);

  @protected
  EnumSimpleTwinRustAsyncSse dco_decode_enum_simple_twin_rust_async_sse(
      dynamic raw);

  @protected
  EnumSimpleTwinSse dco_decode_enum_simple_twin_sse(dynamic raw);

  @protected
  EnumSimpleTwinSync dco_decode_enum_simple_twin_sync(dynamic raw);

  @protected
  EnumSimpleTwinSyncSse dco_decode_enum_simple_twin_sync_sse(dynamic raw);

  @protected
  EnumWithDiscriminantTwinNormal dco_decode_enum_with_discriminant_twin_normal(
      dynamic raw);

  @protected
  EnumWithDiscriminantTwinRustAsync
      dco_decode_enum_with_discriminant_twin_rust_async(dynamic raw);

  @protected
  EnumWithDiscriminantTwinRustAsyncSse
      dco_decode_enum_with_discriminant_twin_rust_async_sse(dynamic raw);

  @protected
  EnumWithDiscriminantTwinSse dco_decode_enum_with_discriminant_twin_sse(
      dynamic raw);

  @protected
  EnumWithDiscriminantTwinSync dco_decode_enum_with_discriminant_twin_sync(
      dynamic raw);

  @protected
  EnumWithDiscriminantTwinSyncSse
      dco_decode_enum_with_discriminant_twin_sync_sse(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinMoi dco_decode_enum_with_good_and_opaque_twin_moi(
      dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinNormal
      dco_decode_enum_with_good_and_opaque_twin_normal(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsync
      dco_decode_enum_with_good_and_opaque_twin_rust_async(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncMoi
      dco_decode_enum_with_good_and_opaque_twin_rust_async_moi(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSse
      dco_decode_enum_with_good_and_opaque_twin_rust_async_sse(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSseMoi
      dco_decode_enum_with_good_and_opaque_twin_rust_async_sse_moi(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSse dco_decode_enum_with_good_and_opaque_twin_sse(
      dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSseMoi
      dco_decode_enum_with_good_and_opaque_twin_sse_moi(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSync dco_decode_enum_with_good_and_opaque_twin_sync(
      dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSyncMoi
      dco_decode_enum_with_good_and_opaque_twin_sync_moi(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSse
      dco_decode_enum_with_good_and_opaque_twin_sync_sse(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSseMoi
      dco_decode_enum_with_good_and_opaque_twin_sync_sse_moi(dynamic raw);

  @protected
  EnumWithItemMixedTwinNormal dco_decode_enum_with_item_mixed_twin_normal(
      dynamic raw);

  @protected
  EnumWithItemMixedTwinRustAsync
      dco_decode_enum_with_item_mixed_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemMixedTwinRustAsyncSse
      dco_decode_enum_with_item_mixed_twin_rust_async_sse(dynamic raw);

  @protected
  EnumWithItemMixedTwinSse dco_decode_enum_with_item_mixed_twin_sse(
      dynamic raw);

  @protected
  EnumWithItemMixedTwinSync dco_decode_enum_with_item_mixed_twin_sync(
      dynamic raw);

  @protected
  EnumWithItemMixedTwinSyncSse dco_decode_enum_with_item_mixed_twin_sync_sse(
      dynamic raw);

  @protected
  EnumWithItemStructTwinNormal dco_decode_enum_with_item_struct_twin_normal(
      dynamic raw);

  @protected
  EnumWithItemStructTwinRustAsync
      dco_decode_enum_with_item_struct_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemStructTwinRustAsyncSse
      dco_decode_enum_with_item_struct_twin_rust_async_sse(dynamic raw);

  @protected
  EnumWithItemStructTwinSse dco_decode_enum_with_item_struct_twin_sse(
      dynamic raw);

  @protected
  EnumWithItemStructTwinSync dco_decode_enum_with_item_struct_twin_sync(
      dynamic raw);

  @protected
  EnumWithItemStructTwinSyncSse dco_decode_enum_with_item_struct_twin_sync_sse(
      dynamic raw);

  @protected
  EnumWithItemTupleTwinNormal dco_decode_enum_with_item_tuple_twin_normal(
      dynamic raw);

  @protected
  EnumWithItemTupleTwinRustAsync
      dco_decode_enum_with_item_tuple_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemTupleTwinRustAsyncSse
      dco_decode_enum_with_item_tuple_twin_rust_async_sse(dynamic raw);

  @protected
  EnumWithItemTupleTwinSse dco_decode_enum_with_item_tuple_twin_sse(
      dynamic raw);

  @protected
  EnumWithItemTupleTwinSync dco_decode_enum_with_item_tuple_twin_sync(
      dynamic raw);

  @protected
  EnumWithItemTupleTwinSyncSse dco_decode_enum_with_item_tuple_twin_sync_sse(
      dynamic raw);

  @protected
  EventTwinNormal dco_decode_event_twin_normal(dynamic raw);

  @protected
  EventTwinRustAsync dco_decode_event_twin_rust_async(dynamic raw);

  @protected
  EventTwinRustAsyncSse dco_decode_event_twin_rust_async_sse(dynamic raw);

  @protected
  EventTwinSse dco_decode_event_twin_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinNormal dco_decode_exotic_optionals_twin_normal(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsync dco_decode_exotic_optionals_twin_rust_async(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      dco_decode_exotic_optionals_twin_rust_async_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSse dco_decode_exotic_optionals_twin_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSync dco_decode_exotic_optionals_twin_sync(dynamic raw);

  @protected
  ExoticOptionalsTwinSyncSse dco_decode_exotic_optionals_twin_sync_sse(
      dynamic raw);

  @protected
  double dco_decode_f_32(dynamic raw);

  @protected
  double dco_decode_f_64(dynamic raw);

  @protected
  F64Array16 dco_decode_f_64_array_16(dynamic raw);

  @protected
  FeatureChronoTwinNormal dco_decode_feature_chrono_twin_normal(dynamic raw);

  @protected
  FeatureChronoTwinRustAsync dco_decode_feature_chrono_twin_rust_async(
      dynamic raw);

  @protected
  FeatureChronoTwinRustAsyncSse dco_decode_feature_chrono_twin_rust_async_sse(
      dynamic raw);

  @protected
  FeatureChronoTwinSse dco_decode_feature_chrono_twin_sse(dynamic raw);

  @protected
  FeatureChronoTwinSync dco_decode_feature_chrono_twin_sync(dynamic raw);

  @protected
  FeatureChronoTwinSyncSse dco_decode_feature_chrono_twin_sync_sse(dynamic raw);

  @protected
  FeatureUuidTwinNormal dco_decode_feature_uuid_twin_normal(dynamic raw);

  @protected
  FeatureUuidTwinRustAsync dco_decode_feature_uuid_twin_rust_async(dynamic raw);

  @protected
  FeatureUuidTwinRustAsyncSse dco_decode_feature_uuid_twin_rust_async_sse(
      dynamic raw);

  @protected
  FeatureUuidTwinSse dco_decode_feature_uuid_twin_sse(dynamic raw);

  @protected
  FeatureUuidTwinSync dco_decode_feature_uuid_twin_sync(dynamic raw);

  @protected
  FeatureUuidTwinSyncSse dco_decode_feature_uuid_twin_sync_sse(dynamic raw);

  @protected
  FeedIdTwinNormal dco_decode_feed_id_twin_normal(dynamic raw);

  @protected
  FeedIdTwinRustAsync dco_decode_feed_id_twin_rust_async(dynamic raw);

  @protected
  FeedIdTwinRustAsyncSse dco_decode_feed_id_twin_rust_async_sse(dynamic raw);

  @protected
  FeedIdTwinSse dco_decode_feed_id_twin_sse(dynamic raw);

  @protected
  FeedIdTwinSync dco_decode_feed_id_twin_sync(dynamic raw);

  @protected
  FeedIdTwinSyncSse dco_decode_feed_id_twin_sync_sse(dynamic raw);

  @protected
  HashMapValue dco_decode_hash_map_value(dynamic raw);

  @protected
  int dco_decode_i_16(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  I32Array2 dco_decode_i_32_array_2(dynamic raw);

  @protected
  int dco_decode_i_64(dynamic raw);

  @protected
  int dco_decode_i_8(dynamic raw);

  @protected
  int dco_decode_isize(dynamic raw);

  @protected
  KitchenSinkTwinNormal dco_decode_kitchen_sink_twin_normal(dynamic raw);

  @protected
  KitchenSinkTwinRustAsync dco_decode_kitchen_sink_twin_rust_async(dynamic raw);

  @protected
  KitchenSinkTwinRustAsyncSse dco_decode_kitchen_sink_twin_rust_async_sse(
      dynamic raw);

  @protected
  KitchenSinkTwinSse dco_decode_kitchen_sink_twin_sse(dynamic raw);

  @protected
  KitchenSinkTwinSync dco_decode_kitchen_sink_twin_sync(dynamic raw);

  @protected
  KitchenSinkTwinSyncSse dco_decode_kitchen_sink_twin_sync_sse(dynamic raw);

  @protected
  List<NonCloneSimpleTwinMoi>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinNormal>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinRustAsync>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinRustAsyncMoi>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinRustAsyncSse>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinRustAsyncSseMoi>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinSse>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinSseMoi>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinSync>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinSyncMoi>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinSyncSse>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinSyncSseMoi>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic raw);

  @protected
  List<Duration> dco_decode_list_Chrono_Duration(dynamic raw);

  @protected
  List<DateTime> dco_decode_list_Chrono_Local(dynamic raw);

  @protected
  List<DateTime> dco_decode_list_Chrono_Naive(dynamic raw);

  @protected
  List<Object> dco_decode_list_DartOpaque(dynamic raw);

  @protected
  List<HideDataTwinMoi> dco_decode_list_RustOpaque_HideDataTwinMoi(dynamic raw);

  @protected
  List<HideDataTwinNormal> dco_decode_list_RustOpaque_HideDataTwinNormal(
      dynamic raw);

  @protected
  List<HideDataTwinRustAsync> dco_decode_list_RustOpaque_HideDataTwinRustAsync(
      dynamic raw);

  @protected
  List<HideDataTwinRustAsyncMoi>
      dco_decode_list_RustOpaque_HideDataTwinRustAsyncMoi(dynamic raw);

  @protected
  List<HideDataTwinRustAsyncSse>
      dco_decode_list_RustOpaque_HideDataTwinRustAsyncSse(dynamic raw);

  @protected
  List<HideDataTwinRustAsyncSseMoi>
      dco_decode_list_RustOpaque_HideDataTwinRustAsyncSseMoi(dynamic raw);

  @protected
  List<HideDataTwinSse> dco_decode_list_RustOpaque_HideDataTwinSse(dynamic raw);

  @protected
  List<HideDataTwinSseMoi> dco_decode_list_RustOpaque_HideDataTwinSseMoi(
      dynamic raw);

  @protected
  List<HideDataTwinSync> dco_decode_list_RustOpaque_HideDataTwinSync(
      dynamic raw);

  @protected
  List<HideDataTwinSyncMoi> dco_decode_list_RustOpaque_HideDataTwinSyncMoi(
      dynamic raw);

  @protected
  List<HideDataTwinSyncSse> dco_decode_list_RustOpaque_HideDataTwinSyncSse(
      dynamic raw);

  @protected
  List<HideDataTwinSyncSseMoi>
      dco_decode_list_RustOpaque_HideDataTwinSyncSseMoi(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<UuidValue> dco_decode_list_Uuid(dynamic raw);

  @protected
  List<ApplicationEnvVar> dco_decode_list_application_env_var(dynamic raw);

  @protected
  List<ApplicationMode> dco_decode_list_application_mode(dynamic raw);

  @protected
  List<ApplicationSettings> dco_decode_list_application_settings(dynamic raw);

  @protected
  List<AttributeTwinNormal> dco_decode_list_attribute_twin_normal(dynamic raw);

  @protected
  List<AttributeTwinRustAsync> dco_decode_list_attribute_twin_rust_async(
      dynamic raw);

  @protected
  List<AttributeTwinRustAsyncSse> dco_decode_list_attribute_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<AttributeTwinSse> dco_decode_list_attribute_twin_sse(dynamic raw);

  @protected
  List<AttributeTwinSync> dco_decode_list_attribute_twin_sync(dynamic raw);

  @protected
  List<AttributeTwinSyncSse> dco_decode_list_attribute_twin_sync_sse(
      dynamic raw);

  @protected
  List<BasicGeneralEnumTwinNormal>
      dco_decode_list_basic_general_enum_twin_normal(dynamic raw);

  @protected
  List<BasicGeneralEnumTwinRustAsync>
      dco_decode_list_basic_general_enum_twin_rust_async(dynamic raw);

  @protected
  List<BasicGeneralEnumTwinRustAsyncSse>
      dco_decode_list_basic_general_enum_twin_rust_async_sse(dynamic raw);

  @protected
  List<BasicGeneralEnumTwinSse> dco_decode_list_basic_general_enum_twin_sse(
      dynamic raw);

  @protected
  List<BasicGeneralEnumTwinSync> dco_decode_list_basic_general_enum_twin_sync(
      dynamic raw);

  @protected
  List<BasicGeneralEnumTwinSyncSse>
      dco_decode_list_basic_general_enum_twin_sync_sse(dynamic raw);

  @protected
  List<BasicPrimitiveEnumTwinNormal>
      dco_decode_list_basic_primitive_enum_twin_normal(dynamic raw);

  @protected
  List<BasicPrimitiveEnumTwinRustAsync>
      dco_decode_list_basic_primitive_enum_twin_rust_async(dynamic raw);

  @protected
  List<BasicPrimitiveEnumTwinRustAsyncSse>
      dco_decode_list_basic_primitive_enum_twin_rust_async_sse(dynamic raw);

  @protected
  List<BasicPrimitiveEnumTwinSse> dco_decode_list_basic_primitive_enum_twin_sse(
      dynamic raw);

  @protected
  List<BasicPrimitiveEnumTwinSync>
      dco_decode_list_basic_primitive_enum_twin_sync(dynamic raw);

  @protected
  List<BasicPrimitiveEnumTwinSyncSse>
      dco_decode_list_basic_primitive_enum_twin_sync_sse(dynamic raw);

  @protected
  List<BasicStructTwinNormal> dco_decode_list_basic_struct_twin_normal(
      dynamic raw);

  @protected
  List<BasicStructTwinRustAsync> dco_decode_list_basic_struct_twin_rust_async(
      dynamic raw);

  @protected
  List<BasicStructTwinRustAsyncSse>
      dco_decode_list_basic_struct_twin_rust_async_sse(dynamic raw);

  @protected
  List<BasicStructTwinSse> dco_decode_list_basic_struct_twin_sse(dynamic raw);

  @protected
  List<BasicStructTwinSync> dco_decode_list_basic_struct_twin_sync(dynamic raw);

  @protected
  List<BasicStructTwinSyncSse> dco_decode_list_basic_struct_twin_sync_sse(
      dynamic raw);

  @protected
  List<bool> dco_decode_list_bool(dynamic raw);

  @protected
  List<ElementTwinNormal> dco_decode_list_element_twin_normal(dynamic raw);

  @protected
  List<ElementTwinRustAsync> dco_decode_list_element_twin_rust_async(
      dynamic raw);

  @protected
  List<ElementTwinRustAsyncSse> dco_decode_list_element_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<ElementTwinSse> dco_decode_list_element_twin_sse(dynamic raw);

  @protected
  List<ElementTwinSync> dco_decode_list_element_twin_sync(dynamic raw);

  @protected
  List<ElementTwinSyncSse> dco_decode_list_element_twin_sync_sse(dynamic raw);

  @protected
  List<EnumOpaqueTwinMoi> dco_decode_list_enum_opaque_twin_moi(dynamic raw);

  @protected
  List<EnumOpaqueTwinNormal> dco_decode_list_enum_opaque_twin_normal(
      dynamic raw);

  @protected
  List<EnumOpaqueTwinRustAsync> dco_decode_list_enum_opaque_twin_rust_async(
      dynamic raw);

  @protected
  List<EnumOpaqueTwinRustAsyncMoi>
      dco_decode_list_enum_opaque_twin_rust_async_moi(dynamic raw);

  @protected
  List<EnumOpaqueTwinRustAsyncSse>
      dco_decode_list_enum_opaque_twin_rust_async_sse(dynamic raw);

  @protected
  List<EnumOpaqueTwinRustAsyncSseMoi>
      dco_decode_list_enum_opaque_twin_rust_async_sse_moi(dynamic raw);

  @protected
  List<EnumOpaqueTwinSse> dco_decode_list_enum_opaque_twin_sse(dynamic raw);

  @protected
  List<EnumOpaqueTwinSseMoi> dco_decode_list_enum_opaque_twin_sse_moi(
      dynamic raw);

  @protected
  List<EnumOpaqueTwinSync> dco_decode_list_enum_opaque_twin_sync(dynamic raw);

  @protected
  List<EnumOpaqueTwinSyncMoi> dco_decode_list_enum_opaque_twin_sync_moi(
      dynamic raw);

  @protected
  List<EnumOpaqueTwinSyncSse> dco_decode_list_enum_opaque_twin_sync_sse(
      dynamic raw);

  @protected
  List<EnumOpaqueTwinSyncSseMoi> dco_decode_list_enum_opaque_twin_sync_sse_moi(
      dynamic raw);

  @protected
  List<Uint8List> dco_decode_list_list_prim_u_8_strict(dynamic raw);

  @protected
  List<MyEnum> dco_decode_list_my_enum(dynamic raw);

  @protected
  List<MySize> dco_decode_list_my_size(dynamic raw);

  @protected
  List<MyTreeNodeTwinNormal> dco_decode_list_my_tree_node_twin_normal(
      dynamic raw);

  @protected
  List<MyTreeNodeTwinRustAsync> dco_decode_list_my_tree_node_twin_rust_async(
      dynamic raw);

  @protected
  List<MyTreeNodeTwinRustAsyncSse>
      dco_decode_list_my_tree_node_twin_rust_async_sse(dynamic raw);

  @protected
  List<MyTreeNodeTwinSse> dco_decode_list_my_tree_node_twin_sse(dynamic raw);

  @protected
  List<MyTreeNodeTwinSync> dco_decode_list_my_tree_node_twin_sync(dynamic raw);

  @protected
  List<MyTreeNodeTwinSyncSse> dco_decode_list_my_tree_node_twin_sync_sse(
      dynamic raw);

  @protected
  List<NestedRawStringMirrored> dco_decode_list_nested_raw_string_mirrored(
      dynamic raw);

  @protected
  ListOfNestedRawStringMirrored dco_decode_list_of_nested_raw_string_mirrored(
      dynamic raw);

  @protected
  List<String?> dco_decode_list_opt_String(dynamic raw);

  @protected
  List<AttributeTwinNormal?>
      dco_decode_list_opt_box_autoadd_attribute_twin_normal(dynamic raw);

  @protected
  List<AttributeTwinRustAsync?>
      dco_decode_list_opt_box_autoadd_attribute_twin_rust_async(dynamic raw);

  @protected
  List<AttributeTwinRustAsyncSse?>
      dco_decode_list_opt_box_autoadd_attribute_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<AttributeTwinSse?> dco_decode_list_opt_box_autoadd_attribute_twin_sse(
      dynamic raw);

  @protected
  List<AttributeTwinSync?> dco_decode_list_opt_box_autoadd_attribute_twin_sync(
      dynamic raw);

  @protected
  List<AttributeTwinSyncSse?>
      dco_decode_list_opt_box_autoadd_attribute_twin_sync_sse(dynamic raw);

  @protected
  List<int?> dco_decode_list_opt_box_autoadd_i_32(dynamic raw);

  @protected
  List<WeekdaysTwinNormal?>
      dco_decode_list_opt_box_autoadd_weekdays_twin_normal(dynamic raw);

  @protected
  List<WeekdaysTwinRustAsync?>
      dco_decode_list_opt_box_autoadd_weekdays_twin_rust_async(dynamic raw);

  @protected
  List<WeekdaysTwinRustAsyncSse?>
      dco_decode_list_opt_box_autoadd_weekdays_twin_rust_async_sse(dynamic raw);

  @protected
  List<WeekdaysTwinSse?> dco_decode_list_opt_box_autoadd_weekdays_twin_sse(
      dynamic raw);

  @protected
  List<WeekdaysTwinSync?> dco_decode_list_opt_box_autoadd_weekdays_twin_sync(
      dynamic raw);

  @protected
  List<WeekdaysTwinSyncSse?>
      dco_decode_list_opt_box_autoadd_weekdays_twin_sync_sse(dynamic raw);

  @protected
  List<Int32List?> dco_decode_list_opt_list_prim_i_32_strict(dynamic raw);

  @protected
  List<PointTwinNormal> dco_decode_list_point_twin_normal(dynamic raw);

  @protected
  List<PointTwinRustAsync> dco_decode_list_point_twin_rust_async(dynamic raw);

  @protected
  List<PointTwinRustAsyncSse> dco_decode_list_point_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<PointTwinSse> dco_decode_list_point_twin_sse(dynamic raw);

  @protected
  List<PointTwinSync> dco_decode_list_point_twin_sync(dynamic raw);

  @protected
  List<PointTwinSyncSse> dco_decode_list_point_twin_sync_sse(dynamic raw);

  @protected
  List<double> dco_decode_list_prim_f_32_loose(dynamic raw);

  @protected
  Float32List dco_decode_list_prim_f_32_strict(dynamic raw);

  @protected
  List<double> dco_decode_list_prim_f_64_loose(dynamic raw);

  @protected
  Float64List dco_decode_list_prim_f_64_strict(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_i_16_loose(dynamic raw);

  @protected
  Int16List dco_decode_list_prim_i_16_strict(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_i_32_loose(dynamic raw);

  @protected
  Int32List dco_decode_list_prim_i_32_strict(dynamic raw);

  @protected
  Int64List dco_decode_list_prim_i_64_strict(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_i_8_loose(dynamic raw);

  @protected
  Int8List dco_decode_list_prim_i_8_strict(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_16_loose(dynamic raw);

  @protected
  Uint16List dco_decode_list_prim_u_16_strict(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_32_loose(dynamic raw);

  @protected
  Uint32List dco_decode_list_prim_u_32_strict(dynamic raw);

  @protected
  Uint64List dco_decode_list_prim_u_64_strict(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_8_loose(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<RawStringEnumMirrored> dco_decode_list_raw_string_enum_mirrored(
      dynamic raw);

  @protected
  List<RawStringMirrored> dco_decode_list_raw_string_mirrored(dynamic raw);

  @protected
  List<(int, BasicGeneralEnumTwinNormal)>
      dco_decode_list_record_i_32_basic_general_enum_twin_normal(dynamic raw);

  @protected
  List<(int, BasicGeneralEnumTwinRustAsync)>
      dco_decode_list_record_i_32_basic_general_enum_twin_rust_async(
          dynamic raw);

  @protected
  List<(int, BasicGeneralEnumTwinRustAsyncSse)>
      dco_decode_list_record_i_32_basic_general_enum_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<(int, BasicGeneralEnumTwinSse)>
      dco_decode_list_record_i_32_basic_general_enum_twin_sse(dynamic raw);

  @protected
  List<(int, BasicGeneralEnumTwinSync)>
      dco_decode_list_record_i_32_basic_general_enum_twin_sync(dynamic raw);

  @protected
  List<(int, BasicGeneralEnumTwinSyncSse)>
      dco_decode_list_record_i_32_basic_general_enum_twin_sync_sse(dynamic raw);

  @protected
  List<(int, BasicPrimitiveEnumTwinNormal)>
      dco_decode_list_record_i_32_basic_primitive_enum_twin_normal(dynamic raw);

  @protected
  List<(int, BasicPrimitiveEnumTwinRustAsync)>
      dco_decode_list_record_i_32_basic_primitive_enum_twin_rust_async(
          dynamic raw);

  @protected
  List<(int, BasicPrimitiveEnumTwinRustAsyncSse)>
      dco_decode_list_record_i_32_basic_primitive_enum_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<(int, BasicPrimitiveEnumTwinSse)>
      dco_decode_list_record_i_32_basic_primitive_enum_twin_sse(dynamic raw);

  @protected
  List<(int, BasicPrimitiveEnumTwinSync)>
      dco_decode_list_record_i_32_basic_primitive_enum_twin_sync(dynamic raw);

  @protected
  List<(int, BasicPrimitiveEnumTwinSyncSse)>
      dco_decode_list_record_i_32_basic_primitive_enum_twin_sync_sse(
          dynamic raw);

  @protected
  List<(int, BasicStructTwinNormal)>
      dco_decode_list_record_i_32_basic_struct_twin_normal(dynamic raw);

  @protected
  List<(int, BasicStructTwinRustAsync)>
      dco_decode_list_record_i_32_basic_struct_twin_rust_async(dynamic raw);

  @protected
  List<(int, BasicStructTwinRustAsyncSse)>
      dco_decode_list_record_i_32_basic_struct_twin_rust_async_sse(dynamic raw);

  @protected
  List<(int, BasicStructTwinSse)>
      dco_decode_list_record_i_32_basic_struct_twin_sse(dynamic raw);

  @protected
  List<(int, BasicStructTwinSync)>
      dco_decode_list_record_i_32_basic_struct_twin_sync(dynamic raw);

  @protected
  List<(int, BasicStructTwinSyncSse)>
      dco_decode_list_record_i_32_basic_struct_twin_sync_sse(dynamic raw);

  @protected
  List<(int, bool)> dco_decode_list_record_i_32_bool(dynamic raw);

  @protected
  List<(int, double)> dco_decode_list_record_i_32_f_32(dynamic raw);

  @protected
  List<(int, double)> dco_decode_list_record_i_32_f_64(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_i_16(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_i_32(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_i_64(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_i_8(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_isize(dynamic raw);

  @protected
  List<(int, Uint8List)> dco_decode_list_record_i_32_list_prim_u_8_strict(
      dynamic raw);

  @protected
  List<(int, String)> dco_decode_list_record_i_32_string(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_u_16(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_u_32(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_u_64(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_u_8(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_usize(dynamic raw);

  @protected
  List<(String, EnumSimpleTwinNormal)>
      dco_decode_list_record_string_enum_simple_twin_normal(dynamic raw);

  @protected
  List<(String, EnumSimpleTwinRustAsync)>
      dco_decode_list_record_string_enum_simple_twin_rust_async(dynamic raw);

  @protected
  List<(String, EnumSimpleTwinRustAsyncSse)>
      dco_decode_list_record_string_enum_simple_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<(String, EnumSimpleTwinSse)>
      dco_decode_list_record_string_enum_simple_twin_sse(dynamic raw);

  @protected
  List<(String, EnumSimpleTwinSync)>
      dco_decode_list_record_string_enum_simple_twin_sync(dynamic raw);

  @protected
  List<(String, EnumSimpleTwinSyncSse)>
      dco_decode_list_record_string_enum_simple_twin_sync_sse(dynamic raw);

  @protected
  List<(String, HashMapValue)> dco_decode_list_record_string_hash_map_value(
      dynamic raw);

  @protected
  List<(String, int)> dco_decode_list_record_string_i_32(dynamic raw);

  @protected
  List<(String, KitchenSinkTwinNormal)>
      dco_decode_list_record_string_kitchen_sink_twin_normal(dynamic raw);

  @protected
  List<(String, KitchenSinkTwinRustAsync)>
      dco_decode_list_record_string_kitchen_sink_twin_rust_async(dynamic raw);

  @protected
  List<(String, KitchenSinkTwinRustAsyncSse)>
      dco_decode_list_record_string_kitchen_sink_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<(String, KitchenSinkTwinSse)>
      dco_decode_list_record_string_kitchen_sink_twin_sse(dynamic raw);

  @protected
  List<(String, KitchenSinkTwinSync)>
      dco_decode_list_record_string_kitchen_sink_twin_sync(dynamic raw);

  @protected
  List<(String, KitchenSinkTwinSyncSse)>
      dco_decode_list_record_string_kitchen_sink_twin_sync_sse(dynamic raw);

  @protected
  List<(String, Uint8List)> dco_decode_list_record_string_list_prim_u_8_strict(
      dynamic raw);

  @protected
  List<(String, MySize)> dco_decode_list_record_string_my_size(dynamic raw);

  @protected
  List<(String, String)> dco_decode_list_record_string_string(dynamic raw);

  @protected
  List<(int, ApplicationMode)> dco_decode_list_record_u_8_application_mode(
      dynamic raw);

  @protected
  List<SimpleStructTwinNormal> dco_decode_list_simple_struct_twin_normal(
      dynamic raw);

  @protected
  List<SimpleStructTwinRustAsync> dco_decode_list_simple_struct_twin_rust_async(
      dynamic raw);

  @protected
  List<SimpleStructTwinRustAsyncSse>
      dco_decode_list_simple_struct_twin_rust_async_sse(dynamic raw);

  @protected
  List<SimpleStructTwinSse> dco_decode_list_simple_struct_twin_sse(dynamic raw);

  @protected
  List<SimpleStructTwinSync> dco_decode_list_simple_struct_twin_sync(
      dynamic raw);

  @protected
  List<SimpleStructTwinSyncSse> dco_decode_list_simple_struct_twin_sync_sse(
      dynamic raw);

  @protected
  List<SumWithTwinNormal> dco_decode_list_sum_with_twin_normal(dynamic raw);

  @protected
  List<SumWithTwinRustAsync> dco_decode_list_sum_with_twin_rust_async(
      dynamic raw);

  @protected
  List<SumWithTwinRustAsyncSse> dco_decode_list_sum_with_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<SumWithTwinSse> dco_decode_list_sum_with_twin_sse(dynamic raw);

  @protected
  List<SumWithTwinSync> dco_decode_list_sum_with_twin_sync(dynamic raw);

  @protected
  List<SumWithTwinSyncSse> dco_decode_list_sum_with_twin_sync_sse(dynamic raw);

  @protected
  List<TestIdTwinNormal> dco_decode_list_test_id_twin_normal(dynamic raw);

  @protected
  List<TestIdTwinRustAsync> dco_decode_list_test_id_twin_rust_async(
      dynamic raw);

  @protected
  List<TestIdTwinRustAsyncSse> dco_decode_list_test_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<TestIdTwinSse> dco_decode_list_test_id_twin_sse(dynamic raw);

  @protected
  List<TestIdTwinSync> dco_decode_list_test_id_twin_sync(dynamic raw);

  @protected
  List<TestIdTwinSyncSse> dco_decode_list_test_id_twin_sync_sse(dynamic raw);

  @protected
  List<WeekdaysTwinNormal> dco_decode_list_weekdays_twin_normal(dynamic raw);

  @protected
  List<WeekdaysTwinRustAsync> dco_decode_list_weekdays_twin_rust_async(
      dynamic raw);

  @protected
  List<WeekdaysTwinRustAsyncSse> dco_decode_list_weekdays_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<WeekdaysTwinSse> dco_decode_list_weekdays_twin_sse(dynamic raw);

  @protected
  List<WeekdaysTwinSync> dco_decode_list_weekdays_twin_sync(dynamic raw);

  @protected
  List<WeekdaysTwinSyncSse> dco_decode_list_weekdays_twin_sync_sse(dynamic raw);

  @protected
  Log2TwinNormal dco_decode_log_2_twin_normal(dynamic raw);

  @protected
  Log2TwinRustAsync dco_decode_log_2_twin_rust_async(dynamic raw);

  @protected
  Log2TwinRustAsyncSse dco_decode_log_2_twin_rust_async_sse(dynamic raw);

  @protected
  Log2TwinSse dco_decode_log_2_twin_sse(dynamic raw);

  @protected
  Log2TwinSync dco_decode_log_2_twin_sync(dynamic raw);

  @protected
  Log2TwinSyncSse dco_decode_log_2_twin_sync_sse(dynamic raw);

  @protected
  LogTwinNormal dco_decode_log_twin_normal(dynamic raw);

  @protected
  LogTwinRustAsync dco_decode_log_twin_rust_async(dynamic raw);

  @protected
  LogTwinRustAsyncSse dco_decode_log_twin_rust_async_sse(dynamic raw);

  @protected
  LogTwinSse dco_decode_log_twin_sse(dynamic raw);

  @protected
  MacroStruct dco_decode_macro_struct(dynamic raw);

  @protected
  MeasureTwinNormal dco_decode_measure_twin_normal(dynamic raw);

  @protected
  MeasureTwinRustAsync dco_decode_measure_twin_rust_async(dynamic raw);

  @protected
  MeasureTwinRustAsyncSse dco_decode_measure_twin_rust_async_sse(dynamic raw);

  @protected
  MeasureTwinSse dco_decode_measure_twin_sse(dynamic raw);

  @protected
  MeasureTwinSync dco_decode_measure_twin_sync(dynamic raw);

  @protected
  MeasureTwinSyncSse dco_decode_measure_twin_sync_sse(dynamic raw);

  @protected
  MessageIdTwinNormal dco_decode_message_id_twin_normal(dynamic raw);

  @protected
  MessageIdTwinRustAsync dco_decode_message_id_twin_rust_async(dynamic raw);

  @protected
  MessageIdTwinRustAsyncSse dco_decode_message_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  MessageIdTwinSse dco_decode_message_id_twin_sse(dynamic raw);

  @protected
  MessageIdTwinSync dco_decode_message_id_twin_sync(dynamic raw);

  @protected
  MessageIdTwinSyncSse dco_decode_message_id_twin_sync_sse(dynamic raw);

  @protected
  MirrorStructTwinNormal dco_decode_mirror_struct_twin_normal(dynamic raw);

  @protected
  MirrorStructTwinRustAsync dco_decode_mirror_struct_twin_rust_async(
      dynamic raw);

  @protected
  MirrorStructTwinRustAsyncSse dco_decode_mirror_struct_twin_rust_async_sse(
      dynamic raw);

  @protected
  MirrorStructTwinSse dco_decode_mirror_struct_twin_sse(dynamic raw);

  @protected
  MirrorStructTwinSync dco_decode_mirror_struct_twin_sync(dynamic raw);

  @protected
  MirrorStructTwinSyncSse dco_decode_mirror_struct_twin_sync_sse(dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinNormal
      dco_decode_more_than_just_one_raw_string_struct_twin_normal(dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinRustAsync
      dco_decode_more_than_just_one_raw_string_struct_twin_rust_async(
          dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinRustAsyncSse
      dco_decode_more_than_just_one_raw_string_struct_twin_rust_async_sse(
          dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinSse
      dco_decode_more_than_just_one_raw_string_struct_twin_sse(dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinSync
      dco_decode_more_than_just_one_raw_string_struct_twin_sync(dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinSyncSse
      dco_decode_more_than_just_one_raw_string_struct_twin_sync_sse(
          dynamic raw);

  @protected
  MyCallableTwinNormal dco_decode_my_callable_twin_normal(dynamic raw);

  @protected
  MyCallableTwinRustAsync dco_decode_my_callable_twin_rust_async(dynamic raw);

  @protected
  MyCallableTwinRustAsyncSse dco_decode_my_callable_twin_rust_async_sse(
      dynamic raw);

  @protected
  MyCallableTwinSse dco_decode_my_callable_twin_sse(dynamic raw);

  @protected
  MyCallableTwinSync dco_decode_my_callable_twin_sync(dynamic raw);

  @protected
  MyCallableTwinSyncSse dco_decode_my_callable_twin_sync_sse(dynamic raw);

  @protected
  MyEnum dco_decode_my_enum(dynamic raw);

  @protected
  MyNestedStructTwinNormal dco_decode_my_nested_struct_twin_normal(dynamic raw);

  @protected
  MyNestedStructTwinRustAsync dco_decode_my_nested_struct_twin_rust_async(
      dynamic raw);

  @protected
  MyNestedStructTwinRustAsyncSse
      dco_decode_my_nested_struct_twin_rust_async_sse(dynamic raw);

  @protected
  MyNestedStructTwinSse dco_decode_my_nested_struct_twin_sse(dynamic raw);

  @protected
  MyNestedStructTwinSync dco_decode_my_nested_struct_twin_sync(dynamic raw);

  @protected
  MyNestedStructTwinSyncSse dco_decode_my_nested_struct_twin_sync_sse(
      dynamic raw);

  @protected
  MySize dco_decode_my_size(dynamic raw);

  @protected
  MyStreamEntryTwinNormal dco_decode_my_stream_entry_twin_normal(dynamic raw);

  @protected
  MyStreamEntryTwinRustAsync dco_decode_my_stream_entry_twin_rust_async(
      dynamic raw);

  @protected
  MyStreamEntryTwinRustAsyncSse dco_decode_my_stream_entry_twin_rust_async_sse(
      dynamic raw);

  @protected
  MyStreamEntryTwinSse dco_decode_my_stream_entry_twin_sse(dynamic raw);

  @protected
  MyStruct dco_decode_my_struct(dynamic raw);

  @protected
  MyTreeNodeTwinNormal dco_decode_my_tree_node_twin_normal(dynamic raw);

  @protected
  MyTreeNodeTwinRustAsync dco_decode_my_tree_node_twin_rust_async(dynamic raw);

  @protected
  MyTreeNodeTwinRustAsyncSse dco_decode_my_tree_node_twin_rust_async_sse(
      dynamic raw);

  @protected
  MyTreeNodeTwinSse dco_decode_my_tree_node_twin_sse(dynamic raw);

  @protected
  MyTreeNodeTwinSync dco_decode_my_tree_node_twin_sync(dynamic raw);

  @protected
  MyTreeNodeTwinSyncSse dco_decode_my_tree_node_twin_sync_sse(dynamic raw);

  @protected
  NestedRawStringMirrored dco_decode_nested_raw_string_mirrored(dynamic raw);

  @protected
  NewSimpleStruct dco_decode_new_simple_struct(dynamic raw);

  @protected
  NewTypeIntTwinNormal dco_decode_new_type_int_twin_normal(dynamic raw);

  @protected
  NewTypeIntTwinRustAsync dco_decode_new_type_int_twin_rust_async(dynamic raw);

  @protected
  NewTypeIntTwinRustAsyncSse dco_decode_new_type_int_twin_rust_async_sse(
      dynamic raw);

  @protected
  NewTypeIntTwinSse dco_decode_new_type_int_twin_sse(dynamic raw);

  @protected
  NewTypeIntTwinSync dco_decode_new_type_int_twin_sync(dynamic raw);

  @protected
  NewTypeIntTwinSyncSse dco_decode_new_type_int_twin_sync_sse(dynamic raw);

  @protected
  NoteTwinNormal dco_decode_note_twin_normal(dynamic raw);

  @protected
  NoteTwinRustAsync dco_decode_note_twin_rust_async(dynamic raw);

  @protected
  NoteTwinRustAsyncSse dco_decode_note_twin_rust_async_sse(dynamic raw);

  @protected
  NoteTwinSse dco_decode_note_twin_sse(dynamic raw);

  @protected
  NoteTwinSync dco_decode_note_twin_sync(dynamic raw);

  @protected
  NoteTwinSyncSse dco_decode_note_twin_sync_sse(dynamic raw);

  @protected
  Numbers dco_decode_numbers(dynamic raw);

  @protected
  OldSimpleStruct dco_decode_old_simple_struct(dynamic raw);

  @protected
  OpaqueNestedTwinMoi dco_decode_opaque_nested_twin_moi(dynamic raw);

  @protected
  OpaqueNestedTwinNormal dco_decode_opaque_nested_twin_normal(dynamic raw);

  @protected
  OpaqueNestedTwinRustAsync dco_decode_opaque_nested_twin_rust_async(
      dynamic raw);

  @protected
  OpaqueNestedTwinRustAsyncMoi dco_decode_opaque_nested_twin_rust_async_moi(
      dynamic raw);

  @protected
  OpaqueNestedTwinRustAsyncSse dco_decode_opaque_nested_twin_rust_async_sse(
      dynamic raw);

  @protected
  OpaqueNestedTwinRustAsyncSseMoi
      dco_decode_opaque_nested_twin_rust_async_sse_moi(dynamic raw);

  @protected
  OpaqueNestedTwinSse dco_decode_opaque_nested_twin_sse(dynamic raw);

  @protected
  OpaqueNestedTwinSseMoi dco_decode_opaque_nested_twin_sse_moi(dynamic raw);

  @protected
  OpaqueNestedTwinSync dco_decode_opaque_nested_twin_sync(dynamic raw);

  @protected
  OpaqueNestedTwinSyncMoi dco_decode_opaque_nested_twin_sync_moi(dynamic raw);

  @protected
  OpaqueNestedTwinSyncSse dco_decode_opaque_nested_twin_sync_sse(dynamic raw);

  @protected
  OpaqueNestedTwinSyncSseMoi dco_decode_opaque_nested_twin_sync_sse_moi(
      dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  NonCloneSimpleTwinMoi?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsync?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncMoi?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSse?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSseMoi?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSync?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncMoi?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSseMoi?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic raw);

  @protected
  Duration? dco_decode_opt_box_autoadd_Chrono_Duration(dynamic raw);

  @protected
  DateTime? dco_decode_opt_box_autoadd_Chrono_Naive(dynamic raw);

  @protected
  DateTime? dco_decode_opt_box_autoadd_Chrono_Utc(dynamic raw);

  @protected
  Object? dco_decode_opt_box_autoadd_DartOpaque(dynamic raw);

  @protected
  HideDataAnotherTwinMoi?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(dynamic raw);

  @protected
  HideDataAnotherTwinNormal?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
          dynamic raw);

  @protected
  HideDataAnotherTwinSse?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinSse(dynamic raw);

  @protected
  HideDataAnotherTwinSseMoi?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinSseMoi(
          dynamic raw);

  @protected
  HideDataTwinMoi? dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinMoi(
      dynamic raw);

  @protected
  HideDataTwinNormal? dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinNormal(
      dynamic raw);

  @protected
  HideDataTwinRustAsync?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsync(dynamic raw);

  @protected
  HideDataTwinRustAsyncMoi?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
          dynamic raw);

  @protected
  HideDataTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncSse(
          dynamic raw);

  @protected
  HideDataTwinRustAsyncSseMoi?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  HideDataTwinSse? dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinSse(
      dynamic raw);

  @protected
  HideDataTwinSseMoi? dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinSseMoi(
      dynamic raw);

  @protected
  HideDataTwinSync? dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinSync(
      dynamic raw);

  @protected
  HideDataTwinSyncMoi?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinSyncMoi(dynamic raw);

  @protected
  HideDataTwinSyncSse?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinSyncSse(dynamic raw);

  @protected
  HideDataTwinSyncSseMoi?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinSyncSseMoi(dynamic raw);

  @protected
  ApplicationEnv? dco_decode_opt_box_autoadd_application_env(dynamic raw);

  @protected
  ApplicationMode? dco_decode_opt_box_autoadd_application_mode(dynamic raw);

  @protected
  AttributeTwinNormal? dco_decode_opt_box_autoadd_attribute_twin_normal(
      dynamic raw);

  @protected
  AttributeTwinRustAsync? dco_decode_opt_box_autoadd_attribute_twin_rust_async(
      dynamic raw);

  @protected
  AttributeTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_attribute_twin_rust_async_sse(dynamic raw);

  @protected
  AttributeTwinSse? dco_decode_opt_box_autoadd_attribute_twin_sse(dynamic raw);

  @protected
  AttributeTwinSync? dco_decode_opt_box_autoadd_attribute_twin_sync(
      dynamic raw);

  @protected
  AttributeTwinSyncSse? dco_decode_opt_box_autoadd_attribute_twin_sync_sse(
      dynamic raw);

  @protected
  BasicGeneralEnumTwinNormal?
      dco_decode_opt_box_autoadd_basic_general_enum_twin_normal(dynamic raw);

  @protected
  BasicGeneralEnumTwinRustAsync?
      dco_decode_opt_box_autoadd_basic_general_enum_twin_rust_async(
          dynamic raw);

  @protected
  BasicGeneralEnumTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_basic_general_enum_twin_rust_async_sse(
          dynamic raw);

  @protected
  BasicGeneralEnumTwinSse?
      dco_decode_opt_box_autoadd_basic_general_enum_twin_sse(dynamic raw);

  @protected
  BasicGeneralEnumTwinSync?
      dco_decode_opt_box_autoadd_basic_general_enum_twin_sync(dynamic raw);

  @protected
  BasicGeneralEnumTwinSyncSse?
      dco_decode_opt_box_autoadd_basic_general_enum_twin_sync_sse(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinNormal?
      dco_decode_opt_box_autoadd_basic_primitive_enum_twin_normal(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinRustAsync?
      dco_decode_opt_box_autoadd_basic_primitive_enum_twin_rust_async(
          dynamic raw);

  @protected
  BasicPrimitiveEnumTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_basic_primitive_enum_twin_rust_async_sse(
          dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSse?
      dco_decode_opt_box_autoadd_basic_primitive_enum_twin_sse(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSync?
      dco_decode_opt_box_autoadd_basic_primitive_enum_twin_sync(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSyncSse?
      dco_decode_opt_box_autoadd_basic_primitive_enum_twin_sync_sse(
          dynamic raw);

  @protected
  BasicStructTwinNormal? dco_decode_opt_box_autoadd_basic_struct_twin_normal(
      dynamic raw);

  @protected
  BasicStructTwinRustAsync?
      dco_decode_opt_box_autoadd_basic_struct_twin_rust_async(dynamic raw);

  @protected
  BasicStructTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_basic_struct_twin_rust_async_sse(dynamic raw);

  @protected
  BasicStructTwinSse? dco_decode_opt_box_autoadd_basic_struct_twin_sse(
      dynamic raw);

  @protected
  BasicStructTwinSync? dco_decode_opt_box_autoadd_basic_struct_twin_sync(
      dynamic raw);

  @protected
  BasicStructTwinSyncSse? dco_decode_opt_box_autoadd_basic_struct_twin_sync_sse(
      dynamic raw);

  @protected
  bool? dco_decode_opt_box_autoadd_bool(dynamic raw);

  @protected
  ElementTwinNormal? dco_decode_opt_box_autoadd_element_twin_normal(
      dynamic raw);

  @protected
  ElementTwinRustAsync? dco_decode_opt_box_autoadd_element_twin_rust_async(
      dynamic raw);

  @protected
  ElementTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_element_twin_rust_async_sse(dynamic raw);

  @protected
  ElementTwinSse? dco_decode_opt_box_autoadd_element_twin_sse(dynamic raw);

  @protected
  ElementTwinSync? dco_decode_opt_box_autoadd_element_twin_sync(dynamic raw);

  @protected
  ElementTwinSyncSse? dco_decode_opt_box_autoadd_element_twin_sync_sse(
      dynamic raw);

  @protected
  ExoticOptionalsTwinNormal?
      dco_decode_opt_box_autoadd_exotic_optionals_twin_normal(dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsync?
      dco_decode_opt_box_autoadd_exotic_optionals_twin_rust_async(dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_exotic_optionals_twin_rust_async_sse(
          dynamic raw);

  @protected
  ExoticOptionalsTwinSse? dco_decode_opt_box_autoadd_exotic_optionals_twin_sse(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSync?
      dco_decode_opt_box_autoadd_exotic_optionals_twin_sync(dynamic raw);

  @protected
  ExoticOptionalsTwinSyncSse?
      dco_decode_opt_box_autoadd_exotic_optionals_twin_sync_sse(dynamic raw);

  @protected
  double? dco_decode_opt_box_autoadd_f_32(dynamic raw);

  @protected
  double? dco_decode_opt_box_autoadd_f_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_16(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_8(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_isize(dynamic raw);

  @protected
  MeasureTwinNormal? dco_decode_opt_box_autoadd_measure_twin_normal(
      dynamic raw);

  @protected
  MeasureTwinRustAsync? dco_decode_opt_box_autoadd_measure_twin_rust_async(
      dynamic raw);

  @protected
  MeasureTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_measure_twin_rust_async_sse(dynamic raw);

  @protected
  MeasureTwinSse? dco_decode_opt_box_autoadd_measure_twin_sse(dynamic raw);

  @protected
  MeasureTwinSync? dco_decode_opt_box_autoadd_measure_twin_sync(dynamic raw);

  @protected
  MeasureTwinSyncSse? dco_decode_opt_box_autoadd_measure_twin_sync_sse(
      dynamic raw);

  @protected
  NewTypeIntTwinNormal? dco_decode_opt_box_autoadd_new_type_int_twin_normal(
      dynamic raw);

  @protected
  NewTypeIntTwinRustAsync?
      dco_decode_opt_box_autoadd_new_type_int_twin_rust_async(dynamic raw);

  @protected
  NewTypeIntTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_new_type_int_twin_rust_async_sse(dynamic raw);

  @protected
  NewTypeIntTwinSse? dco_decode_opt_box_autoadd_new_type_int_twin_sse(
      dynamic raw);

  @protected
  NewTypeIntTwinSync? dco_decode_opt_box_autoadd_new_type_int_twin_sync(
      dynamic raw);

  @protected
  NewTypeIntTwinSyncSse? dco_decode_opt_box_autoadd_new_type_int_twin_sync_sse(
      dynamic raw);

  @protected
  (String, int)? dco_decode_opt_box_autoadd_record_string_i_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_16(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_8(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_usize(dynamic raw);

  @protected
  WeekdaysTwinNormal? dco_decode_opt_box_autoadd_weekdays_twin_normal(
      dynamic raw);

  @protected
  WeekdaysTwinRustAsync? dco_decode_opt_box_autoadd_weekdays_twin_rust_async(
      dynamic raw);

  @protected
  WeekdaysTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_weekdays_twin_rust_async_sse(dynamic raw);

  @protected
  WeekdaysTwinSse? dco_decode_opt_box_autoadd_weekdays_twin_sse(dynamic raw);

  @protected
  WeekdaysTwinSync? dco_decode_opt_box_autoadd_weekdays_twin_sync(dynamic raw);

  @protected
  WeekdaysTwinSyncSse? dco_decode_opt_box_autoadd_weekdays_twin_sync_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinNormal?
      dco_decode_opt_box_benchmark_binary_tree_twin_normal(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsync?
      dco_decode_opt_box_benchmark_binary_tree_twin_rust_async(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse?
      dco_decode_opt_box_benchmark_binary_tree_twin_rust_async_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSse? dco_decode_opt_box_benchmark_binary_tree_twin_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSync?
      dco_decode_opt_box_benchmark_binary_tree_twin_sync(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSyncSse?
      dco_decode_opt_box_benchmark_binary_tree_twin_sync_sse(dynamic raw);

  @protected
  bool? dco_decode_opt_box_bool(dynamic raw);

  @protected
  ExoticOptionalsTwinNormal? dco_decode_opt_box_exotic_optionals_twin_normal(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsync?
      dco_decode_opt_box_exotic_optionals_twin_rust_async(dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsyncSse?
      dco_decode_opt_box_exotic_optionals_twin_rust_async_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSse? dco_decode_opt_box_exotic_optionals_twin_sse(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSync? dco_decode_opt_box_exotic_optionals_twin_sync(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSyncSse? dco_decode_opt_box_exotic_optionals_twin_sync_sse(
      dynamic raw);

  @protected
  double? dco_decode_opt_box_f_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_i_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_i_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_i_8(dynamic raw);

  @protected
  int? dco_decode_opt_box_u_8(dynamic raw);

  @protected
  List<AttributeTwinNormal>? dco_decode_opt_list_attribute_twin_normal(
      dynamic raw);

  @protected
  List<AttributeTwinRustAsync>? dco_decode_opt_list_attribute_twin_rust_async(
      dynamic raw);

  @protected
  List<AttributeTwinRustAsyncSse>?
      dco_decode_opt_list_attribute_twin_rust_async_sse(dynamic raw);

  @protected
  List<AttributeTwinSse>? dco_decode_opt_list_attribute_twin_sse(dynamic raw);

  @protected
  List<AttributeTwinSync>? dco_decode_opt_list_attribute_twin_sync(dynamic raw);

  @protected
  List<AttributeTwinSyncSse>? dco_decode_opt_list_attribute_twin_sync_sse(
      dynamic raw);

  @protected
  List<ElementTwinNormal>? dco_decode_opt_list_element_twin_normal(dynamic raw);

  @protected
  List<ElementTwinRustAsync>? dco_decode_opt_list_element_twin_rust_async(
      dynamic raw);

  @protected
  List<ElementTwinRustAsyncSse>?
      dco_decode_opt_list_element_twin_rust_async_sse(dynamic raw);

  @protected
  List<ElementTwinSse>? dco_decode_opt_list_element_twin_sse(dynamic raw);

  @protected
  List<ElementTwinSync>? dco_decode_opt_list_element_twin_sync(dynamic raw);

  @protected
  List<ElementTwinSyncSse>? dco_decode_opt_list_element_twin_sync_sse(
      dynamic raw);

  @protected
  List<AttributeTwinNormal?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_normal(dynamic raw);

  @protected
  List<AttributeTwinRustAsync?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_rust_async(
          dynamic raw);

  @protected
  List<AttributeTwinRustAsyncSse?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<AttributeTwinSse?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_sse(dynamic raw);

  @protected
  List<AttributeTwinSync?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_sync(dynamic raw);

  @protected
  List<AttributeTwinSyncSse?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_sync_sse(dynamic raw);

  @protected
  Float32List? dco_decode_opt_list_prim_f_32_strict(dynamic raw);

  @protected
  Float64List? dco_decode_opt_list_prim_f_64_strict(dynamic raw);

  @protected
  Int32List? dco_decode_opt_list_prim_i_32_strict(dynamic raw);

  @protected
  Int8List? dco_decode_opt_list_prim_i_8_strict(dynamic raw);

  @protected
  Uint8List? dco_decode_opt_list_prim_u_8_strict(dynamic raw);

  @protected
  OptVecsTwinNormal dco_decode_opt_vecs_twin_normal(dynamic raw);

  @protected
  OptVecsTwinRustAsync dco_decode_opt_vecs_twin_rust_async(dynamic raw);

  @protected
  OptVecsTwinRustAsyncSse dco_decode_opt_vecs_twin_rust_async_sse(dynamic raw);

  @protected
  OptVecsTwinSse dco_decode_opt_vecs_twin_sse(dynamic raw);

  @protected
  OptVecsTwinSync dco_decode_opt_vecs_twin_sync(dynamic raw);

  @protected
  OptVecsTwinSyncSse dco_decode_opt_vecs_twin_sync_sse(dynamic raw);

  @protected
  PointTwinNormal dco_decode_point_twin_normal(dynamic raw);

  @protected
  PointTwinNormalArray2 dco_decode_point_twin_normal_array_2(dynamic raw);

  @protected
  PointTwinRustAsync dco_decode_point_twin_rust_async(dynamic raw);

  @protected
  PointTwinRustAsyncArray2 dco_decode_point_twin_rust_async_array_2(
      dynamic raw);

  @protected
  PointTwinRustAsyncSse dco_decode_point_twin_rust_async_sse(dynamic raw);

  @protected
  PointTwinRustAsyncSseArray2 dco_decode_point_twin_rust_async_sse_array_2(
      dynamic raw);

  @protected
  PointTwinSse dco_decode_point_twin_sse(dynamic raw);

  @protected
  PointTwinSseArray2 dco_decode_point_twin_sse_array_2(dynamic raw);

  @protected
  PointTwinSync dco_decode_point_twin_sync(dynamic raw);

  @protected
  PointTwinSyncArray2 dco_decode_point_twin_sync_array_2(dynamic raw);

  @protected
  PointTwinSyncSse dco_decode_point_twin_sync_sse(dynamic raw);

  @protected
  PointTwinSyncSseArray2 dco_decode_point_twin_sync_sse_array_2(dynamic raw);

  @protected
  RawStringEnumMirrored dco_decode_raw_string_enum_mirrored(dynamic raw);

  @protected
  RawStringItemStructTwinNormal dco_decode_raw_string_item_struct_twin_normal(
      dynamic raw);

  @protected
  RawStringItemStructTwinRustAsync
      dco_decode_raw_string_item_struct_twin_rust_async(dynamic raw);

  @protected
  RawStringItemStructTwinRustAsyncSse
      dco_decode_raw_string_item_struct_twin_rust_async_sse(dynamic raw);

  @protected
  RawStringItemStructTwinSse dco_decode_raw_string_item_struct_twin_sse(
      dynamic raw);

  @protected
  RawStringItemStructTwinSync dco_decode_raw_string_item_struct_twin_sync(
      dynamic raw);

  @protected
  RawStringItemStructTwinSyncSse
      dco_decode_raw_string_item_struct_twin_sync_sse(dynamic raw);

  @protected
  RawStringMirrored dco_decode_raw_string_mirrored(dynamic raw);

  @protected
  (ApplicationSettings, RawStringEnumMirrored)
      dco_decode_record_application_settings_raw_string_enum_mirrored(
          dynamic raw);

  @protected
  (
    OpaqueOneTwinMoi,
    OpaqueTwoTwinMoi
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_moi(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinNormal,
    OpaqueTwoTwinNormal
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_normal_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_normal(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinRustAsync,
    OpaqueTwoTwinRustAsync
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinRustAsyncMoi,
    OpaqueTwoTwinRustAsyncMoi
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_moi(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinRustAsyncSse,
    OpaqueTwoTwinRustAsyncSse
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_sse(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinRustAsyncSseMoi,
    OpaqueTwoTwinRustAsyncSseMoi
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_sse_moi(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinSse,
    OpaqueTwoTwinSse
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sse(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinSseMoi,
    OpaqueTwoTwinSseMoi
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sse_moi(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinSync,
    OpaqueTwoTwinSync
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinSyncMoi,
    OpaqueTwoTwinSyncMoi
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_moi(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinSyncSse,
    OpaqueTwoTwinSyncSse
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_sse(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinSyncSseMoi,
    OpaqueTwoTwinSyncSseMoi
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_sse_moi(
      dynamic raw);

  @protected
  (int, BasicGeneralEnumTwinNormal)
      dco_decode_record_i_32_basic_general_enum_twin_normal(dynamic raw);

  @protected
  (int, BasicGeneralEnumTwinRustAsync)
      dco_decode_record_i_32_basic_general_enum_twin_rust_async(dynamic raw);

  @protected
  (
    int,
    BasicGeneralEnumTwinRustAsyncSse
  ) dco_decode_record_i_32_basic_general_enum_twin_rust_async_sse(dynamic raw);

  @protected
  (int, BasicGeneralEnumTwinSse)
      dco_decode_record_i_32_basic_general_enum_twin_sse(dynamic raw);

  @protected
  (int, BasicGeneralEnumTwinSync)
      dco_decode_record_i_32_basic_general_enum_twin_sync(dynamic raw);

  @protected
  (int, BasicGeneralEnumTwinSyncSse)
      dco_decode_record_i_32_basic_general_enum_twin_sync_sse(dynamic raw);

  @protected
  (int, BasicPrimitiveEnumTwinNormal)
      dco_decode_record_i_32_basic_primitive_enum_twin_normal(dynamic raw);

  @protected
  (int, BasicPrimitiveEnumTwinRustAsync)
      dco_decode_record_i_32_basic_primitive_enum_twin_rust_async(dynamic raw);

  @protected
  (int, BasicPrimitiveEnumTwinRustAsyncSse)
      dco_decode_record_i_32_basic_primitive_enum_twin_rust_async_sse(
          dynamic raw);

  @protected
  (int, BasicPrimitiveEnumTwinSse)
      dco_decode_record_i_32_basic_primitive_enum_twin_sse(dynamic raw);

  @protected
  (int, BasicPrimitiveEnumTwinSync)
      dco_decode_record_i_32_basic_primitive_enum_twin_sync(dynamic raw);

  @protected
  (int, BasicPrimitiveEnumTwinSyncSse)
      dco_decode_record_i_32_basic_primitive_enum_twin_sync_sse(dynamic raw);

  @protected
  (int, BasicStructTwinNormal) dco_decode_record_i_32_basic_struct_twin_normal(
      dynamic raw);

  @protected
  (int, BasicStructTwinRustAsync)
      dco_decode_record_i_32_basic_struct_twin_rust_async(dynamic raw);

  @protected
  (int, BasicStructTwinRustAsyncSse)
      dco_decode_record_i_32_basic_struct_twin_rust_async_sse(dynamic raw);

  @protected
  (int, BasicStructTwinSse) dco_decode_record_i_32_basic_struct_twin_sse(
      dynamic raw);

  @protected
  (int, BasicStructTwinSync) dco_decode_record_i_32_basic_struct_twin_sync(
      dynamic raw);

  @protected
  (int, BasicStructTwinSyncSse)
      dco_decode_record_i_32_basic_struct_twin_sync_sse(dynamic raw);

  @protected
  (int, bool) dco_decode_record_i_32_bool(dynamic raw);

  @protected
  (int, double) dco_decode_record_i_32_f_32(dynamic raw);

  @protected
  (int, double) dco_decode_record_i_32_f_64(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_i_16(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_i_32(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_i_64(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_i_8(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_isize(dynamic raw);

  @protected
  (int, Uint8List) dco_decode_record_i_32_list_prim_u_8_strict(dynamic raw);

  @protected
  (int, String) dco_decode_record_i_32_string(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_u_16(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_u_32(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_u_64(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_u_8(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_usize(dynamic raw);

  @protected
  (String, EnumSimpleTwinNormal)
      dco_decode_record_string_enum_simple_twin_normal(dynamic raw);

  @protected
  (String, EnumSimpleTwinRustAsync)
      dco_decode_record_string_enum_simple_twin_rust_async(dynamic raw);

  @protected
  (String, EnumSimpleTwinRustAsyncSse)
      dco_decode_record_string_enum_simple_twin_rust_async_sse(dynamic raw);

  @protected
  (String, EnumSimpleTwinSse) dco_decode_record_string_enum_simple_twin_sse(
      dynamic raw);

  @protected
  (String, EnumSimpleTwinSync) dco_decode_record_string_enum_simple_twin_sync(
      dynamic raw);

  @protected
  (String, EnumSimpleTwinSyncSse)
      dco_decode_record_string_enum_simple_twin_sync_sse(dynamic raw);

  @protected
  (String, HashMapValue) dco_decode_record_string_hash_map_value(dynamic raw);

  @protected
  (String, int) dco_decode_record_string_i_32(dynamic raw);

  @protected
  (String, KitchenSinkTwinNormal)
      dco_decode_record_string_kitchen_sink_twin_normal(dynamic raw);

  @protected
  (String, KitchenSinkTwinRustAsync)
      dco_decode_record_string_kitchen_sink_twin_rust_async(dynamic raw);

  @protected
  (String, KitchenSinkTwinRustAsyncSse)
      dco_decode_record_string_kitchen_sink_twin_rust_async_sse(dynamic raw);

  @protected
  (String, KitchenSinkTwinSse) dco_decode_record_string_kitchen_sink_twin_sse(
      dynamic raw);

  @protected
  (String, KitchenSinkTwinSync) dco_decode_record_string_kitchen_sink_twin_sync(
      dynamic raw);

  @protected
  (String, KitchenSinkTwinSyncSse)
      dco_decode_record_string_kitchen_sink_twin_sync_sse(dynamic raw);

  @protected
  (String, Uint8List) dco_decode_record_string_list_prim_u_8_strict(
      dynamic raw);

  @protected
  (String, MySize) dco_decode_record_string_my_size(dynamic raw);

  @protected
  (String, String) dco_decode_record_string_string(dynamic raw);

  @protected
  (int, ApplicationMode) dco_decode_record_u_8_application_mode(dynamic raw);

  @protected
  Sequences dco_decode_sequences(dynamic raw);

  @protected
  SimpleStructTwinNormal dco_decode_simple_struct_twin_normal(dynamic raw);

  @protected
  SimpleStructTwinRustAsync dco_decode_simple_struct_twin_rust_async(
      dynamic raw);

  @protected
  SimpleStructTwinRustAsyncSse dco_decode_simple_struct_twin_rust_async_sse(
      dynamic raw);

  @protected
  SimpleStructTwinSse dco_decode_simple_struct_twin_sse(dynamic raw);

  @protected
  SimpleStructTwinSync dco_decode_simple_struct_twin_sync(dynamic raw);

  @protected
  SimpleStructTwinSyncSse dco_decode_simple_struct_twin_sync_sse(dynamic raw);

  @protected
  SomeStructTwinNormal dco_decode_some_struct_twin_normal(dynamic raw);

  @protected
  SomeStructTwinRustAsync dco_decode_some_struct_twin_rust_async(dynamic raw);

  @protected
  SomeStructTwinRustAsyncSse dco_decode_some_struct_twin_rust_async_sse(
      dynamic raw);

  @protected
  SomeStructTwinSse dco_decode_some_struct_twin_sse(dynamic raw);

  @protected
  SomeStructTwinSync dco_decode_some_struct_twin_sync(dynamic raw);

  @protected
  SomeStructTwinSyncSse dco_decode_some_struct_twin_sync_sse(dynamic raw);

  @protected
  SpeedTwinNormal dco_decode_speed_twin_normal(dynamic raw);

  @protected
  SpeedTwinRustAsync dco_decode_speed_twin_rust_async(dynamic raw);

  @protected
  SpeedTwinRustAsyncSse dco_decode_speed_twin_rust_async_sse(dynamic raw);

  @protected
  SpeedTwinSse dco_decode_speed_twin_sse(dynamic raw);

  @protected
  SpeedTwinSync dco_decode_speed_twin_sync(dynamic raw);

  @protected
  SpeedTwinSyncSse dco_decode_speed_twin_sync_sse(dynamic raw);

  @protected
  StructInLowerLevel dco_decode_struct_in_lower_level(dynamic raw);

  @protected
  StructInUpperLevel dco_decode_struct_in_upper_level(dynamic raw);

  @protected
  StructWithCommentsTwinNormal dco_decode_struct_with_comments_twin_normal(
      dynamic raw);

  @protected
  StructWithCommentsTwinRustAsync
      dco_decode_struct_with_comments_twin_rust_async(dynamic raw);

  @protected
  StructWithCommentsTwinRustAsyncSse
      dco_decode_struct_with_comments_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithCommentsTwinSse dco_decode_struct_with_comments_twin_sse(
      dynamic raw);

  @protected
  StructWithCommentsTwinSync dco_decode_struct_with_comments_twin_sync(
      dynamic raw);

  @protected
  StructWithCommentsTwinSyncSse dco_decode_struct_with_comments_twin_sync_sse(
      dynamic raw);

  @protected
  StructWithEnumTwinNormal dco_decode_struct_with_enum_twin_normal(dynamic raw);

  @protected
  StructWithEnumTwinRustAsync dco_decode_struct_with_enum_twin_rust_async(
      dynamic raw);

  @protected
  StructWithEnumTwinRustAsyncSse
      dco_decode_struct_with_enum_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithEnumTwinSse dco_decode_struct_with_enum_twin_sse(dynamic raw);

  @protected
  StructWithEnumTwinSync dco_decode_struct_with_enum_twin_sync(dynamic raw);

  @protected
  StructWithEnumTwinSyncSse dco_decode_struct_with_enum_twin_sync_sse(
      dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinMoi
      dco_decode_struct_with_explicit_auto_opaque_field_twin_moi(dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinNormal
      dco_decode_struct_with_explicit_auto_opaque_field_twin_normal(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsync
      dco_decode_struct_with_explicit_auto_opaque_field_twin_rust_async(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi
      dco_decode_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSse
      dco_decode_struct_with_explicit_auto_opaque_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSseMoi
      dco_decode_struct_with_explicit_auto_opaque_field_twin_rust_async_sse_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSse
      dco_decode_struct_with_explicit_auto_opaque_field_twin_sse(dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSseMoi
      dco_decode_struct_with_explicit_auto_opaque_field_twin_sse_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSync
      dco_decode_struct_with_explicit_auto_opaque_field_twin_sync(dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncMoi
      dco_decode_struct_with_explicit_auto_opaque_field_twin_sync_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSse
      dco_decode_struct_with_explicit_auto_opaque_field_twin_sync_sse(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSseMoi
      dco_decode_struct_with_explicit_auto_opaque_field_twin_sync_sse_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinMoi
      dco_decode_struct_with_good_and_opaque_field_twin_moi(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      dco_decode_struct_with_good_and_opaque_field_twin_normal(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsync
      dco_decode_struct_with_good_and_opaque_field_twin_rust_async(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncMoi
      dco_decode_struct_with_good_and_opaque_field_twin_rust_async_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSse
      dco_decode_struct_with_good_and_opaque_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSseMoi
      dco_decode_struct_with_good_and_opaque_field_twin_rust_async_sse_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      dco_decode_struct_with_good_and_opaque_field_twin_sse(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSseMoi
      dco_decode_struct_with_good_and_opaque_field_twin_sse_moi(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      dco_decode_struct_with_good_and_opaque_field_twin_sync(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncMoi
      dco_decode_struct_with_good_and_opaque_field_twin_sync_moi(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      dco_decode_struct_with_good_and_opaque_field_twin_sync_sse(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSseMoi
      dco_decode_struct_with_good_and_opaque_field_twin_sync_sse_moi(
          dynamic raw);

  @protected
  StructWithHashMap dco_decode_struct_with_hash_map(dynamic raw);

  @protected
  StructWithOneFieldTwinNormal dco_decode_struct_with_one_field_twin_normal(
      dynamic raw);

  @protected
  StructWithOneFieldTwinRustAsync
      dco_decode_struct_with_one_field_twin_rust_async(dynamic raw);

  @protected
  StructWithOneFieldTwinRustAsyncSse
      dco_decode_struct_with_one_field_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithOneFieldTwinSse dco_decode_struct_with_one_field_twin_sse(
      dynamic raw);

  @protected
  StructWithOneFieldTwinSync dco_decode_struct_with_one_field_twin_sync(
      dynamic raw);

  @protected
  StructWithOneFieldTwinSyncSse dco_decode_struct_with_one_field_twin_sync_sse(
      dynamic raw);

  @protected
  StructWithTwoFieldTwinNormal dco_decode_struct_with_two_field_twin_normal(
      dynamic raw);

  @protected
  StructWithTwoFieldTwinRustAsync
      dco_decode_struct_with_two_field_twin_rust_async(dynamic raw);

  @protected
  StructWithTwoFieldTwinRustAsyncSse
      dco_decode_struct_with_two_field_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithTwoFieldTwinSse dco_decode_struct_with_two_field_twin_sse(
      dynamic raw);

  @protected
  StructWithTwoFieldTwinSync dco_decode_struct_with_two_field_twin_sync(
      dynamic raw);

  @protected
  StructWithTwoFieldTwinSyncSse dco_decode_struct_with_two_field_twin_sync_sse(
      dynamic raw);

  @protected
  StructWithZeroFieldTwinNormal dco_decode_struct_with_zero_field_twin_normal(
      dynamic raw);

  @protected
  StructWithZeroFieldTwinRustAsync
      dco_decode_struct_with_zero_field_twin_rust_async(dynamic raw);

  @protected
  StructWithZeroFieldTwinRustAsyncSse
      dco_decode_struct_with_zero_field_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithZeroFieldTwinSse dco_decode_struct_with_zero_field_twin_sse(
      dynamic raw);

  @protected
  StructWithZeroFieldTwinSync dco_decode_struct_with_zero_field_twin_sync(
      dynamic raw);

  @protected
  StructWithZeroFieldTwinSyncSse
      dco_decode_struct_with_zero_field_twin_sync_sse(dynamic raw);

  @protected
  SumWithTwinNormal dco_decode_sum_with_twin_normal(dynamic raw);

  @protected
  SumWithTwinNormalArray3 dco_decode_sum_with_twin_normal_array_3(dynamic raw);

  @protected
  SumWithTwinRustAsync dco_decode_sum_with_twin_rust_async(dynamic raw);

  @protected
  SumWithTwinRustAsyncArray3 dco_decode_sum_with_twin_rust_async_array_3(
      dynamic raw);

  @protected
  SumWithTwinRustAsyncSse dco_decode_sum_with_twin_rust_async_sse(dynamic raw);

  @protected
  SumWithTwinRustAsyncSseArray3 dco_decode_sum_with_twin_rust_async_sse_array_3(
      dynamic raw);

  @protected
  SumWithTwinSse dco_decode_sum_with_twin_sse(dynamic raw);

  @protected
  SumWithTwinSseArray3 dco_decode_sum_with_twin_sse_array_3(dynamic raw);

  @protected
  SumWithTwinSync dco_decode_sum_with_twin_sync(dynamic raw);

  @protected
  SumWithTwinSyncArray3 dco_decode_sum_with_twin_sync_array_3(dynamic raw);

  @protected
  SumWithTwinSyncSse dco_decode_sum_with_twin_sync_sse(dynamic raw);

  @protected
  SumWithTwinSyncSseArray3 dco_decode_sum_with_twin_sync_sse_array_3(
      dynamic raw);

  @protected
  TestChronoTwinNormal dco_decode_test_chrono_twin_normal(dynamic raw);

  @protected
  TestChronoTwinRustAsync dco_decode_test_chrono_twin_rust_async(dynamic raw);

  @protected
  TestChronoTwinRustAsyncSse dco_decode_test_chrono_twin_rust_async_sse(
      dynamic raw);

  @protected
  TestChronoTwinSse dco_decode_test_chrono_twin_sse(dynamic raw);

  @protected
  TestChronoTwinSync dco_decode_test_chrono_twin_sync(dynamic raw);

  @protected
  TestChronoTwinSyncSse dco_decode_test_chrono_twin_sync_sse(dynamic raw);

  @protected
  TestIdTwinNormal dco_decode_test_id_twin_normal(dynamic raw);

  @protected
  TestIdTwinNormalArray2 dco_decode_test_id_twin_normal_array_2(dynamic raw);

  @protected
  TestIdTwinNormalArray4 dco_decode_test_id_twin_normal_array_4(dynamic raw);

  @protected
  TestIdTwinRustAsync dco_decode_test_id_twin_rust_async(dynamic raw);

  @protected
  TestIdTwinRustAsyncArray2 dco_decode_test_id_twin_rust_async_array_2(
      dynamic raw);

  @protected
  TestIdTwinRustAsyncArray4 dco_decode_test_id_twin_rust_async_array_4(
      dynamic raw);

  @protected
  TestIdTwinRustAsyncSse dco_decode_test_id_twin_rust_async_sse(dynamic raw);

  @protected
  TestIdTwinRustAsyncSseArray2 dco_decode_test_id_twin_rust_async_sse_array_2(
      dynamic raw);

  @protected
  TestIdTwinRustAsyncSseArray4 dco_decode_test_id_twin_rust_async_sse_array_4(
      dynamic raw);

  @protected
  TestIdTwinSse dco_decode_test_id_twin_sse(dynamic raw);

  @protected
  TestIdTwinSseArray2 dco_decode_test_id_twin_sse_array_2(dynamic raw);

  @protected
  TestIdTwinSseArray4 dco_decode_test_id_twin_sse_array_4(dynamic raw);

  @protected
  TestIdTwinSync dco_decode_test_id_twin_sync(dynamic raw);

  @protected
  TestIdTwinSyncArray2 dco_decode_test_id_twin_sync_array_2(dynamic raw);

  @protected
  TestIdTwinSyncArray4 dco_decode_test_id_twin_sync_array_4(dynamic raw);

  @protected
  TestIdTwinSyncSse dco_decode_test_id_twin_sync_sse(dynamic raw);

  @protected
  TestIdTwinSyncSseArray2 dco_decode_test_id_twin_sync_sse_array_2(dynamic raw);

  @protected
  TestIdTwinSyncSseArray4 dco_decode_test_id_twin_sync_sse_array_4(dynamic raw);

  @protected
  TestModelTwinNormal dco_decode_test_model_twin_normal(dynamic raw);

  @protected
  TestModelTwinRustAsync dco_decode_test_model_twin_rust_async(dynamic raw);

  @protected
  TestModelTwinRustAsyncSse dco_decode_test_model_twin_rust_async_sse(
      dynamic raw);

  @protected
  TestModelTwinSse dco_decode_test_model_twin_sse(dynamic raw);

  @protected
  TestModelTwinSync dco_decode_test_model_twin_sync(dynamic raw);

  @protected
  TestModelTwinSyncSse dco_decode_test_model_twin_sync_sse(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinNormal
      dco_decode_tuple_struct_with_one_field_twin_normal(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinRustAsync
      dco_decode_tuple_struct_with_one_field_twin_rust_async(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinRustAsyncSse
      dco_decode_tuple_struct_with_one_field_twin_rust_async_sse(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSse
      dco_decode_tuple_struct_with_one_field_twin_sse(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSync
      dco_decode_tuple_struct_with_one_field_twin_sync(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSyncSse
      dco_decode_tuple_struct_with_one_field_twin_sync_sse(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinNormal
      dco_decode_tuple_struct_with_two_field_twin_normal(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinRustAsync
      dco_decode_tuple_struct_with_two_field_twin_rust_async(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinRustAsyncSse
      dco_decode_tuple_struct_with_two_field_twin_rust_async_sse(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSse
      dco_decode_tuple_struct_with_two_field_twin_sse(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSync
      dco_decode_tuple_struct_with_two_field_twin_sync(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSyncSse
      dco_decode_tuple_struct_with_two_field_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  int dco_decode_u_64(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  U8Array1600 dco_decode_u_8_array_1600(dynamic raw);

  @protected
  U8Array2 dco_decode_u_8_array_2(dynamic raw);

  @protected
  U8Array32 dco_decode_u_8_array_32(dynamic raw);

  @protected
  U8Array5 dco_decode_u_8_array_5(dynamic raw);

  @protected
  U8Array8 dco_decode_u_8_array_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  UserIdTwinNormal dco_decode_user_id_twin_normal(dynamic raw);

  @protected
  UserIdTwinRustAsync dco_decode_user_id_twin_rust_async(dynamic raw);

  @protected
  UserIdTwinRustAsyncSse dco_decode_user_id_twin_rust_async_sse(dynamic raw);

  @protected
  UserIdTwinSse dco_decode_user_id_twin_sse(dynamic raw);

  @protected
  UserIdTwinSync dco_decode_user_id_twin_sync(dynamic raw);

  @protected
  UserIdTwinSyncSse dco_decode_user_id_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_usize(dynamic raw);

  @protected
  VecOfPrimitivePackTwinNormal dco_decode_vec_of_primitive_pack_twin_normal(
      dynamic raw);

  @protected
  VecOfPrimitivePackTwinRustAsync
      dco_decode_vec_of_primitive_pack_twin_rust_async(dynamic raw);

  @protected
  VecOfPrimitivePackTwinRustAsyncSse
      dco_decode_vec_of_primitive_pack_twin_rust_async_sse(dynamic raw);

  @protected
  VecOfPrimitivePackTwinSse dco_decode_vec_of_primitive_pack_twin_sse(
      dynamic raw);

  @protected
  VecOfPrimitivePackTwinSync dco_decode_vec_of_primitive_pack_twin_sync(
      dynamic raw);

  @protected
  VecOfPrimitivePackTwinSyncSse dco_decode_vec_of_primitive_pack_twin_sync_sse(
      dynamic raw);

  @protected
  WeekdaysTwinNormal dco_decode_weekdays_twin_normal(dynamic raw);

  @protected
  WeekdaysTwinRustAsync dco_decode_weekdays_twin_rust_async(dynamic raw);

  @protected
  WeekdaysTwinRustAsyncSse dco_decode_weekdays_twin_rust_async_sse(dynamic raw);

  @protected
  WeekdaysTwinSse dco_decode_weekdays_twin_sse(dynamic raw);

  @protected
  WeekdaysTwinSync dco_decode_weekdays_twin_sync(dynamic raw);

  @protected
  WeekdaysTwinSyncSse dco_decode_weekdays_twin_sync_sse(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  BoxFnStringString
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          SseDeserializer deserializer);

  @protected
  ConstructorOpaqueStructTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          SseDeserializer deserializer);

  @protected
  ConstructorOpaqueSyncStructTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          SseDeserializer deserializer);

  @protected
  DroppableTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  StructInMiscNoTwinExampleA
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinNormal
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsync
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSseMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSync
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  DroppableTwinNormal
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsync
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsyncSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSync
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSyncSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsync
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSseMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinNormal
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  ConstructorOpaqueStructTwinNormal
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          SseDeserializer deserializer);

  @protected
  ConstructorOpaqueSyncStructTwinNormal
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          SseDeserializer deserializer);

  @protected
  DroppableTwinNormal
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinNormal
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  StructInMiscNoTwinExampleA
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          SseDeserializer deserializer);

  @protected
  StructInMiscNoTwinExampleB
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          SseDeserializer deserializer);

  @protected
  StructWithImplBlockInMultiFile
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          SseDeserializer deserializer);

  @protected
  String sse_decode_Backtrace(SseDeserializer deserializer);

  @protected
  Duration sse_decode_Chrono_Duration(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_Chrono_Local(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_Chrono_Naive(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_Chrono_Utc(SseDeserializer deserializer);

  @protected
  Object sse_decode_DartOpaque(SseDeserializer deserializer);

  @protected
  ObjectArray1 sse_decode_DartOpaque_array_1(SseDeserializer deserializer);

  @protected
  Map<String, String> sse_decode_Map_String_String(
      SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinNormal>
      sse_decode_Map_String_enum_simple_twin_normal(
          SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinRustAsync>
      sse_decode_Map_String_enum_simple_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinRustAsyncSse>
      sse_decode_Map_String_enum_simple_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinSse> sse_decode_Map_String_enum_simple_twin_sse(
      SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinSync> sse_decode_Map_String_enum_simple_twin_sync(
      SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinSyncSse>
      sse_decode_Map_String_enum_simple_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  Map<String, HashMapValue> sse_decode_Map_String_hash_map_value(
      SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinNormal>
      sse_decode_Map_String_kitchen_sink_twin_normal(
          SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinRustAsync>
      sse_decode_Map_String_kitchen_sink_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinRustAsyncSse>
      sse_decode_Map_String_kitchen_sink_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinSse> sse_decode_Map_String_kitchen_sink_twin_sse(
      SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinSync> sse_decode_Map_String_kitchen_sink_twin_sync(
      SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinSyncSse>
      sse_decode_Map_String_kitchen_sink_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  Map<String, Uint8List> sse_decode_Map_String_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  Map<String, MySize> sse_decode_Map_String_my_size(
      SseDeserializer deserializer);

  @protected
  Map<int, String> sse_decode_Map_i_32_String(SseDeserializer deserializer);

  @protected
  Map<int, BasicGeneralEnumTwinNormal>
      sse_decode_Map_i_32_basic_general_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicGeneralEnumTwinRustAsync>
      sse_decode_Map_i_32_basic_general_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicGeneralEnumTwinRustAsyncSse>
      sse_decode_Map_i_32_basic_general_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicGeneralEnumTwinSse>
      sse_decode_Map_i_32_basic_general_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicGeneralEnumTwinSync>
      sse_decode_Map_i_32_basic_general_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicGeneralEnumTwinSyncSse>
      sse_decode_Map_i_32_basic_general_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicPrimitiveEnumTwinNormal>
      sse_decode_Map_i_32_basic_primitive_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicPrimitiveEnumTwinRustAsync>
      sse_decode_Map_i_32_basic_primitive_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicPrimitiveEnumTwinRustAsyncSse>
      sse_decode_Map_i_32_basic_primitive_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicPrimitiveEnumTwinSse>
      sse_decode_Map_i_32_basic_primitive_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicPrimitiveEnumTwinSync>
      sse_decode_Map_i_32_basic_primitive_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicPrimitiveEnumTwinSyncSse>
      sse_decode_Map_i_32_basic_primitive_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicStructTwinNormal> sse_decode_Map_i_32_basic_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  Map<int, BasicStructTwinRustAsync>
      sse_decode_Map_i_32_basic_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicStructTwinRustAsyncSse>
      sse_decode_Map_i_32_basic_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicStructTwinSse> sse_decode_Map_i_32_basic_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  Map<int, BasicStructTwinSync> sse_decode_Map_i_32_basic_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  Map<int, BasicStructTwinSyncSse>
      sse_decode_Map_i_32_basic_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, bool> sse_decode_Map_i_32_bool(SseDeserializer deserializer);

  @protected
  Map<int, double> sse_decode_Map_i_32_f_32(SseDeserializer deserializer);

  @protected
  Map<int, double> sse_decode_Map_i_32_f_64(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_i_16(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_i_32(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_i_64(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_i_8(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_isize(SseDeserializer deserializer);

  @protected
  Map<int, Uint8List> sse_decode_Map_i_32_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_u_16(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_u_32(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_u_64(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_u_8(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_usize(SseDeserializer deserializer);

  @protected
  Map<int, ApplicationMode> sse_decode_Map_u_8_application_mode(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinMoi sse_decode_RustOpaque_BoxdynDartDebugTwinMoi(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinNormal sse_decode_RustOpaque_BoxdynDartDebugTwinNormal(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinRustAsync sse_decode_RustOpaque_BoxdynDartDebugTwinRustAsync(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinRustAsyncMoi
      sse_decode_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinRustAsyncSse
      sse_decode_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinRustAsyncSseMoi
      sse_decode_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinSse sse_decode_RustOpaque_BoxdynDartDebugTwinSse(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinSseMoi sse_decode_RustOpaque_BoxdynDartDebugTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinSync sse_decode_RustOpaque_BoxdynDartDebugTwinSync(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinSyncMoi sse_decode_RustOpaque_BoxdynDartDebugTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinSyncSse sse_decode_RustOpaque_BoxdynDartDebugTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinSyncSseMoi
      sse_decode_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinMoi sse_decode_RustOpaque_FrbOpaqueReturnTwinMoi(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinNormal sse_decode_RustOpaque_FrbOpaqueReturnTwinNormal(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinRustAsync
      sse_decode_RustOpaque_FrbOpaqueReturnTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinRustAsyncMoi
      sse_decode_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinRustAsyncSse
      sse_decode_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinRustAsyncSseMoi
      sse_decode_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinSse sse_decode_RustOpaque_FrbOpaqueReturnTwinSse(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinSseMoi sse_decode_RustOpaque_FrbOpaqueReturnTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinSync sse_decode_RustOpaque_FrbOpaqueReturnTwinSync(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinSyncMoi sse_decode_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinSyncSse sse_decode_RustOpaque_FrbOpaqueReturnTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinSyncSseMoi
      sse_decode_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  FrbOpaqueSyncReturnTwinMoi sse_decode_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueSyncReturnTwinNormal
      sse_decode_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
          SseDeserializer deserializer);

  @protected
  FrbOpaqueSyncReturnTwinSse sse_decode_RustOpaque_FrbOpaqueSyncReturnTwinSse(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueSyncReturnTwinSseMoi
      sse_decode_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinMoi sse_decode_RustOpaque_HideDataAnotherTwinMoi(
      SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinNormal sse_decode_RustOpaque_HideDataAnotherTwinNormal(
      SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinSse sse_decode_RustOpaque_HideDataAnotherTwinSse(
      SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinSseMoi sse_decode_RustOpaque_HideDataAnotherTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinMoi sse_decode_RustOpaque_HideDataTwinMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinMoiArray2 sse_decode_RustOpaque_HideDataTwinMoi_array_2(
      SseDeserializer deserializer);

  @protected
  HideDataTwinNormal sse_decode_RustOpaque_HideDataTwinNormal(
      SseDeserializer deserializer);

  @protected
  HideDataTwinNormalArray2 sse_decode_RustOpaque_HideDataTwinNormal_array_2(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsync sse_decode_RustOpaque_HideDataTwinRustAsync(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncMoi sse_decode_RustOpaque_HideDataTwinRustAsyncMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncMoiArray2
      sse_decode_RustOpaque_HideDataTwinRustAsyncMoi_array_2(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSse sse_decode_RustOpaque_HideDataTwinRustAsyncSse(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSseMoi sse_decode_RustOpaque_HideDataTwinRustAsyncSseMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSseMoiArray2
      sse_decode_RustOpaque_HideDataTwinRustAsyncSseMoi_array_2(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSseArray2
      sse_decode_RustOpaque_HideDataTwinRustAsyncSse_array_2(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncArray2
      sse_decode_RustOpaque_HideDataTwinRustAsync_array_2(
          SseDeserializer deserializer);

  @protected
  HideDataTwinSse sse_decode_RustOpaque_HideDataTwinSse(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSseMoi sse_decode_RustOpaque_HideDataTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSseMoiArray2 sse_decode_RustOpaque_HideDataTwinSseMoi_array_2(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSseArray2 sse_decode_RustOpaque_HideDataTwinSse_array_2(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSync sse_decode_RustOpaque_HideDataTwinSync(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncMoi sse_decode_RustOpaque_HideDataTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncMoiArray2 sse_decode_RustOpaque_HideDataTwinSyncMoi_array_2(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSse sse_decode_RustOpaque_HideDataTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSseMoi sse_decode_RustOpaque_HideDataTwinSyncSseMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSseMoiArray2
      sse_decode_RustOpaque_HideDataTwinSyncSseMoi_array_2(
          SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSseArray2 sse_decode_RustOpaque_HideDataTwinSyncSse_array_2(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncArray2 sse_decode_RustOpaque_HideDataTwinSync_array_2(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinMoi sse_decode_RustOpaque_MutexHideDataTwinMoi(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinNormal sse_decode_RustOpaque_MutexHideDataTwinNormal(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinRustAsync sse_decode_RustOpaque_MutexHideDataTwinRustAsync(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinRustAsyncMoi
      sse_decode_RustOpaque_MutexHideDataTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  MutexHideDataTwinRustAsyncSse
      sse_decode_RustOpaque_MutexHideDataTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  MutexHideDataTwinRustAsyncSseMoi
      sse_decode_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  MutexHideDataTwinSse sse_decode_RustOpaque_MutexHideDataTwinSse(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinSseMoi sse_decode_RustOpaque_MutexHideDataTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinSync sse_decode_RustOpaque_MutexHideDataTwinSync(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinSyncMoi sse_decode_RustOpaque_MutexHideDataTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinSyncSse sse_decode_RustOpaque_MutexHideDataTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinSyncSseMoi sse_decode_RustOpaque_MutexHideDataTwinSyncSseMoi(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinMoi sse_decode_RustOpaque_NonCloneDataTwinMoi(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinNormal sse_decode_RustOpaque_NonCloneDataTwinNormal(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinRustAsync sse_decode_RustOpaque_NonCloneDataTwinRustAsync(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinRustAsyncMoi
      sse_decode_RustOpaque_NonCloneDataTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneDataTwinRustAsyncSse
      sse_decode_RustOpaque_NonCloneDataTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneDataTwinRustAsyncSseMoi
      sse_decode_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneDataTwinSse sse_decode_RustOpaque_NonCloneDataTwinSse(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinSseMoi sse_decode_RustOpaque_NonCloneDataTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinSync sse_decode_RustOpaque_NonCloneDataTwinSync(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinSyncMoi sse_decode_RustOpaque_NonCloneDataTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinSyncSse sse_decode_RustOpaque_NonCloneDataTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinSyncSseMoi sse_decode_RustOpaque_NonCloneDataTwinSyncSseMoi(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinMoi sse_decode_RustOpaque_RwLockHideDataTwinMoi(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinNormal sse_decode_RustOpaque_RwLockHideDataTwinNormal(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinRustAsync sse_decode_RustOpaque_RwLockHideDataTwinRustAsync(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinRustAsyncMoi
      sse_decode_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinRustAsyncSse
      sse_decode_RustOpaque_RwLockHideDataTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinRustAsyncSseMoi
      sse_decode_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinSse sse_decode_RustOpaque_RwLockHideDataTwinSse(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinSseMoi sse_decode_RustOpaque_RwLockHideDataTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinSync sse_decode_RustOpaque_RwLockHideDataTwinSync(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinSyncMoi sse_decode_RustOpaque_RwLockHideDataTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinSyncSse sse_decode_RustOpaque_RwLockHideDataTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinSyncSseMoi
      sse_decode_RustOpaque_RwLockHideDataTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxFnStringString
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          SseDeserializer deserializer);

  @protected
  ConstructorOpaqueStructTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          SseDeserializer deserializer);

  @protected
  ConstructorOpaqueSyncStructTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          SseDeserializer deserializer);

  @protected
  DroppableTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  StructInMiscNoTwinExampleA
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          SseDeserializer deserializer);

  @protected
  StructInMiscNoTwinExampleB
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  StructWithImplBlockInMultiFile
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          SseDeserializer deserializer);

  @protected
  I16 sse_decode_RustOpaque_i16(SseDeserializer deserializer);

  @protected
  I32 sse_decode_RustOpaque_i32(SseDeserializer deserializer);

  @protected
  Set<String> sse_decode_Set_String(SseDeserializer deserializer);

  @protected
  Set<ApplicationMode> sse_decode_Set_application_mode(
      SseDeserializer deserializer);

  @protected
  Set<int> sse_decode_Set_i_32(SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  UuidValue sse_decode_Uuid(SseDeserializer deserializer);

  @protected
  ATwinNormal sse_decode_a_twin_normal(SseDeserializer deserializer);

  @protected
  ATwinRustAsync sse_decode_a_twin_rust_async(SseDeserializer deserializer);

  @protected
  ATwinRustAsyncSse sse_decode_a_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  ATwinSse sse_decode_a_twin_sse(SseDeserializer deserializer);

  @protected
  ATwinSync sse_decode_a_twin_sync(SseDeserializer deserializer);

  @protected
  ATwinSyncSse sse_decode_a_twin_sync_sse(SseDeserializer deserializer);

  @protected
  AbcTwinNormal sse_decode_abc_twin_normal(SseDeserializer deserializer);

  @protected
  AbcTwinRustAsync sse_decode_abc_twin_rust_async(SseDeserializer deserializer);

  @protected
  AbcTwinRustAsyncSse sse_decode_abc_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  AbcTwinSse sse_decode_abc_twin_sse(SseDeserializer deserializer);

  @protected
  AbcTwinSync sse_decode_abc_twin_sync(SseDeserializer deserializer);

  @protected
  AbcTwinSyncSse sse_decode_abc_twin_sync_sse(SseDeserializer deserializer);

  @protected
  AnotherMacroStructTwinNormal sse_decode_another_macro_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  AnotherTwinNormal sse_decode_another_twin_normal(
      SseDeserializer deserializer);

  @protected
  AnotherTwinRustAsync sse_decode_another_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  AnotherTwinRustAsyncSse sse_decode_another_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  AnotherTwinSse sse_decode_another_twin_sse(SseDeserializer deserializer);

  @protected
  AnotherTwinSync sse_decode_another_twin_sync(SseDeserializer deserializer);

  @protected
  AnotherTwinSyncSse sse_decode_another_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ApplicationEnv sse_decode_application_env(SseDeserializer deserializer);

  @protected
  ApplicationEnvVar sse_decode_application_env_var(
      SseDeserializer deserializer);

  @protected
  ApplicationMessage sse_decode_application_message(
      SseDeserializer deserializer);

  @protected
  ApplicationMode sse_decode_application_mode(SseDeserializer deserializer);

  @protected
  ApplicationModeArray2 sse_decode_application_mode_array_2(
      SseDeserializer deserializer);

  @protected
  ApplicationSettings sse_decode_application_settings(
      SseDeserializer deserializer);

  @protected
  AttributeTwinNormal sse_decode_attribute_twin_normal(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsync sse_decode_attribute_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsyncSse sse_decode_attribute_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSse sse_decode_attribute_twin_sse(SseDeserializer deserializer);

  @protected
  AttributeTwinSync sse_decode_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSyncSse sse_decode_attribute_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BTwinNormal sse_decode_b_twin_normal(SseDeserializer deserializer);

  @protected
  BTwinRustAsync sse_decode_b_twin_rust_async(SseDeserializer deserializer);

  @protected
  BTwinRustAsyncSse sse_decode_b_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BTwinSse sse_decode_b_twin_sse(SseDeserializer deserializer);

  @protected
  BTwinSync sse_decode_b_twin_sync(SseDeserializer deserializer);

  @protected
  BTwinSyncSse sse_decode_b_twin_sync_sse(SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinNormal sse_decode_basic_general_enum_twin_normal(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinRustAsync sse_decode_basic_general_enum_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinRustAsyncSse
      sse_decode_basic_general_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSse sse_decode_basic_general_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSync sse_decode_basic_general_enum_twin_sync(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSyncSse sse_decode_basic_general_enum_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinNormal sse_decode_basic_primitive_enum_twin_normal(
      SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinRustAsync
      sse_decode_basic_primitive_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinRustAsyncSse
      sse_decode_basic_primitive_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSse sse_decode_basic_primitive_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSync sse_decode_basic_primitive_enum_twin_sync(
      SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSyncSse sse_decode_basic_primitive_enum_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinNormal sse_decode_basic_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinRustAsync sse_decode_basic_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinRustAsyncSse sse_decode_basic_struct_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinSse sse_decode_basic_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinSync sse_decode_basic_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinSyncSse sse_decode_basic_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinNormal sse_decode_benchmark_binary_tree_twin_normal(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      sse_decode_benchmark_binary_tree_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      sse_decode_benchmark_binary_tree_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSse sse_decode_benchmark_binary_tree_twin_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSync sse_decode_benchmark_binary_tree_twin_sync(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSyncSse sse_decode_benchmark_binary_tree_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinNormal sse_decode_benchmark_blob_twin_normal(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinRustAsync sse_decode_benchmark_blob_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinRustAsyncSse sse_decode_benchmark_blob_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSse sse_decode_benchmark_blob_twin_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSync sse_decode_benchmark_blob_twin_sync(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSyncSse sse_decode_benchmark_blob_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinNormal sse_decode_big_buffers_twin_normal(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinRustAsync sse_decode_big_buffers_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinRustAsyncSse sse_decode_big_buffers_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinSse sse_decode_big_buffers_twin_sse(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinSync sse_decode_big_buffers_twin_sync(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinSyncSse sse_decode_big_buffers_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BlobTwinNormal sse_decode_blob_twin_normal(SseDeserializer deserializer);

  @protected
  BlobTwinRustAsync sse_decode_blob_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BlobTwinRustAsyncSse sse_decode_blob_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BlobTwinSse sse_decode_blob_twin_sse(SseDeserializer deserializer);

  @protected
  BlobTwinSync sse_decode_blob_twin_sync(SseDeserializer deserializer);

  @protected
  BlobTwinSyncSse sse_decode_blob_twin_sync_sse(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  ApplicationEnv sse_decode_box_application_env(SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinMoi
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsync
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSseMoi
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncMoi
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  Duration sse_decode_box_autoadd_Chrono_Duration(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_box_autoadd_Chrono_Naive(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_box_autoadd_Chrono_Utc(SseDeserializer deserializer);

  @protected
  Object sse_decode_box_autoadd_DartOpaque(SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinMoi
      sse_decode_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(
          SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinNormal
      sse_decode_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
          SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinSse
      sse_decode_box_autoadd_RustOpaque_HideDataAnotherTwinSse(
          SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinSseMoi
      sse_decode_box_autoadd_RustOpaque_HideDataAnotherTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  HideDataTwinMoi sse_decode_box_autoadd_RustOpaque_HideDataTwinMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinNormal sse_decode_box_autoadd_RustOpaque_HideDataTwinNormal(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsync sse_decode_box_autoadd_RustOpaque_HideDataTwinRustAsync(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncMoi
      sse_decode_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSse
      sse_decode_box_autoadd_RustOpaque_HideDataTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSseMoi
      sse_decode_box_autoadd_RustOpaque_HideDataTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  HideDataTwinSse sse_decode_box_autoadd_RustOpaque_HideDataTwinSse(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSseMoi sse_decode_box_autoadd_RustOpaque_HideDataTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSync sse_decode_box_autoadd_RustOpaque_HideDataTwinSync(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncMoi sse_decode_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSse sse_decode_box_autoadd_RustOpaque_HideDataTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSseMoi
      sse_decode_box_autoadd_RustOpaque_HideDataTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  ATwinNormal sse_decode_box_autoadd_a_twin_normal(
      SseDeserializer deserializer);

  @protected
  ATwinRustAsync sse_decode_box_autoadd_a_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ATwinRustAsyncSse sse_decode_box_autoadd_a_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  ATwinSse sse_decode_box_autoadd_a_twin_sse(SseDeserializer deserializer);

  @protected
  ATwinSync sse_decode_box_autoadd_a_twin_sync(SseDeserializer deserializer);

  @protected
  ATwinSyncSse sse_decode_box_autoadd_a_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  AbcTwinNormal sse_decode_box_autoadd_abc_twin_normal(
      SseDeserializer deserializer);

  @protected
  AbcTwinRustAsync sse_decode_box_autoadd_abc_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  AbcTwinRustAsyncSse sse_decode_box_autoadd_abc_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  AbcTwinSse sse_decode_box_autoadd_abc_twin_sse(SseDeserializer deserializer);

  @protected
  AbcTwinSync sse_decode_box_autoadd_abc_twin_sync(
      SseDeserializer deserializer);

  @protected
  AbcTwinSyncSse sse_decode_box_autoadd_abc_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ApplicationEnv sse_decode_box_autoadd_application_env(
      SseDeserializer deserializer);

  @protected
  ApplicationMode sse_decode_box_autoadd_application_mode(
      SseDeserializer deserializer);

  @protected
  ApplicationSettings sse_decode_box_autoadd_application_settings(
      SseDeserializer deserializer);

  @protected
  AttributeTwinNormal sse_decode_box_autoadd_attribute_twin_normal(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsync sse_decode_box_autoadd_attribute_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsyncSse
      sse_decode_box_autoadd_attribute_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  AttributeTwinSse sse_decode_box_autoadd_attribute_twin_sse(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSync sse_decode_box_autoadd_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSyncSse sse_decode_box_autoadd_attribute_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BTwinNormal sse_decode_box_autoadd_b_twin_normal(
      SseDeserializer deserializer);

  @protected
  BTwinRustAsync sse_decode_box_autoadd_b_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BTwinRustAsyncSse sse_decode_box_autoadd_b_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BTwinSse sse_decode_box_autoadd_b_twin_sse(SseDeserializer deserializer);

  @protected
  BTwinSync sse_decode_box_autoadd_b_twin_sync(SseDeserializer deserializer);

  @protected
  BTwinSyncSse sse_decode_box_autoadd_b_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinNormal
      sse_decode_box_autoadd_basic_general_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinRustAsync
      sse_decode_box_autoadd_basic_general_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinRustAsyncSse
      sse_decode_box_autoadd_basic_general_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSse sse_decode_box_autoadd_basic_general_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSync sse_decode_box_autoadd_basic_general_enum_twin_sync(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSyncSse
      sse_decode_box_autoadd_basic_general_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinNormal
      sse_decode_box_autoadd_basic_primitive_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinRustAsync
      sse_decode_box_autoadd_basic_primitive_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinRustAsyncSse
      sse_decode_box_autoadd_basic_primitive_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSse
      sse_decode_box_autoadd_basic_primitive_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSync
      sse_decode_box_autoadd_basic_primitive_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSyncSse
      sse_decode_box_autoadd_basic_primitive_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  BasicStructTwinNormal sse_decode_box_autoadd_basic_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinRustAsync sse_decode_box_autoadd_basic_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinRustAsyncSse
      sse_decode_box_autoadd_basic_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicStructTwinSse sse_decode_box_autoadd_basic_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinSync sse_decode_box_autoadd_basic_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinSyncSse sse_decode_box_autoadd_basic_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinNormal
      sse_decode_box_autoadd_benchmark_binary_tree_twin_normal(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      sse_decode_box_autoadd_benchmark_binary_tree_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      sse_decode_box_autoadd_benchmark_binary_tree_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSse
      sse_decode_box_autoadd_benchmark_binary_tree_twin_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSync
      sse_decode_box_autoadd_benchmark_binary_tree_twin_sync(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSyncSse
      sse_decode_box_autoadd_benchmark_binary_tree_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinNormal sse_decode_box_autoadd_benchmark_blob_twin_normal(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinRustAsync
      sse_decode_box_autoadd_benchmark_blob_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinRustAsyncSse
      sse_decode_box_autoadd_benchmark_blob_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSse sse_decode_box_autoadd_benchmark_blob_twin_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSync sse_decode_box_autoadd_benchmark_blob_twin_sync(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSyncSse sse_decode_box_autoadd_benchmark_blob_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  bool sse_decode_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  CTwinNormal sse_decode_box_autoadd_c_twin_normal(
      SseDeserializer deserializer);

  @protected
  CTwinRustAsync sse_decode_box_autoadd_c_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CTwinRustAsyncSse sse_decode_box_autoadd_c_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  CTwinSse sse_decode_box_autoadd_c_twin_sse(SseDeserializer deserializer);

  @protected
  CTwinSync sse_decode_box_autoadd_c_twin_sync(SseDeserializer deserializer);

  @protected
  CTwinSyncSse sse_decode_box_autoadd_c_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinNormal sse_decode_box_autoadd_concatenate_with_twin_normal(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinRustAsync
      sse_decode_box_autoadd_concatenate_with_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinRustAsyncSse
      sse_decode_box_autoadd_concatenate_with_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSse sse_decode_box_autoadd_concatenate_with_twin_sse(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSync sse_decode_box_autoadd_concatenate_with_twin_sync(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSyncSse
      sse_decode_box_autoadd_concatenate_with_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinNormal
      sse_decode_box_autoadd_custom_nested_error_2_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinRustAsync
      sse_decode_box_autoadd_custom_nested_error_2_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinRustAsyncSse
      sse_decode_box_autoadd_custom_nested_error_2_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSse
      sse_decode_box_autoadd_custom_nested_error_2_twin_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSync
      sse_decode_box_autoadd_custom_nested_error_2_twin_sync(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSyncSse
      sse_decode_box_autoadd_custom_nested_error_2_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinNormal
      sse_decode_box_autoadd_custom_nested_error_inner_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinRustAsync
      sse_decode_box_autoadd_custom_nested_error_inner_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinRustAsyncSse
      sse_decode_box_autoadd_custom_nested_error_inner_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSse
      sse_decode_box_autoadd_custom_nested_error_inner_twin_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSync
      sse_decode_box_autoadd_custom_nested_error_inner_twin_sync(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSyncSse
      sse_decode_box_autoadd_custom_nested_error_inner_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinNormal
      sse_decode_box_autoadd_custom_nested_error_outer_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinRustAsync
      sse_decode_box_autoadd_custom_nested_error_outer_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinRustAsyncSse
      sse_decode_box_autoadd_custom_nested_error_outer_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSse
      sse_decode_box_autoadd_custom_nested_error_outer_twin_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSync
      sse_decode_box_autoadd_custom_nested_error_outer_twin_sync(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSyncSse
      sse_decode_box_autoadd_custom_nested_error_outer_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinNormal
      sse_decode_box_autoadd_custom_struct_error_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinRustAsync
      sse_decode_box_autoadd_custom_struct_error_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinRustAsyncSse
      sse_decode_box_autoadd_custom_struct_error_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSse sse_decode_box_autoadd_custom_struct_error_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSync
      sse_decode_box_autoadd_custom_struct_error_twin_sync(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSyncSse
      sse_decode_box_autoadd_custom_struct_error_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructTwinNormal sse_decode_box_autoadd_custom_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinRustAsync
      sse_decode_box_autoadd_custom_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomStructTwinRustAsyncSse
      sse_decode_box_autoadd_custom_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructTwinSse sse_decode_box_autoadd_custom_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinSync sse_decode_box_autoadd_custom_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinSyncSse sse_decode_box_autoadd_custom_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinNormal sse_decode_box_autoadd_customized_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinRustAsync sse_decode_box_autoadd_customized_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinRustAsyncSse
      sse_decode_box_autoadd_customized_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomizedTwinSse sse_decode_box_autoadd_customized_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinSync sse_decode_box_autoadd_customized_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinSyncSse sse_decode_box_autoadd_customized_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinNormal
      sse_decode_box_autoadd_dart_opaque_nested_twin_normal(
          SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinRustAsync
      sse_decode_box_autoadd_dart_opaque_nested_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinRustAsyncSse
      sse_decode_box_autoadd_dart_opaque_nested_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSse sse_decode_box_autoadd_dart_opaque_nested_twin_sse(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSync sse_decode_box_autoadd_dart_opaque_nested_twin_sync(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSyncSse
      sse_decode_box_autoadd_dart_opaque_nested_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  ElementTwinNormal sse_decode_box_autoadd_element_twin_normal(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsync sse_decode_box_autoadd_element_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsyncSse sse_decode_box_autoadd_element_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  ElementTwinSse sse_decode_box_autoadd_element_twin_sse(
      SseDeserializer deserializer);

  @protected
  ElementTwinSync sse_decode_box_autoadd_element_twin_sync(
      SseDeserializer deserializer);

  @protected
  ElementTwinSyncSse sse_decode_box_autoadd_element_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EmptyTwinNormal sse_decode_box_autoadd_empty_twin_normal(
      SseDeserializer deserializer);

  @protected
  EmptyTwinRustAsync sse_decode_box_autoadd_empty_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EmptyTwinRustAsyncSse sse_decode_box_autoadd_empty_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EmptyTwinSse sse_decode_box_autoadd_empty_twin_sse(
      SseDeserializer deserializer);

  @protected
  EmptyTwinSync sse_decode_box_autoadd_empty_twin_sync(
      SseDeserializer deserializer);

  @protected
  EmptyTwinSyncSse sse_decode_box_autoadd_empty_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinNormal sse_decode_box_autoadd_enum_dart_opaque_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinRustAsync
      sse_decode_box_autoadd_enum_dart_opaque_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinRustAsyncSse
      sse_decode_box_autoadd_enum_dart_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSse sse_decode_box_autoadd_enum_dart_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSync sse_decode_box_autoadd_enum_dart_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSyncSse
      sse_decode_box_autoadd_enum_dart_opaque_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinMoi sse_decode_box_autoadd_enum_opaque_twin_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinNormal sse_decode_box_autoadd_enum_opaque_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsync sse_decode_box_autoadd_enum_opaque_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncMoi
      sse_decode_box_autoadd_enum_opaque_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncSse
      sse_decode_box_autoadd_enum_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncSseMoi
      sse_decode_box_autoadd_enum_opaque_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSse sse_decode_box_autoadd_enum_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSseMoi sse_decode_box_autoadd_enum_opaque_twin_sse_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSync sse_decode_box_autoadd_enum_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncMoi sse_decode_box_autoadd_enum_opaque_twin_sync_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncSse sse_decode_box_autoadd_enum_opaque_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncSseMoi sse_decode_box_autoadd_enum_opaque_twin_sync_sse_moi(
      SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinMoi
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinNormal
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_normal(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsync
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncMoi
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSse
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSseMoi
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSse
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSseMoi
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_sse_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSync
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_sync(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSyncMoi
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_sync_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSse
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSseMoi
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_sync_sse_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinNormal
      sse_decode_box_autoadd_enum_with_item_mixed_twin_normal(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinRustAsync
      sse_decode_box_autoadd_enum_with_item_mixed_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinRustAsyncSse
      sse_decode_box_autoadd_enum_with_item_mixed_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSse sse_decode_box_autoadd_enum_with_item_mixed_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSync
      sse_decode_box_autoadd_enum_with_item_mixed_twin_sync(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSyncSse
      sse_decode_box_autoadd_enum_with_item_mixed_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinNormal
      sse_decode_box_autoadd_enum_with_item_struct_twin_normal(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinRustAsync
      sse_decode_box_autoadd_enum_with_item_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinRustAsyncSse
      sse_decode_box_autoadd_enum_with_item_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSse
      sse_decode_box_autoadd_enum_with_item_struct_twin_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSync
      sse_decode_box_autoadd_enum_with_item_struct_twin_sync(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSyncSse
      sse_decode_box_autoadd_enum_with_item_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinNormal
      sse_decode_box_autoadd_enum_with_item_tuple_twin_normal(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinRustAsync
      sse_decode_box_autoadd_enum_with_item_tuple_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinRustAsyncSse
      sse_decode_box_autoadd_enum_with_item_tuple_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSse sse_decode_box_autoadd_enum_with_item_tuple_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSync
      sse_decode_box_autoadd_enum_with_item_tuple_twin_sync(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSyncSse
      sse_decode_box_autoadd_enum_with_item_tuple_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EventTwinNormal sse_decode_box_autoadd_event_twin_normal(
      SseDeserializer deserializer);

  @protected
  EventTwinRustAsync sse_decode_box_autoadd_event_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EventTwinRustAsyncSse sse_decode_box_autoadd_event_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EventTwinSse sse_decode_box_autoadd_event_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinNormal sse_decode_box_autoadd_exotic_optionals_twin_normal(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsync
      sse_decode_box_autoadd_exotic_optionals_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      sse_decode_box_autoadd_exotic_optionals_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSse sse_decode_box_autoadd_exotic_optionals_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSync sse_decode_box_autoadd_exotic_optionals_twin_sync(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSyncSse
      sse_decode_box_autoadd_exotic_optionals_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  double sse_decode_box_autoadd_f_32(SseDeserializer deserializer);

  @protected
  double sse_decode_box_autoadd_f_64(SseDeserializer deserializer);

  @protected
  FeatureChronoTwinNormal sse_decode_box_autoadd_feature_chrono_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinRustAsync
      sse_decode_box_autoadd_feature_chrono_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  FeatureChronoTwinRustAsyncSse
      sse_decode_box_autoadd_feature_chrono_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  FeatureChronoTwinSse sse_decode_box_autoadd_feature_chrono_twin_sse(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinSync sse_decode_box_autoadd_feature_chrono_twin_sync(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinSyncSse sse_decode_box_autoadd_feature_chrono_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinNormal sse_decode_box_autoadd_feature_uuid_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinRustAsync sse_decode_box_autoadd_feature_uuid_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinRustAsyncSse
      sse_decode_box_autoadd_feature_uuid_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  FeatureUuidTwinSse sse_decode_box_autoadd_feature_uuid_twin_sse(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinSync sse_decode_box_autoadd_feature_uuid_twin_sync(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinSyncSse sse_decode_box_autoadd_feature_uuid_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinNormal sse_decode_box_autoadd_feed_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsync sse_decode_box_autoadd_feed_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsyncSse sse_decode_box_autoadd_feed_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinSse sse_decode_box_autoadd_feed_id_twin_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinSync sse_decode_box_autoadd_feed_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinSyncSse sse_decode_box_autoadd_feed_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_16(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_32(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_64(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_8(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_isize(SseDeserializer deserializer);

  @protected
  KitchenSinkTwinNormal sse_decode_box_autoadd_kitchen_sink_twin_normal(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsync sse_decode_box_autoadd_kitchen_sink_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsyncSse
      sse_decode_box_autoadd_kitchen_sink_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSse sse_decode_box_autoadd_kitchen_sink_twin_sse(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSync sse_decode_box_autoadd_kitchen_sink_twin_sync(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSyncSse sse_decode_box_autoadd_kitchen_sink_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ListOfNestedRawStringMirrored
      sse_decode_box_autoadd_list_of_nested_raw_string_mirrored(
          SseDeserializer deserializer);

  @protected
  MacroStruct sse_decode_box_autoadd_macro_struct(SseDeserializer deserializer);

  @protected
  MeasureTwinNormal sse_decode_box_autoadd_measure_twin_normal(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsync sse_decode_box_autoadd_measure_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsyncSse sse_decode_box_autoadd_measure_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSse sse_decode_box_autoadd_measure_twin_sse(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSync sse_decode_box_autoadd_measure_twin_sync(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSyncSse sse_decode_box_autoadd_measure_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinNormal sse_decode_box_autoadd_message_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinRustAsync sse_decode_box_autoadd_message_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinRustAsyncSse
      sse_decode_box_autoadd_message_id_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MessageIdTwinSse sse_decode_box_autoadd_message_id_twin_sse(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinSync sse_decode_box_autoadd_message_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinSyncSse sse_decode_box_autoadd_message_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinNormal sse_decode_box_autoadd_my_callable_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinRustAsync sse_decode_box_autoadd_my_callable_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinRustAsyncSse
      sse_decode_box_autoadd_my_callable_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MyCallableTwinSse sse_decode_box_autoadd_my_callable_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinSync sse_decode_box_autoadd_my_callable_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinSyncSse sse_decode_box_autoadd_my_callable_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinNormal sse_decode_box_autoadd_my_nested_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinRustAsync
      sse_decode_box_autoadd_my_nested_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  MyNestedStructTwinRustAsyncSse
      sse_decode_box_autoadd_my_nested_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSse sse_decode_box_autoadd_my_nested_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSync sse_decode_box_autoadd_my_nested_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSyncSse
      sse_decode_box_autoadd_my_nested_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  MySize sse_decode_box_autoadd_my_size(SseDeserializer deserializer);

  @protected
  MyStruct sse_decode_box_autoadd_my_struct(SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinNormal sse_decode_box_autoadd_my_tree_node_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinRustAsync sse_decode_box_autoadd_my_tree_node_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinRustAsyncSse
      sse_decode_box_autoadd_my_tree_node_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSse sse_decode_box_autoadd_my_tree_node_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSync sse_decode_box_autoadd_my_tree_node_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSyncSse sse_decode_box_autoadd_my_tree_node_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  NestedRawStringMirrored sse_decode_box_autoadd_nested_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinNormal sse_decode_box_autoadd_new_type_int_twin_normal(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsync sse_decode_box_autoadd_new_type_int_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsyncSse
      sse_decode_box_autoadd_new_type_int_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSse sse_decode_box_autoadd_new_type_int_twin_sse(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSync sse_decode_box_autoadd_new_type_int_twin_sync(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSyncSse sse_decode_box_autoadd_new_type_int_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  NoteTwinNormal sse_decode_box_autoadd_note_twin_normal(
      SseDeserializer deserializer);

  @protected
  NoteTwinRustAsync sse_decode_box_autoadd_note_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  NoteTwinRustAsyncSse sse_decode_box_autoadd_note_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  NoteTwinSse sse_decode_box_autoadd_note_twin_sse(
      SseDeserializer deserializer);

  @protected
  NoteTwinSync sse_decode_box_autoadd_note_twin_sync(
      SseDeserializer deserializer);

  @protected
  NoteTwinSyncSse sse_decode_box_autoadd_note_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  Numbers sse_decode_box_autoadd_numbers(SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinMoi sse_decode_box_autoadd_opaque_nested_twin_moi(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinNormal sse_decode_box_autoadd_opaque_nested_twin_normal(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsync
      sse_decode_box_autoadd_opaque_nested_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsyncMoi
      sse_decode_box_autoadd_opaque_nested_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsyncSse
      sse_decode_box_autoadd_opaque_nested_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsyncSseMoi
      sse_decode_box_autoadd_opaque_nested_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSse sse_decode_box_autoadd_opaque_nested_twin_sse(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSseMoi sse_decode_box_autoadd_opaque_nested_twin_sse_moi(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSync sse_decode_box_autoadd_opaque_nested_twin_sync(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSyncMoi sse_decode_box_autoadd_opaque_nested_twin_sync_moi(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSyncSse sse_decode_box_autoadd_opaque_nested_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSyncSseMoi
      sse_decode_box_autoadd_opaque_nested_twin_sync_sse_moi(
          SseDeserializer deserializer);

  @protected
  OptVecsTwinNormal sse_decode_box_autoadd_opt_vecs_twin_normal(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinRustAsync sse_decode_box_autoadd_opt_vecs_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinRustAsyncSse sse_decode_box_autoadd_opt_vecs_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinSse sse_decode_box_autoadd_opt_vecs_twin_sse(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinSync sse_decode_box_autoadd_opt_vecs_twin_sync(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinSyncSse sse_decode_box_autoadd_opt_vecs_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  RawStringMirrored sse_decode_box_autoadd_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  (String, int) sse_decode_box_autoadd_record_string_i_32(
      SseDeserializer deserializer);

  @protected
  Sequences sse_decode_box_autoadd_sequences(SseDeserializer deserializer);

  @protected
  SimpleStructTwinNormal sse_decode_box_autoadd_simple_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinRustAsync
      sse_decode_box_autoadd_simple_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  SimpleStructTwinRustAsyncSse
      sse_decode_box_autoadd_simple_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  SimpleStructTwinSse sse_decode_box_autoadd_simple_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinSync sse_decode_box_autoadd_simple_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinSyncSse sse_decode_box_autoadd_simple_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinNormal sse_decode_box_autoadd_some_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinRustAsync sse_decode_box_autoadd_some_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinRustAsyncSse
      sse_decode_box_autoadd_some_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  SomeStructTwinSse sse_decode_box_autoadd_some_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinSync sse_decode_box_autoadd_some_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinSyncSse sse_decode_box_autoadd_some_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  StructInLowerLevel sse_decode_box_autoadd_struct_in_lower_level(
      SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinNormal
      sse_decode_box_autoadd_struct_with_comments_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinRustAsync
      sse_decode_box_autoadd_struct_with_comments_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_comments_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSse
      sse_decode_box_autoadd_struct_with_comments_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSync
      sse_decode_box_autoadd_struct_with_comments_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSyncSse
      sse_decode_box_autoadd_struct_with_comments_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithEnumTwinNormal sse_decode_box_autoadd_struct_with_enum_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinRustAsync
      sse_decode_box_autoadd_struct_with_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithEnumTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSse sse_decode_box_autoadd_struct_with_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSync sse_decode_box_autoadd_struct_with_enum_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSyncSse
      sse_decode_box_autoadd_struct_with_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinMoi
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinNormal
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsync
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSseMoi
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSse
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSseMoi
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSync
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncMoi
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSse
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSseMoi
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinMoi
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsync
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncMoi
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSseMoi
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSseMoi
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncMoi
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSseMoi
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinNormal
      sse_decode_box_autoadd_struct_with_one_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinRustAsync
      sse_decode_box_autoadd_struct_with_one_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_one_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSse
      sse_decode_box_autoadd_struct_with_one_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSync
      sse_decode_box_autoadd_struct_with_one_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSyncSse
      sse_decode_box_autoadd_struct_with_one_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinNormal
      sse_decode_box_autoadd_struct_with_two_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinRustAsync
      sse_decode_box_autoadd_struct_with_two_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_two_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSse
      sse_decode_box_autoadd_struct_with_two_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSync
      sse_decode_box_autoadd_struct_with_two_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSyncSse
      sse_decode_box_autoadd_struct_with_two_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinNormal
      sse_decode_box_autoadd_struct_with_zero_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinRustAsync
      sse_decode_box_autoadd_struct_with_zero_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_zero_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSse
      sse_decode_box_autoadd_struct_with_zero_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSync
      sse_decode_box_autoadd_struct_with_zero_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSyncSse
      sse_decode_box_autoadd_struct_with_zero_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  SumWithTwinNormal sse_decode_box_autoadd_sum_with_twin_normal(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsync sse_decode_box_autoadd_sum_with_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsyncSse sse_decode_box_autoadd_sum_with_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSse sse_decode_box_autoadd_sum_with_twin_sse(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSync sse_decode_box_autoadd_sum_with_twin_sync(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSyncSse sse_decode_box_autoadd_sum_with_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinNormal sse_decode_box_autoadd_test_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsync sse_decode_box_autoadd_test_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncSse sse_decode_box_autoadd_test_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSse sse_decode_box_autoadd_test_id_twin_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSync sse_decode_box_autoadd_test_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSyncSse sse_decode_box_autoadd_test_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinNormal
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinRustAsync
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinRustAsyncSse
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSse
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSync
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSyncSse
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinNormal
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinRustAsync
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinRustAsyncSse
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSse
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSync
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSyncSse
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_8(SseDeserializer deserializer);

  @protected
  UserIdTwinNormal sse_decode_box_autoadd_user_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  UserIdTwinRustAsync sse_decode_box_autoadd_user_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  UserIdTwinRustAsyncSse sse_decode_box_autoadd_user_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  UserIdTwinSse sse_decode_box_autoadd_user_id_twin_sse(
      SseDeserializer deserializer);

  @protected
  UserIdTwinSync sse_decode_box_autoadd_user_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  UserIdTwinSyncSse sse_decode_box_autoadd_user_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_usize(SseDeserializer deserializer);

  @protected
  WeekdaysTwinNormal sse_decode_box_autoadd_weekdays_twin_normal(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsync sse_decode_box_autoadd_weekdays_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsyncSse sse_decode_box_autoadd_weekdays_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSse sse_decode_box_autoadd_weekdays_twin_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSync sse_decode_box_autoadd_weekdays_twin_sync(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSyncSse sse_decode_box_autoadd_weekdays_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinNormal
      sse_decode_box_benchmark_binary_tree_twin_normal(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      sse_decode_box_benchmark_binary_tree_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      sse_decode_box_benchmark_binary_tree_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSse sse_decode_box_benchmark_binary_tree_twin_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSync sse_decode_box_benchmark_binary_tree_twin_sync(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSyncSse
      sse_decode_box_benchmark_binary_tree_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  BlobTwinNormal sse_decode_box_blob_twin_normal(SseDeserializer deserializer);

  @protected
  BlobTwinRustAsync sse_decode_box_blob_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BlobTwinRustAsyncSse sse_decode_box_blob_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BlobTwinSse sse_decode_box_blob_twin_sse(SseDeserializer deserializer);

  @protected
  BlobTwinSync sse_decode_box_blob_twin_sync(SseDeserializer deserializer);

  @protected
  BlobTwinSyncSse sse_decode_box_blob_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  bool sse_decode_box_bool(SseDeserializer deserializer);

  @protected
  DistanceTwinNormal sse_decode_box_distance_twin_normal(
      SseDeserializer deserializer);

  @protected
  DistanceTwinRustAsync sse_decode_box_distance_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  DistanceTwinRustAsyncSse sse_decode_box_distance_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  DistanceTwinSse sse_decode_box_distance_twin_sse(
      SseDeserializer deserializer);

  @protected
  DistanceTwinSync sse_decode_box_distance_twin_sync(
      SseDeserializer deserializer);

  @protected
  DistanceTwinSyncSse sse_decode_box_distance_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinNormal sse_decode_box_exotic_optionals_twin_normal(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsync sse_decode_box_exotic_optionals_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      sse_decode_box_exotic_optionals_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSse sse_decode_box_exotic_optionals_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSync sse_decode_box_exotic_optionals_twin_sync(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSyncSse sse_decode_box_exotic_optionals_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  double sse_decode_box_f_64(SseDeserializer deserializer);

  @protected
  FeedIdTwinNormal sse_decode_box_feed_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsync sse_decode_box_feed_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsyncSse sse_decode_box_feed_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinSse sse_decode_box_feed_id_twin_sse(SseDeserializer deserializer);

  @protected
  FeedIdTwinSync sse_decode_box_feed_id_twin_sync(SseDeserializer deserializer);

  @protected
  FeedIdTwinSyncSse sse_decode_box_feed_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_i_32(SseDeserializer deserializer);

  @protected
  int sse_decode_box_i_64(SseDeserializer deserializer);

  @protected
  int sse_decode_box_i_8(SseDeserializer deserializer);

  @protected
  KitchenSinkTwinNormal sse_decode_box_kitchen_sink_twin_normal(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsync sse_decode_box_kitchen_sink_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsyncSse sse_decode_box_kitchen_sink_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSse sse_decode_box_kitchen_sink_twin_sse(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSync sse_decode_box_kitchen_sink_twin_sync(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSyncSse sse_decode_box_kitchen_sink_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MySize sse_decode_box_my_size(SseDeserializer deserializer);

  @protected
  SpeedTwinNormal sse_decode_box_speed_twin_normal(
      SseDeserializer deserializer);

  @protected
  SpeedTwinRustAsync sse_decode_box_speed_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SpeedTwinRustAsyncSse sse_decode_box_speed_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SpeedTwinSse sse_decode_box_speed_twin_sse(SseDeserializer deserializer);

  @protected
  SpeedTwinSync sse_decode_box_speed_twin_sync(SseDeserializer deserializer);

  @protected
  SpeedTwinSyncSse sse_decode_box_speed_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_u_8(SseDeserializer deserializer);

  @protected
  U8Array1600 sse_decode_box_u_8_array_1600(SseDeserializer deserializer);

  @protected
  U8Array8 sse_decode_box_u_8_array_8(SseDeserializer deserializer);

  @protected
  WeekdaysTwinNormal sse_decode_box_weekdays_twin_normal(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsync sse_decode_box_weekdays_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsyncSse sse_decode_box_weekdays_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSse sse_decode_box_weekdays_twin_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSync sse_decode_box_weekdays_twin_sync(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSyncSse sse_decode_box_weekdays_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CTwinNormal sse_decode_c_twin_normal(SseDeserializer deserializer);

  @protected
  CTwinRustAsync sse_decode_c_twin_rust_async(SseDeserializer deserializer);

  @protected
  CTwinRustAsyncSse sse_decode_c_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  CTwinSse sse_decode_c_twin_sse(SseDeserializer deserializer);

  @protected
  CTwinSync sse_decode_c_twin_sync(SseDeserializer deserializer);

  @protected
  CTwinSyncSse sse_decode_c_twin_sync_sse(SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinNormal sse_decode_concatenate_with_twin_normal(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinRustAsync sse_decode_concatenate_with_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinRustAsyncSse
      sse_decode_concatenate_with_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSse sse_decode_concatenate_with_twin_sse(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSync sse_decode_concatenate_with_twin_sync(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSyncSse sse_decode_concatenate_with_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ConstructorTranslatableStructTwinNormal
      sse_decode_constructor_translatable_struct_twin_normal(
          SseDeserializer deserializer);

  @protected
  ConstructorTranslatableSyncStructTwinNormal
      sse_decode_constructor_translatable_sync_struct_twin_normal(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinNormal
      sse_decode_contains_mirrored_sub_struct_twin_normal(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinRustAsync
      sse_decode_contains_mirrored_sub_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinRustAsyncSse
      sse_decode_contains_mirrored_sub_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinSse
      sse_decode_contains_mirrored_sub_struct_twin_sse(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinSync
      sse_decode_contains_mirrored_sub_struct_twin_sync(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinSyncSse
      sse_decode_contains_mirrored_sub_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinNormal sse_decode_custom_enum_error_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinRustAsync sse_decode_custom_enum_error_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinRustAsyncSse
      sse_decode_custom_enum_error_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinSse sse_decode_custom_enum_error_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinSync sse_decode_custom_enum_error_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinSyncSse sse_decode_custom_enum_error_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinNormal sse_decode_custom_error_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinRustAsync sse_decode_custom_error_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinRustAsyncSse sse_decode_custom_error_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinSse sse_decode_custom_error_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinSync sse_decode_custom_error_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinSyncSse sse_decode_custom_error_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinNormal sse_decode_custom_nested_error_1_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinRustAsync
      sse_decode_custom_nested_error_1_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinRustAsyncSse
      sse_decode_custom_nested_error_1_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinSse sse_decode_custom_nested_error_1_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinSync sse_decode_custom_nested_error_1_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinSyncSse sse_decode_custom_nested_error_1_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinNormal sse_decode_custom_nested_error_2_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinRustAsync
      sse_decode_custom_nested_error_2_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinRustAsyncSse
      sse_decode_custom_nested_error_2_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSse sse_decode_custom_nested_error_2_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSync sse_decode_custom_nested_error_2_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSyncSse sse_decode_custom_nested_error_2_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinNormal
      sse_decode_custom_nested_error_inner_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinRustAsync
      sse_decode_custom_nested_error_inner_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinRustAsyncSse
      sse_decode_custom_nested_error_inner_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSse sse_decode_custom_nested_error_inner_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSync sse_decode_custom_nested_error_inner_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSyncSse
      sse_decode_custom_nested_error_inner_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinNormal
      sse_decode_custom_nested_error_outer_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinRustAsync
      sse_decode_custom_nested_error_outer_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinRustAsyncSse
      sse_decode_custom_nested_error_outer_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSse sse_decode_custom_nested_error_outer_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSync sse_decode_custom_nested_error_outer_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSyncSse
      sse_decode_custom_nested_error_outer_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinNormal
      sse_decode_custom_struct_error_another_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinRustAsync
      sse_decode_custom_struct_error_another_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinRustAsyncSse
      sse_decode_custom_struct_error_another_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinSse
      sse_decode_custom_struct_error_another_twin_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinSync
      sse_decode_custom_struct_error_another_twin_sync(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinSyncSse
      sse_decode_custom_struct_error_another_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinNormal sse_decode_custom_struct_error_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinRustAsync sse_decode_custom_struct_error_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinRustAsyncSse
      sse_decode_custom_struct_error_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSse sse_decode_custom_struct_error_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSync sse_decode_custom_struct_error_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSyncSse sse_decode_custom_struct_error_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinNormal sse_decode_custom_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinRustAsync sse_decode_custom_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinRustAsyncSse sse_decode_custom_struct_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinSse sse_decode_custom_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinSync sse_decode_custom_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinSyncSse sse_decode_custom_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinNormal sse_decode_customized_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinRustAsync sse_decode_customized_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinRustAsyncSse sse_decode_customized_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinSse sse_decode_customized_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinSync sse_decode_customized_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinSyncSse sse_decode_customized_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinNormal sse_decode_dart_opaque_nested_twin_normal(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinRustAsync sse_decode_dart_opaque_nested_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinRustAsyncSse
      sse_decode_dart_opaque_nested_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSse sse_decode_dart_opaque_nested_twin_sse(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSync sse_decode_dart_opaque_nested_twin_sync(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSyncSse sse_decode_dart_opaque_nested_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  dynamic sse_decode_dartabi(SseDeserializer deserializer);

  @protected
  DemoStructForRustCallDartTwinNormal
      sse_decode_demo_struct_for_rust_call_dart_twin_normal(
          SseDeserializer deserializer);

  @protected
  DemoStructForRustCallDartTwinRustAsync
      sse_decode_demo_struct_for_rust_call_dart_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  DemoStructForRustCallDartTwinRustAsyncSse
      sse_decode_demo_struct_for_rust_call_dart_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  DemoStructForRustCallDartTwinSse
      sse_decode_demo_struct_for_rust_call_dart_twin_sse(
          SseDeserializer deserializer);

  @protected
  DistanceTwinNormal sse_decode_distance_twin_normal(
      SseDeserializer deserializer);

  @protected
  DistanceTwinRustAsync sse_decode_distance_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  DistanceTwinRustAsyncSse sse_decode_distance_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  DistanceTwinSse sse_decode_distance_twin_sse(SseDeserializer deserializer);

  @protected
  DistanceTwinSync sse_decode_distance_twin_sync(SseDeserializer deserializer);

  @protected
  DistanceTwinSyncSse sse_decode_distance_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ElementTwinNormal sse_decode_element_twin_normal(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsync sse_decode_element_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsyncSse sse_decode_element_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  ElementTwinSse sse_decode_element_twin_sse(SseDeserializer deserializer);

  @protected
  ElementTwinSync sse_decode_element_twin_sync(SseDeserializer deserializer);

  @protected
  ElementTwinSyncSse sse_decode_element_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EmptyTwinNormal sse_decode_empty_twin_normal(SseDeserializer deserializer);

  @protected
  EmptyTwinRustAsync sse_decode_empty_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EmptyTwinRustAsyncSse sse_decode_empty_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EmptyTwinSse sse_decode_empty_twin_sse(SseDeserializer deserializer);

  @protected
  EmptyTwinSync sse_decode_empty_twin_sync(SseDeserializer deserializer);

  @protected
  EmptyTwinSyncSse sse_decode_empty_twin_sync_sse(SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinNormal sse_decode_enum_dart_opaque_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinRustAsync sse_decode_enum_dart_opaque_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinRustAsyncSse
      sse_decode_enum_dart_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSse sse_decode_enum_dart_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSync sse_decode_enum_dart_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSyncSse sse_decode_enum_dart_opaque_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinMoi sse_decode_enum_opaque_twin_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinMoiArray5 sse_decode_enum_opaque_twin_moi_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinNormal sse_decode_enum_opaque_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinNormalArray5 sse_decode_enum_opaque_twin_normal_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsync sse_decode_enum_opaque_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncArray5 sse_decode_enum_opaque_twin_rust_async_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncMoi sse_decode_enum_opaque_twin_rust_async_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncMoiArray5
      sse_decode_enum_opaque_twin_rust_async_moi_array_5(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncSse sse_decode_enum_opaque_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncSseArray5
      sse_decode_enum_opaque_twin_rust_async_sse_array_5(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncSseMoi sse_decode_enum_opaque_twin_rust_async_sse_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncSseMoiArray5
      sse_decode_enum_opaque_twin_rust_async_sse_moi_array_5(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSse sse_decode_enum_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSseArray5 sse_decode_enum_opaque_twin_sse_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSseMoi sse_decode_enum_opaque_twin_sse_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSseMoiArray5 sse_decode_enum_opaque_twin_sse_moi_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSync sse_decode_enum_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncArray5 sse_decode_enum_opaque_twin_sync_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncMoi sse_decode_enum_opaque_twin_sync_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncMoiArray5 sse_decode_enum_opaque_twin_sync_moi_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncSse sse_decode_enum_opaque_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncSseArray5 sse_decode_enum_opaque_twin_sync_sse_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncSseMoi sse_decode_enum_opaque_twin_sync_sse_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncSseMoiArray5
      sse_decode_enum_opaque_twin_sync_sse_moi_array_5(
          SseDeserializer deserializer);

  @protected
  EnumSimpleTwinNormal sse_decode_enum_simple_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinRustAsync sse_decode_enum_simple_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinRustAsyncSse sse_decode_enum_simple_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinSse sse_decode_enum_simple_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinSync sse_decode_enum_simple_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinSyncSse sse_decode_enum_simple_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithDiscriminantTwinNormal sse_decode_enum_with_discriminant_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumWithDiscriminantTwinRustAsync
      sse_decode_enum_with_discriminant_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithDiscriminantTwinRustAsyncSse
      sse_decode_enum_with_discriminant_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithDiscriminantTwinSse sse_decode_enum_with_discriminant_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithDiscriminantTwinSync sse_decode_enum_with_discriminant_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumWithDiscriminantTwinSyncSse
      sse_decode_enum_with_discriminant_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinMoi sse_decode_enum_with_good_and_opaque_twin_moi(
      SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinNormal
      sse_decode_enum_with_good_and_opaque_twin_normal(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsync
      sse_decode_enum_with_good_and_opaque_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncMoi
      sse_decode_enum_with_good_and_opaque_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSse
      sse_decode_enum_with_good_and_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSseMoi
      sse_decode_enum_with_good_and_opaque_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSse sse_decode_enum_with_good_and_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSseMoi
      sse_decode_enum_with_good_and_opaque_twin_sse_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSync sse_decode_enum_with_good_and_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSyncMoi
      sse_decode_enum_with_good_and_opaque_twin_sync_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSse
      sse_decode_enum_with_good_and_opaque_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSseMoi
      sse_decode_enum_with_good_and_opaque_twin_sync_sse_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinNormal sse_decode_enum_with_item_mixed_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinRustAsync
      sse_decode_enum_with_item_mixed_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinRustAsyncSse
      sse_decode_enum_with_item_mixed_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSse sse_decode_enum_with_item_mixed_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSync sse_decode_enum_with_item_mixed_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSyncSse sse_decode_enum_with_item_mixed_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinNormal sse_decode_enum_with_item_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinRustAsync
      sse_decode_enum_with_item_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinRustAsyncSse
      sse_decode_enum_with_item_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSse sse_decode_enum_with_item_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSync sse_decode_enum_with_item_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSyncSse sse_decode_enum_with_item_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinNormal sse_decode_enum_with_item_tuple_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinRustAsync
      sse_decode_enum_with_item_tuple_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinRustAsyncSse
      sse_decode_enum_with_item_tuple_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSse sse_decode_enum_with_item_tuple_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSync sse_decode_enum_with_item_tuple_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSyncSse sse_decode_enum_with_item_tuple_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EventTwinNormal sse_decode_event_twin_normal(SseDeserializer deserializer);

  @protected
  EventTwinRustAsync sse_decode_event_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EventTwinRustAsyncSse sse_decode_event_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EventTwinSse sse_decode_event_twin_sse(SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinNormal sse_decode_exotic_optionals_twin_normal(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsync sse_decode_exotic_optionals_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      sse_decode_exotic_optionals_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSse sse_decode_exotic_optionals_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSync sse_decode_exotic_optionals_twin_sync(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSyncSse sse_decode_exotic_optionals_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  double sse_decode_f_32(SseDeserializer deserializer);

  @protected
  double sse_decode_f_64(SseDeserializer deserializer);

  @protected
  F64Array16 sse_decode_f_64_array_16(SseDeserializer deserializer);

  @protected
  FeatureChronoTwinNormal sse_decode_feature_chrono_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinRustAsync sse_decode_feature_chrono_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinRustAsyncSse sse_decode_feature_chrono_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinSse sse_decode_feature_chrono_twin_sse(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinSync sse_decode_feature_chrono_twin_sync(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinSyncSse sse_decode_feature_chrono_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinNormal sse_decode_feature_uuid_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinRustAsync sse_decode_feature_uuid_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinRustAsyncSse sse_decode_feature_uuid_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinSse sse_decode_feature_uuid_twin_sse(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinSync sse_decode_feature_uuid_twin_sync(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinSyncSse sse_decode_feature_uuid_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinNormal sse_decode_feed_id_twin_normal(SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsync sse_decode_feed_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsyncSse sse_decode_feed_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinSse sse_decode_feed_id_twin_sse(SseDeserializer deserializer);

  @protected
  FeedIdTwinSync sse_decode_feed_id_twin_sync(SseDeserializer deserializer);

  @protected
  FeedIdTwinSyncSse sse_decode_feed_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  HashMapValue sse_decode_hash_map_value(SseDeserializer deserializer);

  @protected
  int sse_decode_i_16(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  I32Array2 sse_decode_i_32_array_2(SseDeserializer deserializer);

  @protected
  int sse_decode_i_64(SseDeserializer deserializer);

  @protected
  int sse_decode_i_8(SseDeserializer deserializer);

  @protected
  int sse_decode_isize(SseDeserializer deserializer);

  @protected
  KitchenSinkTwinNormal sse_decode_kitchen_sink_twin_normal(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsync sse_decode_kitchen_sink_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsyncSse sse_decode_kitchen_sink_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSse sse_decode_kitchen_sink_twin_sse(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSync sse_decode_kitchen_sink_twin_sync(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSyncSse sse_decode_kitchen_sink_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinMoi>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinNormal>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinRustAsync>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinRustAsyncMoi>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinRustAsyncSse>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinRustAsyncSseMoi>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinSse>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinSseMoi>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinSync>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinSyncMoi>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinSyncSse>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinSyncSseMoi>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  List<Duration> sse_decode_list_Chrono_Duration(SseDeserializer deserializer);

  @protected
  List<DateTime> sse_decode_list_Chrono_Local(SseDeserializer deserializer);

  @protected
  List<DateTime> sse_decode_list_Chrono_Naive(SseDeserializer deserializer);

  @protected
  List<Object> sse_decode_list_DartOpaque(SseDeserializer deserializer);

  @protected
  List<HideDataTwinMoi> sse_decode_list_RustOpaque_HideDataTwinMoi(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinNormal> sse_decode_list_RustOpaque_HideDataTwinNormal(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinRustAsync> sse_decode_list_RustOpaque_HideDataTwinRustAsync(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinRustAsyncMoi>
      sse_decode_list_RustOpaque_HideDataTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  List<HideDataTwinRustAsyncSse>
      sse_decode_list_RustOpaque_HideDataTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  List<HideDataTwinRustAsyncSseMoi>
      sse_decode_list_RustOpaque_HideDataTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  List<HideDataTwinSse> sse_decode_list_RustOpaque_HideDataTwinSse(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinSseMoi> sse_decode_list_RustOpaque_HideDataTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinSync> sse_decode_list_RustOpaque_HideDataTwinSync(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinSyncMoi> sse_decode_list_RustOpaque_HideDataTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinSyncSse> sse_decode_list_RustOpaque_HideDataTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinSyncSseMoi>
      sse_decode_list_RustOpaque_HideDataTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<UuidValue> sse_decode_list_Uuid(SseDeserializer deserializer);

  @protected
  List<ApplicationEnvVar> sse_decode_list_application_env_var(
      SseDeserializer deserializer);

  @protected
  List<ApplicationMode> sse_decode_list_application_mode(
      SseDeserializer deserializer);

  @protected
  List<ApplicationSettings> sse_decode_list_application_settings(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinNormal> sse_decode_list_attribute_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsync> sse_decode_list_attribute_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsyncSse> sse_decode_list_attribute_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSse> sse_decode_list_attribute_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSync> sse_decode_list_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSyncSse> sse_decode_list_attribute_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<BasicGeneralEnumTwinNormal>
      sse_decode_list_basic_general_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<BasicGeneralEnumTwinRustAsync>
      sse_decode_list_basic_general_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<BasicGeneralEnumTwinRustAsyncSse>
      sse_decode_list_basic_general_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<BasicGeneralEnumTwinSse> sse_decode_list_basic_general_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<BasicGeneralEnumTwinSync> sse_decode_list_basic_general_enum_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<BasicGeneralEnumTwinSyncSse>
      sse_decode_list_basic_general_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<BasicPrimitiveEnumTwinNormal>
      sse_decode_list_basic_primitive_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<BasicPrimitiveEnumTwinRustAsync>
      sse_decode_list_basic_primitive_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<BasicPrimitiveEnumTwinRustAsyncSse>
      sse_decode_list_basic_primitive_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<BasicPrimitiveEnumTwinSse> sse_decode_list_basic_primitive_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<BasicPrimitiveEnumTwinSync>
      sse_decode_list_basic_primitive_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<BasicPrimitiveEnumTwinSyncSse>
      sse_decode_list_basic_primitive_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<BasicStructTwinNormal> sse_decode_list_basic_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<BasicStructTwinRustAsync> sse_decode_list_basic_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<BasicStructTwinRustAsyncSse>
      sse_decode_list_basic_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<BasicStructTwinSse> sse_decode_list_basic_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<BasicStructTwinSync> sse_decode_list_basic_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<BasicStructTwinSyncSse> sse_decode_list_basic_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<bool> sse_decode_list_bool(SseDeserializer deserializer);

  @protected
  List<ElementTwinNormal> sse_decode_list_element_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinRustAsync> sse_decode_list_element_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinRustAsyncSse> sse_decode_list_element_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinSse> sse_decode_list_element_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinSync> sse_decode_list_element_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinSyncSse> sse_decode_list_element_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinMoi> sse_decode_list_enum_opaque_twin_moi(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinNormal> sse_decode_list_enum_opaque_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinRustAsync> sse_decode_list_enum_opaque_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinRustAsyncMoi>
      sse_decode_list_enum_opaque_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinRustAsyncSse>
      sse_decode_list_enum_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinRustAsyncSseMoi>
      sse_decode_list_enum_opaque_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinSse> sse_decode_list_enum_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinSseMoi> sse_decode_list_enum_opaque_twin_sse_moi(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinSync> sse_decode_list_enum_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinSyncMoi> sse_decode_list_enum_opaque_twin_sync_moi(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinSyncSse> sse_decode_list_enum_opaque_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinSyncSseMoi> sse_decode_list_enum_opaque_twin_sync_sse_moi(
      SseDeserializer deserializer);

  @protected
  List<Uint8List> sse_decode_list_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  List<MyEnum> sse_decode_list_my_enum(SseDeserializer deserializer);

  @protected
  List<MySize> sse_decode_list_my_size(SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinNormal> sse_decode_list_my_tree_node_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinRustAsync> sse_decode_list_my_tree_node_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinRustAsyncSse>
      sse_decode_list_my_tree_node_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinSse> sse_decode_list_my_tree_node_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinSync> sse_decode_list_my_tree_node_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinSyncSse> sse_decode_list_my_tree_node_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<NestedRawStringMirrored> sse_decode_list_nested_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  ListOfNestedRawStringMirrored sse_decode_list_of_nested_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  List<String?> sse_decode_list_opt_String(SseDeserializer deserializer);

  @protected
  List<AttributeTwinNormal?>
      sse_decode_list_opt_box_autoadd_attribute_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsync?>
      sse_decode_list_opt_box_autoadd_attribute_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsyncSse?>
      sse_decode_list_opt_box_autoadd_attribute_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinSse?> sse_decode_list_opt_box_autoadd_attribute_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSync?> sse_decode_list_opt_box_autoadd_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSyncSse?>
      sse_decode_list_opt_box_autoadd_attribute_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<int?> sse_decode_list_opt_box_autoadd_i_32(SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinNormal?>
      sse_decode_list_opt_box_autoadd_weekdays_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinRustAsync?>
      sse_decode_list_opt_box_autoadd_weekdays_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinRustAsyncSse?>
      sse_decode_list_opt_box_autoadd_weekdays_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSse?> sse_decode_list_opt_box_autoadd_weekdays_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSync?> sse_decode_list_opt_box_autoadd_weekdays_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSyncSse?>
      sse_decode_list_opt_box_autoadd_weekdays_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<Int32List?> sse_decode_list_opt_list_prim_i_32_strict(
      SseDeserializer deserializer);

  @protected
  List<PointTwinNormal> sse_decode_list_point_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<PointTwinRustAsync> sse_decode_list_point_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<PointTwinRustAsyncSse> sse_decode_list_point_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<PointTwinSse> sse_decode_list_point_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<PointTwinSync> sse_decode_list_point_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<PointTwinSyncSse> sse_decode_list_point_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<double> sse_decode_list_prim_f_32_loose(SseDeserializer deserializer);

  @protected
  Float32List sse_decode_list_prim_f_32_strict(SseDeserializer deserializer);

  @protected
  List<double> sse_decode_list_prim_f_64_loose(SseDeserializer deserializer);

  @protected
  Float64List sse_decode_list_prim_f_64_strict(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_i_16_loose(SseDeserializer deserializer);

  @protected
  Int16List sse_decode_list_prim_i_16_strict(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_i_32_loose(SseDeserializer deserializer);

  @protected
  Int32List sse_decode_list_prim_i_32_strict(SseDeserializer deserializer);

  @protected
  Int64List sse_decode_list_prim_i_64_strict(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_i_8_loose(SseDeserializer deserializer);

  @protected
  Int8List sse_decode_list_prim_i_8_strict(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_16_loose(SseDeserializer deserializer);

  @protected
  Uint16List sse_decode_list_prim_u_16_strict(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_32_loose(SseDeserializer deserializer);

  @protected
  Uint32List sse_decode_list_prim_u_32_strict(SseDeserializer deserializer);

  @protected
  Uint64List sse_decode_list_prim_u_64_strict(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_8_loose(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<RawStringEnumMirrored> sse_decode_list_raw_string_enum_mirrored(
      SseDeserializer deserializer);

  @protected
  List<RawStringMirrored> sse_decode_list_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  List<(int, BasicGeneralEnumTwinNormal)>
      sse_decode_list_record_i_32_basic_general_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicGeneralEnumTwinRustAsync)>
      sse_decode_list_record_i_32_basic_general_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicGeneralEnumTwinRustAsyncSse)>
      sse_decode_list_record_i_32_basic_general_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicGeneralEnumTwinSse)>
      sse_decode_list_record_i_32_basic_general_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicGeneralEnumTwinSync)>
      sse_decode_list_record_i_32_basic_general_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicGeneralEnumTwinSyncSse)>
      sse_decode_list_record_i_32_basic_general_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicPrimitiveEnumTwinNormal)>
      sse_decode_list_record_i_32_basic_primitive_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicPrimitiveEnumTwinRustAsync)>
      sse_decode_list_record_i_32_basic_primitive_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicPrimitiveEnumTwinRustAsyncSse)>
      sse_decode_list_record_i_32_basic_primitive_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicPrimitiveEnumTwinSse)>
      sse_decode_list_record_i_32_basic_primitive_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicPrimitiveEnumTwinSync)>
      sse_decode_list_record_i_32_basic_primitive_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicPrimitiveEnumTwinSyncSse)>
      sse_decode_list_record_i_32_basic_primitive_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicStructTwinNormal)>
      sse_decode_list_record_i_32_basic_struct_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicStructTwinRustAsync)>
      sse_decode_list_record_i_32_basic_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicStructTwinRustAsyncSse)>
      sse_decode_list_record_i_32_basic_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicStructTwinSse)>
      sse_decode_list_record_i_32_basic_struct_twin_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicStructTwinSync)>
      sse_decode_list_record_i_32_basic_struct_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicStructTwinSyncSse)>
      sse_decode_list_record_i_32_basic_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, bool)> sse_decode_list_record_i_32_bool(
      SseDeserializer deserializer);

  @protected
  List<(int, double)> sse_decode_list_record_i_32_f_32(
      SseDeserializer deserializer);

  @protected
  List<(int, double)> sse_decode_list_record_i_32_f_64(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_i_16(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_i_32(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_i_64(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_i_8(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_isize(
      SseDeserializer deserializer);

  @protected
  List<(int, Uint8List)> sse_decode_list_record_i_32_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  List<(int, String)> sse_decode_list_record_i_32_string(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_u_16(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_u_32(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_u_64(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_u_8(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_usize(
      SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinNormal)>
      sse_decode_list_record_string_enum_simple_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinRustAsync)>
      sse_decode_list_record_string_enum_simple_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinRustAsyncSse)>
      sse_decode_list_record_string_enum_simple_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinSse)>
      sse_decode_list_record_string_enum_simple_twin_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinSync)>
      sse_decode_list_record_string_enum_simple_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinSyncSse)>
      sse_decode_list_record_string_enum_simple_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, HashMapValue)> sse_decode_list_record_string_hash_map_value(
      SseDeserializer deserializer);

  @protected
  List<(String, int)> sse_decode_list_record_string_i_32(
      SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinNormal)>
      sse_decode_list_record_string_kitchen_sink_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinRustAsync)>
      sse_decode_list_record_string_kitchen_sink_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinRustAsyncSse)>
      sse_decode_list_record_string_kitchen_sink_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinSse)>
      sse_decode_list_record_string_kitchen_sink_twin_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinSync)>
      sse_decode_list_record_string_kitchen_sink_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinSyncSse)>
      sse_decode_list_record_string_kitchen_sink_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, Uint8List)> sse_decode_list_record_string_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  List<(String, MySize)> sse_decode_list_record_string_my_size(
      SseDeserializer deserializer);

  @protected
  List<(String, String)> sse_decode_list_record_string_string(
      SseDeserializer deserializer);

  @protected
  List<(int, ApplicationMode)> sse_decode_list_record_u_8_application_mode(
      SseDeserializer deserializer);

  @protected
  List<SimpleStructTwinNormal> sse_decode_list_simple_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<SimpleStructTwinRustAsync> sse_decode_list_simple_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<SimpleStructTwinRustAsyncSse>
      sse_decode_list_simple_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<SimpleStructTwinSse> sse_decode_list_simple_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<SimpleStructTwinSync> sse_decode_list_simple_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<SimpleStructTwinSyncSse> sse_decode_list_simple_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinNormal> sse_decode_list_sum_with_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinRustAsync> sse_decode_list_sum_with_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinRustAsyncSse> sse_decode_list_sum_with_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinSse> sse_decode_list_sum_with_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinSync> sse_decode_list_sum_with_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinSyncSse> sse_decode_list_sum_with_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinNormal> sse_decode_list_test_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinRustAsync> sse_decode_list_test_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinRustAsyncSse> sse_decode_list_test_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinSse> sse_decode_list_test_id_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinSync> sse_decode_list_test_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinSyncSse> sse_decode_list_test_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinNormal> sse_decode_list_weekdays_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinRustAsync> sse_decode_list_weekdays_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinRustAsyncSse> sse_decode_list_weekdays_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSse> sse_decode_list_weekdays_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSync> sse_decode_list_weekdays_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSyncSse> sse_decode_list_weekdays_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  Log2TwinNormal sse_decode_log_2_twin_normal(SseDeserializer deserializer);

  @protected
  Log2TwinRustAsync sse_decode_log_2_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  Log2TwinRustAsyncSse sse_decode_log_2_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  Log2TwinSse sse_decode_log_2_twin_sse(SseDeserializer deserializer);

  @protected
  Log2TwinSync sse_decode_log_2_twin_sync(SseDeserializer deserializer);

  @protected
  Log2TwinSyncSse sse_decode_log_2_twin_sync_sse(SseDeserializer deserializer);

  @protected
  LogTwinNormal sse_decode_log_twin_normal(SseDeserializer deserializer);

  @protected
  LogTwinRustAsync sse_decode_log_twin_rust_async(SseDeserializer deserializer);

  @protected
  LogTwinRustAsyncSse sse_decode_log_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  LogTwinSse sse_decode_log_twin_sse(SseDeserializer deserializer);

  @protected
  MacroStruct sse_decode_macro_struct(SseDeserializer deserializer);

  @protected
  MeasureTwinNormal sse_decode_measure_twin_normal(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsync sse_decode_measure_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsyncSse sse_decode_measure_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSse sse_decode_measure_twin_sse(SseDeserializer deserializer);

  @protected
  MeasureTwinSync sse_decode_measure_twin_sync(SseDeserializer deserializer);

  @protected
  MeasureTwinSyncSse sse_decode_measure_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinNormal sse_decode_message_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinRustAsync sse_decode_message_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinRustAsyncSse sse_decode_message_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinSse sse_decode_message_id_twin_sse(SseDeserializer deserializer);

  @protected
  MessageIdTwinSync sse_decode_message_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinSyncSse sse_decode_message_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinNormal sse_decode_mirror_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinRustAsync sse_decode_mirror_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinRustAsyncSse sse_decode_mirror_struct_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinSse sse_decode_mirror_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinSync sse_decode_mirror_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinSyncSse sse_decode_mirror_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinNormal
      sse_decode_more_than_just_one_raw_string_struct_twin_normal(
          SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinRustAsync
      sse_decode_more_than_just_one_raw_string_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinRustAsyncSse
      sse_decode_more_than_just_one_raw_string_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinSse
      sse_decode_more_than_just_one_raw_string_struct_twin_sse(
          SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinSync
      sse_decode_more_than_just_one_raw_string_struct_twin_sync(
          SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinSyncSse
      sse_decode_more_than_just_one_raw_string_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  MyCallableTwinNormal sse_decode_my_callable_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinRustAsync sse_decode_my_callable_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinRustAsyncSse sse_decode_my_callable_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinSse sse_decode_my_callable_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinSync sse_decode_my_callable_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinSyncSse sse_decode_my_callable_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MyEnum sse_decode_my_enum(SseDeserializer deserializer);

  @protected
  MyNestedStructTwinNormal sse_decode_my_nested_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinRustAsync sse_decode_my_nested_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinRustAsyncSse
      sse_decode_my_nested_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSse sse_decode_my_nested_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSync sse_decode_my_nested_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSyncSse sse_decode_my_nested_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MySize sse_decode_my_size(SseDeserializer deserializer);

  @protected
  MyStreamEntryTwinNormal sse_decode_my_stream_entry_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyStreamEntryTwinRustAsync sse_decode_my_stream_entry_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyStreamEntryTwinRustAsyncSse sse_decode_my_stream_entry_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MyStreamEntryTwinSse sse_decode_my_stream_entry_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyStruct sse_decode_my_struct(SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinNormal sse_decode_my_tree_node_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinRustAsync sse_decode_my_tree_node_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinRustAsyncSse sse_decode_my_tree_node_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSse sse_decode_my_tree_node_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSync sse_decode_my_tree_node_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSyncSse sse_decode_my_tree_node_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  NestedRawStringMirrored sse_decode_nested_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  NewSimpleStruct sse_decode_new_simple_struct(SseDeserializer deserializer);

  @protected
  NewTypeIntTwinNormal sse_decode_new_type_int_twin_normal(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsync sse_decode_new_type_int_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsyncSse sse_decode_new_type_int_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSse sse_decode_new_type_int_twin_sse(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSync sse_decode_new_type_int_twin_sync(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSyncSse sse_decode_new_type_int_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  NoteTwinNormal sse_decode_note_twin_normal(SseDeserializer deserializer);

  @protected
  NoteTwinRustAsync sse_decode_note_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  NoteTwinRustAsyncSse sse_decode_note_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  NoteTwinSse sse_decode_note_twin_sse(SseDeserializer deserializer);

  @protected
  NoteTwinSync sse_decode_note_twin_sync(SseDeserializer deserializer);

  @protected
  NoteTwinSyncSse sse_decode_note_twin_sync_sse(SseDeserializer deserializer);

  @protected
  Numbers sse_decode_numbers(SseDeserializer deserializer);

  @protected
  OldSimpleStruct sse_decode_old_simple_struct(SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinMoi sse_decode_opaque_nested_twin_moi(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinNormal sse_decode_opaque_nested_twin_normal(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsync sse_decode_opaque_nested_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsyncMoi sse_decode_opaque_nested_twin_rust_async_moi(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsyncSse sse_decode_opaque_nested_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsyncSseMoi
      sse_decode_opaque_nested_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSse sse_decode_opaque_nested_twin_sse(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSseMoi sse_decode_opaque_nested_twin_sse_moi(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSync sse_decode_opaque_nested_twin_sync(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSyncMoi sse_decode_opaque_nested_twin_sync_moi(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSyncSse sse_decode_opaque_nested_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSyncSseMoi sse_decode_opaque_nested_twin_sync_sse_moi(
      SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinMoi?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsync?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncMoi?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSseMoi?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncMoi?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSseMoi?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  Duration? sse_decode_opt_box_autoadd_Chrono_Duration(
      SseDeserializer deserializer);

  @protected
  DateTime? sse_decode_opt_box_autoadd_Chrono_Naive(
      SseDeserializer deserializer);

  @protected
  DateTime? sse_decode_opt_box_autoadd_Chrono_Utc(SseDeserializer deserializer);

  @protected
  Object? sse_decode_opt_box_autoadd_DartOpaque(SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinMoi?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(
          SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinNormal?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
          SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinSse?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinSse(
          SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinSseMoi?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  HideDataTwinMoi? sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinNormal? sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinNormal(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsync?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncMoi?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSseMoi?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  HideDataTwinSse? sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinSse(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSseMoi? sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSync? sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinSync(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncMoi?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSse?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSseMoi?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  ApplicationEnv? sse_decode_opt_box_autoadd_application_env(
      SseDeserializer deserializer);

  @protected
  ApplicationMode? sse_decode_opt_box_autoadd_application_mode(
      SseDeserializer deserializer);

  @protected
  AttributeTwinNormal? sse_decode_opt_box_autoadd_attribute_twin_normal(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsync? sse_decode_opt_box_autoadd_attribute_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_attribute_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  AttributeTwinSse? sse_decode_opt_box_autoadd_attribute_twin_sse(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSync? sse_decode_opt_box_autoadd_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSyncSse? sse_decode_opt_box_autoadd_attribute_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinNormal?
      sse_decode_opt_box_autoadd_basic_general_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinRustAsync?
      sse_decode_opt_box_autoadd_basic_general_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_basic_general_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSse?
      sse_decode_opt_box_autoadd_basic_general_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSync?
      sse_decode_opt_box_autoadd_basic_general_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSyncSse?
      sse_decode_opt_box_autoadd_basic_general_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinNormal?
      sse_decode_opt_box_autoadd_basic_primitive_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinRustAsync?
      sse_decode_opt_box_autoadd_basic_primitive_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_basic_primitive_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSse?
      sse_decode_opt_box_autoadd_basic_primitive_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSync?
      sse_decode_opt_box_autoadd_basic_primitive_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSyncSse?
      sse_decode_opt_box_autoadd_basic_primitive_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  BasicStructTwinNormal? sse_decode_opt_box_autoadd_basic_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinRustAsync?
      sse_decode_opt_box_autoadd_basic_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BasicStructTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_basic_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicStructTwinSse? sse_decode_opt_box_autoadd_basic_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinSync? sse_decode_opt_box_autoadd_basic_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinSyncSse? sse_decode_opt_box_autoadd_basic_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  bool? sse_decode_opt_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  ElementTwinNormal? sse_decode_opt_box_autoadd_element_twin_normal(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsync? sse_decode_opt_box_autoadd_element_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_element_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ElementTwinSse? sse_decode_opt_box_autoadd_element_twin_sse(
      SseDeserializer deserializer);

  @protected
  ElementTwinSync? sse_decode_opt_box_autoadd_element_twin_sync(
      SseDeserializer deserializer);

  @protected
  ElementTwinSyncSse? sse_decode_opt_box_autoadd_element_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinNormal?
      sse_decode_opt_box_autoadd_exotic_optionals_twin_normal(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsync?
      sse_decode_opt_box_autoadd_exotic_optionals_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_exotic_optionals_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSse? sse_decode_opt_box_autoadd_exotic_optionals_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSync?
      sse_decode_opt_box_autoadd_exotic_optionals_twin_sync(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSyncSse?
      sse_decode_opt_box_autoadd_exotic_optionals_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  double? sse_decode_opt_box_autoadd_f_32(SseDeserializer deserializer);

  @protected
  double? sse_decode_opt_box_autoadd_f_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_16(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_32(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_8(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_isize(SseDeserializer deserializer);

  @protected
  MeasureTwinNormal? sse_decode_opt_box_autoadd_measure_twin_normal(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsync? sse_decode_opt_box_autoadd_measure_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_measure_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MeasureTwinSse? sse_decode_opt_box_autoadd_measure_twin_sse(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSync? sse_decode_opt_box_autoadd_measure_twin_sync(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSyncSse? sse_decode_opt_box_autoadd_measure_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinNormal? sse_decode_opt_box_autoadd_new_type_int_twin_normal(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsync?
      sse_decode_opt_box_autoadd_new_type_int_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_new_type_int_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSse? sse_decode_opt_box_autoadd_new_type_int_twin_sse(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSync? sse_decode_opt_box_autoadd_new_type_int_twin_sync(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSyncSse? sse_decode_opt_box_autoadd_new_type_int_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  (String, int)? sse_decode_opt_box_autoadd_record_string_i_32(
      SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_16(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_8(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_usize(SseDeserializer deserializer);

  @protected
  WeekdaysTwinNormal? sse_decode_opt_box_autoadd_weekdays_twin_normal(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsync? sse_decode_opt_box_autoadd_weekdays_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_weekdays_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  WeekdaysTwinSse? sse_decode_opt_box_autoadd_weekdays_twin_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSync? sse_decode_opt_box_autoadd_weekdays_twin_sync(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSyncSse? sse_decode_opt_box_autoadd_weekdays_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinNormal?
      sse_decode_opt_box_benchmark_binary_tree_twin_normal(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsync?
      sse_decode_opt_box_benchmark_binary_tree_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse?
      sse_decode_opt_box_benchmark_binary_tree_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSse? sse_decode_opt_box_benchmark_binary_tree_twin_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSync?
      sse_decode_opt_box_benchmark_binary_tree_twin_sync(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSyncSse?
      sse_decode_opt_box_benchmark_binary_tree_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  bool? sse_decode_opt_box_bool(SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinNormal? sse_decode_opt_box_exotic_optionals_twin_normal(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsync?
      sse_decode_opt_box_exotic_optionals_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsyncSse?
      sse_decode_opt_box_exotic_optionals_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSse? sse_decode_opt_box_exotic_optionals_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSync? sse_decode_opt_box_exotic_optionals_twin_sync(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSyncSse? sse_decode_opt_box_exotic_optionals_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  double? sse_decode_opt_box_f_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_i_32(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_i_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_i_8(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_u_8(SseDeserializer deserializer);

  @protected
  List<AttributeTwinNormal>? sse_decode_opt_list_attribute_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsync>? sse_decode_opt_list_attribute_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsyncSse>?
      sse_decode_opt_list_attribute_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinSse>? sse_decode_opt_list_attribute_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSync>? sse_decode_opt_list_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSyncSse>? sse_decode_opt_list_attribute_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinNormal>? sse_decode_opt_list_element_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinRustAsync>? sse_decode_opt_list_element_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinRustAsyncSse>?
      sse_decode_opt_list_element_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<ElementTwinSse>? sse_decode_opt_list_element_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinSync>? sse_decode_opt_list_element_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinSyncSse>? sse_decode_opt_list_element_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinNormal?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsync?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsyncSse?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinSse?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_sse(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinSync?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinSyncSse?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  Float32List? sse_decode_opt_list_prim_f_32_strict(
      SseDeserializer deserializer);

  @protected
  Float64List? sse_decode_opt_list_prim_f_64_strict(
      SseDeserializer deserializer);

  @protected
  Int32List? sse_decode_opt_list_prim_i_32_strict(SseDeserializer deserializer);

  @protected
  Int8List? sse_decode_opt_list_prim_i_8_strict(SseDeserializer deserializer);

  @protected
  Uint8List? sse_decode_opt_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  OptVecsTwinNormal sse_decode_opt_vecs_twin_normal(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinRustAsync sse_decode_opt_vecs_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinRustAsyncSse sse_decode_opt_vecs_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinSse sse_decode_opt_vecs_twin_sse(SseDeserializer deserializer);

  @protected
  OptVecsTwinSync sse_decode_opt_vecs_twin_sync(SseDeserializer deserializer);

  @protected
  OptVecsTwinSyncSse sse_decode_opt_vecs_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  PointTwinNormal sse_decode_point_twin_normal(SseDeserializer deserializer);

  @protected
  PointTwinNormalArray2 sse_decode_point_twin_normal_array_2(
      SseDeserializer deserializer);

  @protected
  PointTwinRustAsync sse_decode_point_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  PointTwinRustAsyncArray2 sse_decode_point_twin_rust_async_array_2(
      SseDeserializer deserializer);

  @protected
  PointTwinRustAsyncSse sse_decode_point_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  PointTwinRustAsyncSseArray2 sse_decode_point_twin_rust_async_sse_array_2(
      SseDeserializer deserializer);

  @protected
  PointTwinSse sse_decode_point_twin_sse(SseDeserializer deserializer);

  @protected
  PointTwinSseArray2 sse_decode_point_twin_sse_array_2(
      SseDeserializer deserializer);

  @protected
  PointTwinSync sse_decode_point_twin_sync(SseDeserializer deserializer);

  @protected
  PointTwinSyncArray2 sse_decode_point_twin_sync_array_2(
      SseDeserializer deserializer);

  @protected
  PointTwinSyncSse sse_decode_point_twin_sync_sse(SseDeserializer deserializer);

  @protected
  PointTwinSyncSseArray2 sse_decode_point_twin_sync_sse_array_2(
      SseDeserializer deserializer);

  @protected
  RawStringEnumMirrored sse_decode_raw_string_enum_mirrored(
      SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinNormal sse_decode_raw_string_item_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinRustAsync
      sse_decode_raw_string_item_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinRustAsyncSse
      sse_decode_raw_string_item_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinSse sse_decode_raw_string_item_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinSync sse_decode_raw_string_item_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinSyncSse
      sse_decode_raw_string_item_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  RawStringMirrored sse_decode_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  (ApplicationSettings, RawStringEnumMirrored)
      sse_decode_record_application_settings_raw_string_enum_mirrored(
          SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinMoi,
    OpaqueTwoTwinMoi
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_moi(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinNormal,
    OpaqueTwoTwinNormal
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_normal_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_normal(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinRustAsync,
    OpaqueTwoTwinRustAsync
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinRustAsyncMoi,
    OpaqueTwoTwinRustAsyncMoi
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_moi(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinRustAsyncSse,
    OpaqueTwoTwinRustAsyncSse
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinRustAsyncSseMoi,
    OpaqueTwoTwinRustAsyncSseMoi
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_sse_moi(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinSse,
    OpaqueTwoTwinSse
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sse(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinSseMoi,
    OpaqueTwoTwinSseMoi
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sse_moi(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinSync,
    OpaqueTwoTwinSync
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinSyncMoi,
    OpaqueTwoTwinSyncMoi
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_moi(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinSyncSse,
    OpaqueTwoTwinSyncSse
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinSyncSseMoi,
    OpaqueTwoTwinSyncSseMoi
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_sse_moi(
      SseDeserializer deserializer);

  @protected
  (int, BasicGeneralEnumTwinNormal)
      sse_decode_record_i_32_basic_general_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  (int, BasicGeneralEnumTwinRustAsync)
      sse_decode_record_i_32_basic_general_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  (int, BasicGeneralEnumTwinRustAsyncSse)
      sse_decode_record_i_32_basic_general_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  (int, BasicGeneralEnumTwinSse)
      sse_decode_record_i_32_basic_general_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  (int, BasicGeneralEnumTwinSync)
      sse_decode_record_i_32_basic_general_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  (int, BasicGeneralEnumTwinSyncSse)
      sse_decode_record_i_32_basic_general_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  (int, BasicPrimitiveEnumTwinNormal)
      sse_decode_record_i_32_basic_primitive_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  (int, BasicPrimitiveEnumTwinRustAsync)
      sse_decode_record_i_32_basic_primitive_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  (int, BasicPrimitiveEnumTwinRustAsyncSse)
      sse_decode_record_i_32_basic_primitive_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  (int, BasicPrimitiveEnumTwinSse)
      sse_decode_record_i_32_basic_primitive_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  (int, BasicPrimitiveEnumTwinSync)
      sse_decode_record_i_32_basic_primitive_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  (int, BasicPrimitiveEnumTwinSyncSse)
      sse_decode_record_i_32_basic_primitive_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  (int, BasicStructTwinNormal) sse_decode_record_i_32_basic_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  (int, BasicStructTwinRustAsync)
      sse_decode_record_i_32_basic_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  (int, BasicStructTwinRustAsyncSse)
      sse_decode_record_i_32_basic_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  (int, BasicStructTwinSse) sse_decode_record_i_32_basic_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  (int, BasicStructTwinSync) sse_decode_record_i_32_basic_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  (int, BasicStructTwinSyncSse)
      sse_decode_record_i_32_basic_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  (int, bool) sse_decode_record_i_32_bool(SseDeserializer deserializer);

  @protected
  (int, double) sse_decode_record_i_32_f_32(SseDeserializer deserializer);

  @protected
  (int, double) sse_decode_record_i_32_f_64(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_i_16(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_i_32(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_i_64(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_i_8(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_isize(SseDeserializer deserializer);

  @protected
  (int, Uint8List) sse_decode_record_i_32_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  (int, String) sse_decode_record_i_32_string(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_u_16(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_u_32(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_u_64(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_u_8(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_usize(SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinNormal)
      sse_decode_record_string_enum_simple_twin_normal(
          SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinRustAsync)
      sse_decode_record_string_enum_simple_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinRustAsyncSse)
      sse_decode_record_string_enum_simple_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinSse) sse_decode_record_string_enum_simple_twin_sse(
      SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinSync) sse_decode_record_string_enum_simple_twin_sync(
      SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinSyncSse)
      sse_decode_record_string_enum_simple_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  (String, HashMapValue) sse_decode_record_string_hash_map_value(
      SseDeserializer deserializer);

  @protected
  (String, int) sse_decode_record_string_i_32(SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinNormal)
      sse_decode_record_string_kitchen_sink_twin_normal(
          SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinRustAsync)
      sse_decode_record_string_kitchen_sink_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinRustAsyncSse)
      sse_decode_record_string_kitchen_sink_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinSse) sse_decode_record_string_kitchen_sink_twin_sse(
      SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinSync) sse_decode_record_string_kitchen_sink_twin_sync(
      SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinSyncSse)
      sse_decode_record_string_kitchen_sink_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  (String, Uint8List) sse_decode_record_string_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  (String, MySize) sse_decode_record_string_my_size(
      SseDeserializer deserializer);

  @protected
  (String, String) sse_decode_record_string_string(
      SseDeserializer deserializer);

  @protected
  (int, ApplicationMode) sse_decode_record_u_8_application_mode(
      SseDeserializer deserializer);

  @protected
  Sequences sse_decode_sequences(SseDeserializer deserializer);

  @protected
  SimpleStructTwinNormal sse_decode_simple_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinRustAsync sse_decode_simple_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinRustAsyncSse sse_decode_simple_struct_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinSse sse_decode_simple_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinSync sse_decode_simple_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinSyncSse sse_decode_simple_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinNormal sse_decode_some_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinRustAsync sse_decode_some_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinRustAsyncSse sse_decode_some_struct_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinSse sse_decode_some_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinSync sse_decode_some_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinSyncSse sse_decode_some_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  SpeedTwinNormal sse_decode_speed_twin_normal(SseDeserializer deserializer);

  @protected
  SpeedTwinRustAsync sse_decode_speed_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SpeedTwinRustAsyncSse sse_decode_speed_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SpeedTwinSse sse_decode_speed_twin_sse(SseDeserializer deserializer);

  @protected
  SpeedTwinSync sse_decode_speed_twin_sync(SseDeserializer deserializer);

  @protected
  SpeedTwinSyncSse sse_decode_speed_twin_sync_sse(SseDeserializer deserializer);

  @protected
  StructInLowerLevel sse_decode_struct_in_lower_level(
      SseDeserializer deserializer);

  @protected
  StructInUpperLevel sse_decode_struct_in_upper_level(
      SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinNormal sse_decode_struct_with_comments_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinRustAsync
      sse_decode_struct_with_comments_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinRustAsyncSse
      sse_decode_struct_with_comments_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSse sse_decode_struct_with_comments_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSync sse_decode_struct_with_comments_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSyncSse sse_decode_struct_with_comments_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinNormal sse_decode_struct_with_enum_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinRustAsync sse_decode_struct_with_enum_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinRustAsyncSse
      sse_decode_struct_with_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSse sse_decode_struct_with_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSync sse_decode_struct_with_enum_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSyncSse sse_decode_struct_with_enum_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinMoi
      sse_decode_struct_with_explicit_auto_opaque_field_twin_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinNormal
      sse_decode_struct_with_explicit_auto_opaque_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsync
      sse_decode_struct_with_explicit_auto_opaque_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi
      sse_decode_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSse
      sse_decode_struct_with_explicit_auto_opaque_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSseMoi
      sse_decode_struct_with_explicit_auto_opaque_field_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSse
      sse_decode_struct_with_explicit_auto_opaque_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSseMoi
      sse_decode_struct_with_explicit_auto_opaque_field_twin_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSync
      sse_decode_struct_with_explicit_auto_opaque_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncMoi
      sse_decode_struct_with_explicit_auto_opaque_field_twin_sync_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSse
      sse_decode_struct_with_explicit_auto_opaque_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSseMoi
      sse_decode_struct_with_explicit_auto_opaque_field_twin_sync_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinMoi
      sse_decode_struct_with_good_and_opaque_field_twin_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      sse_decode_struct_with_good_and_opaque_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsync
      sse_decode_struct_with_good_and_opaque_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncMoi
      sse_decode_struct_with_good_and_opaque_field_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSse
      sse_decode_struct_with_good_and_opaque_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSseMoi
      sse_decode_struct_with_good_and_opaque_field_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      sse_decode_struct_with_good_and_opaque_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSseMoi
      sse_decode_struct_with_good_and_opaque_field_twin_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      sse_decode_struct_with_good_and_opaque_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncMoi
      sse_decode_struct_with_good_and_opaque_field_twin_sync_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      sse_decode_struct_with_good_and_opaque_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSseMoi
      sse_decode_struct_with_good_and_opaque_field_twin_sync_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithHashMap sse_decode_struct_with_hash_map(
      SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinNormal sse_decode_struct_with_one_field_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinRustAsync
      sse_decode_struct_with_one_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinRustAsyncSse
      sse_decode_struct_with_one_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSse sse_decode_struct_with_one_field_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSync sse_decode_struct_with_one_field_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSyncSse sse_decode_struct_with_one_field_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinNormal sse_decode_struct_with_two_field_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinRustAsync
      sse_decode_struct_with_two_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinRustAsyncSse
      sse_decode_struct_with_two_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSse sse_decode_struct_with_two_field_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSync sse_decode_struct_with_two_field_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSyncSse sse_decode_struct_with_two_field_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinNormal sse_decode_struct_with_zero_field_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinRustAsync
      sse_decode_struct_with_zero_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinRustAsyncSse
      sse_decode_struct_with_zero_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSse sse_decode_struct_with_zero_field_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSync sse_decode_struct_with_zero_field_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSyncSse
      sse_decode_struct_with_zero_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  SumWithTwinNormal sse_decode_sum_with_twin_normal(
      SseDeserializer deserializer);

  @protected
  SumWithTwinNormalArray3 sse_decode_sum_with_twin_normal_array_3(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsync sse_decode_sum_with_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsyncArray3 sse_decode_sum_with_twin_rust_async_array_3(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsyncSse sse_decode_sum_with_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsyncSseArray3 sse_decode_sum_with_twin_rust_async_sse_array_3(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSse sse_decode_sum_with_twin_sse(SseDeserializer deserializer);

  @protected
  SumWithTwinSseArray3 sse_decode_sum_with_twin_sse_array_3(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSync sse_decode_sum_with_twin_sync(SseDeserializer deserializer);

  @protected
  SumWithTwinSyncArray3 sse_decode_sum_with_twin_sync_array_3(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSyncSse sse_decode_sum_with_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSyncSseArray3 sse_decode_sum_with_twin_sync_sse_array_3(
      SseDeserializer deserializer);

  @protected
  TestChronoTwinNormal sse_decode_test_chrono_twin_normal(
      SseDeserializer deserializer);

  @protected
  TestChronoTwinRustAsync sse_decode_test_chrono_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  TestChronoTwinRustAsyncSse sse_decode_test_chrono_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  TestChronoTwinSse sse_decode_test_chrono_twin_sse(
      SseDeserializer deserializer);

  @protected
  TestChronoTwinSync sse_decode_test_chrono_twin_sync(
      SseDeserializer deserializer);

  @protected
  TestChronoTwinSyncSse sse_decode_test_chrono_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinNormal sse_decode_test_id_twin_normal(SseDeserializer deserializer);

  @protected
  TestIdTwinNormalArray2 sse_decode_test_id_twin_normal_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinNormalArray4 sse_decode_test_id_twin_normal_array_4(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsync sse_decode_test_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncArray2 sse_decode_test_id_twin_rust_async_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncArray4 sse_decode_test_id_twin_rust_async_array_4(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncSse sse_decode_test_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncSseArray2 sse_decode_test_id_twin_rust_async_sse_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncSseArray4 sse_decode_test_id_twin_rust_async_sse_array_4(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSse sse_decode_test_id_twin_sse(SseDeserializer deserializer);

  @protected
  TestIdTwinSseArray2 sse_decode_test_id_twin_sse_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSseArray4 sse_decode_test_id_twin_sse_array_4(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSync sse_decode_test_id_twin_sync(SseDeserializer deserializer);

  @protected
  TestIdTwinSyncArray2 sse_decode_test_id_twin_sync_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSyncArray4 sse_decode_test_id_twin_sync_array_4(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSyncSse sse_decode_test_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSyncSseArray2 sse_decode_test_id_twin_sync_sse_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSyncSseArray4 sse_decode_test_id_twin_sync_sse_array_4(
      SseDeserializer deserializer);

  @protected
  TestModelTwinNormal sse_decode_test_model_twin_normal(
      SseDeserializer deserializer);

  @protected
  TestModelTwinRustAsync sse_decode_test_model_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  TestModelTwinRustAsyncSse sse_decode_test_model_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  TestModelTwinSse sse_decode_test_model_twin_sse(SseDeserializer deserializer);

  @protected
  TestModelTwinSync sse_decode_test_model_twin_sync(
      SseDeserializer deserializer);

  @protected
  TestModelTwinSyncSse sse_decode_test_model_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinNormal
      sse_decode_tuple_struct_with_one_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinRustAsync
      sse_decode_tuple_struct_with_one_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinRustAsyncSse
      sse_decode_tuple_struct_with_one_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSse
      sse_decode_tuple_struct_with_one_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSync
      sse_decode_tuple_struct_with_one_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSyncSse
      sse_decode_tuple_struct_with_one_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinNormal
      sse_decode_tuple_struct_with_two_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinRustAsync
      sse_decode_tuple_struct_with_two_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinRustAsyncSse
      sse_decode_tuple_struct_with_two_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSse
      sse_decode_tuple_struct_with_two_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSync
      sse_decode_tuple_struct_with_two_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSyncSse
      sse_decode_tuple_struct_with_two_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  U8Array1600 sse_decode_u_8_array_1600(SseDeserializer deserializer);

  @protected
  U8Array2 sse_decode_u_8_array_2(SseDeserializer deserializer);

  @protected
  U8Array32 sse_decode_u_8_array_32(SseDeserializer deserializer);

  @protected
  U8Array5 sse_decode_u_8_array_5(SseDeserializer deserializer);

  @protected
  U8Array8 sse_decode_u_8_array_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  UserIdTwinNormal sse_decode_user_id_twin_normal(SseDeserializer deserializer);

  @protected
  UserIdTwinRustAsync sse_decode_user_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  UserIdTwinRustAsyncSse sse_decode_user_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  UserIdTwinSse sse_decode_user_id_twin_sse(SseDeserializer deserializer);

  @protected
  UserIdTwinSync sse_decode_user_id_twin_sync(SseDeserializer deserializer);

  @protected
  UserIdTwinSyncSse sse_decode_user_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  int sse_decode_usize(SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinNormal sse_decode_vec_of_primitive_pack_twin_normal(
      SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinRustAsync
      sse_decode_vec_of_primitive_pack_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinRustAsyncSse
      sse_decode_vec_of_primitive_pack_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinSse sse_decode_vec_of_primitive_pack_twin_sse(
      SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinSync sse_decode_vec_of_primitive_pack_twin_sync(
      SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinSyncSse sse_decode_vec_of_primitive_pack_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinNormal sse_decode_weekdays_twin_normal(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsync sse_decode_weekdays_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsyncSse sse_decode_weekdays_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSse sse_decode_weekdays_twin_sse(SseDeserializer deserializer);

  @protected
  WeekdaysTwinSync sse_decode_weekdays_twin_sync(SseDeserializer deserializer);

  @protected
  WeekdaysTwinSyncSse sse_decode_weekdays_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  String cst_encode_AnyhowException(AnyhowException raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  String cst_encode_Backtrace(String raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  Object cst_encode_Chrono_Duration(Duration raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_64(raw.inMilliseconds);
  }

  @protected
  Object cst_encode_Chrono_Local(DateTime raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_64(raw.millisecondsSinceEpoch);
  }

  @protected
  Object cst_encode_Chrono_Naive(DateTime raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_64(raw.millisecondsSinceEpoch);
  }

  @protected
  Object cst_encode_Chrono_Utc(DateTime raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_64(raw.millisecondsSinceEpoch);
  }

  @protected
  List<dynamic> cst_encode_DartOpaque_array_1(ObjectArray1 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_DartOpaque(raw);
  }

  @protected
  List<dynamic> cst_encode_Map_String_String(Map<String, String> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_string(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_String_enum_simple_twin_normal(
      Map<String, EnumSimpleTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_enum_simple_twin_normal(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_String_enum_simple_twin_rust_async(
      Map<String, EnumSimpleTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_enum_simple_twin_rust_async(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_String_enum_simple_twin_sync(
      Map<String, EnumSimpleTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_enum_simple_twin_sync(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_String_hash_map_value(
      Map<String, HashMapValue> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_hash_map_value(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_String_kitchen_sink_twin_normal(
      Map<String, KitchenSinkTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_kitchen_sink_twin_normal(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_String_kitchen_sink_twin_rust_async(
      Map<String, KitchenSinkTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_kitchen_sink_twin_rust_async(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_String_kitchen_sink_twin_sync(
      Map<String, KitchenSinkTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_kitchen_sink_twin_sync(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_String_list_prim_u_8_strict(
      Map<String, Uint8List> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_list_prim_u_8_strict(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_String_my_size(Map<String, MySize> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_my_size(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_String(Map<int, String> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_string(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_basic_general_enum_twin_normal(
      Map<int, BasicGeneralEnumTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_general_enum_twin_normal(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_basic_general_enum_twin_rust_async(
      Map<int, BasicGeneralEnumTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_general_enum_twin_rust_async(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_basic_general_enum_twin_sync(
      Map<int, BasicGeneralEnumTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_general_enum_twin_sync(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_basic_primitive_enum_twin_normal(
      Map<int, BasicPrimitiveEnumTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_primitive_enum_twin_normal(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_basic_primitive_enum_twin_rust_async(
      Map<int, BasicPrimitiveEnumTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_primitive_enum_twin_rust_async(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_basic_primitive_enum_twin_sync(
      Map<int, BasicPrimitiveEnumTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_primitive_enum_twin_sync(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_basic_struct_twin_normal(
      Map<int, BasicStructTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_struct_twin_normal(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_basic_struct_twin_rust_async(
      Map<int, BasicStructTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_struct_twin_rust_async(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_basic_struct_twin_sync(
      Map<int, BasicStructTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_struct_twin_sync(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_bool(Map<int, bool> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_bool(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_f_32(Map<int, double> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_f_32(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_f_64(Map<int, double> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_f_64(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_i_16(Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_i_16(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_i_32(Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_i_32(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_i_64(Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_i_64(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_i_8(Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_i_8(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_isize(Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_isize(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_list_prim_u_8_strict(
      Map<int, Uint8List> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_list_prim_u_8_strict(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_u_16(Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_u_16(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_u_32(Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_u_32(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_u_64(Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_u_64(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_u_8(Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_u_8(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_i_32_usize(Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_usize(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_Map_u_8_application_mode(
      Map<int, ApplicationMode> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_u_8_application_mode(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  List<dynamic> cst_encode_RustOpaque_HideDataTwinMoi_array_2(
      HideDataTwinMoiArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_RustOpaque_HideDataTwinMoi(raw);
  }

  @protected
  List<dynamic> cst_encode_RustOpaque_HideDataTwinNormal_array_2(
      HideDataTwinNormalArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_RustOpaque_HideDataTwinNormal(raw);
  }

  @protected
  List<dynamic> cst_encode_RustOpaque_HideDataTwinRustAsyncMoi_array_2(
      HideDataTwinRustAsyncMoiArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_RustOpaque_HideDataTwinRustAsyncMoi(raw);
  }

  @protected
  List<dynamic> cst_encode_RustOpaque_HideDataTwinRustAsync_array_2(
      HideDataTwinRustAsyncArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_RustOpaque_HideDataTwinRustAsync(raw);
  }

  @protected
  List<dynamic> cst_encode_RustOpaque_HideDataTwinSyncMoi_array_2(
      HideDataTwinSyncMoiArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_RustOpaque_HideDataTwinSyncMoi(raw);
  }

  @protected
  List<dynamic> cst_encode_RustOpaque_HideDataTwinSync_array_2(
      HideDataTwinSyncArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_RustOpaque_HideDataTwinSync(raw);
  }

  @protected
  List<dynamic> cst_encode_Set_String(Set<String> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_String(raw.toList());
  }

  @protected
  List<dynamic> cst_encode_Set_application_mode(Set<ApplicationMode> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_application_mode(raw.toList());
  }

  @protected
  Int32List cst_encode_Set_i_32(Set<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_prim_i_32_strict(Int32List.fromList(raw.toList()));
  }

  @protected
  String cst_encode_String(String raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  Uint8List cst_encode_Uuid(UuidValue raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_prim_u_8_strict(raw.toBytes());
  }

  @protected
  List<dynamic> cst_encode_a_twin_normal(ATwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.a)];
  }

  @protected
  List<dynamic> cst_encode_a_twin_rust_async(ATwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.a)];
  }

  @protected
  List<dynamic> cst_encode_a_twin_sync(ATwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.a)];
  }

  @protected
  List<dynamic> cst_encode_abc_twin_normal(AbcTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is AbcTwinNormal_A) {
      return [0, cst_encode_box_autoadd_a_twin_normal(raw.field0)];
    }
    if (raw is AbcTwinNormal_B) {
      return [1, cst_encode_box_autoadd_b_twin_normal(raw.field0)];
    }
    if (raw is AbcTwinNormal_C) {
      return [2, cst_encode_box_autoadd_c_twin_normal(raw.field0)];
    }
    if (raw is AbcTwinNormal_JustInt) {
      return [3, cst_encode_i_32(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_abc_twin_rust_async(AbcTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is AbcTwinRustAsync_A) {
      return [0, cst_encode_box_autoadd_a_twin_rust_async(raw.field0)];
    }
    if (raw is AbcTwinRustAsync_B) {
      return [1, cst_encode_box_autoadd_b_twin_rust_async(raw.field0)];
    }
    if (raw is AbcTwinRustAsync_C) {
      return [2, cst_encode_box_autoadd_c_twin_rust_async(raw.field0)];
    }
    if (raw is AbcTwinRustAsync_JustInt) {
      return [3, cst_encode_i_32(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_abc_twin_sync(AbcTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is AbcTwinSync_A) {
      return [0, cst_encode_box_autoadd_a_twin_sync(raw.field0)];
    }
    if (raw is AbcTwinSync_B) {
      return [1, cst_encode_box_autoadd_b_twin_sync(raw.field0)];
    }
    if (raw is AbcTwinSync_C) {
      return [2, cst_encode_box_autoadd_c_twin_sync(raw.field0)];
    }
    if (raw is AbcTwinSync_JustInt) {
      return [3, cst_encode_i_32(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_another_macro_struct_twin_normal(
      AnotherMacroStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.data), cst_encode_i_32(raw.nonFinalData)];
  }

  @protected
  List<dynamic> cst_encode_another_twin_normal(AnotherTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.a)];
  }

  @protected
  List<dynamic> cst_encode_another_twin_rust_async(AnotherTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.a)];
  }

  @protected
  List<dynamic> cst_encode_another_twin_sync(AnotherTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.a)];
  }

  @protected
  List<dynamic> cst_encode_application_env(ApplicationEnv raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_list_application_env_var(raw.vars)];
  }

  @protected
  List<dynamic> cst_encode_application_env_var(ApplicationEnvVar raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.field0), cst_encode_bool(raw.field1)];
  }

  @protected
  List<dynamic> cst_encode_application_message(ApplicationMessage raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is ApplicationMessage_DisplayMessage) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is ApplicationMessage_RenderPixel) {
      return [1, cst_encode_i_32(raw.x), cst_encode_i_32(raw.y)];
    }
    if (raw is ApplicationMessage_Exit) {
      return [2];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_application_mode_array_2(ApplicationModeArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_application_mode(raw);
  }

  @protected
  List<dynamic> cst_encode_application_settings(ApplicationSettings raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.name),
      cst_encode_String(raw.version),
      cst_encode_application_mode(raw.mode),
      cst_encode_box_application_env(raw.env),
      cst_encode_opt_box_autoadd_application_env(raw.envOptional)
    ];
  }

  @protected
  List<dynamic> cst_encode_attribute_twin_normal(AttributeTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.key), cst_encode_String(raw.value)];
  }

  @protected
  List<dynamic> cst_encode_attribute_twin_rust_async(
      AttributeTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.key), cst_encode_String(raw.value)];
  }

  @protected
  List<dynamic> cst_encode_attribute_twin_sync(AttributeTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.key), cst_encode_String(raw.value)];
  }

  @protected
  List<dynamic> cst_encode_b_twin_normal(BTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.b)];
  }

  @protected
  List<dynamic> cst_encode_b_twin_rust_async(BTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.b)];
  }

  @protected
  List<dynamic> cst_encode_b_twin_sync(BTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.b)];
  }

  @protected
  List<dynamic> cst_encode_basic_general_enum_twin_normal(
      BasicGeneralEnumTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is BasicGeneralEnumTwinNormal_Apple) {
      return [0, cst_encode_String(raw.field)];
    }
    if (raw is BasicGeneralEnumTwinNormal_Orange) {
      return [1];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_basic_general_enum_twin_rust_async(
      BasicGeneralEnumTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is BasicGeneralEnumTwinRustAsync_Apple) {
      return [0, cst_encode_String(raw.field)];
    }
    if (raw is BasicGeneralEnumTwinRustAsync_Orange) {
      return [1];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_basic_general_enum_twin_sync(
      BasicGeneralEnumTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is BasicGeneralEnumTwinSync_Apple) {
      return [0, cst_encode_String(raw.field)];
    }
    if (raw is BasicGeneralEnumTwinSync_Orange) {
      return [1];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_basic_struct_twin_normal(BasicStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_opt_String(raw.apple),
      cst_encode_opt_box_autoadd_i_32(raw.orange)
    ];
  }

  @protected
  List<dynamic> cst_encode_basic_struct_twin_rust_async(
      BasicStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_opt_String(raw.apple),
      cst_encode_opt_box_autoadd_i_32(raw.orange)
    ];
  }

  @protected
  List<dynamic> cst_encode_basic_struct_twin_sync(BasicStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_opt_String(raw.apple),
      cst_encode_opt_box_autoadd_i_32(raw.orange)
    ];
  }

  @protected
  List<dynamic> cst_encode_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.name),
      cst_encode_opt_box_benchmark_binary_tree_twin_normal(raw.left),
      cst_encode_opt_box_benchmark_binary_tree_twin_normal(raw.right)
    ];
  }

  @protected
  List<dynamic> cst_encode_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.name),
      cst_encode_opt_box_benchmark_binary_tree_twin_rust_async(raw.left),
      cst_encode_opt_box_benchmark_binary_tree_twin_rust_async(raw.right)
    ];
  }

  @protected
  List<dynamic> cst_encode_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.name),
      cst_encode_opt_box_benchmark_binary_tree_twin_sync(raw.left),
      cst_encode_opt_box_benchmark_binary_tree_twin_sync(raw.right)
    ];
  }

  @protected
  List<dynamic> cst_encode_benchmark_blob_twin_normal(
      BenchmarkBlobTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_list_prim_u_8_strict(raw.first),
      cst_encode_list_prim_u_8_strict(raw.second),
      cst_encode_list_prim_u_8_strict(raw.third)
    ];
  }

  @protected
  List<dynamic> cst_encode_benchmark_blob_twin_rust_async(
      BenchmarkBlobTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_list_prim_u_8_strict(raw.first),
      cst_encode_list_prim_u_8_strict(raw.second),
      cst_encode_list_prim_u_8_strict(raw.third)
    ];
  }

  @protected
  List<dynamic> cst_encode_benchmark_blob_twin_sync(BenchmarkBlobTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_list_prim_u_8_strict(raw.first),
      cst_encode_list_prim_u_8_strict(raw.second),
      cst_encode_list_prim_u_8_strict(raw.third)
    ];
  }

  @protected
  List<dynamic> cst_encode_big_buffers_twin_normal(BigBuffersTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_list_prim_i_64_strict(raw.int64),
      cst_encode_list_prim_u_64_strict(raw.uint64)
    ];
  }

  @protected
  List<dynamic> cst_encode_big_buffers_twin_rust_async(
      BigBuffersTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_list_prim_i_64_strict(raw.int64),
      cst_encode_list_prim_u_64_strict(raw.uint64)
    ];
  }

  @protected
  List<dynamic> cst_encode_big_buffers_twin_sync(BigBuffersTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_list_prim_i_64_strict(raw.int64),
      cst_encode_list_prim_u_64_strict(raw.uint64)
    ];
  }

  @protected
  List<dynamic> cst_encode_blob_twin_normal(BlobTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_8_array_1600(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_blob_twin_rust_async(BlobTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_8_array_1600(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_blob_twin_sync(BlobTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_8_array_1600(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_box_application_env(ApplicationEnv raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_application_env(raw);
  }

  @protected
  Object
      cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
        raw);
  }

  @protected
  Object
      cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
        raw);
  }

  @protected
  Object
      cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
        raw);
  }

  @protected
  Object
      cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
        raw);
  }

  @protected
  Object
      cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
        raw);
  }

  @protected
  Object
      cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
        raw);
  }

  @protected
  Object cst_encode_box_autoadd_Chrono_Duration(Duration raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_Chrono_Duration(raw);
  }

  @protected
  Object cst_encode_box_autoadd_Chrono_Naive(DateTime raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_Chrono_Naive(raw);
  }

  @protected
  Object cst_encode_box_autoadd_Chrono_Utc(DateTime raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_Chrono_Utc(raw);
  }

  @protected
  PlatformPointer cst_encode_box_autoadd_DartOpaque(Object raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_DartOpaque(raw);
  }

  @protected
  Object cst_encode_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(
      HideDataAnotherTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_RustOpaque_HideDataAnotherTwinMoi(raw);
  }

  @protected
  Object cst_encode_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
      HideDataAnotherTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_RustOpaque_HideDataAnotherTwinNormal(raw);
  }

  @protected
  Object cst_encode_box_autoadd_RustOpaque_HideDataTwinMoi(
      HideDataTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_RustOpaque_HideDataTwinMoi(raw);
  }

  @protected
  Object cst_encode_box_autoadd_RustOpaque_HideDataTwinNormal(
      HideDataTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_RustOpaque_HideDataTwinNormal(raw);
  }

  @protected
  Object cst_encode_box_autoadd_RustOpaque_HideDataTwinRustAsync(
      HideDataTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_RustOpaque_HideDataTwinRustAsync(raw);
  }

  @protected
  Object cst_encode_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
      HideDataTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_RustOpaque_HideDataTwinRustAsyncMoi(raw);
  }

  @protected
  Object cst_encode_box_autoadd_RustOpaque_HideDataTwinSync(
      HideDataTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_RustOpaque_HideDataTwinSync(raw);
  }

  @protected
  Object cst_encode_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
      HideDataTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_RustOpaque_HideDataTwinSyncMoi(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_a_twin_normal(ATwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_a_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_a_twin_rust_async(ATwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_a_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_a_twin_sync(ATwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_a_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_abc_twin_normal(AbcTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_abc_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_abc_twin_rust_async(
      AbcTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_abc_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_abc_twin_sync(AbcTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_abc_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_application_env(ApplicationEnv raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_application_env(raw);
  }

  @protected
  int cst_encode_box_autoadd_application_mode(ApplicationMode raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_application_mode(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_application_settings(
      ApplicationSettings raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_application_settings(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_attribute_twin_normal(
      AttributeTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_attribute_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_attribute_twin_rust_async(
      AttributeTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_attribute_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_attribute_twin_sync(
      AttributeTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_attribute_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_b_twin_normal(BTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_b_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_b_twin_rust_async(BTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_b_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_b_twin_sync(BTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_b_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_basic_general_enum_twin_normal(
      BasicGeneralEnumTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_basic_general_enum_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_basic_general_enum_twin_rust_async(
      BasicGeneralEnumTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_basic_general_enum_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_basic_general_enum_twin_sync(
      BasicGeneralEnumTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_basic_general_enum_twin_sync(raw);
  }

  @protected
  int cst_encode_box_autoadd_basic_primitive_enum_twin_normal(
      BasicPrimitiveEnumTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_basic_primitive_enum_twin_normal(raw);
  }

  @protected
  int cst_encode_box_autoadd_basic_primitive_enum_twin_rust_async(
      BasicPrimitiveEnumTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_basic_primitive_enum_twin_rust_async(raw);
  }

  @protected
  int cst_encode_box_autoadd_basic_primitive_enum_twin_sync(
      BasicPrimitiveEnumTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_basic_primitive_enum_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_basic_struct_twin_normal(
      BasicStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_basic_struct_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_basic_struct_twin_rust_async(
      BasicStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_basic_struct_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_basic_struct_twin_sync(
      BasicStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_basic_struct_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_benchmark_binary_tree_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_benchmark_binary_tree_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_benchmark_binary_tree_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_benchmark_blob_twin_normal(
      BenchmarkBlobTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_benchmark_blob_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_benchmark_blob_twin_rust_async(
      BenchmarkBlobTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_benchmark_blob_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_benchmark_blob_twin_sync(
      BenchmarkBlobTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_benchmark_blob_twin_sync(raw);
  }

  @protected
  bool cst_encode_box_autoadd_bool(bool raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_bool(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_c_twin_normal(CTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_c_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_c_twin_rust_async(CTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_c_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_c_twin_sync(CTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_c_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_concatenate_with_twin_normal(
      ConcatenateWithTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_concatenate_with_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_concatenate_with_twin_rust_async(
      ConcatenateWithTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_concatenate_with_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_concatenate_with_twin_sync(
      ConcatenateWithTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_concatenate_with_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_custom_nested_error_2_twin_normal(
      CustomNestedError2TwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_custom_nested_error_2_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_custom_nested_error_2_twin_rust_async(
      CustomNestedError2TwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_custom_nested_error_2_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_custom_nested_error_2_twin_sync(
      CustomNestedError2TwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_custom_nested_error_2_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_custom_nested_error_inner_twin_normal(
      CustomNestedErrorInnerTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_custom_nested_error_inner_twin_normal(raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_custom_nested_error_inner_twin_rust_async(
          CustomNestedErrorInnerTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_custom_nested_error_inner_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_custom_nested_error_inner_twin_sync(
      CustomNestedErrorInnerTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_custom_nested_error_inner_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_custom_nested_error_outer_twin_normal(
      CustomNestedErrorOuterTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_custom_nested_error_outer_twin_normal(raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_custom_nested_error_outer_twin_rust_async(
          CustomNestedErrorOuterTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_custom_nested_error_outer_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_custom_nested_error_outer_twin_sync(
      CustomNestedErrorOuterTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_custom_nested_error_outer_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_custom_struct_error_twin_normal(
      CustomStructErrorTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_custom_struct_error_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_custom_struct_error_twin_rust_async(
      CustomStructErrorTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_custom_struct_error_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_custom_struct_error_twin_sync(
      CustomStructErrorTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_custom_struct_error_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_custom_struct_twin_normal(
      CustomStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_custom_struct_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_custom_struct_twin_rust_async(
      CustomStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_custom_struct_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_custom_struct_twin_sync(
      CustomStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_custom_struct_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_customized_twin_normal(
      CustomizedTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_customized_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_customized_twin_rust_async(
      CustomizedTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_customized_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_customized_twin_sync(
      CustomizedTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_customized_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_dart_opaque_nested_twin_normal(
      DartOpaqueNestedTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_dart_opaque_nested_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_dart_opaque_nested_twin_rust_async(
      DartOpaqueNestedTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_dart_opaque_nested_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_dart_opaque_nested_twin_sync(
      DartOpaqueNestedTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_dart_opaque_nested_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_element_twin_normal(
      ElementTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_element_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_element_twin_rust_async(
      ElementTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_element_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_element_twin_sync(ElementTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_element_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_empty_twin_normal(EmptyTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_empty_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_empty_twin_rust_async(
      EmptyTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_empty_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_empty_twin_sync(EmptyTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_empty_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_dart_opaque_twin_normal(
      EnumDartOpaqueTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_dart_opaque_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_dart_opaque_twin_rust_async(
      EnumDartOpaqueTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_dart_opaque_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_dart_opaque_twin_sync(
      EnumDartOpaqueTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_dart_opaque_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_opaque_twin_moi(
      EnumOpaqueTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_opaque_twin_moi(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_opaque_twin_normal(
      EnumOpaqueTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_opaque_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_opaque_twin_rust_async(
      EnumOpaqueTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_opaque_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_opaque_twin_rust_async_moi(
      EnumOpaqueTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_opaque_twin_rust_async_moi(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_opaque_twin_sync(
      EnumOpaqueTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_opaque_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_opaque_twin_sync_moi(
      EnumOpaqueTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_opaque_twin_sync_moi(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_with_good_and_opaque_twin_moi(
      EnumWithGoodAndOpaqueTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_with_good_and_opaque_twin_moi(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_with_good_and_opaque_twin_normal(
      EnumWithGoodAndOpaqueTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_with_good_and_opaque_twin_normal(raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_enum_with_good_and_opaque_twin_rust_async(
          EnumWithGoodAndOpaqueTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_with_good_and_opaque_twin_rust_async(raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moi(
          EnumWithGoodAndOpaqueTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_with_good_and_opaque_twin_rust_async_moi(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_with_good_and_opaque_twin_sync(
      EnumWithGoodAndOpaqueTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_with_good_and_opaque_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_with_good_and_opaque_twin_sync_moi(
      EnumWithGoodAndOpaqueTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_with_good_and_opaque_twin_sync_moi(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_with_item_mixed_twin_normal(
      EnumWithItemMixedTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_with_item_mixed_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_with_item_mixed_twin_rust_async(
      EnumWithItemMixedTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_with_item_mixed_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_with_item_mixed_twin_sync(
      EnumWithItemMixedTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_with_item_mixed_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_with_item_struct_twin_normal(
      EnumWithItemStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_with_item_struct_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_with_item_struct_twin_rust_async(
      EnumWithItemStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_with_item_struct_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_with_item_struct_twin_sync(
      EnumWithItemStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_with_item_struct_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_with_item_tuple_twin_normal(
      EnumWithItemTupleTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_with_item_tuple_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_with_item_tuple_twin_rust_async(
      EnumWithItemTupleTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_with_item_tuple_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_enum_with_item_tuple_twin_sync(
      EnumWithItemTupleTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_enum_with_item_tuple_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_event_twin_normal(EventTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_event_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_event_twin_rust_async(
      EventTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_event_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_exotic_optionals_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_exotic_optionals_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_exotic_optionals_twin_sync(raw);
  }

  @protected
  double cst_encode_box_autoadd_f_32(double raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_f_32(raw);
  }

  @protected
  double cst_encode_box_autoadd_f_64(double raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_f_64(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_feature_chrono_twin_normal(
      FeatureChronoTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_feature_chrono_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_feature_chrono_twin_rust_async(
      FeatureChronoTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_feature_chrono_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_feature_chrono_twin_sync(
      FeatureChronoTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_feature_chrono_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_feature_uuid_twin_normal(
      FeatureUuidTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_feature_uuid_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_feature_uuid_twin_rust_async(
      FeatureUuidTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_feature_uuid_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_feature_uuid_twin_sync(
      FeatureUuidTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_feature_uuid_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_feed_id_twin_normal(
      FeedIdTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_feed_id_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_feed_id_twin_rust_async(
      FeedIdTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_feed_id_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_feed_id_twin_sync(FeedIdTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_feed_id_twin_sync(raw);
  }

  @protected
  int cst_encode_box_autoadd_i_16(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_16(raw);
  }

  @protected
  int cst_encode_box_autoadd_i_32(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_32(raw);
  }

  @protected
  Object cst_encode_box_autoadd_i_64(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_64(raw);
  }

  @protected
  int cst_encode_box_autoadd_i_8(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_8(raw);
  }

  @protected
  int cst_encode_box_autoadd_isize(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_isize(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_kitchen_sink_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_kitchen_sink_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_kitchen_sink_twin_sync(
      KitchenSinkTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_kitchen_sink_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_list_of_nested_raw_string_mirrored(
      ListOfNestedRawStringMirrored raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_of_nested_raw_string_mirrored(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_macro_struct(MacroStruct raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_macro_struct(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_measure_twin_normal(
      MeasureTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_measure_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_measure_twin_rust_async(
      MeasureTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_measure_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_measure_twin_sync(MeasureTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_measure_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_message_id_twin_normal(
      MessageIdTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_message_id_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_message_id_twin_rust_async(
      MessageIdTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_message_id_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_message_id_twin_sync(
      MessageIdTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_message_id_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_my_callable_twin_normal(
      MyCallableTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_my_callable_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_my_callable_twin_rust_async(
      MyCallableTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_my_callable_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_my_callable_twin_sync(
      MyCallableTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_my_callable_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_my_nested_struct_twin_normal(
      MyNestedStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_my_nested_struct_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_my_nested_struct_twin_rust_async(
      MyNestedStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_my_nested_struct_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_my_nested_struct_twin_sync(
      MyNestedStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_my_nested_struct_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_my_size(MySize raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_my_size(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_my_struct(MyStruct raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_my_struct(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_my_tree_node_twin_normal(
      MyTreeNodeTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_my_tree_node_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_my_tree_node_twin_rust_async(
      MyTreeNodeTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_my_tree_node_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_my_tree_node_twin_sync(
      MyTreeNodeTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_my_tree_node_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_nested_raw_string_mirrored(
      NestedRawStringMirrored raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_nested_raw_string_mirrored(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_new_type_int_twin_normal(
      NewTypeIntTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_new_type_int_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_new_type_int_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_new_type_int_twin_sync(
      NewTypeIntTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_new_type_int_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_note_twin_normal(NoteTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_note_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_note_twin_rust_async(
      NoteTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_note_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_note_twin_sync(NoteTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_note_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_numbers(Numbers raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_numbers(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_opaque_nested_twin_moi(
      OpaqueNestedTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_opaque_nested_twin_moi(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_opaque_nested_twin_normal(
      OpaqueNestedTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_opaque_nested_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_opaque_nested_twin_rust_async(
      OpaqueNestedTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_opaque_nested_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_opaque_nested_twin_rust_async_moi(
      OpaqueNestedTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_opaque_nested_twin_rust_async_moi(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_opaque_nested_twin_sync(
      OpaqueNestedTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_opaque_nested_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_opaque_nested_twin_sync_moi(
      OpaqueNestedTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_opaque_nested_twin_sync_moi(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_opt_vecs_twin_normal(
      OptVecsTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_opt_vecs_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_opt_vecs_twin_rust_async(
      OptVecsTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_opt_vecs_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_opt_vecs_twin_sync(OptVecsTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_opt_vecs_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_raw_string_mirrored(
      RawStringMirrored raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_raw_string_mirrored(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_record_string_i_32((String, int) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_record_string_i_32(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_sequences(Sequences raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_sequences(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_simple_struct_twin_normal(
      SimpleStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_simple_struct_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_simple_struct_twin_rust_async(
      SimpleStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_simple_struct_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_simple_struct_twin_sync(
      SimpleStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_simple_struct_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_some_struct_twin_normal(
      SomeStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_some_struct_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_some_struct_twin_rust_async(
      SomeStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_some_struct_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_some_struct_twin_sync(
      SomeStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_some_struct_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_in_lower_level(
      StructInLowerLevel raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_in_lower_level(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_with_comments_twin_normal(
      StructWithCommentsTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_comments_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_with_comments_twin_rust_async(
      StructWithCommentsTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_comments_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_with_comments_twin_sync(
      StructWithCommentsTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_comments_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_with_enum_twin_normal(
      StructWithEnumTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_enum_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_with_enum_twin_rust_async(
      StructWithEnumTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_enum_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_with_enum_twin_sync(
      StructWithEnumTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_enum_twin_sync(raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moi(
          StructWithExplicitAutoOpaqueFieldTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_explicit_auto_opaque_field_twin_moi(raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normal(
          StructWithExplicitAutoOpaqueFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_explicit_auto_opaque_field_twin_normal(raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async(
          StructWithExplicitAutoOpaqueFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_explicit_auto_opaque_field_twin_rust_async(
        raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
          StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
        raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync(
          StructWithExplicitAutoOpaqueFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_explicit_auto_opaque_field_twin_sync(raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moi(
          StructWithExplicitAutoOpaqueFieldTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_explicit_auto_opaque_field_twin_sync_moi(raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_struct_with_good_and_opaque_field_twin_moi(
          StructWithGoodAndOpaqueFieldTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_good_and_opaque_field_twin_moi(raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_struct_with_good_and_opaque_field_twin_normal(
          StructWithGoodAndOpaqueFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_good_and_opaque_field_twin_normal(raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async(
          StructWithGoodAndOpaqueFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_good_and_opaque_field_twin_rust_async(raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moi(
          StructWithGoodAndOpaqueFieldTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_good_and_opaque_field_twin_rust_async_moi(
        raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sync(
          StructWithGoodAndOpaqueFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_good_and_opaque_field_twin_sync(raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moi(
          StructWithGoodAndOpaqueFieldTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_good_and_opaque_field_twin_sync_moi(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_with_one_field_twin_normal(
      StructWithOneFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_one_field_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_with_one_field_twin_rust_async(
      StructWithOneFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_one_field_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_with_one_field_twin_sync(
      StructWithOneFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_one_field_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_with_two_field_twin_normal(
      StructWithTwoFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_two_field_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_with_two_field_twin_rust_async(
      StructWithTwoFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_two_field_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_with_two_field_twin_sync(
      StructWithTwoFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_two_field_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_with_zero_field_twin_normal(
      StructWithZeroFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_zero_field_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_with_zero_field_twin_rust_async(
      StructWithZeroFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_zero_field_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_struct_with_zero_field_twin_sync(
      StructWithZeroFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_struct_with_zero_field_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_sum_with_twin_normal(
      SumWithTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_sum_with_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_sum_with_twin_rust_async(
      SumWithTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_sum_with_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_sum_with_twin_sync(SumWithTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_sum_with_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_test_id_twin_normal(
      TestIdTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_test_id_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_test_id_twin_rust_async(
      TestIdTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_test_id_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_test_id_twin_sync(TestIdTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_test_id_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_tuple_struct_with_one_field_twin_normal(
      TupleStructWithOneFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_tuple_struct_with_one_field_twin_normal(raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_tuple_struct_with_one_field_twin_rust_async(
          TupleStructWithOneFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_tuple_struct_with_one_field_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_tuple_struct_with_one_field_twin_sync(
      TupleStructWithOneFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_tuple_struct_with_one_field_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_tuple_struct_with_two_field_twin_normal(
      TupleStructWithTwoFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_tuple_struct_with_two_field_twin_normal(raw);
  }

  @protected
  List<dynamic>
      cst_encode_box_autoadd_tuple_struct_with_two_field_twin_rust_async(
          TupleStructWithTwoFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_tuple_struct_with_two_field_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_tuple_struct_with_two_field_twin_sync(
      TupleStructWithTwoFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_tuple_struct_with_two_field_twin_sync(raw);
  }

  @protected
  int cst_encode_box_autoadd_u_16(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_u_16(raw);
  }

  @protected
  int cst_encode_box_autoadd_u_32(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_u_32(raw);
  }

  @protected
  Object cst_encode_box_autoadd_u_64(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_u_64(raw);
  }

  @protected
  int cst_encode_box_autoadd_u_8(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_u_8(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_user_id_twin_normal(
      UserIdTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_user_id_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_user_id_twin_rust_async(
      UserIdTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_user_id_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_autoadd_user_id_twin_sync(UserIdTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_user_id_twin_sync(raw);
  }

  @protected
  int cst_encode_box_autoadd_usize(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_usize(raw);
  }

  @protected
  int cst_encode_box_autoadd_weekdays_twin_normal(WeekdaysTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_weekdays_twin_normal(raw);
  }

  @protected
  int cst_encode_box_autoadd_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_weekdays_twin_rust_async(raw);
  }

  @protected
  int cst_encode_box_autoadd_weekdays_twin_sync(WeekdaysTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_weekdays_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_benchmark_binary_tree_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_benchmark_binary_tree_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_benchmark_binary_tree_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_blob_twin_normal(BlobTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_blob_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_blob_twin_rust_async(BlobTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_blob_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_blob_twin_sync(BlobTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_blob_twin_sync(raw);
  }

  @protected
  bool cst_encode_box_bool(bool raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_bool(raw);
  }

  @protected
  List<dynamic> cst_encode_box_distance_twin_normal(DistanceTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_distance_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_distance_twin_rust_async(
      DistanceTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_distance_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_distance_twin_sync(DistanceTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_distance_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_exotic_optionals_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_exotic_optionals_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_exotic_optionals_twin_sync(raw);
  }

  @protected
  double cst_encode_box_f_64(double raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_f_64(raw);
  }

  @protected
  List<dynamic> cst_encode_box_feed_id_twin_normal(FeedIdTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_feed_id_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_feed_id_twin_rust_async(
      FeedIdTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_feed_id_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_feed_id_twin_sync(FeedIdTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_feed_id_twin_sync(raw);
  }

  @protected
  int cst_encode_box_i_32(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_32(raw);
  }

  @protected
  Object cst_encode_box_i_64(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_64(raw);
  }

  @protected
  int cst_encode_box_i_8(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_8(raw);
  }

  @protected
  List<dynamic> cst_encode_box_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_kitchen_sink_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_kitchen_sink_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_kitchen_sink_twin_sync(KitchenSinkTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_kitchen_sink_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_box_my_size(MySize raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_my_size(raw);
  }

  @protected
  List<dynamic> cst_encode_box_speed_twin_normal(SpeedTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_speed_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_box_speed_twin_rust_async(SpeedTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_speed_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_box_speed_twin_sync(SpeedTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_speed_twin_sync(raw);
  }

  @protected
  int cst_encode_box_u_8(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_u_8(raw);
  }

  @protected
  Uint8List cst_encode_box_u_8_array_1600(U8Array1600 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_u_8_array_1600(raw);
  }

  @protected
  Uint8List cst_encode_box_u_8_array_8(U8Array8 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_u_8_array_8(raw);
  }

  @protected
  int cst_encode_box_weekdays_twin_normal(WeekdaysTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_weekdays_twin_normal(raw);
  }

  @protected
  int cst_encode_box_weekdays_twin_rust_async(WeekdaysTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_weekdays_twin_rust_async(raw);
  }

  @protected
  int cst_encode_box_weekdays_twin_sync(WeekdaysTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_weekdays_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_c_twin_normal(CTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_bool(raw.c)];
  }

  @protected
  List<dynamic> cst_encode_c_twin_rust_async(CTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_bool(raw.c)];
  }

  @protected
  List<dynamic> cst_encode_c_twin_sync(CTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_bool(raw.c)];
  }

  @protected
  List<dynamic> cst_encode_concatenate_with_twin_normal(
      ConcatenateWithTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.a)];
  }

  @protected
  List<dynamic> cst_encode_concatenate_with_twin_rust_async(
      ConcatenateWithTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.a)];
  }

  @protected
  List<dynamic> cst_encode_concatenate_with_twin_sync(
      ConcatenateWithTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.a)];
  }

  @protected
  List<dynamic> cst_encode_constructor_translatable_struct_twin_normal(
      ConstructorTranslatableStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.one)];
  }

  @protected
  List<dynamic> cst_encode_constructor_translatable_sync_struct_twin_normal(
      ConstructorTranslatableSyncStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.one)];
  }

  @protected
  List<dynamic> cst_encode_contains_mirrored_sub_struct_twin_normal(
      ContainsMirroredSubStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_raw_string_mirrored(raw.test),
      cst_encode_another_twin_normal(raw.test2)
    ];
  }

  @protected
  List<dynamic> cst_encode_contains_mirrored_sub_struct_twin_rust_async(
      ContainsMirroredSubStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_raw_string_mirrored(raw.test),
      cst_encode_another_twin_rust_async(raw.test2)
    ];
  }

  @protected
  List<dynamic> cst_encode_contains_mirrored_sub_struct_twin_sync(
      ContainsMirroredSubStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_raw_string_mirrored(raw.test),
      cst_encode_another_twin_sync(raw.test2)
    ];
  }

  @protected
  List<dynamic> cst_encode_custom_enum_error_twin_normal(
      CustomEnumErrorTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomEnumErrorTwinNormal_One) {
      return [
        0,
        cst_encode_String(raw.message),
        cst_encode_Backtrace(raw.backtrace)
      ];
    }
    if (raw is CustomEnumErrorTwinNormal_Two) {
      return [
        1,
        cst_encode_u_32(raw.message),
        cst_encode_Backtrace(raw.backtrace)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_enum_error_twin_rust_async(
      CustomEnumErrorTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomEnumErrorTwinRustAsync_One) {
      return [
        0,
        cst_encode_String(raw.message),
        cst_encode_Backtrace(raw.backtrace)
      ];
    }
    if (raw is CustomEnumErrorTwinRustAsync_Two) {
      return [
        1,
        cst_encode_u_32(raw.message),
        cst_encode_Backtrace(raw.backtrace)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_enum_error_twin_sync(
      CustomEnumErrorTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomEnumErrorTwinSync_One) {
      return [
        0,
        cst_encode_String(raw.message),
        cst_encode_Backtrace(raw.backtrace)
      ];
    }
    if (raw is CustomEnumErrorTwinSync_Two) {
      return [
        1,
        cst_encode_u_32(raw.message),
        cst_encode_Backtrace(raw.backtrace)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_error_twin_normal(CustomErrorTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomErrorTwinNormal_Error0) {
      return [0, cst_encode_String(raw.e), cst_encode_Backtrace(raw.backtrace)];
    }
    if (raw is CustomErrorTwinNormal_Error1) {
      return [1, cst_encode_u_32(raw.e), cst_encode_Backtrace(raw.backtrace)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_error_twin_rust_async(
      CustomErrorTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomErrorTwinRustAsync_Error0) {
      return [0, cst_encode_String(raw.e), cst_encode_Backtrace(raw.backtrace)];
    }
    if (raw is CustomErrorTwinRustAsync_Error1) {
      return [1, cst_encode_u_32(raw.e), cst_encode_Backtrace(raw.backtrace)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_error_twin_sync(CustomErrorTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomErrorTwinSync_Error0) {
      return [0, cst_encode_String(raw.e), cst_encode_Backtrace(raw.backtrace)];
    }
    if (raw is CustomErrorTwinSync_Error1) {
      return [1, cst_encode_u_32(raw.e), cst_encode_Backtrace(raw.backtrace)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_nested_error_1_twin_normal(
      CustomNestedError1TwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomNestedError1TwinNormal_CustomNested1) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is CustomNestedError1TwinNormal_ErrorNested) {
      return [
        1,
        cst_encode_box_autoadd_custom_nested_error_2_twin_normal(raw.field0)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_nested_error_1_twin_rust_async(
      CustomNestedError1TwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomNestedError1TwinRustAsync_CustomNested1) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is CustomNestedError1TwinRustAsync_ErrorNested) {
      return [
        1,
        cst_encode_box_autoadd_custom_nested_error_2_twin_rust_async(raw.field0)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_nested_error_1_twin_sync(
      CustomNestedError1TwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomNestedError1TwinSync_CustomNested1) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is CustomNestedError1TwinSync_ErrorNested) {
      return [
        1,
        cst_encode_box_autoadd_custom_nested_error_2_twin_sync(raw.field0)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_nested_error_2_twin_normal(
      CustomNestedError2TwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomNestedError2TwinNormal_CustomNested2) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is CustomNestedError2TwinNormal_CustomNested2Number) {
      return [1, cst_encode_u_32(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_nested_error_2_twin_rust_async(
      CustomNestedError2TwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomNestedError2TwinRustAsync_CustomNested2) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is CustomNestedError2TwinRustAsync_CustomNested2Number) {
      return [1, cst_encode_u_32(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_nested_error_2_twin_sync(
      CustomNestedError2TwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomNestedError2TwinSync_CustomNested2) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is CustomNestedError2TwinSync_CustomNested2Number) {
      return [1, cst_encode_u_32(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_nested_error_inner_twin_normal(
      CustomNestedErrorInnerTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomNestedErrorInnerTwinNormal_Three) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is CustomNestedErrorInnerTwinNormal_Four) {
      return [1, cst_encode_u_32(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_nested_error_inner_twin_rust_async(
      CustomNestedErrorInnerTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomNestedErrorInnerTwinRustAsync_Three) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is CustomNestedErrorInnerTwinRustAsync_Four) {
      return [1, cst_encode_u_32(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_nested_error_inner_twin_sync(
      CustomNestedErrorInnerTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomNestedErrorInnerTwinSync_Three) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is CustomNestedErrorInnerTwinSync_Four) {
      return [1, cst_encode_u_32(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_nested_error_outer_twin_normal(
      CustomNestedErrorOuterTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomNestedErrorOuterTwinNormal_One) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is CustomNestedErrorOuterTwinNormal_Two) {
      return [
        1,
        cst_encode_box_autoadd_custom_nested_error_inner_twin_normal(raw.field0)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_nested_error_outer_twin_rust_async(
      CustomNestedErrorOuterTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomNestedErrorOuterTwinRustAsync_One) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is CustomNestedErrorOuterTwinRustAsync_Two) {
      return [
        1,
        cst_encode_box_autoadd_custom_nested_error_inner_twin_rust_async(
            raw.field0)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_nested_error_outer_twin_sync(
      CustomNestedErrorOuterTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is CustomNestedErrorOuterTwinSync_One) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is CustomNestedErrorOuterTwinSync_Two) {
      return [
        1,
        cst_encode_box_autoadd_custom_nested_error_inner_twin_sync(raw.field0)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_custom_struct_error_another_twin_normal(
      CustomStructErrorAnotherTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.message)];
  }

  @protected
  List<dynamic> cst_encode_custom_struct_error_another_twin_rust_async(
      CustomStructErrorAnotherTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.message)];
  }

  @protected
  List<dynamic> cst_encode_custom_struct_error_another_twin_sync(
      CustomStructErrorAnotherTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.message)];
  }

  @protected
  List<dynamic> cst_encode_custom_struct_error_twin_normal(
      CustomStructErrorTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.a)];
  }

  @protected
  List<dynamic> cst_encode_custom_struct_error_twin_rust_async(
      CustomStructErrorTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.a)];
  }

  @protected
  List<dynamic> cst_encode_custom_struct_error_twin_sync(
      CustomStructErrorTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.a)];
  }

  @protected
  List<dynamic> cst_encode_custom_struct_twin_normal(
      CustomStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.message)];
  }

  @protected
  List<dynamic> cst_encode_custom_struct_twin_rust_async(
      CustomStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.message)];
  }

  @protected
  List<dynamic> cst_encode_custom_struct_twin_sync(CustomStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.message)];
  }

  @protected
  List<dynamic> cst_encode_customized_twin_normal(CustomizedTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.finalField),
      cst_encode_opt_String(raw.nonFinalField)
    ];
  }

  @protected
  List<dynamic> cst_encode_customized_twin_rust_async(
      CustomizedTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.finalField),
      cst_encode_opt_String(raw.nonFinalField)
    ];
  }

  @protected
  List<dynamic> cst_encode_customized_twin_sync(CustomizedTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.finalField),
      cst_encode_opt_String(raw.nonFinalField)
    ];
  }

  @protected
  List<dynamic> cst_encode_dart_opaque_nested_twin_normal(
      DartOpaqueNestedTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_DartOpaque(raw.first),
      cst_encode_DartOpaque(raw.second)
    ];
  }

  @protected
  List<dynamic> cst_encode_dart_opaque_nested_twin_rust_async(
      DartOpaqueNestedTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_DartOpaque(raw.first),
      cst_encode_DartOpaque(raw.second)
    ];
  }

  @protected
  List<dynamic> cst_encode_dart_opaque_nested_twin_sync(
      DartOpaqueNestedTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_DartOpaque(raw.first),
      cst_encode_DartOpaque(raw.second)
    ];
  }

  @protected
  List<dynamic> cst_encode_demo_struct_for_rust_call_dart_twin_normal(
      DemoStructForRustCallDartTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.name)];
  }

  @protected
  List<dynamic> cst_encode_demo_struct_for_rust_call_dart_twin_rust_async(
      DemoStructForRustCallDartTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.name)];
  }

  @protected
  List<dynamic> cst_encode_distance_twin_normal(DistanceTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is DistanceTwinNormal_Unknown) {
      return [0];
    }
    if (raw is DistanceTwinNormal_Map) {
      return [1, cst_encode_f_64(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_distance_twin_rust_async(DistanceTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is DistanceTwinRustAsync_Unknown) {
      return [0];
    }
    if (raw is DistanceTwinRustAsync_Map) {
      return [1, cst_encode_f_64(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_distance_twin_sync(DistanceTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is DistanceTwinSync_Unknown) {
      return [0];
    }
    if (raw is DistanceTwinSync_Map) {
      return [1, cst_encode_f_64(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_element_twin_normal(ElementTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_opt_String(raw.tag),
      cst_encode_opt_String(raw.text),
      cst_encode_opt_list_attribute_twin_normal(raw.attributes),
      cst_encode_opt_list_element_twin_normal(raw.children)
    ];
  }

  @protected
  List<dynamic> cst_encode_element_twin_rust_async(ElementTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_opt_String(raw.tag),
      cst_encode_opt_String(raw.text),
      cst_encode_opt_list_attribute_twin_rust_async(raw.attributes),
      cst_encode_opt_list_element_twin_rust_async(raw.children)
    ];
  }

  @protected
  List<dynamic> cst_encode_element_twin_sync(ElementTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_opt_String(raw.tag),
      cst_encode_opt_String(raw.text),
      cst_encode_opt_list_attribute_twin_sync(raw.attributes),
      cst_encode_opt_list_element_twin_sync(raw.children)
    ];
  }

  @protected
  List<dynamic> cst_encode_empty_twin_normal(EmptyTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [];
  }

  @protected
  List<dynamic> cst_encode_empty_twin_rust_async(EmptyTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [];
  }

  @protected
  List<dynamic> cst_encode_empty_twin_sync(EmptyTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [];
  }

  @protected
  List<dynamic> cst_encode_enum_dart_opaque_twin_normal(
      EnumDartOpaqueTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumDartOpaqueTwinNormal_Primitive) {
      return [0, cst_encode_i_32(raw.field0)];
    }
    if (raw is EnumDartOpaqueTwinNormal_Opaque) {
      return [1, cst_encode_DartOpaque(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_dart_opaque_twin_rust_async(
      EnumDartOpaqueTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumDartOpaqueTwinRustAsync_Primitive) {
      return [0, cst_encode_i_32(raw.field0)];
    }
    if (raw is EnumDartOpaqueTwinRustAsync_Opaque) {
      return [1, cst_encode_DartOpaque(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_dart_opaque_twin_sync(
      EnumDartOpaqueTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumDartOpaqueTwinSync_Primitive) {
      return [0, cst_encode_i_32(raw.field0)];
    }
    if (raw is EnumDartOpaqueTwinSync_Opaque) {
      return [1, cst_encode_DartOpaque(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_opaque_twin_moi(EnumOpaqueTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumOpaqueTwinMoi_Struct) {
      return [0, cst_encode_RustOpaque_HideDataTwinMoi(raw.field0)];
    }
    if (raw is EnumOpaqueTwinMoi_Primitive) {
      return [1, cst_encode_RustOpaque_i16(raw.field0)];
    }
    if (raw is EnumOpaqueTwinMoi_TraitObj) {
      return [2, cst_encode_RustOpaque_BoxdynDartDebugTwinMoi(raw.field0)];
    }
    if (raw is EnumOpaqueTwinMoi_Mutex) {
      return [3, cst_encode_RustOpaque_MutexHideDataTwinMoi(raw.field0)];
    }
    if (raw is EnumOpaqueTwinMoi_RwLock) {
      return [4, cst_encode_RustOpaque_RwLockHideDataTwinMoi(raw.field0)];
    }
    if (raw is EnumOpaqueTwinMoi_Nothing) {
      return [5];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_opaque_twin_moi_array_5(
      EnumOpaqueTwinMoiArray5 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_enum_opaque_twin_moi(raw);
  }

  @protected
  List<dynamic> cst_encode_enum_opaque_twin_normal(EnumOpaqueTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumOpaqueTwinNormal_Struct) {
      return [0, cst_encode_RustOpaque_HideDataTwinNormal(raw.field0)];
    }
    if (raw is EnumOpaqueTwinNormal_Primitive) {
      return [1, cst_encode_RustOpaque_i32(raw.field0)];
    }
    if (raw is EnumOpaqueTwinNormal_TraitObj) {
      return [2, cst_encode_RustOpaque_BoxdynDartDebugTwinNormal(raw.field0)];
    }
    if (raw is EnumOpaqueTwinNormal_Mutex) {
      return [3, cst_encode_RustOpaque_MutexHideDataTwinNormal(raw.field0)];
    }
    if (raw is EnumOpaqueTwinNormal_RwLock) {
      return [4, cst_encode_RustOpaque_RwLockHideDataTwinNormal(raw.field0)];
    }
    if (raw is EnumOpaqueTwinNormal_Nothing) {
      return [5];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_opaque_twin_normal_array_5(
      EnumOpaqueTwinNormalArray5 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_enum_opaque_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_enum_opaque_twin_rust_async(
      EnumOpaqueTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumOpaqueTwinRustAsync_Struct) {
      return [0, cst_encode_RustOpaque_HideDataTwinRustAsync(raw.field0)];
    }
    if (raw is EnumOpaqueTwinRustAsync_Primitive) {
      return [1, cst_encode_RustOpaque_i32(raw.field0)];
    }
    if (raw is EnumOpaqueTwinRustAsync_TraitObj) {
      return [
        2,
        cst_encode_RustOpaque_BoxdynDartDebugTwinRustAsync(raw.field0)
      ];
    }
    if (raw is EnumOpaqueTwinRustAsync_Mutex) {
      return [3, cst_encode_RustOpaque_MutexHideDataTwinRustAsync(raw.field0)];
    }
    if (raw is EnumOpaqueTwinRustAsync_RwLock) {
      return [4, cst_encode_RustOpaque_RwLockHideDataTwinRustAsync(raw.field0)];
    }
    if (raw is EnumOpaqueTwinRustAsync_Nothing) {
      return [5];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_opaque_twin_rust_async_array_5(
      EnumOpaqueTwinRustAsyncArray5 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_enum_opaque_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_enum_opaque_twin_rust_async_moi(
      EnumOpaqueTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumOpaqueTwinRustAsyncMoi_Struct) {
      return [0, cst_encode_RustOpaque_HideDataTwinRustAsyncMoi(raw.field0)];
    }
    if (raw is EnumOpaqueTwinRustAsyncMoi_Primitive) {
      return [1, cst_encode_RustOpaque_i16(raw.field0)];
    }
    if (raw is EnumOpaqueTwinRustAsyncMoi_TraitObj) {
      return [
        2,
        cst_encode_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(raw.field0)
      ];
    }
    if (raw is EnumOpaqueTwinRustAsyncMoi_Mutex) {
      return [
        3,
        cst_encode_RustOpaque_MutexHideDataTwinRustAsyncMoi(raw.field0)
      ];
    }
    if (raw is EnumOpaqueTwinRustAsyncMoi_RwLock) {
      return [
        4,
        cst_encode_RustOpaque_RwLockHideDataTwinRustAsyncMoi(raw.field0)
      ];
    }
    if (raw is EnumOpaqueTwinRustAsyncMoi_Nothing) {
      return [5];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_opaque_twin_rust_async_moi_array_5(
      EnumOpaqueTwinRustAsyncMoiArray5 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_enum_opaque_twin_rust_async_moi(raw);
  }

  @protected
  List<dynamic> cst_encode_enum_opaque_twin_sync(EnumOpaqueTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumOpaqueTwinSync_Struct) {
      return [0, cst_encode_RustOpaque_HideDataTwinSync(raw.field0)];
    }
    if (raw is EnumOpaqueTwinSync_Primitive) {
      return [1, cst_encode_RustOpaque_i32(raw.field0)];
    }
    if (raw is EnumOpaqueTwinSync_TraitObj) {
      return [2, cst_encode_RustOpaque_BoxdynDartDebugTwinSync(raw.field0)];
    }
    if (raw is EnumOpaqueTwinSync_Mutex) {
      return [3, cst_encode_RustOpaque_MutexHideDataTwinSync(raw.field0)];
    }
    if (raw is EnumOpaqueTwinSync_RwLock) {
      return [4, cst_encode_RustOpaque_RwLockHideDataTwinSync(raw.field0)];
    }
    if (raw is EnumOpaqueTwinSync_Nothing) {
      return [5];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_opaque_twin_sync_array_5(
      EnumOpaqueTwinSyncArray5 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_enum_opaque_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_enum_opaque_twin_sync_moi(
      EnumOpaqueTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumOpaqueTwinSyncMoi_Struct) {
      return [0, cst_encode_RustOpaque_HideDataTwinSyncMoi(raw.field0)];
    }
    if (raw is EnumOpaqueTwinSyncMoi_Primitive) {
      return [1, cst_encode_RustOpaque_i16(raw.field0)];
    }
    if (raw is EnumOpaqueTwinSyncMoi_TraitObj) {
      return [2, cst_encode_RustOpaque_BoxdynDartDebugTwinSyncMoi(raw.field0)];
    }
    if (raw is EnumOpaqueTwinSyncMoi_Mutex) {
      return [3, cst_encode_RustOpaque_MutexHideDataTwinSyncMoi(raw.field0)];
    }
    if (raw is EnumOpaqueTwinSyncMoi_RwLock) {
      return [4, cst_encode_RustOpaque_RwLockHideDataTwinSyncMoi(raw.field0)];
    }
    if (raw is EnumOpaqueTwinSyncMoi_Nothing) {
      return [5];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_opaque_twin_sync_moi_array_5(
      EnumOpaqueTwinSyncMoiArray5 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_enum_opaque_twin_sync_moi(raw);
  }

  @protected
  List<dynamic> cst_encode_enum_with_good_and_opaque_twin_moi(
      EnumWithGoodAndOpaqueTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumWithGoodAndOpaqueTwinMoi_Good) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is EnumWithGoodAndOpaqueTwinMoi_Opaque) {
      return [
        1,
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
            raw.field0)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_with_good_and_opaque_twin_normal(
      EnumWithGoodAndOpaqueTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumWithGoodAndOpaqueTwinNormal_Good) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is EnumWithGoodAndOpaqueTwinNormal_Opaque) {
      return [
        1,
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
            raw.field0)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_with_good_and_opaque_twin_rust_async(
      EnumWithGoodAndOpaqueTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumWithGoodAndOpaqueTwinRustAsync_Good) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is EnumWithGoodAndOpaqueTwinRustAsync_Opaque) {
      return [
        1,
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
            raw.field0)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_with_good_and_opaque_twin_rust_async_moi(
      EnumWithGoodAndOpaqueTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumWithGoodAndOpaqueTwinRustAsyncMoi_Good) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is EnumWithGoodAndOpaqueTwinRustAsyncMoi_Opaque) {
      return [
        1,
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
            raw.field0)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_with_good_and_opaque_twin_sync(
      EnumWithGoodAndOpaqueTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumWithGoodAndOpaqueTwinSync_Good) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is EnumWithGoodAndOpaqueTwinSync_Opaque) {
      return [
        1,
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
            raw.field0)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_with_good_and_opaque_twin_sync_moi(
      EnumWithGoodAndOpaqueTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumWithGoodAndOpaqueTwinSyncMoi_Good) {
      return [0, cst_encode_String(raw.field0)];
    }
    if (raw is EnumWithGoodAndOpaqueTwinSyncMoi_Opaque) {
      return [
        1,
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
            raw.field0)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_with_item_mixed_twin_normal(
      EnumWithItemMixedTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumWithItemMixedTwinNormal_A) {
      return [0];
    }
    if (raw is EnumWithItemMixedTwinNormal_B) {
      return [1, cst_encode_list_prim_u_8_strict(raw.field0)];
    }
    if (raw is EnumWithItemMixedTwinNormal_C) {
      return [2, cst_encode_String(raw.cField)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_with_item_mixed_twin_rust_async(
      EnumWithItemMixedTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumWithItemMixedTwinRustAsync_A) {
      return [0];
    }
    if (raw is EnumWithItemMixedTwinRustAsync_B) {
      return [1, cst_encode_list_prim_u_8_strict(raw.field0)];
    }
    if (raw is EnumWithItemMixedTwinRustAsync_C) {
      return [2, cst_encode_String(raw.cField)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_with_item_mixed_twin_sync(
      EnumWithItemMixedTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumWithItemMixedTwinSync_A) {
      return [0];
    }
    if (raw is EnumWithItemMixedTwinSync_B) {
      return [1, cst_encode_list_prim_u_8_strict(raw.field0)];
    }
    if (raw is EnumWithItemMixedTwinSync_C) {
      return [2, cst_encode_String(raw.cField)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_with_item_struct_twin_normal(
      EnumWithItemStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumWithItemStructTwinNormal_A) {
      return [0, cst_encode_list_prim_u_8_strict(raw.aField)];
    }
    if (raw is EnumWithItemStructTwinNormal_B) {
      return [1, cst_encode_list_prim_i_32_strict(raw.bField)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_with_item_struct_twin_rust_async(
      EnumWithItemStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumWithItemStructTwinRustAsync_A) {
      return [0, cst_encode_list_prim_u_8_strict(raw.aField)];
    }
    if (raw is EnumWithItemStructTwinRustAsync_B) {
      return [1, cst_encode_list_prim_i_32_strict(raw.bField)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_with_item_struct_twin_sync(
      EnumWithItemStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumWithItemStructTwinSync_A) {
      return [0, cst_encode_list_prim_u_8_strict(raw.aField)];
    }
    if (raw is EnumWithItemStructTwinSync_B) {
      return [1, cst_encode_list_prim_i_32_strict(raw.bField)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_with_item_tuple_twin_normal(
      EnumWithItemTupleTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumWithItemTupleTwinNormal_A) {
      return [0, cst_encode_list_prim_u_8_strict(raw.field0)];
    }
    if (raw is EnumWithItemTupleTwinNormal_B) {
      return [1, cst_encode_list_prim_i_32_strict(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_with_item_tuple_twin_rust_async(
      EnumWithItemTupleTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumWithItemTupleTwinRustAsync_A) {
      return [0, cst_encode_list_prim_u_8_strict(raw.field0)];
    }
    if (raw is EnumWithItemTupleTwinRustAsync_B) {
      return [1, cst_encode_list_prim_i_32_strict(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_enum_with_item_tuple_twin_sync(
      EnumWithItemTupleTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is EnumWithItemTupleTwinSync_A) {
      return [0, cst_encode_list_prim_u_8_strict(raw.field0)];
    }
    if (raw is EnumWithItemTupleTwinSync_B) {
      return [1, cst_encode_list_prim_i_32_strict(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_event_twin_normal(EventTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.address), cst_encode_String(raw.payload)];
  }

  @protected
  List<dynamic> cst_encode_event_twin_rust_async(EventTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.address), cst_encode_String(raw.payload)];
  }

  @protected
  List<dynamic> cst_encode_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_opt_box_autoadd_i_32(raw.int32),
      cst_encode_opt_box_autoadd_i_64(raw.int64),
      cst_encode_opt_box_autoadd_f_64(raw.float64),
      cst_encode_opt_box_autoadd_bool(raw.boolean),
      cst_encode_opt_list_prim_u_8_strict(raw.zerocopy),
      cst_encode_opt_list_prim_i_8_strict(raw.int8List),
      cst_encode_opt_list_prim_u_8_strict(raw.uint8List),
      cst_encode_opt_list_prim_i_32_strict(raw.int32List),
      cst_encode_opt_list_prim_f_32_strict(raw.float32List),
      cst_encode_opt_list_prim_f_64_strict(raw.float64List),
      cst_encode_opt_list_attribute_twin_normal(raw.attributes),
      cst_encode_list_opt_box_autoadd_attribute_twin_normal(
          raw.attributesNullable),
      cst_encode_opt_list_opt_box_autoadd_attribute_twin_normal(
          raw.nullableAttributes),
      cst_encode_opt_box_autoadd_new_type_int_twin_normal(raw.newtypeint)
    ];
  }

  @protected
  List<dynamic> cst_encode_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_opt_box_autoadd_i_32(raw.int32),
      cst_encode_opt_box_autoadd_i_64(raw.int64),
      cst_encode_opt_box_autoadd_f_64(raw.float64),
      cst_encode_opt_box_autoadd_bool(raw.boolean),
      cst_encode_opt_list_prim_u_8_strict(raw.zerocopy),
      cst_encode_opt_list_prim_i_8_strict(raw.int8List),
      cst_encode_opt_list_prim_u_8_strict(raw.uint8List),
      cst_encode_opt_list_prim_i_32_strict(raw.int32List),
      cst_encode_opt_list_prim_f_32_strict(raw.float32List),
      cst_encode_opt_list_prim_f_64_strict(raw.float64List),
      cst_encode_opt_list_attribute_twin_rust_async(raw.attributes),
      cst_encode_list_opt_box_autoadd_attribute_twin_rust_async(
          raw.attributesNullable),
      cst_encode_opt_list_opt_box_autoadd_attribute_twin_rust_async(
          raw.nullableAttributes),
      cst_encode_opt_box_autoadd_new_type_int_twin_rust_async(raw.newtypeint)
    ];
  }

  @protected
  List<dynamic> cst_encode_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_opt_box_autoadd_i_32(raw.int32),
      cst_encode_opt_box_autoadd_i_64(raw.int64),
      cst_encode_opt_box_autoadd_f_64(raw.float64),
      cst_encode_opt_box_autoadd_bool(raw.boolean),
      cst_encode_opt_list_prim_u_8_strict(raw.zerocopy),
      cst_encode_opt_list_prim_i_8_strict(raw.int8List),
      cst_encode_opt_list_prim_u_8_strict(raw.uint8List),
      cst_encode_opt_list_prim_i_32_strict(raw.int32List),
      cst_encode_opt_list_prim_f_32_strict(raw.float32List),
      cst_encode_opt_list_prim_f_64_strict(raw.float64List),
      cst_encode_opt_list_attribute_twin_sync(raw.attributes),
      cst_encode_list_opt_box_autoadd_attribute_twin_sync(
          raw.attributesNullable),
      cst_encode_opt_list_opt_box_autoadd_attribute_twin_sync(
          raw.nullableAttributes),
      cst_encode_opt_box_autoadd_new_type_int_twin_sync(raw.newtypeint)
    ];
  }

  @protected
  Float64List cst_encode_f_64_array_16(F64Array16 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return Float64List.fromList(raw);
  }

  @protected
  List<dynamic> cst_encode_feature_chrono_twin_normal(
      FeatureChronoTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_Chrono_Utc(raw.utc),
      cst_encode_Chrono_Local(raw.local),
      cst_encode_Chrono_Duration(raw.duration),
      cst_encode_Chrono_Naive(raw.naive)
    ];
  }

  @protected
  List<dynamic> cst_encode_feature_chrono_twin_rust_async(
      FeatureChronoTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_Chrono_Utc(raw.utc),
      cst_encode_Chrono_Local(raw.local),
      cst_encode_Chrono_Duration(raw.duration),
      cst_encode_Chrono_Naive(raw.naive)
    ];
  }

  @protected
  List<dynamic> cst_encode_feature_chrono_twin_sync(FeatureChronoTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_Chrono_Utc(raw.utc),
      cst_encode_Chrono_Local(raw.local),
      cst_encode_Chrono_Duration(raw.duration),
      cst_encode_Chrono_Naive(raw.naive)
    ];
  }

  @protected
  List<dynamic> cst_encode_feature_uuid_twin_normal(FeatureUuidTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_Uuid(raw.one)];
  }

  @protected
  List<dynamic> cst_encode_feature_uuid_twin_rust_async(
      FeatureUuidTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_Uuid(raw.one)];
  }

  @protected
  List<dynamic> cst_encode_feature_uuid_twin_sync(FeatureUuidTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_Uuid(raw.one)];
  }

  @protected
  List<dynamic> cst_encode_feed_id_twin_normal(FeedIdTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_8_array_8(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_feed_id_twin_rust_async(FeedIdTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_8_array_8(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_feed_id_twin_sync(FeedIdTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_8_array_8(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_hash_map_value(HashMapValue raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.inner)];
  }

  @protected
  Int32List cst_encode_i_32_array_2(I32Array2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return Int32List.fromList(raw);
  }

  @protected
  Object cst_encode_i_64(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return castNativeBigInt(raw);
  }

  @protected
  List<dynamic> cst_encode_kitchen_sink_twin_normal(KitchenSinkTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is KitchenSinkTwinNormal_Empty) {
      return [0];
    }
    if (raw is KitchenSinkTwinNormal_Primitives) {
      return [
        1,
        cst_encode_i_32(raw.int32),
        cst_encode_f_64(raw.float64),
        cst_encode_bool(raw.boolean)
      ];
    }
    if (raw is KitchenSinkTwinNormal_Nested) {
      return [
        2,
        cst_encode_i_32(raw.field0),
        cst_encode_box_kitchen_sink_twin_normal(raw.field1)
      ];
    }
    if (raw is KitchenSinkTwinNormal_Optional) {
      return [
        3,
        cst_encode_opt_box_autoadd_i_32(raw.field0),
        cst_encode_opt_box_autoadd_i_32(raw.field1)
      ];
    }
    if (raw is KitchenSinkTwinNormal_Buffer) {
      return [4, cst_encode_list_prim_u_8_strict(raw.field0)];
    }
    if (raw is KitchenSinkTwinNormal_Enums) {
      return [5, cst_encode_weekdays_twin_normal(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is KitchenSinkTwinRustAsync_Empty) {
      return [0];
    }
    if (raw is KitchenSinkTwinRustAsync_Primitives) {
      return [
        1,
        cst_encode_i_32(raw.int32),
        cst_encode_f_64(raw.float64),
        cst_encode_bool(raw.boolean)
      ];
    }
    if (raw is KitchenSinkTwinRustAsync_Nested) {
      return [
        2,
        cst_encode_i_32(raw.field0),
        cst_encode_box_kitchen_sink_twin_rust_async(raw.field1)
      ];
    }
    if (raw is KitchenSinkTwinRustAsync_Optional) {
      return [
        3,
        cst_encode_opt_box_autoadd_i_32(raw.field0),
        cst_encode_opt_box_autoadd_i_32(raw.field1)
      ];
    }
    if (raw is KitchenSinkTwinRustAsync_Buffer) {
      return [4, cst_encode_list_prim_u_8_strict(raw.field0)];
    }
    if (raw is KitchenSinkTwinRustAsync_Enums) {
      return [5, cst_encode_weekdays_twin_rust_async(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_kitchen_sink_twin_sync(KitchenSinkTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is KitchenSinkTwinSync_Empty) {
      return [0];
    }
    if (raw is KitchenSinkTwinSync_Primitives) {
      return [
        1,
        cst_encode_i_32(raw.int32),
        cst_encode_f_64(raw.float64),
        cst_encode_bool(raw.boolean)
      ];
    }
    if (raw is KitchenSinkTwinSync_Nested) {
      return [
        2,
        cst_encode_i_32(raw.field0),
        cst_encode_box_kitchen_sink_twin_sync(raw.field1)
      ];
    }
    if (raw is KitchenSinkTwinSync_Optional) {
      return [
        3,
        cst_encode_opt_box_autoadd_i_32(raw.field0),
        cst_encode_opt_box_autoadd_i_32(raw.field1)
      ];
    }
    if (raw is KitchenSinkTwinSync_Buffer) {
      return [4, cst_encode_list_prim_u_8_strict(raw.field0)];
    }
    if (raw is KitchenSinkTwinSync_Enums) {
      return [5, cst_encode_weekdays_twin_sync(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic>
      cst_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          List<NonCloneSimpleTwinMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(
            cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi)
        .toList();
  }

  @protected
  List<dynamic>
      cst_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          List<NonCloneSimpleTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(
            cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal)
        .toList();
  }

  @protected
  List<dynamic>
      cst_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          List<NonCloneSimpleTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(
            cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync)
        .toList();
  }

  @protected
  List<dynamic>
      cst_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          List<NonCloneSimpleTwinRustAsyncMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(
            cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi)
        .toList();
  }

  @protected
  List<dynamic>
      cst_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          List<NonCloneSimpleTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(
            cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync)
        .toList();
  }

  @protected
  List<dynamic>
      cst_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          List<NonCloneSimpleTwinSyncMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(
            cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi)
        .toList();
  }

  @protected
  List<dynamic> cst_encode_list_Chrono_Duration(List<Duration> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_Chrono_Duration).toList();
  }

  @protected
  List<dynamic> cst_encode_list_Chrono_Local(List<DateTime> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_Chrono_Local).toList();
  }

  @protected
  List<dynamic> cst_encode_list_Chrono_Naive(List<DateTime> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_Chrono_Naive).toList();
  }

  @protected
  List<dynamic> cst_encode_list_DartOpaque(List<Object> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_DartOpaque).toList();
  }

  @protected
  List<dynamic> cst_encode_list_RustOpaque_HideDataTwinMoi(
      List<HideDataTwinMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_RustOpaque_HideDataTwinMoi).toList();
  }

  @protected
  List<dynamic> cst_encode_list_RustOpaque_HideDataTwinNormal(
      List<HideDataTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_RustOpaque_HideDataTwinNormal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_RustOpaque_HideDataTwinRustAsync(
      List<HideDataTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_RustOpaque_HideDataTwinRustAsync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_RustOpaque_HideDataTwinRustAsyncMoi(
      List<HideDataTwinRustAsyncMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_RustOpaque_HideDataTwinRustAsyncMoi).toList();
  }

  @protected
  List<dynamic> cst_encode_list_RustOpaque_HideDataTwinSync(
      List<HideDataTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_RustOpaque_HideDataTwinSync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_RustOpaque_HideDataTwinSyncMoi(
      List<HideDataTwinSyncMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_RustOpaque_HideDataTwinSyncMoi).toList();
  }

  @protected
  List<dynamic> cst_encode_list_String(List<String> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_String).toList();
  }

  @protected
  List<dynamic> cst_encode_list_Uuid(List<UuidValue> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_Uuid).toList();
  }

  @protected
  List<dynamic> cst_encode_list_application_env_var(
      List<ApplicationEnvVar> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_application_env_var).toList();
  }

  @protected
  List<dynamic> cst_encode_list_application_mode(List<ApplicationMode> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_application_mode).toList();
  }

  @protected
  List<dynamic> cst_encode_list_application_settings(
      List<ApplicationSettings> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_application_settings).toList();
  }

  @protected
  List<dynamic> cst_encode_list_attribute_twin_normal(
      List<AttributeTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_attribute_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_attribute_twin_rust_async(
      List<AttributeTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_attribute_twin_rust_async).toList();
  }

  @protected
  List<dynamic> cst_encode_list_attribute_twin_sync(
      List<AttributeTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_attribute_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_basic_general_enum_twin_normal(
      List<BasicGeneralEnumTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_basic_general_enum_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_basic_general_enum_twin_rust_async(
      List<BasicGeneralEnumTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_basic_general_enum_twin_rust_async).toList();
  }

  @protected
  List<dynamic> cst_encode_list_basic_general_enum_twin_sync(
      List<BasicGeneralEnumTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_basic_general_enum_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_basic_primitive_enum_twin_normal(
      List<BasicPrimitiveEnumTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_basic_primitive_enum_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_basic_primitive_enum_twin_rust_async(
      List<BasicPrimitiveEnumTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_basic_primitive_enum_twin_rust_async).toList();
  }

  @protected
  List<dynamic> cst_encode_list_basic_primitive_enum_twin_sync(
      List<BasicPrimitiveEnumTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_basic_primitive_enum_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_basic_struct_twin_normal(
      List<BasicStructTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_basic_struct_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_basic_struct_twin_rust_async(
      List<BasicStructTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_basic_struct_twin_rust_async).toList();
  }

  @protected
  List<dynamic> cst_encode_list_basic_struct_twin_sync(
      List<BasicStructTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_basic_struct_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_bool(List<bool> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_bool).toList();
  }

  @protected
  List<dynamic> cst_encode_list_element_twin_normal(
      List<ElementTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_element_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_element_twin_rust_async(
      List<ElementTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_element_twin_rust_async).toList();
  }

  @protected
  List<dynamic> cst_encode_list_element_twin_sync(List<ElementTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_element_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_enum_opaque_twin_moi(
      List<EnumOpaqueTwinMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_enum_opaque_twin_moi).toList();
  }

  @protected
  List<dynamic> cst_encode_list_enum_opaque_twin_normal(
      List<EnumOpaqueTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_enum_opaque_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_enum_opaque_twin_rust_async(
      List<EnumOpaqueTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_enum_opaque_twin_rust_async).toList();
  }

  @protected
  List<dynamic> cst_encode_list_enum_opaque_twin_rust_async_moi(
      List<EnumOpaqueTwinRustAsyncMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_enum_opaque_twin_rust_async_moi).toList();
  }

  @protected
  List<dynamic> cst_encode_list_enum_opaque_twin_sync(
      List<EnumOpaqueTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_enum_opaque_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_enum_opaque_twin_sync_moi(
      List<EnumOpaqueTwinSyncMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_enum_opaque_twin_sync_moi).toList();
  }

  @protected
  List<dynamic> cst_encode_list_list_prim_u_8_strict(List<Uint8List> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_list_prim_u_8_strict).toList();
  }

  @protected
  List<dynamic> cst_encode_list_my_enum(List<MyEnum> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_my_enum).toList();
  }

  @protected
  List<dynamic> cst_encode_list_my_size(List<MySize> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_my_size).toList();
  }

  @protected
  List<dynamic> cst_encode_list_my_tree_node_twin_normal(
      List<MyTreeNodeTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_my_tree_node_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_my_tree_node_twin_rust_async(
      List<MyTreeNodeTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_my_tree_node_twin_rust_async).toList();
  }

  @protected
  List<dynamic> cst_encode_list_my_tree_node_twin_sync(
      List<MyTreeNodeTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_my_tree_node_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_nested_raw_string_mirrored(
      List<NestedRawStringMirrored> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_nested_raw_string_mirrored).toList();
  }

  @protected
  List<dynamic> cst_encode_list_of_nested_raw_string_mirrored(
      ListOfNestedRawStringMirrored raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_list_nested_raw_string_mirrored(raw.raw)];
  }

  @protected
  List<dynamic> cst_encode_list_opt_String(List<String?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_opt_String).toList();
  }

  @protected
  List<dynamic> cst_encode_list_opt_box_autoadd_attribute_twin_normal(
      List<AttributeTwinNormal?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_opt_box_autoadd_attribute_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_opt_box_autoadd_attribute_twin_rust_async(
      List<AttributeTwinRustAsync?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(cst_encode_opt_box_autoadd_attribute_twin_rust_async)
        .toList();
  }

  @protected
  List<dynamic> cst_encode_list_opt_box_autoadd_attribute_twin_sync(
      List<AttributeTwinSync?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_opt_box_autoadd_attribute_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_opt_box_autoadd_i_32(List<int?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_opt_box_autoadd_i_32).toList();
  }

  @protected
  List<dynamic> cst_encode_list_opt_box_autoadd_weekdays_twin_normal(
      List<WeekdaysTwinNormal?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_opt_box_autoadd_weekdays_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_opt_box_autoadd_weekdays_twin_rust_async(
      List<WeekdaysTwinRustAsync?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(cst_encode_opt_box_autoadd_weekdays_twin_rust_async)
        .toList();
  }

  @protected
  List<dynamic> cst_encode_list_opt_box_autoadd_weekdays_twin_sync(
      List<WeekdaysTwinSync?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_opt_box_autoadd_weekdays_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_opt_list_prim_i_32_strict(
      List<Int32List?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_opt_list_prim_i_32_strict).toList();
  }

  @protected
  List<dynamic> cst_encode_list_point_twin_normal(List<PointTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_point_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_point_twin_rust_async(
      List<PointTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_point_twin_rust_async).toList();
  }

  @protected
  List<dynamic> cst_encode_list_point_twin_sync(List<PointTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_point_twin_sync).toList();
  }

  @protected
  List<double> cst_encode_list_prim_f_32_loose(List<double> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  Float32List cst_encode_list_prim_f_32_strict(Float32List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  List<double> cst_encode_list_prim_f_64_loose(List<double> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  Float64List cst_encode_list_prim_f_64_strict(Float64List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  List<int> cst_encode_list_prim_i_16_loose(List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  Int16List cst_encode_list_prim_i_16_strict(Int16List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  List<int> cst_encode_list_prim_i_32_loose(List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  Int32List cst_encode_list_prim_i_32_strict(Int32List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  Object /* BigInt64Array */ cst_encode_list_prim_i_64_strict(Int64List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.inner;
  }

  @protected
  List<int> cst_encode_list_prim_i_8_loose(List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  Int8List cst_encode_list_prim_i_8_strict(Int8List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  List<int> cst_encode_list_prim_u_16_loose(List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  Uint16List cst_encode_list_prim_u_16_strict(Uint16List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  List<int> cst_encode_list_prim_u_32_loose(List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  Uint32List cst_encode_list_prim_u_32_strict(Uint32List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  Object /* BigInt64Array */ cst_encode_list_prim_u_64_strict(Uint64List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.inner;
  }

  @protected
  List<int> cst_encode_list_prim_u_8_loose(List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  Uint8List cst_encode_list_prim_u_8_strict(Uint8List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  List<dynamic> cst_encode_list_raw_string_enum_mirrored(
      List<RawStringEnumMirrored> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_raw_string_enum_mirrored).toList();
  }

  @protected
  List<dynamic> cst_encode_list_raw_string_mirrored(
      List<RawStringMirrored> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_raw_string_mirrored).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_basic_general_enum_twin_normal(
      List<(int, BasicGeneralEnumTwinNormal)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(cst_encode_record_i_32_basic_general_enum_twin_normal)
        .toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_basic_general_enum_twin_rust_async(
      List<(int, BasicGeneralEnumTwinRustAsync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(cst_encode_record_i_32_basic_general_enum_twin_rust_async)
        .toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_basic_general_enum_twin_sync(
      List<(int, BasicGeneralEnumTwinSync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(cst_encode_record_i_32_basic_general_enum_twin_sync)
        .toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_basic_primitive_enum_twin_normal(
      List<(int, BasicPrimitiveEnumTwinNormal)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(cst_encode_record_i_32_basic_primitive_enum_twin_normal)
        .toList();
  }

  @protected
  List<dynamic>
      cst_encode_list_record_i_32_basic_primitive_enum_twin_rust_async(
          List<(int, BasicPrimitiveEnumTwinRustAsync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(cst_encode_record_i_32_basic_primitive_enum_twin_rust_async)
        .toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_basic_primitive_enum_twin_sync(
      List<(int, BasicPrimitiveEnumTwinSync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(cst_encode_record_i_32_basic_primitive_enum_twin_sync)
        .toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_basic_struct_twin_normal(
      List<(int, BasicStructTwinNormal)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_basic_struct_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_basic_struct_twin_rust_async(
      List<(int, BasicStructTwinRustAsync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(cst_encode_record_i_32_basic_struct_twin_rust_async)
        .toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_basic_struct_twin_sync(
      List<(int, BasicStructTwinSync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_basic_struct_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_bool(List<(int, bool)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_bool).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_f_32(List<(int, double)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_f_32).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_f_64(List<(int, double)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_f_64).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_i_16(List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_i_16).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_i_32(List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_i_32).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_i_64(List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_i_64).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_i_8(List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_i_8).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_isize(List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_isize).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_list_prim_u_8_strict(
      List<(int, Uint8List)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_list_prim_u_8_strict).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_string(List<(int, String)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_string).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_u_16(List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_u_16).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_u_32(List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_u_32).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_u_64(List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_u_64).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_u_8(List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_u_8).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_i_32_usize(List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_i_32_usize).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_string_enum_simple_twin_normal(
      List<(String, EnumSimpleTwinNormal)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_string_enum_simple_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_string_enum_simple_twin_rust_async(
      List<(String, EnumSimpleTwinRustAsync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(cst_encode_record_string_enum_simple_twin_rust_async)
        .toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_string_enum_simple_twin_sync(
      List<(String, EnumSimpleTwinSync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_string_enum_simple_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_string_hash_map_value(
      List<(String, HashMapValue)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_string_hash_map_value).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_string_i_32(List<(String, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_string_i_32).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_string_kitchen_sink_twin_normal(
      List<(String, KitchenSinkTwinNormal)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_string_kitchen_sink_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_string_kitchen_sink_twin_rust_async(
      List<(String, KitchenSinkTwinRustAsync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(cst_encode_record_string_kitchen_sink_twin_rust_async)
        .toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_string_kitchen_sink_twin_sync(
      List<(String, KitchenSinkTwinSync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_string_kitchen_sink_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_string_list_prim_u_8_strict(
      List<(String, Uint8List)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_string_list_prim_u_8_strict).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_string_my_size(
      List<(String, MySize)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_string_my_size).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_string_string(
      List<(String, String)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_string_string).toList();
  }

  @protected
  List<dynamic> cst_encode_list_record_u_8_application_mode(
      List<(int, ApplicationMode)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_record_u_8_application_mode).toList();
  }

  @protected
  List<dynamic> cst_encode_list_simple_struct_twin_normal(
      List<SimpleStructTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_simple_struct_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_simple_struct_twin_rust_async(
      List<SimpleStructTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_simple_struct_twin_rust_async).toList();
  }

  @protected
  List<dynamic> cst_encode_list_simple_struct_twin_sync(
      List<SimpleStructTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_simple_struct_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_sum_with_twin_normal(
      List<SumWithTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_sum_with_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_sum_with_twin_rust_async(
      List<SumWithTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_sum_with_twin_rust_async).toList();
  }

  @protected
  List<dynamic> cst_encode_list_sum_with_twin_sync(List<SumWithTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_sum_with_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_test_id_twin_normal(
      List<TestIdTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_test_id_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_test_id_twin_rust_async(
      List<TestIdTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_test_id_twin_rust_async).toList();
  }

  @protected
  List<dynamic> cst_encode_list_test_id_twin_sync(List<TestIdTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_test_id_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_list_weekdays_twin_normal(
      List<WeekdaysTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_weekdays_twin_normal).toList();
  }

  @protected
  List<dynamic> cst_encode_list_weekdays_twin_rust_async(
      List<WeekdaysTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_weekdays_twin_rust_async).toList();
  }

  @protected
  List<dynamic> cst_encode_list_weekdays_twin_sync(List<WeekdaysTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_weekdays_twin_sync).toList();
  }

  @protected
  List<dynamic> cst_encode_log_2_twin_normal(Log2TwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_32(raw.key), cst_encode_String(raw.value)];
  }

  @protected
  List<dynamic> cst_encode_log_2_twin_rust_async(Log2TwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_32(raw.key), cst_encode_String(raw.value)];
  }

  @protected
  List<dynamic> cst_encode_log_2_twin_sync(Log2TwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_32(raw.key), cst_encode_String(raw.value)];
  }

  @protected
  List<dynamic> cst_encode_log_twin_normal(LogTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_32(raw.key), cst_encode_u_32(raw.value)];
  }

  @protected
  List<dynamic> cst_encode_log_twin_rust_async(LogTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_32(raw.key), cst_encode_u_32(raw.value)];
  }

  @protected
  List<dynamic> cst_encode_macro_struct(MacroStruct raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.data)];
  }

  @protected
  List<dynamic> cst_encode_measure_twin_normal(MeasureTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is MeasureTwinNormal_Speed) {
      return [0, cst_encode_box_speed_twin_normal(raw.field0)];
    }
    if (raw is MeasureTwinNormal_Distance) {
      return [1, cst_encode_box_distance_twin_normal(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_measure_twin_rust_async(MeasureTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is MeasureTwinRustAsync_Speed) {
      return [0, cst_encode_box_speed_twin_rust_async(raw.field0)];
    }
    if (raw is MeasureTwinRustAsync_Distance) {
      return [1, cst_encode_box_distance_twin_rust_async(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_measure_twin_sync(MeasureTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is MeasureTwinSync_Speed) {
      return [0, cst_encode_box_speed_twin_sync(raw.field0)];
    }
    if (raw is MeasureTwinSync_Distance) {
      return [1, cst_encode_box_distance_twin_sync(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_message_id_twin_normal(MessageIdTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_8_array_32(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_message_id_twin_rust_async(
      MessageIdTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_8_array_32(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_message_id_twin_sync(MessageIdTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_8_array_32(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_mirror_struct_twin_normal(
      MirrorStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_application_settings(raw.a),
      cst_encode_my_struct(raw.b),
      cst_encode_list_my_enum(raw.c),
      cst_encode_list_application_settings(raw.d)
    ];
  }

  @protected
  List<dynamic> cst_encode_mirror_struct_twin_rust_async(
      MirrorStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_application_settings(raw.a),
      cst_encode_my_struct(raw.b),
      cst_encode_list_my_enum(raw.c),
      cst_encode_list_application_settings(raw.d)
    ];
  }

  @protected
  List<dynamic> cst_encode_mirror_struct_twin_sync(MirrorStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_application_settings(raw.a),
      cst_encode_my_struct(raw.b),
      cst_encode_list_my_enum(raw.c),
      cst_encode_list_application_settings(raw.d)
    ];
  }

  @protected
  List<dynamic> cst_encode_more_than_just_one_raw_string_struct_twin_normal(
      MoreThanJustOneRawStringStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.regular),
      cst_encode_String(raw.type),
      cst_encode_bool(raw.async),
      cst_encode_String(raw.another)
    ];
  }

  @protected
  List<dynamic> cst_encode_more_than_just_one_raw_string_struct_twin_rust_async(
      MoreThanJustOneRawStringStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.regular),
      cst_encode_String(raw.type),
      cst_encode_bool(raw.async),
      cst_encode_String(raw.another)
    ];
  }

  @protected
  List<dynamic> cst_encode_more_than_just_one_raw_string_struct_twin_sync(
      MoreThanJustOneRawStringStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.regular),
      cst_encode_String(raw.type),
      cst_encode_bool(raw.async),
      cst_encode_String(raw.another)
    ];
  }

  @protected
  List<dynamic> cst_encode_my_callable_twin_normal(MyCallableTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.one)];
  }

  @protected
  List<dynamic> cst_encode_my_callable_twin_rust_async(
      MyCallableTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.one)];
  }

  @protected
  List<dynamic> cst_encode_my_callable_twin_sync(MyCallableTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.one)];
  }

  @protected
  List<dynamic> cst_encode_my_nested_struct_twin_normal(
      MyNestedStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_my_tree_node_twin_normal(raw.treeNode),
      cst_encode_weekdays_twin_normal(raw.weekday)
    ];
  }

  @protected
  List<dynamic> cst_encode_my_nested_struct_twin_rust_async(
      MyNestedStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_my_tree_node_twin_rust_async(raw.treeNode),
      cst_encode_weekdays_twin_rust_async(raw.weekday)
    ];
  }

  @protected
  List<dynamic> cst_encode_my_nested_struct_twin_sync(
      MyNestedStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_my_tree_node_twin_sync(raw.treeNode),
      cst_encode_weekdays_twin_sync(raw.weekday)
    ];
  }

  @protected
  List<dynamic> cst_encode_my_size(MySize raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.width), cst_encode_i_32(raw.height)];
  }

  @protected
  List<dynamic> cst_encode_my_stream_entry_twin_normal(
      MyStreamEntryTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.hello)];
  }

  @protected
  List<dynamic> cst_encode_my_stream_entry_twin_rust_async(
      MyStreamEntryTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.hello)];
  }

  @protected
  List<dynamic> cst_encode_my_struct(MyStruct raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_bool(raw.content)];
  }

  @protected
  List<dynamic> cst_encode_my_tree_node_twin_normal(MyTreeNodeTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_i_32(raw.valueI32),
      cst_encode_list_prim_u_8_strict(raw.valueVecU8),
      cst_encode_bool(raw.valueBoolean),
      cst_encode_list_my_tree_node_twin_normal(raw.children)
    ];
  }

  @protected
  List<dynamic> cst_encode_my_tree_node_twin_rust_async(
      MyTreeNodeTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_i_32(raw.valueI32),
      cst_encode_list_prim_u_8_strict(raw.valueVecU8),
      cst_encode_bool(raw.valueBoolean),
      cst_encode_list_my_tree_node_twin_rust_async(raw.children)
    ];
  }

  @protected
  List<dynamic> cst_encode_my_tree_node_twin_sync(MyTreeNodeTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_i_32(raw.valueI32),
      cst_encode_list_prim_u_8_strict(raw.valueVecU8),
      cst_encode_bool(raw.valueBoolean),
      cst_encode_list_my_tree_node_twin_sync(raw.children)
    ];
  }

  @protected
  List<dynamic> cst_encode_nested_raw_string_mirrored(
      NestedRawStringMirrored raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_raw_string_mirrored(raw.raw)];
  }

  @protected
  List<dynamic> cst_encode_new_simple_struct(NewSimpleStruct raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.field)];
  }

  @protected
  List<dynamic> cst_encode_new_type_int_twin_normal(NewTypeIntTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_64(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_64(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_new_type_int_twin_sync(NewTypeIntTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_64(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_note_twin_normal(NoteTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_box_weekdays_twin_normal(raw.day),
      cst_encode_String(raw.body)
    ];
  }

  @protected
  List<dynamic> cst_encode_note_twin_rust_async(NoteTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_box_weekdays_twin_rust_async(raw.day),
      cst_encode_String(raw.body)
    ];
  }

  @protected
  List<dynamic> cst_encode_note_twin_sync(NoteTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_box_weekdays_twin_sync(raw.day),
      cst_encode_String(raw.body)
    ];
  }

  @protected
  List<dynamic> cst_encode_numbers(Numbers raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_list_prim_i_32_strict(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_old_simple_struct(OldSimpleStruct raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.field)];
  }

  @protected
  List<dynamic> cst_encode_opaque_nested_twin_moi(OpaqueNestedTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_RustOpaque_HideDataTwinMoi(raw.first),
      cst_encode_RustOpaque_HideDataTwinMoi(raw.second)
    ];
  }

  @protected
  List<dynamic> cst_encode_opaque_nested_twin_normal(
      OpaqueNestedTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_RustOpaque_HideDataTwinNormal(raw.first),
      cst_encode_RustOpaque_HideDataTwinNormal(raw.second)
    ];
  }

  @protected
  List<dynamic> cst_encode_opaque_nested_twin_rust_async(
      OpaqueNestedTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_RustOpaque_HideDataTwinRustAsync(raw.first),
      cst_encode_RustOpaque_HideDataTwinRustAsync(raw.second)
    ];
  }

  @protected
  List<dynamic> cst_encode_opaque_nested_twin_rust_async_moi(
      OpaqueNestedTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_RustOpaque_HideDataTwinRustAsyncMoi(raw.first),
      cst_encode_RustOpaque_HideDataTwinRustAsyncMoi(raw.second)
    ];
  }

  @protected
  List<dynamic> cst_encode_opaque_nested_twin_sync(OpaqueNestedTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_RustOpaque_HideDataTwinSync(raw.first),
      cst_encode_RustOpaque_HideDataTwinSync(raw.second)
    ];
  }

  @protected
  List<dynamic> cst_encode_opaque_nested_twin_sync_moi(
      OpaqueNestedTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_RustOpaque_HideDataTwinSyncMoi(raw.first),
      cst_encode_RustOpaque_HideDataTwinSyncMoi(raw.second)
    ];
  }

  @protected
  String? cst_encode_opt_String(String? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_String(raw);
  }

  @protected
  Object?
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
            raw);
  }

  @protected
  Object?
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
            raw);
  }

  @protected
  Object?
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
            raw);
  }

  @protected
  Object?
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
            raw);
  }

  @protected
  Object?
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
            raw);
  }

  @protected
  Object?
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
            raw);
  }

  @protected
  Object? cst_encode_opt_box_autoadd_Chrono_Duration(Duration? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_Chrono_Duration(raw);
  }

  @protected
  Object? cst_encode_opt_box_autoadd_Chrono_Naive(DateTime? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_Chrono_Naive(raw);
  }

  @protected
  Object? cst_encode_opt_box_autoadd_Chrono_Utc(DateTime? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_Chrono_Utc(raw);
  }

  @protected
  PlatformPointer? cst_encode_opt_box_autoadd_DartOpaque(Object? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_DartOpaque(raw);
  }

  @protected
  Object? cst_encode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(
      HideDataAnotherTwinMoi? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(raw);
  }

  @protected
  Object? cst_encode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
      HideDataAnotherTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(raw);
  }

  @protected
  Object? cst_encode_opt_box_autoadd_RustOpaque_HideDataTwinMoi(
      HideDataTwinMoi? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_RustOpaque_HideDataTwinMoi(raw);
  }

  @protected
  Object? cst_encode_opt_box_autoadd_RustOpaque_HideDataTwinNormal(
      HideDataTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_RustOpaque_HideDataTwinNormal(raw);
  }

  @protected
  Object? cst_encode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsync(
      HideDataTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_RustOpaque_HideDataTwinRustAsync(raw);
  }

  @protected
  Object? cst_encode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
      HideDataTwinRustAsyncMoi? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(raw);
  }

  @protected
  Object? cst_encode_opt_box_autoadd_RustOpaque_HideDataTwinSync(
      HideDataTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_RustOpaque_HideDataTwinSync(raw);
  }

  @protected
  Object? cst_encode_opt_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
      HideDataTwinSyncMoi? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_RustOpaque_HideDataTwinSyncMoi(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_application_env(
      ApplicationEnv? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_application_env(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_application_mode(ApplicationMode? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_application_mode(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_attribute_twin_normal(
      AttributeTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_attribute_twin_normal(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_attribute_twin_rust_async(
      AttributeTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_attribute_twin_rust_async(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_attribute_twin_sync(
      AttributeTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_attribute_twin_sync(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_basic_general_enum_twin_normal(
      BasicGeneralEnumTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_basic_general_enum_twin_normal(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_basic_general_enum_twin_rust_async(
      BasicGeneralEnumTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_basic_general_enum_twin_rust_async(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_basic_general_enum_twin_sync(
      BasicGeneralEnumTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_basic_general_enum_twin_sync(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_basic_primitive_enum_twin_normal(
      BasicPrimitiveEnumTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_basic_primitive_enum_twin_normal(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_basic_primitive_enum_twin_rust_async(
      BasicPrimitiveEnumTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_basic_primitive_enum_twin_rust_async(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_basic_primitive_enum_twin_sync(
      BasicPrimitiveEnumTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_basic_primitive_enum_twin_sync(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_basic_struct_twin_normal(
      BasicStructTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_basic_struct_twin_normal(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_basic_struct_twin_rust_async(
      BasicStructTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_basic_struct_twin_rust_async(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_basic_struct_twin_sync(
      BasicStructTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_basic_struct_twin_sync(raw);
  }

  @protected
  bool? cst_encode_opt_box_autoadd_bool(bool? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_bool(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_element_twin_normal(
      ElementTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_element_twin_normal(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_element_twin_rust_async(
      ElementTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_element_twin_rust_async(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_element_twin_sync(
      ElementTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_element_twin_sync(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_exotic_optionals_twin_normal(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_exotic_optionals_twin_rust_async(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_exotic_optionals_twin_sync(raw);
  }

  @protected
  double? cst_encode_opt_box_autoadd_f_32(double? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_f_32(raw);
  }

  @protected
  double? cst_encode_opt_box_autoadd_f_64(double? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_f_64(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_i_16(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_i_16(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_i_32(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_i_32(raw);
  }

  @protected
  Object? cst_encode_opt_box_autoadd_i_64(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_i_64(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_i_8(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_i_8(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_isize(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_isize(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_measure_twin_normal(
      MeasureTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_measure_twin_normal(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_measure_twin_rust_async(
      MeasureTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_measure_twin_rust_async(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_measure_twin_sync(
      MeasureTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_measure_twin_sync(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_new_type_int_twin_normal(
      NewTypeIntTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_new_type_int_twin_normal(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_new_type_int_twin_rust_async(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_new_type_int_twin_sync(
      NewTypeIntTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_new_type_int_twin_sync(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_autoadd_record_string_i_32(
      (String, int)? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_record_string_i_32(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_u_16(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_u_16(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_u_32(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_u_32(raw);
  }

  @protected
  Object? cst_encode_opt_box_autoadd_u_64(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_u_64(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_u_8(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_u_8(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_usize(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_usize(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_weekdays_twin_normal(
      WeekdaysTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_weekdays_twin_normal(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_autoadd_weekdays_twin_rust_async(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_weekdays_twin_sync(WeekdaysTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_weekdays_twin_sync(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_benchmark_binary_tree_twin_normal(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_benchmark_binary_tree_twin_rust_async(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_benchmark_binary_tree_twin_sync(raw);
  }

  @protected
  bool? cst_encode_opt_box_bool(bool? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_bool(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_exotic_optionals_twin_normal(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_box_exotic_optionals_twin_rust_async(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_box_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_exotic_optionals_twin_sync(raw);
  }

  @protected
  double? cst_encode_opt_box_f_64(double? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_f_64(raw);
  }

  @protected
  int? cst_encode_opt_box_i_32(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_i_32(raw);
  }

  @protected
  Object? cst_encode_opt_box_i_64(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_i_64(raw);
  }

  @protected
  int? cst_encode_opt_box_i_8(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_i_8(raw);
  }

  @protected
  int? cst_encode_opt_box_u_8(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_u_8(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_list_attribute_twin_normal(
      List<AttributeTwinNormal>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_list_attribute_twin_normal(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_list_attribute_twin_rust_async(
      List<AttributeTwinRustAsync>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_list_attribute_twin_rust_async(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_list_attribute_twin_sync(
      List<AttributeTwinSync>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_list_attribute_twin_sync(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_list_element_twin_normal(
      List<ElementTwinNormal>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_list_element_twin_normal(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_list_element_twin_rust_async(
      List<ElementTwinRustAsync>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_list_element_twin_rust_async(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_list_element_twin_sync(
      List<ElementTwinSync>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_list_element_twin_sync(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_list_opt_box_autoadd_attribute_twin_normal(
      List<AttributeTwinNormal?>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_list_opt_box_autoadd_attribute_twin_normal(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_list_opt_box_autoadd_attribute_twin_rust_async(
      List<AttributeTwinRustAsync?>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_list_opt_box_autoadd_attribute_twin_rust_async(raw);
  }

  @protected
  List<dynamic>? cst_encode_opt_list_opt_box_autoadd_attribute_twin_sync(
      List<AttributeTwinSync?>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? null
        : cst_encode_list_opt_box_autoadd_attribute_twin_sync(raw);
  }

  @protected
  Float32List? cst_encode_opt_list_prim_f_32_strict(Float32List? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_list_prim_f_32_strict(raw);
  }

  @protected
  Float64List? cst_encode_opt_list_prim_f_64_strict(Float64List? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_list_prim_f_64_strict(raw);
  }

  @protected
  Int32List? cst_encode_opt_list_prim_i_32_strict(Int32List? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_list_prim_i_32_strict(raw);
  }

  @protected
  Int8List? cst_encode_opt_list_prim_i_8_strict(Int8List? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_list_prim_i_8_strict(raw);
  }

  @protected
  Uint8List? cst_encode_opt_list_prim_u_8_strict(Uint8List? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_list_prim_u_8_strict(raw);
  }

  @protected
  List<dynamic> cst_encode_opt_vecs_twin_normal(OptVecsTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_list_opt_box_autoadd_i_32(raw.i32),
      cst_encode_list_opt_box_autoadd_weekdays_twin_normal(raw.enums),
      cst_encode_list_opt_String(raw.strings),
      cst_encode_list_opt_list_prim_i_32_strict(raw.buffers)
    ];
  }

  @protected
  List<dynamic> cst_encode_opt_vecs_twin_rust_async(OptVecsTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_list_opt_box_autoadd_i_32(raw.i32),
      cst_encode_list_opt_box_autoadd_weekdays_twin_rust_async(raw.enums),
      cst_encode_list_opt_String(raw.strings),
      cst_encode_list_opt_list_prim_i_32_strict(raw.buffers)
    ];
  }

  @protected
  List<dynamic> cst_encode_opt_vecs_twin_sync(OptVecsTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_list_opt_box_autoadd_i_32(raw.i32),
      cst_encode_list_opt_box_autoadd_weekdays_twin_sync(raw.enums),
      cst_encode_list_opt_String(raw.strings),
      cst_encode_list_opt_list_prim_i_32_strict(raw.buffers)
    ];
  }

  @protected
  List<dynamic> cst_encode_point_twin_normal(PointTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_f_32(raw.x), cst_encode_f_32(raw.y)];
  }

  @protected
  List<dynamic> cst_encode_point_twin_normal_array_2(
      PointTwinNormalArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_point_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_point_twin_rust_async(PointTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_f_32(raw.x), cst_encode_f_32(raw.y)];
  }

  @protected
  List<dynamic> cst_encode_point_twin_rust_async_array_2(
      PointTwinRustAsyncArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_point_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_point_twin_sync(PointTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_f_32(raw.x), cst_encode_f_32(raw.y)];
  }

  @protected
  List<dynamic> cst_encode_point_twin_sync_array_2(PointTwinSyncArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_point_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_raw_string_enum_mirrored(RawStringEnumMirrored raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is RawStringEnumMirrored_Raw) {
      return [0, cst_encode_box_autoadd_raw_string_mirrored(raw.field0)];
    }
    if (raw is RawStringEnumMirrored_Nested) {
      return [1, cst_encode_box_autoadd_nested_raw_string_mirrored(raw.field0)];
    }
    if (raw is RawStringEnumMirrored_ListOfNested) {
      return [
        2,
        cst_encode_box_autoadd_list_of_nested_raw_string_mirrored(raw.field0)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_raw_string_item_struct_twin_normal(
      RawStringItemStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.type)];
  }

  @protected
  List<dynamic> cst_encode_raw_string_item_struct_twin_rust_async(
      RawStringItemStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.type)];
  }

  @protected
  List<dynamic> cst_encode_raw_string_item_struct_twin_sync(
      RawStringItemStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.type)];
  }

  @protected
  List<dynamic> cst_encode_raw_string_mirrored(RawStringMirrored raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.value)];
  }

  @protected
  List<dynamic> cst_encode_record_application_settings_raw_string_enum_mirrored(
      (ApplicationSettings, RawStringEnumMirrored) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_application_settings(raw.$1),
      cst_encode_raw_string_enum_mirrored(raw.$2)
    ];
  }

  @protected
  List<dynamic>
      cst_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_moi(
          (OpaqueOneTwinMoi, OpaqueTwoTwinMoi) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          raw.$1),
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          raw.$2)
    ];
  }

  @protected
  List<dynamic>
      cst_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_normal_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_normal(
          (OpaqueOneTwinNormal, OpaqueTwoTwinNormal) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          raw.$1),
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          raw.$2)
    ];
  }

  @protected
  List<dynamic>
      cst_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async(
          (OpaqueOneTwinRustAsync, OpaqueTwoTwinRustAsync) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          raw.$1),
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          raw.$2)
    ];
  }

  @protected
  List<dynamic>
      cst_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_moi(
          (OpaqueOneTwinRustAsyncMoi, OpaqueTwoTwinRustAsyncMoi) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          raw.$1),
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          raw.$2)
    ];
  }

  @protected
  List<dynamic>
      cst_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync(
          (OpaqueOneTwinSync, OpaqueTwoTwinSync) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          raw.$1),
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          raw.$2)
    ];
  }

  @protected
  List<dynamic>
      cst_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_moi(
          (OpaqueOneTwinSyncMoi, OpaqueTwoTwinSyncMoi) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          raw.$1),
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          raw.$2)
    ];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_basic_general_enum_twin_normal(
      (int, BasicGeneralEnumTwinNormal) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_i_32(raw.$1),
      cst_encode_basic_general_enum_twin_normal(raw.$2)
    ];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_basic_general_enum_twin_rust_async(
      (int, BasicGeneralEnumTwinRustAsync) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_i_32(raw.$1),
      cst_encode_basic_general_enum_twin_rust_async(raw.$2)
    ];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_basic_general_enum_twin_sync(
      (int, BasicGeneralEnumTwinSync) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_i_32(raw.$1),
      cst_encode_basic_general_enum_twin_sync(raw.$2)
    ];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_basic_primitive_enum_twin_normal(
      (int, BasicPrimitiveEnumTwinNormal) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_i_32(raw.$1),
      cst_encode_basic_primitive_enum_twin_normal(raw.$2)
    ];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_basic_primitive_enum_twin_rust_async(
      (int, BasicPrimitiveEnumTwinRustAsync) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_i_32(raw.$1),
      cst_encode_basic_primitive_enum_twin_rust_async(raw.$2)
    ];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_basic_primitive_enum_twin_sync(
      (int, BasicPrimitiveEnumTwinSync) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_i_32(raw.$1),
      cst_encode_basic_primitive_enum_twin_sync(raw.$2)
    ];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_basic_struct_twin_normal(
      (int, BasicStructTwinNormal) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_i_32(raw.$1),
      cst_encode_basic_struct_twin_normal(raw.$2)
    ];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_basic_struct_twin_rust_async(
      (int, BasicStructTwinRustAsync) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_i_32(raw.$1),
      cst_encode_basic_struct_twin_rust_async(raw.$2)
    ];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_basic_struct_twin_sync(
      (int, BasicStructTwinSync) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_basic_struct_twin_sync(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_bool((int, bool) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_bool(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_f_32((int, double) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_f_32(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_f_64((int, double) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_f_64(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_i_16((int, int) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_i_16(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_i_32((int, int) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_i_32(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_i_64((int, int) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_i_64(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_i_8((int, int) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_i_8(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_isize((int, int) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_isize(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_list_prim_u_8_strict(
      (int, Uint8List) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_list_prim_u_8_strict(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_string((int, String) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_String(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_u_16((int, int) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_u_16(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_u_32((int, int) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_u_32(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_u_64((int, int) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_u_64(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_u_8((int, int) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_u_8(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_i_32_usize((int, int) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.$1), cst_encode_usize(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_string_enum_simple_twin_normal(
      (String, EnumSimpleTwinNormal) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.$1),
      cst_encode_enum_simple_twin_normal(raw.$2)
    ];
  }

  @protected
  List<dynamic> cst_encode_record_string_enum_simple_twin_rust_async(
      (String, EnumSimpleTwinRustAsync) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.$1),
      cst_encode_enum_simple_twin_rust_async(raw.$2)
    ];
  }

  @protected
  List<dynamic> cst_encode_record_string_enum_simple_twin_sync(
      (String, EnumSimpleTwinSync) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.$1),
      cst_encode_enum_simple_twin_sync(raw.$2)
    ];
  }

  @protected
  List<dynamic> cst_encode_record_string_hash_map_value(
      (String, HashMapValue) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.$1), cst_encode_hash_map_value(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_string_i_32((String, int) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.$1), cst_encode_i_32(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_string_kitchen_sink_twin_normal(
      (String, KitchenSinkTwinNormal) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.$1),
      cst_encode_kitchen_sink_twin_normal(raw.$2)
    ];
  }

  @protected
  List<dynamic> cst_encode_record_string_kitchen_sink_twin_rust_async(
      (String, KitchenSinkTwinRustAsync) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.$1),
      cst_encode_kitchen_sink_twin_rust_async(raw.$2)
    ];
  }

  @protected
  List<dynamic> cst_encode_record_string_kitchen_sink_twin_sync(
      (String, KitchenSinkTwinSync) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.$1),
      cst_encode_kitchen_sink_twin_sync(raw.$2)
    ];
  }

  @protected
  List<dynamic> cst_encode_record_string_list_prim_u_8_strict(
      (String, Uint8List) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.$1), cst_encode_list_prim_u_8_strict(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_string_my_size((String, MySize) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.$1), cst_encode_my_size(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_string_string((String, String) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.$1), cst_encode_String(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_record_u_8_application_mode(
      (int, ApplicationMode) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_8(raw.$1), cst_encode_application_mode(raw.$2)];
  }

  @protected
  List<dynamic> cst_encode_sequences(Sequences raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_list_prim_i_32_strict(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_simple_struct_twin_normal(
      SimpleStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.one)];
  }

  @protected
  List<dynamic> cst_encode_simple_struct_twin_rust_async(
      SimpleStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.one)];
  }

  @protected
  List<dynamic> cst_encode_simple_struct_twin_sync(SimpleStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.one)];
  }

  @protected
  List<dynamic> cst_encode_some_struct_twin_normal(SomeStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_32(raw.value)];
  }

  @protected
  List<dynamic> cst_encode_some_struct_twin_rust_async(
      SomeStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_32(raw.value)];
  }

  @protected
  List<dynamic> cst_encode_some_struct_twin_sync(SomeStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_32(raw.value)];
  }

  @protected
  List<dynamic> cst_encode_speed_twin_normal(SpeedTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is SpeedTwinNormal_Unknown) {
      return [0];
    }
    if (raw is SpeedTwinNormal_GPS) {
      return [1, cst_encode_f_64(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_speed_twin_rust_async(SpeedTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is SpeedTwinRustAsync_Unknown) {
      return [0];
    }
    if (raw is SpeedTwinRustAsync_GPS) {
      return [1, cst_encode_f_64(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_speed_twin_sync(SpeedTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is SpeedTwinSync_Unknown) {
      return [0];
    }
    if (raw is SpeedTwinSync_GPS) {
      return [1, cst_encode_f_64(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> cst_encode_struct_in_lower_level(StructInLowerLevel raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_struct_in_upper_level(raw.inner)];
  }

  @protected
  List<dynamic> cst_encode_struct_in_upper_level(StructInUpperLevel raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_usize(raw.upper)];
  }

  @protected
  List<dynamic> cst_encode_struct_with_comments_twin_normal(
      StructWithCommentsTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.fieldWithComments)];
  }

  @protected
  List<dynamic> cst_encode_struct_with_comments_twin_rust_async(
      StructWithCommentsTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.fieldWithComments)];
  }

  @protected
  List<dynamic> cst_encode_struct_with_comments_twin_sync(
      StructWithCommentsTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.fieldWithComments)];
  }

  @protected
  List<dynamic> cst_encode_struct_with_enum_twin_normal(
      StructWithEnumTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_abc_twin_normal(raw.abc1),
      cst_encode_abc_twin_normal(raw.abc2)
    ];
  }

  @protected
  List<dynamic> cst_encode_struct_with_enum_twin_rust_async(
      StructWithEnumTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_abc_twin_rust_async(raw.abc1),
      cst_encode_abc_twin_rust_async(raw.abc2)
    ];
  }

  @protected
  List<dynamic> cst_encode_struct_with_enum_twin_sync(
      StructWithEnumTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_abc_twin_sync(raw.abc1),
      cst_encode_abc_twin_sync(raw.abc2)
    ];
  }

  @protected
  List<dynamic> cst_encode_struct_with_explicit_auto_opaque_field_twin_moi(
      StructWithExplicitAutoOpaqueFieldTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          raw.autoOpaque),
      cst_encode_i_32(raw.normal)
    ];
  }

  @protected
  List<dynamic> cst_encode_struct_with_explicit_auto_opaque_field_twin_normal(
      StructWithExplicitAutoOpaqueFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          raw.autoOpaque),
      cst_encode_i_32(raw.normal)
    ];
  }

  @protected
  List<dynamic>
      cst_encode_struct_with_explicit_auto_opaque_field_twin_rust_async(
          StructWithExplicitAutoOpaqueFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          raw.autoOpaque),
      cst_encode_i_32(raw.normal)
    ];
  }

  @protected
  List<dynamic>
      cst_encode_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
          StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          raw.autoOpaque),
      cst_encode_i_32(raw.normal)
    ];
  }

  @protected
  List<dynamic> cst_encode_struct_with_explicit_auto_opaque_field_twin_sync(
      StructWithExplicitAutoOpaqueFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          raw.autoOpaque),
      cst_encode_i_32(raw.normal)
    ];
  }

  @protected
  List<dynamic> cst_encode_struct_with_explicit_auto_opaque_field_twin_sync_moi(
      StructWithExplicitAutoOpaqueFieldTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          raw.autoOpaque),
      cst_encode_i_32(raw.normal)
    ];
  }

  @protected
  List<dynamic> cst_encode_struct_with_good_and_opaque_field_twin_moi(
      StructWithGoodAndOpaqueFieldTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.good),
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          raw.opaque),
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          raw.optionOpaque)
    ];
  }

  @protected
  List<dynamic> cst_encode_struct_with_good_and_opaque_field_twin_normal(
      StructWithGoodAndOpaqueFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.good),
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          raw.opaque),
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          raw.optionOpaque)
    ];
  }

  @protected
  List<dynamic> cst_encode_struct_with_good_and_opaque_field_twin_rust_async(
      StructWithGoodAndOpaqueFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.good),
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          raw.opaque),
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          raw.optionOpaque)
    ];
  }

  @protected
  List<dynamic>
      cst_encode_struct_with_good_and_opaque_field_twin_rust_async_moi(
          StructWithGoodAndOpaqueFieldTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.good),
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          raw.opaque),
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          raw.optionOpaque)
    ];
  }

  @protected
  List<dynamic> cst_encode_struct_with_good_and_opaque_field_twin_sync(
      StructWithGoodAndOpaqueFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.good),
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          raw.opaque),
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          raw.optionOpaque)
    ];
  }

  @protected
  List<dynamic> cst_encode_struct_with_good_and_opaque_field_twin_sync_moi(
      StructWithGoodAndOpaqueFieldTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_String(raw.good),
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          raw.opaque),
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          raw.optionOpaque)
    ];
  }

  @protected
  List<dynamic> cst_encode_struct_with_hash_map(StructWithHashMap raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_Map_String_hash_map_value(raw.map)];
  }

  @protected
  List<dynamic> cst_encode_struct_with_one_field_twin_normal(
      StructWithOneFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.a)];
  }

  @protected
  List<dynamic> cst_encode_struct_with_one_field_twin_rust_async(
      StructWithOneFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.a)];
  }

  @protected
  List<dynamic> cst_encode_struct_with_one_field_twin_sync(
      StructWithOneFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.a)];
  }

  @protected
  List<dynamic> cst_encode_struct_with_two_field_twin_normal(
      StructWithTwoFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.a), cst_encode_i_32(raw.b)];
  }

  @protected
  List<dynamic> cst_encode_struct_with_two_field_twin_rust_async(
      StructWithTwoFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.a), cst_encode_i_32(raw.b)];
  }

  @protected
  List<dynamic> cst_encode_struct_with_two_field_twin_sync(
      StructWithTwoFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.a), cst_encode_i_32(raw.b)];
  }

  @protected
  List<dynamic> cst_encode_struct_with_zero_field_twin_normal(
      StructWithZeroFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [];
  }

  @protected
  List<dynamic> cst_encode_struct_with_zero_field_twin_rust_async(
      StructWithZeroFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [];
  }

  @protected
  List<dynamic> cst_encode_struct_with_zero_field_twin_sync(
      StructWithZeroFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [];
  }

  @protected
  List<dynamic> cst_encode_sum_with_twin_normal(SumWithTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_32(raw.x)];
  }

  @protected
  List<dynamic> cst_encode_sum_with_twin_normal_array_3(
      SumWithTwinNormalArray3 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_sum_with_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_sum_with_twin_rust_async(SumWithTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_32(raw.x)];
  }

  @protected
  List<dynamic> cst_encode_sum_with_twin_rust_async_array_3(
      SumWithTwinRustAsyncArray3 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_sum_with_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_sum_with_twin_sync(SumWithTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_32(raw.x)];
  }

  @protected
  List<dynamic> cst_encode_sum_with_twin_sync_array_3(
      SumWithTwinSyncArray3 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_sum_with_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_test_chrono_twin_normal(TestChronoTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_opt_box_autoadd_Chrono_Utc(raw.dt),
      cst_encode_opt_box_autoadd_Chrono_Naive(raw.dt2),
      cst_encode_opt_box_autoadd_Chrono_Duration(raw.du)
    ];
  }

  @protected
  List<dynamic> cst_encode_test_chrono_twin_rust_async(
      TestChronoTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_opt_box_autoadd_Chrono_Utc(raw.dt),
      cst_encode_opt_box_autoadd_Chrono_Naive(raw.dt2),
      cst_encode_opt_box_autoadd_Chrono_Duration(raw.du)
    ];
  }

  @protected
  List<dynamic> cst_encode_test_chrono_twin_sync(TestChronoTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_opt_box_autoadd_Chrono_Utc(raw.dt),
      cst_encode_opt_box_autoadd_Chrono_Naive(raw.dt2),
      cst_encode_opt_box_autoadd_Chrono_Duration(raw.du)
    ];
  }

  @protected
  List<dynamic> cst_encode_test_id_twin_normal(TestIdTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32_array_2(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_test_id_twin_normal_array_2(
      TestIdTwinNormalArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_test_id_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_test_id_twin_normal_array_4(
      TestIdTwinNormalArray4 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_test_id_twin_normal(raw);
  }

  @protected
  List<dynamic> cst_encode_test_id_twin_rust_async(TestIdTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32_array_2(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_test_id_twin_rust_async_array_2(
      TestIdTwinRustAsyncArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_test_id_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_test_id_twin_rust_async_array_4(
      TestIdTwinRustAsyncArray4 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_test_id_twin_rust_async(raw);
  }

  @protected
  List<dynamic> cst_encode_test_id_twin_sync(TestIdTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32_array_2(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_test_id_twin_sync_array_2(TestIdTwinSyncArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_test_id_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_test_id_twin_sync_array_4(TestIdTwinSyncArray4 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_test_id_twin_sync(raw);
  }

  @protected
  List<dynamic> cst_encode_test_model_twin_normal(TestModelTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_u_64(raw.id),
      cst_encode_String(raw.name),
      cst_encode_my_enum(raw.aliasEnum),
      cst_encode_my_struct(raw.aliasStruct)
    ];
  }

  @protected
  List<dynamic> cst_encode_test_model_twin_rust_async(
      TestModelTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_u_64(raw.id),
      cst_encode_String(raw.name),
      cst_encode_my_enum(raw.aliasEnum),
      cst_encode_my_struct(raw.aliasStruct)
    ];
  }

  @protected
  List<dynamic> cst_encode_test_model_twin_sync(TestModelTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_u_64(raw.id),
      cst_encode_String(raw.name),
      cst_encode_my_enum(raw.aliasEnum),
      cst_encode_my_struct(raw.aliasStruct)
    ];
  }

  @protected
  List<dynamic> cst_encode_tuple_struct_with_one_field_twin_normal(
      TupleStructWithOneFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_tuple_struct_with_one_field_twin_rust_async(
      TupleStructWithOneFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_tuple_struct_with_one_field_twin_sync(
      TupleStructWithOneFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.field0)];
  }

  @protected
  List<dynamic> cst_encode_tuple_struct_with_two_field_twin_normal(
      TupleStructWithTwoFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.field0), cst_encode_i_32(raw.field1)];
  }

  @protected
  List<dynamic> cst_encode_tuple_struct_with_two_field_twin_rust_async(
      TupleStructWithTwoFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.field0), cst_encode_i_32(raw.field1)];
  }

  @protected
  List<dynamic> cst_encode_tuple_struct_with_two_field_twin_sync(
      TupleStructWithTwoFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_i_32(raw.field0), cst_encode_i_32(raw.field1)];
  }

  @protected
  Object cst_encode_u_64(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return castNativeBigInt(raw);
  }

  @protected
  Uint8List cst_encode_u_8_array_1600(U8Array1600 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return Uint8List.fromList(raw);
  }

  @protected
  Uint8List cst_encode_u_8_array_2(U8Array2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return Uint8List.fromList(raw);
  }

  @protected
  Uint8List cst_encode_u_8_array_32(U8Array32 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return Uint8List.fromList(raw);
  }

  @protected
  Uint8List cst_encode_u_8_array_5(U8Array5 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return Uint8List.fromList(raw);
  }

  @protected
  Uint8List cst_encode_u_8_array_8(U8Array8 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return Uint8List.fromList(raw);
  }

  @protected
  List<dynamic> cst_encode_user_id_twin_normal(UserIdTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_32(raw.value)];
  }

  @protected
  List<dynamic> cst_encode_user_id_twin_rust_async(UserIdTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_32(raw.value)];
  }

  @protected
  List<dynamic> cst_encode_user_id_twin_sync(UserIdTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_32(raw.value)];
  }

  @protected
  List<dynamic> cst_encode_vec_of_primitive_pack_twin_normal(
      VecOfPrimitivePackTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_list_prim_i_8_strict(raw.int8List),
      cst_encode_list_prim_u_8_strict(raw.uint8List),
      cst_encode_list_prim_i_16_strict(raw.int16List),
      cst_encode_list_prim_u_16_strict(raw.uint16List),
      cst_encode_list_prim_u_32_strict(raw.uint32List),
      cst_encode_list_prim_i_32_strict(raw.int32List),
      cst_encode_list_prim_u_64_strict(raw.uint64List),
      cst_encode_list_prim_i_64_strict(raw.int64List),
      cst_encode_list_prim_f_32_strict(raw.float32List),
      cst_encode_list_prim_f_64_strict(raw.float64List),
      cst_encode_list_bool(raw.boolList)
    ];
  }

  @protected
  List<dynamic> cst_encode_vec_of_primitive_pack_twin_rust_async(
      VecOfPrimitivePackTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_list_prim_i_8_strict(raw.int8List),
      cst_encode_list_prim_u_8_strict(raw.uint8List),
      cst_encode_list_prim_i_16_strict(raw.int16List),
      cst_encode_list_prim_u_16_strict(raw.uint16List),
      cst_encode_list_prim_u_32_strict(raw.uint32List),
      cst_encode_list_prim_i_32_strict(raw.int32List),
      cst_encode_list_prim_u_64_strict(raw.uint64List),
      cst_encode_list_prim_i_64_strict(raw.int64List),
      cst_encode_list_prim_f_32_strict(raw.float32List),
      cst_encode_list_prim_f_64_strict(raw.float64List),
      cst_encode_list_bool(raw.boolList)
    ];
  }

  @protected
  List<dynamic> cst_encode_vec_of_primitive_pack_twin_sync(
      VecOfPrimitivePackTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_list_prim_i_8_strict(raw.int8List),
      cst_encode_list_prim_u_8_strict(raw.uint8List),
      cst_encode_list_prim_i_16_strict(raw.int16List),
      cst_encode_list_prim_u_16_strict(raw.uint16List),
      cst_encode_list_prim_u_32_strict(raw.uint32List),
      cst_encode_list_prim_i_32_strict(raw.int32List),
      cst_encode_list_prim_u_64_strict(raw.uint64List),
      cst_encode_list_prim_i_64_strict(raw.int64List),
      cst_encode_list_prim_f_32_strict(raw.float32List),
      cst_encode_list_prim_f_64_strict(raw.float64List),
      cst_encode_list_bool(raw.boolList)
    ];
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
      BoxFnStringString raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
      BoxHelloTraitTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
      BoxHelloTraitTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
      BoxHelloTraitTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
      BoxHelloTraitTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
      BoxHelloTraitTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
      BoxHelloTraitTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
      BoxMyTraitTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
      BoxMyTraitTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
      BoxMyTraitTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
      BoxMyTraitTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
      BoxMyTraitTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
      BoxMyTraitTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
      ConstructorOpaqueStructTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
      ConstructorOpaqueSyncStructTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
      DroppableTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
      DroppableTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
      DroppableTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
      EnumWithGoodAndOpaqueWithoutOptionTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
      EnumWithGoodAndOpaqueWithoutOptionTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
      EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
      EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
      EnumWithGoodAndOpaqueWithoutOptionTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
      EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
      NonCloneSimpleEnumTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
      NonCloneSimpleEnumTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
      NonCloneSimpleEnumTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
      NonCloneSimpleEnumTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
      NonCloneSimpleEnumTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
      NonCloneSimpleEnumTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
      NonCloneSimpleTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
      NonCloneSimpleTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
      NonCloneSimpleTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
      NonCloneSimpleTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
      NonCloneSimpleTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
      NonCloneSimpleTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
      OpaqueOneTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
      OpaqueOneTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
      OpaqueOneTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
      OpaqueOneTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
      OpaqueOneTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
      OpaqueOneTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
      OpaqueTwoTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
      OpaqueTwoTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
      OpaqueTwoTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
      OpaqueTwoTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
      OpaqueTwoTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
      OpaqueTwoTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
      StructInMiscNoTwinExampleA raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
      BoxHelloTraitTwinMoi raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
      BoxHelloTraitTwinNormal raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
      BoxHelloTraitTwinRustAsync raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
      BoxHelloTraitTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
      BoxHelloTraitTwinSync raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
      BoxHelloTraitTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
      DroppableTwinNormal raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
      DroppableTwinRustAsync raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
      DroppableTwinSync raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
      NonCloneSimpleTwinMoi raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
      NonCloneSimpleTwinNormal raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
      NonCloneSimpleTwinRustAsync raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
      NonCloneSimpleTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
      NonCloneSimpleTwinSync raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
      NonCloneSimpleTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
      BoxHelloTraitTwinMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
      BoxHelloTraitTwinNormal raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
      BoxHelloTraitTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
      BoxHelloTraitTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
      BoxHelloTraitTwinSync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
      BoxHelloTraitTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
      ConstructorOpaqueStructTwinNormal raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
      ConstructorOpaqueSyncStructTwinNormal raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
      DroppableTwinNormal raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
      DroppableTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
      DroppableTwinSync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
      NonCloneSimpleEnumTwinMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
      NonCloneSimpleEnumTwinNormal raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
      NonCloneSimpleEnumTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
      NonCloneSimpleEnumTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
      NonCloneSimpleEnumTwinSync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
      NonCloneSimpleEnumTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
      NonCloneSimpleTwinMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
      NonCloneSimpleTwinNormal raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
      NonCloneSimpleTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
      NonCloneSimpleTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
      NonCloneSimpleTwinSync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
      NonCloneSimpleTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
      StructInMiscNoTwinExampleA raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
      StructInMiscNoTwinExampleB raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
      StructWithImplBlockInMultiFile raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs_DartOpaque_Output_unit(
      FutureOr<void> Function(Object) raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs_String_Output_unit(
      FutureOr<void> Function(String) raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_normal_Output_unit(
          FutureOr<void> Function(String, DemoStructForRustCallDartTwinNormal)
              raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_Output_unit(
          FutureOr<void> Function(
                  String, DemoStructForRustCallDartTwinRustAsync)
              raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs__Output_DartOpaque(
      FutureOr<Object> Function() raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs__Output_String(
      FutureOr<String> Function() raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs__Output_unit(
      FutureOr<void> Function() raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_normal_Output_demo_struct_for_rust_call_dart_twin_normal(
          FutureOr<DemoStructForRustCallDartTwinNormal> Function(
                  DemoStructForRustCallDartTwinNormal)
              raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_Output_demo_struct_for_rust_call_dart_twin_rust_async(
          FutureOr<DemoStructForRustCallDartTwinRustAsync> Function(
                  DemoStructForRustCallDartTwinRustAsync)
              raw);

  @protected
  PlatformPointer cst_encode_DartOpaque(Object raw);

  @protected
  int cst_encode_RustOpaque_BoxdynDartDebugTwinMoi(BoxDartDebugTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_BoxdynDartDebugTwinNormal(
      BoxDartDebugTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_BoxdynDartDebugTwinRustAsync(
      BoxDartDebugTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
      BoxDartDebugTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_BoxdynDartDebugTwinSync(BoxDartDebugTwinSync raw);

  @protected
  int cst_encode_RustOpaque_BoxdynDartDebugTwinSyncMoi(
      BoxDartDebugTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueReturnTwinMoi(FrbOpaqueReturnTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueReturnTwinNormal(
      FrbOpaqueReturnTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueReturnTwinRustAsync(
      FrbOpaqueReturnTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
      FrbOpaqueReturnTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueReturnTwinSync(
      FrbOpaqueReturnTwinSync raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
      FrbOpaqueReturnTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
      FrbOpaqueSyncReturnTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
      FrbOpaqueSyncReturnTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_HideDataAnotherTwinMoi(HideDataAnotherTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_HideDataAnotherTwinNormal(
      HideDataAnotherTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_HideDataTwinMoi(HideDataTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_HideDataTwinNormal(HideDataTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_HideDataTwinRustAsync(HideDataTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_HideDataTwinRustAsyncMoi(
      HideDataTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_HideDataTwinSync(HideDataTwinSync raw);

  @protected
  int cst_encode_RustOpaque_HideDataTwinSyncMoi(HideDataTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_MutexHideDataTwinMoi(MutexHideDataTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_MutexHideDataTwinNormal(
      MutexHideDataTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_MutexHideDataTwinRustAsync(
      MutexHideDataTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_MutexHideDataTwinRustAsyncMoi(
      MutexHideDataTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_MutexHideDataTwinSync(MutexHideDataTwinSync raw);

  @protected
  int cst_encode_RustOpaque_MutexHideDataTwinSyncMoi(
      MutexHideDataTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_NonCloneDataTwinMoi(NonCloneDataTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_NonCloneDataTwinNormal(NonCloneDataTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_NonCloneDataTwinRustAsync(
      NonCloneDataTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_NonCloneDataTwinRustAsyncMoi(
      NonCloneDataTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_NonCloneDataTwinSync(NonCloneDataTwinSync raw);

  @protected
  int cst_encode_RustOpaque_NonCloneDataTwinSyncMoi(
      NonCloneDataTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_RwLockHideDataTwinMoi(RwLockHideDataTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_RwLockHideDataTwinNormal(
      RwLockHideDataTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_RwLockHideDataTwinRustAsync(
      RwLockHideDataTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
      RwLockHideDataTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_RwLockHideDataTwinSync(RwLockHideDataTwinSync raw);

  @protected
  int cst_encode_RustOpaque_RwLockHideDataTwinSyncMoi(
      RwLockHideDataTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
      BoxFnStringString raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
      BoxHelloTraitTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
      BoxHelloTraitTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
      BoxHelloTraitTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
      BoxHelloTraitTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
      BoxHelloTraitTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
      BoxHelloTraitTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
      BoxMyTraitTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
      BoxMyTraitTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
      BoxMyTraitTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
      BoxMyTraitTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
      BoxMyTraitTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
      BoxMyTraitTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
      ConstructorOpaqueStructTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
      ConstructorOpaqueSyncStructTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
      DroppableTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
      DroppableTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
      DroppableTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
      EnumWithGoodAndOpaqueWithoutOptionTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
      EnumWithGoodAndOpaqueWithoutOptionTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
      EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
      EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
      EnumWithGoodAndOpaqueWithoutOptionTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
      EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
      NonCloneSimpleEnumTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
      NonCloneSimpleEnumTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
      NonCloneSimpleEnumTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
      NonCloneSimpleEnumTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
      NonCloneSimpleEnumTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
      NonCloneSimpleEnumTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
      NonCloneSimpleTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
      NonCloneSimpleTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
      NonCloneSimpleTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
      NonCloneSimpleTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
      NonCloneSimpleTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
      NonCloneSimpleTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
      OpaqueOneTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
      OpaqueOneTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
      OpaqueOneTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
      OpaqueOneTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
      OpaqueOneTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
      OpaqueOneTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
      OpaqueTwoTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
      OpaqueTwoTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
      OpaqueTwoTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
      OpaqueTwoTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
      OpaqueTwoTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
      OpaqueTwoTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
      StructInMiscNoTwinExampleA raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
      StructInMiscNoTwinExampleB raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
      StructWithImplBlockInMultiFile raw);

  @protected
  int cst_encode_RustOpaque_i16(I16 raw);

  @protected
  int cst_encode_RustOpaque_i32(I32 raw);

  @protected
  int cst_encode_application_mode(ApplicationMode raw);

  @protected
  int cst_encode_basic_primitive_enum_twin_normal(
      BasicPrimitiveEnumTwinNormal raw);

  @protected
  int cst_encode_basic_primitive_enum_twin_rust_async(
      BasicPrimitiveEnumTwinRustAsync raw);

  @protected
  int cst_encode_basic_primitive_enum_twin_sync(BasicPrimitiveEnumTwinSync raw);

  @protected
  bool cst_encode_bool(bool raw);

  @protected
  int cst_encode_enum_simple_twin_normal(EnumSimpleTwinNormal raw);

  @protected
  int cst_encode_enum_simple_twin_rust_async(EnumSimpleTwinRustAsync raw);

  @protected
  int cst_encode_enum_simple_twin_sync(EnumSimpleTwinSync raw);

  @protected
  int cst_encode_enum_with_discriminant_twin_normal(
      EnumWithDiscriminantTwinNormal raw);

  @protected
  int cst_encode_enum_with_discriminant_twin_rust_async(
      EnumWithDiscriminantTwinRustAsync raw);

  @protected
  int cst_encode_enum_with_discriminant_twin_sync(
      EnumWithDiscriminantTwinSync raw);

  @protected
  double cst_encode_f_32(double raw);

  @protected
  double cst_encode_f_64(double raw);

  @protected
  int cst_encode_i_16(int raw);

  @protected
  int cst_encode_i_32(int raw);

  @protected
  int cst_encode_i_8(int raw);

  @protected
  int cst_encode_isize(int raw);

  @protected
  int cst_encode_my_enum(MyEnum raw);

  @protected
  int cst_encode_u_16(int raw);

  @protected
  int cst_encode_u_32(int raw);

  @protected
  int cst_encode_u_8(int raw);

  @protected
  void cst_encode_unit(void raw);

  @protected
  int cst_encode_usize(int raw);

  @protected
  int cst_encode_weekdays_twin_normal(WeekdaysTwinNormal raw);

  @protected
  int cst_encode_weekdays_twin_rust_async(WeekdaysTwinRustAsync raw);

  @protected
  int cst_encode_weekdays_twin_sync(WeekdaysTwinSync raw);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          BoxFnStringString self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          BoxHelloTraitTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          BoxHelloTraitTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          BoxHelloTraitTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          BoxHelloTraitTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          BoxHelloTraitTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          BoxHelloTraitTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          BoxHelloTraitTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          BoxHelloTraitTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          BoxHelloTraitTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          BoxHelloTraitTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          BoxHelloTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          BoxHelloTraitTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          BoxMyTraitTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          BoxMyTraitTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          BoxMyTraitTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          BoxMyTraitTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          BoxMyTraitTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          BoxMyTraitTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          BoxMyTraitTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          BoxMyTraitTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          BoxMyTraitTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          BoxMyTraitTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          BoxMyTraitTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          BoxMyTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          ConstructorOpaqueStructTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          ConstructorOpaqueSyncStructTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          DroppableTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          DroppableTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          DroppableTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          DroppableTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          DroppableTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          DroppableTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          EnumWithGoodAndOpaqueWithoutOptionTwinNormal self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          EnumWithGoodAndOpaqueWithoutOptionTwinSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          EnumWithGoodAndOpaqueWithoutOptionTwinSync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          NonCloneSimpleEnumTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          NonCloneSimpleEnumTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          NonCloneSimpleEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          NonCloneSimpleEnumTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          NonCloneSimpleEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          NonCloneSimpleEnumTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          NonCloneSimpleEnumTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          NonCloneSimpleEnumTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          NonCloneSimpleEnumTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          NonCloneSimpleEnumTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          NonCloneSimpleEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          NonCloneSimpleEnumTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          NonCloneSimpleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          NonCloneSimpleTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          NonCloneSimpleTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          NonCloneSimpleTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          NonCloneSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          NonCloneSimpleTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          OpaqueOneTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          OpaqueOneTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          OpaqueOneTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          OpaqueOneTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          OpaqueOneTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          OpaqueOneTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          OpaqueOneTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          OpaqueOneTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          OpaqueOneTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          OpaqueOneTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          OpaqueOneTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          OpaqueOneTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          OpaqueTwoTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          OpaqueTwoTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          OpaqueTwoTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          OpaqueTwoTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          OpaqueTwoTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          OpaqueTwoTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          OpaqueTwoTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          OpaqueTwoTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          OpaqueTwoTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          OpaqueTwoTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          OpaqueTwoTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          OpaqueTwoTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          StructInMiscNoTwinExampleA self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          BoxHelloTraitTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          BoxHelloTraitTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          BoxHelloTraitTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          BoxHelloTraitTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          BoxHelloTraitTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          BoxHelloTraitTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          BoxHelloTraitTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          BoxHelloTraitTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          BoxHelloTraitTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          BoxHelloTraitTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          BoxHelloTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          BoxHelloTraitTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          DroppableTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          DroppableTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          DroppableTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          DroppableTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          DroppableTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          DroppableTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          NonCloneSimpleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          NonCloneSimpleTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          NonCloneSimpleTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          NonCloneSimpleTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          NonCloneSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          NonCloneSimpleTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          BoxHelloTraitTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          BoxHelloTraitTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          BoxHelloTraitTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          BoxHelloTraitTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          BoxHelloTraitTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          BoxHelloTraitTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          BoxHelloTraitTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          BoxHelloTraitTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          BoxHelloTraitTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          BoxHelloTraitTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          BoxHelloTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          BoxHelloTraitTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          ConstructorOpaqueStructTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          ConstructorOpaqueSyncStructTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          DroppableTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          DroppableTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          DroppableTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          DroppableTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          DroppableTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          DroppableTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          NonCloneSimpleEnumTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          NonCloneSimpleEnumTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          NonCloneSimpleEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          NonCloneSimpleEnumTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          NonCloneSimpleEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          NonCloneSimpleEnumTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          NonCloneSimpleEnumTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          NonCloneSimpleEnumTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          NonCloneSimpleEnumTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          NonCloneSimpleEnumTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          NonCloneSimpleEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          NonCloneSimpleEnumTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          NonCloneSimpleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          NonCloneSimpleTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          NonCloneSimpleTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          NonCloneSimpleTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          NonCloneSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          NonCloneSimpleTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          StructInMiscNoTwinExampleA self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          StructInMiscNoTwinExampleB self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          StructWithImplBlockInMultiFile self, SseSerializer serializer);

  @protected
  void sse_encode_Backtrace(String self, SseSerializer serializer);

  @protected
  void sse_encode_Chrono_Duration(Duration self, SseSerializer serializer);

  @protected
  void sse_encode_Chrono_Local(DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_Chrono_Naive(DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_Chrono_Utc(DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs_DartOpaque_Output_unit(
      FutureOr<void> Function(Object) self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs_String_Output_unit(
      FutureOr<void> Function(String) self, SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_normal_Output_unit(
          FutureOr<void> Function(String, DemoStructForRustCallDartTwinNormal)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_Output_unit(
          FutureOr<void> Function(
                  String, DemoStructForRustCallDartTwinRustAsync)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_sse_Output_unit(
          FutureOr<void> Function(
                  String, DemoStructForRustCallDartTwinRustAsyncSse)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_sse_Output_unit(
          FutureOr<void> Function(String, DemoStructForRustCallDartTwinSse)
              self,
          SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs__Output_DartOpaque(
      FutureOr<Object> Function() self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs__Output_String(
      FutureOr<String> Function() self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs__Output_unit(
      FutureOr<void> Function() self, SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_normal_Output_demo_struct_for_rust_call_dart_twin_normal(
          FutureOr<DemoStructForRustCallDartTwinNormal> Function(
                  DemoStructForRustCallDartTwinNormal)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_Output_demo_struct_for_rust_call_dart_twin_rust_async(
          FutureOr<DemoStructForRustCallDartTwinRustAsync> Function(
                  DemoStructForRustCallDartTwinRustAsync)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_sse_Output_demo_struct_for_rust_call_dart_twin_rust_async_sse(
          FutureOr<DemoStructForRustCallDartTwinRustAsyncSse> Function(
                  DemoStructForRustCallDartTwinRustAsyncSse)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_sse_Output_demo_struct_for_rust_call_dart_twin_sse(
          FutureOr<DemoStructForRustCallDartTwinSse> Function(
                  DemoStructForRustCallDartTwinSse)
              self,
          SseSerializer serializer);

  @protected
  void sse_encode_DartOpaque(Object self, SseSerializer serializer);

  @protected
  void sse_encode_DartOpaque_array_1(
      ObjectArray1 self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_String(
      Map<String, String> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_normal(
      Map<String, EnumSimpleTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_rust_async(
      Map<String, EnumSimpleTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_rust_async_sse(
      Map<String, EnumSimpleTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_sse(
      Map<String, EnumSimpleTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_sync(
      Map<String, EnumSimpleTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_sync_sse(
      Map<String, EnumSimpleTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_hash_map_value(
      Map<String, HashMapValue> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_normal(
      Map<String, KitchenSinkTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_rust_async(
      Map<String, KitchenSinkTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_rust_async_sse(
      Map<String, KitchenSinkTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_sse(
      Map<String, KitchenSinkTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_sync(
      Map<String, KitchenSinkTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_sync_sse(
      Map<String, KitchenSinkTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_list_prim_u_8_strict(
      Map<String, Uint8List> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_my_size(
      Map<String, MySize> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_String(
      Map<int, String> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_general_enum_twin_normal(
      Map<int, BasicGeneralEnumTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_general_enum_twin_rust_async(
      Map<int, BasicGeneralEnumTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_general_enum_twin_rust_async_sse(
      Map<int, BasicGeneralEnumTwinRustAsyncSse> self,
      SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_general_enum_twin_sse(
      Map<int, BasicGeneralEnumTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_general_enum_twin_sync(
      Map<int, BasicGeneralEnumTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_general_enum_twin_sync_sse(
      Map<int, BasicGeneralEnumTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_primitive_enum_twin_normal(
      Map<int, BasicPrimitiveEnumTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_primitive_enum_twin_rust_async(
      Map<int, BasicPrimitiveEnumTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_primitive_enum_twin_rust_async_sse(
      Map<int, BasicPrimitiveEnumTwinRustAsyncSse> self,
      SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_primitive_enum_twin_sse(
      Map<int, BasicPrimitiveEnumTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_primitive_enum_twin_sync(
      Map<int, BasicPrimitiveEnumTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_primitive_enum_twin_sync_sse(
      Map<int, BasicPrimitiveEnumTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_struct_twin_normal(
      Map<int, BasicStructTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_struct_twin_rust_async(
      Map<int, BasicStructTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_struct_twin_rust_async_sse(
      Map<int, BasicStructTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_struct_twin_sse(
      Map<int, BasicStructTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_struct_twin_sync(
      Map<int, BasicStructTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_struct_twin_sync_sse(
      Map<int, BasicStructTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_bool(Map<int, bool> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_f_32(
      Map<int, double> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_f_64(
      Map<int, double> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_i_16(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_i_32(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_i_64(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_i_8(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_isize(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_list_prim_u_8_strict(
      Map<int, Uint8List> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_u_16(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_u_32(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_u_64(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_u_8(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_usize(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_u_8_application_mode(
      Map<int, ApplicationMode> self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinMoi(
      BoxDartDebugTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinNormal(
      BoxDartDebugTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinRustAsync(
      BoxDartDebugTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
      BoxDartDebugTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
      BoxDartDebugTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
      BoxDartDebugTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinSse(
      BoxDartDebugTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinSseMoi(
      BoxDartDebugTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinSync(
      BoxDartDebugTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinSyncMoi(
      BoxDartDebugTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinSyncSse(
      BoxDartDebugTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
      BoxDartDebugTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinMoi(
      FrbOpaqueReturnTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinNormal(
      FrbOpaqueReturnTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinRustAsync(
      FrbOpaqueReturnTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
      FrbOpaqueReturnTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
      FrbOpaqueReturnTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
      FrbOpaqueReturnTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinSse(
      FrbOpaqueReturnTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinSseMoi(
      FrbOpaqueReturnTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinSync(
      FrbOpaqueReturnTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
      FrbOpaqueReturnTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinSyncSse(
      FrbOpaqueReturnTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
      FrbOpaqueReturnTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
      FrbOpaqueSyncReturnTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
      FrbOpaqueSyncReturnTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueSyncReturnTwinSse(
      FrbOpaqueSyncReturnTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
      FrbOpaqueSyncReturnTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataAnotherTwinMoi(
      HideDataAnotherTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataAnotherTwinNormal(
      HideDataAnotherTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataAnotherTwinSse(
      HideDataAnotherTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataAnotherTwinSseMoi(
      HideDataAnotherTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinMoi(
      HideDataTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinMoi_array_2(
      HideDataTwinMoiArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinNormal(
      HideDataTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinNormal_array_2(
      HideDataTwinNormalArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsync(
      HideDataTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsyncMoi(
      HideDataTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsyncMoi_array_2(
      HideDataTwinRustAsyncMoiArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsyncSse(
      HideDataTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsyncSseMoi(
      HideDataTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsyncSseMoi_array_2(
      HideDataTwinRustAsyncSseMoiArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsyncSse_array_2(
      HideDataTwinRustAsyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsync_array_2(
      HideDataTwinRustAsyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSse(
      HideDataTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSseMoi(
      HideDataTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSseMoi_array_2(
      HideDataTwinSseMoiArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSse_array_2(
      HideDataTwinSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSync(
      HideDataTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSyncMoi(
      HideDataTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSyncMoi_array_2(
      HideDataTwinSyncMoiArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSyncSse(
      HideDataTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSyncSseMoi(
      HideDataTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSyncSseMoi_array_2(
      HideDataTwinSyncSseMoiArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSyncSse_array_2(
      HideDataTwinSyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSync_array_2(
      HideDataTwinSyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinMoi(
      MutexHideDataTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinNormal(
      MutexHideDataTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinRustAsync(
      MutexHideDataTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinRustAsyncMoi(
      MutexHideDataTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinRustAsyncSse(
      MutexHideDataTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
      MutexHideDataTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinSse(
      MutexHideDataTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinSseMoi(
      MutexHideDataTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinSync(
      MutexHideDataTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinSyncMoi(
      MutexHideDataTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinSyncSse(
      MutexHideDataTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinSyncSseMoi(
      MutexHideDataTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinMoi(
      NonCloneDataTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinNormal(
      NonCloneDataTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinRustAsync(
      NonCloneDataTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinRustAsyncMoi(
      NonCloneDataTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinRustAsyncSse(
      NonCloneDataTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
      NonCloneDataTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinSse(
      NonCloneDataTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinSseMoi(
      NonCloneDataTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinSync(
      NonCloneDataTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinSyncMoi(
      NonCloneDataTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinSyncSse(
      NonCloneDataTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinSyncSseMoi(
      NonCloneDataTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinMoi(
      RwLockHideDataTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinNormal(
      RwLockHideDataTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinRustAsync(
      RwLockHideDataTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
      RwLockHideDataTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinRustAsyncSse(
      RwLockHideDataTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
      RwLockHideDataTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinSse(
      RwLockHideDataTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinSseMoi(
      RwLockHideDataTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinSync(
      RwLockHideDataTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinSyncMoi(
      RwLockHideDataTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinSyncSse(
      RwLockHideDataTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinSyncSseMoi(
      RwLockHideDataTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          BoxFnStringString self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          BoxHelloTraitTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          BoxHelloTraitTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          BoxHelloTraitTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          BoxHelloTraitTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          BoxHelloTraitTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          BoxHelloTraitTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          BoxHelloTraitTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          BoxHelloTraitTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          BoxHelloTraitTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          BoxHelloTraitTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          BoxHelloTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          BoxHelloTraitTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          BoxMyTraitTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          BoxMyTraitTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          BoxMyTraitTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          BoxMyTraitTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          BoxMyTraitTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          BoxMyTraitTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          BoxMyTraitTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          BoxMyTraitTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          BoxMyTraitTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          BoxMyTraitTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          BoxMyTraitTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          BoxMyTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          ConstructorOpaqueStructTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          ConstructorOpaqueSyncStructTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          DroppableTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          DroppableTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          DroppableTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          DroppableTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          DroppableTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          DroppableTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          EnumWithGoodAndOpaqueWithoutOptionTwinNormal self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          EnumWithGoodAndOpaqueWithoutOptionTwinSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          EnumWithGoodAndOpaqueWithoutOptionTwinSync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          NonCloneSimpleEnumTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          NonCloneSimpleEnumTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          NonCloneSimpleEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          NonCloneSimpleEnumTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          NonCloneSimpleEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          NonCloneSimpleEnumTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          NonCloneSimpleEnumTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          NonCloneSimpleEnumTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          NonCloneSimpleEnumTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          NonCloneSimpleEnumTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          NonCloneSimpleEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          NonCloneSimpleEnumTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          NonCloneSimpleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          NonCloneSimpleTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          NonCloneSimpleTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          NonCloneSimpleTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          NonCloneSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          NonCloneSimpleTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          OpaqueOneTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          OpaqueOneTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          OpaqueOneTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          OpaqueOneTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          OpaqueOneTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          OpaqueOneTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          OpaqueOneTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          OpaqueOneTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          OpaqueOneTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          OpaqueOneTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          OpaqueOneTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          OpaqueOneTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          OpaqueTwoTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          OpaqueTwoTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          OpaqueTwoTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          OpaqueTwoTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          OpaqueTwoTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          OpaqueTwoTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          OpaqueTwoTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          OpaqueTwoTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          OpaqueTwoTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          OpaqueTwoTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          OpaqueTwoTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          OpaqueTwoTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          StructInMiscNoTwinExampleA self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          StructInMiscNoTwinExampleB self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          StructWithImplBlockInMultiFile self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_i16(I16 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_i32(I32 self, SseSerializer serializer);

  @protected
  void sse_encode_Set_String(Set<String> self, SseSerializer serializer);

  @protected
  void sse_encode_Set_application_mode(
      Set<ApplicationMode> self, SseSerializer serializer);

  @protected
  void sse_encode_Set_i_32(Set<int> self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_Uuid(UuidValue self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_normal(ATwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_rust_async(
      ATwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_rust_async_sse(
      ATwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_sse(ATwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_sync(ATwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_sync_sse(ATwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_normal(AbcTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_rust_async(
      AbcTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_rust_async_sse(
      AbcTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_sse(AbcTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_sync(AbcTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_sync_sse(
      AbcTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_another_macro_struct_twin_normal(
      AnotherMacroStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_normal(
      AnotherTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_rust_async(
      AnotherTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_rust_async_sse(
      AnotherTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_sse(
      AnotherTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_sync(
      AnotherTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_sync_sse(
      AnotherTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_application_env(
      ApplicationEnv self, SseSerializer serializer);

  @protected
  void sse_encode_application_env_var(
      ApplicationEnvVar self, SseSerializer serializer);

  @protected
  void sse_encode_application_message(
      ApplicationMessage self, SseSerializer serializer);

  @protected
  void sse_encode_application_mode(
      ApplicationMode self, SseSerializer serializer);

  @protected
  void sse_encode_application_mode_array_2(
      ApplicationModeArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_application_settings(
      ApplicationSettings self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_normal(
      AttributeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_rust_async(
      AttributeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_rust_async_sse(
      AttributeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_sse(
      AttributeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_sync(
      AttributeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_sync_sse(
      AttributeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_normal(BTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_rust_async(
      BTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_rust_async_sse(
      BTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_sse(BTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_sync(BTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_sync_sse(BTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_general_enum_twin_normal(
      BasicGeneralEnumTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_basic_general_enum_twin_rust_async(
      BasicGeneralEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_basic_general_enum_twin_rust_async_sse(
      BasicGeneralEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_general_enum_twin_sse(
      BasicGeneralEnumTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_general_enum_twin_sync(
      BasicGeneralEnumTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_basic_general_enum_twin_sync_sse(
      BasicGeneralEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_primitive_enum_twin_normal(
      BasicPrimitiveEnumTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_basic_primitive_enum_twin_rust_async(
      BasicPrimitiveEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_basic_primitive_enum_twin_rust_async_sse(
      BasicPrimitiveEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_primitive_enum_twin_sse(
      BasicPrimitiveEnumTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_primitive_enum_twin_sync(
      BasicPrimitiveEnumTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_basic_primitive_enum_twin_sync_sse(
      BasicPrimitiveEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_struct_twin_normal(
      BasicStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_basic_struct_twin_rust_async(
      BasicStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_basic_struct_twin_rust_async_sse(
      BasicStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_struct_twin_sse(
      BasicStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_struct_twin_sync(
      BasicStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_basic_struct_twin_sync_sse(
      BasicStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_rust_async_sse(
      BenchmarkBinaryTreeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_sse(
      BenchmarkBinaryTreeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_sync_sse(
      BenchmarkBinaryTreeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_normal(
      BenchmarkBlobTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_rust_async(
      BenchmarkBlobTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_rust_async_sse(
      BenchmarkBlobTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_sse(
      BenchmarkBlobTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_sync(
      BenchmarkBlobTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_sync_sse(
      BenchmarkBlobTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_normal(
      BigBuffersTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_rust_async(
      BigBuffersTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_rust_async_sse(
      BigBuffersTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_sse(
      BigBuffersTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_sync(
      BigBuffersTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_sync_sse(
      BigBuffersTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_normal(
      BlobTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_rust_async(
      BlobTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_rust_async_sse(
      BlobTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_sse(BlobTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_sync(BlobTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_sync_sse(
      BlobTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_application_env(
      ApplicationEnv self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          NonCloneSimpleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          NonCloneSimpleTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          NonCloneSimpleTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          NonCloneSimpleTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          NonCloneSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          NonCloneSimpleTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_Chrono_Duration(
      Duration self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_Chrono_Naive(
      DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_Chrono_Utc(
      DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_DartOpaque(Object self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(
      HideDataAnotherTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
      HideDataAnotherTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataAnotherTwinSse(
      HideDataAnotherTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataAnotherTwinSseMoi(
      HideDataAnotherTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinMoi(
      HideDataTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinNormal(
      HideDataTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinRustAsync(
      HideDataTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
      HideDataTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinRustAsyncSse(
      HideDataTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinRustAsyncSseMoi(
      HideDataTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinSse(
      HideDataTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinSseMoi(
      HideDataTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinSync(
      HideDataTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
      HideDataTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinSyncSse(
      HideDataTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinSyncSseMoi(
      HideDataTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_normal(
      ATwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_rust_async(
      ATwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_rust_async_sse(
      ATwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_sse(
      ATwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_sync(
      ATwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_sync_sse(
      ATwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_normal(
      AbcTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_rust_async(
      AbcTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_rust_async_sse(
      AbcTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_sse(
      AbcTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_sync(
      AbcTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_sync_sse(
      AbcTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_application_env(
      ApplicationEnv self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_application_mode(
      ApplicationMode self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_application_settings(
      ApplicationSettings self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_normal(
      AttributeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_rust_async(
      AttributeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_rust_async_sse(
      AttributeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_sse(
      AttributeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_sync(
      AttributeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_sync_sse(
      AttributeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_normal(
      BTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_rust_async(
      BTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_rust_async_sse(
      BTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_sse(
      BTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_sync(
      BTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_sync_sse(
      BTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_general_enum_twin_normal(
      BasicGeneralEnumTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_general_enum_twin_rust_async(
      BasicGeneralEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_general_enum_twin_rust_async_sse(
      BasicGeneralEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_general_enum_twin_sse(
      BasicGeneralEnumTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_general_enum_twin_sync(
      BasicGeneralEnumTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_general_enum_twin_sync_sse(
      BasicGeneralEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_primitive_enum_twin_normal(
      BasicPrimitiveEnumTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_primitive_enum_twin_rust_async(
      BasicPrimitiveEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_primitive_enum_twin_rust_async_sse(
      BasicPrimitiveEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_primitive_enum_twin_sse(
      BasicPrimitiveEnumTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_primitive_enum_twin_sync(
      BasicPrimitiveEnumTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_primitive_enum_twin_sync_sse(
      BasicPrimitiveEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_struct_twin_normal(
      BasicStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_struct_twin_rust_async(
      BasicStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_struct_twin_rust_async_sse(
      BasicStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_struct_twin_sse(
      BasicStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_struct_twin_sync(
      BasicStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_struct_twin_sync_sse(
      BasicStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_rust_async_sse(
      BenchmarkBinaryTreeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_sse(
      BenchmarkBinaryTreeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_sync_sse(
      BenchmarkBinaryTreeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_normal(
      BenchmarkBlobTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_rust_async(
      BenchmarkBlobTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_rust_async_sse(
      BenchmarkBlobTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_sse(
      BenchmarkBlobTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_sync(
      BenchmarkBlobTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_sync_sse(
      BenchmarkBlobTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_normal(
      CTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_rust_async(
      CTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_rust_async_sse(
      CTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_sse(
      CTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_sync(
      CTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_sync_sse(
      CTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_normal(
      ConcatenateWithTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_rust_async(
      ConcatenateWithTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_rust_async_sse(
      ConcatenateWithTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_sse(
      ConcatenateWithTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_sync(
      ConcatenateWithTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_sync_sse(
      ConcatenateWithTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_normal(
      CustomNestedError2TwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_rust_async(
      CustomNestedError2TwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_rust_async_sse(
      CustomNestedError2TwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_sse(
      CustomNestedError2TwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_sync(
      CustomNestedError2TwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_sync_sse(
      CustomNestedError2TwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_normal(
      CustomNestedErrorInnerTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_rust_async(
      CustomNestedErrorInnerTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_rust_async_sse(
      CustomNestedErrorInnerTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_sse(
      CustomNestedErrorInnerTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_sync(
      CustomNestedErrorInnerTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_sync_sse(
      CustomNestedErrorInnerTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_normal(
      CustomNestedErrorOuterTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_rust_async(
      CustomNestedErrorOuterTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_rust_async_sse(
      CustomNestedErrorOuterTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_sse(
      CustomNestedErrorOuterTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_sync(
      CustomNestedErrorOuterTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_sync_sse(
      CustomNestedErrorOuterTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_normal(
      CustomStructErrorTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_rust_async(
      CustomStructErrorTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_rust_async_sse(
      CustomStructErrorTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_sse(
      CustomStructErrorTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_sync(
      CustomStructErrorTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_sync_sse(
      CustomStructErrorTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_normal(
      CustomStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_rust_async(
      CustomStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_rust_async_sse(
      CustomStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_sse(
      CustomStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_sync(
      CustomStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_sync_sse(
      CustomStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_normal(
      CustomizedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_rust_async(
      CustomizedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_rust_async_sse(
      CustomizedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_sse(
      CustomizedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_sync(
      CustomizedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_sync_sse(
      CustomizedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_normal(
      DartOpaqueNestedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_rust_async(
      DartOpaqueNestedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_rust_async_sse(
      DartOpaqueNestedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_sse(
      DartOpaqueNestedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_sync(
      DartOpaqueNestedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_sync_sse(
      DartOpaqueNestedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_normal(
      ElementTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_rust_async(
      ElementTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_rust_async_sse(
      ElementTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_sse(
      ElementTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_sync(
      ElementTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_sync_sse(
      ElementTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_normal(
      EmptyTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_rust_async(
      EmptyTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_rust_async_sse(
      EmptyTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_sse(
      EmptyTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_sync(
      EmptyTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_sync_sse(
      EmptyTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_normal(
      EnumDartOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_rust_async(
      EnumDartOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_rust_async_sse(
      EnumDartOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_sse(
      EnumDartOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_sync(
      EnumDartOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_sync_sse(
      EnumDartOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_moi(
      EnumOpaqueTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_normal(
      EnumOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_rust_async(
      EnumOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_rust_async_moi(
      EnumOpaqueTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_rust_async_sse(
      EnumOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_rust_async_sse_moi(
      EnumOpaqueTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_sse(
      EnumOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_sse_moi(
      EnumOpaqueTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_sync(
      EnumOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_sync_moi(
      EnumOpaqueTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_sync_sse(
      EnumOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_sync_sse_moi(
      EnumOpaqueTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_moi(
      EnumWithGoodAndOpaqueTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_normal(
      EnumWithGoodAndOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_rust_async(
      EnumWithGoodAndOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moi(
      EnumWithGoodAndOpaqueTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_sse(
      EnumWithGoodAndOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_sse_moi(
      EnumWithGoodAndOpaqueTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_sse(
      EnumWithGoodAndOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_sse_moi(
      EnumWithGoodAndOpaqueTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_sync(
      EnumWithGoodAndOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_sync_moi(
      EnumWithGoodAndOpaqueTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_sync_sse(
      EnumWithGoodAndOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_sync_sse_moi(
      EnumWithGoodAndOpaqueTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_normal(
      EnumWithItemMixedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_rust_async(
      EnumWithItemMixedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_rust_async_sse(
      EnumWithItemMixedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_sse(
      EnumWithItemMixedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_sync(
      EnumWithItemMixedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_sync_sse(
      EnumWithItemMixedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_normal(
      EnumWithItemStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_rust_async(
      EnumWithItemStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_rust_async_sse(
      EnumWithItemStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_sse(
      EnumWithItemStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_sync(
      EnumWithItemStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_sync_sse(
      EnumWithItemStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_normal(
      EnumWithItemTupleTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_rust_async(
      EnumWithItemTupleTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_rust_async_sse(
      EnumWithItemTupleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_sse(
      EnumWithItemTupleTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_sync(
      EnumWithItemTupleTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_sync_sse(
      EnumWithItemTupleTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_event_twin_normal(
      EventTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_event_twin_rust_async(
      EventTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_event_twin_rust_async_sse(
      EventTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_event_twin_sse(
      EventTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_chrono_twin_normal(
      FeatureChronoTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_chrono_twin_rust_async(
      FeatureChronoTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_chrono_twin_rust_async_sse(
      FeatureChronoTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_chrono_twin_sse(
      FeatureChronoTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_chrono_twin_sync(
      FeatureChronoTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_chrono_twin_sync_sse(
      FeatureChronoTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_uuid_twin_normal(
      FeatureUuidTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_uuid_twin_rust_async(
      FeatureUuidTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_uuid_twin_rust_async_sse(
      FeatureUuidTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_uuid_twin_sse(
      FeatureUuidTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_uuid_twin_sync(
      FeatureUuidTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_uuid_twin_sync_sse(
      FeatureUuidTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_normal(
      FeedIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_rust_async(
      FeedIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_rust_async_sse(
      FeedIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_sse(
      FeedIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_sync(
      FeedIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_sync_sse(
      FeedIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_isize(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_rust_async_sse(
      KitchenSinkTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_sse(
      KitchenSinkTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_sync(
      KitchenSinkTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_sync_sse(
      KitchenSinkTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_list_of_nested_raw_string_mirrored(
      ListOfNestedRawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_macro_struct(
      MacroStruct self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_normal(
      MeasureTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_rust_async(
      MeasureTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_rust_async_sse(
      MeasureTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_sse(
      MeasureTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_sync(
      MeasureTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_sync_sse(
      MeasureTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_normal(
      MessageIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_rust_async(
      MessageIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_rust_async_sse(
      MessageIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_sse(
      MessageIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_sync(
      MessageIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_sync_sse(
      MessageIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_callable_twin_normal(
      MyCallableTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_callable_twin_rust_async(
      MyCallableTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_callable_twin_rust_async_sse(
      MyCallableTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_callable_twin_sse(
      MyCallableTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_callable_twin_sync(
      MyCallableTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_callable_twin_sync_sse(
      MyCallableTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_normal(
      MyNestedStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_rust_async(
      MyNestedStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_rust_async_sse(
      MyNestedStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_sse(
      MyNestedStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_sync(
      MyNestedStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_sync_sse(
      MyNestedStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_size(MySize self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_struct(
      MyStruct self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_normal(
      MyTreeNodeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_rust_async(
      MyTreeNodeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_rust_async_sse(
      MyTreeNodeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_sse(
      MyTreeNodeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_sync(
      MyTreeNodeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_sync_sse(
      MyTreeNodeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_nested_raw_string_mirrored(
      NestedRawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_normal(
      NewTypeIntTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_rust_async_sse(
      NewTypeIntTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_sse(
      NewTypeIntTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_sync(
      NewTypeIntTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_sync_sse(
      NewTypeIntTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_normal(
      NoteTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_rust_async(
      NoteTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_rust_async_sse(
      NoteTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_sse(
      NoteTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_sync(
      NoteTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_sync_sse(
      NoteTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_numbers(Numbers self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_moi(
      OpaqueNestedTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_normal(
      OpaqueNestedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_rust_async(
      OpaqueNestedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_rust_async_moi(
      OpaqueNestedTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_rust_async_sse(
      OpaqueNestedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_rust_async_sse_moi(
      OpaqueNestedTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_sse(
      OpaqueNestedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_sse_moi(
      OpaqueNestedTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_sync(
      OpaqueNestedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_sync_moi(
      OpaqueNestedTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_sync_sse(
      OpaqueNestedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_sync_sse_moi(
      OpaqueNestedTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_normal(
      OptVecsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_rust_async(
      OptVecsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_rust_async_sse(
      OptVecsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_sse(
      OptVecsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_sync(
      OptVecsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_sync_sse(
      OptVecsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_raw_string_mirrored(
      RawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_record_string_i_32(
      (String, int) self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sequences(
      Sequences self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_simple_struct_twin_normal(
      SimpleStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_simple_struct_twin_rust_async(
      SimpleStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_simple_struct_twin_rust_async_sse(
      SimpleStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_simple_struct_twin_sse(
      SimpleStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_simple_struct_twin_sync(
      SimpleStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_simple_struct_twin_sync_sse(
      SimpleStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_normal(
      SomeStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_rust_async(
      SomeStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_rust_async_sse(
      SomeStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_sse(
      SomeStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_sync(
      SomeStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_sync_sse(
      SomeStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_in_lower_level(
      StructInLowerLevel self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_normal(
      StructWithCommentsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_rust_async(
      StructWithCommentsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_rust_async_sse(
      StructWithCommentsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_sse(
      StructWithCommentsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_sync(
      StructWithCommentsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_sync_sse(
      StructWithCommentsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_normal(
      StructWithEnumTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_rust_async(
      StructWithEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_rust_async_sse(
      StructWithEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_sse(
      StructWithEnumTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_sync(
      StructWithEnumTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_sync_sse(
      StructWithEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moi(
      StructWithExplicitAutoOpaqueFieldTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normal(
          StructWithExplicitAutoOpaqueFieldTwinNormal self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async(
          StructWithExplicitAutoOpaqueFieldTwinRustAsync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
          StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_sse(
          StructWithExplicitAutoOpaqueFieldTwinRustAsyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_sse_moi(
          StructWithExplicitAutoOpaqueFieldTwinRustAsyncSseMoi self,
          SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sse(
      StructWithExplicitAutoOpaqueFieldTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sse_moi(
          StructWithExplicitAutoOpaqueFieldTwinSseMoi self,
          SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync(
      StructWithExplicitAutoOpaqueFieldTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moi(
          StructWithExplicitAutoOpaqueFieldTwinSyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_sse(
          StructWithExplicitAutoOpaqueFieldTwinSyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_sse_moi(
          StructWithExplicitAutoOpaqueFieldTwinSyncSseMoi self,
          SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_moi(
      StructWithGoodAndOpaqueFieldTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_normal(
      StructWithGoodAndOpaqueFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async(
      StructWithGoodAndOpaqueFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moi(
          StructWithGoodAndOpaqueFieldTwinRustAsyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_sse(
          StructWithGoodAndOpaqueFieldTwinRustAsyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_sse_moi(
          StructWithGoodAndOpaqueFieldTwinRustAsyncSseMoi self,
          SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sse(
      StructWithGoodAndOpaqueFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sse_moi(
      StructWithGoodAndOpaqueFieldTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sync(
      StructWithGoodAndOpaqueFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moi(
      StructWithGoodAndOpaqueFieldTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_sse(
      StructWithGoodAndOpaqueFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_sse_moi(
          StructWithGoodAndOpaqueFieldTwinSyncSseMoi self,
          SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_normal(
      StructWithOneFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_rust_async(
      StructWithOneFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_rust_async_sse(
      StructWithOneFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_sse(
      StructWithOneFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_sync(
      StructWithOneFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_sync_sse(
      StructWithOneFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_normal(
      StructWithTwoFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_rust_async(
      StructWithTwoFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_rust_async_sse(
      StructWithTwoFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_sse(
      StructWithTwoFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_sync(
      StructWithTwoFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_sync_sse(
      StructWithTwoFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_normal(
      StructWithZeroFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_rust_async(
      StructWithZeroFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_rust_async_sse(
      StructWithZeroFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_sse(
      StructWithZeroFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_sync(
      StructWithZeroFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_sync_sse(
      StructWithZeroFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_normal(
      SumWithTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_rust_async(
      SumWithTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_rust_async_sse(
      SumWithTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_sse(
      SumWithTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_sync(
      SumWithTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_sync_sse(
      SumWithTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_normal(
      TestIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_rust_async(
      TestIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_rust_async_sse(
      TestIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_sse(
      TestIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_sync(
      TestIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_sync_sse(
      TestIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_normal(
      TupleStructWithOneFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_rust_async(
      TupleStructWithOneFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse(
      TupleStructWithOneFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_sse(
      TupleStructWithOneFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_sync(
      TupleStructWithOneFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_sync_sse(
      TupleStructWithOneFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_normal(
      TupleStructWithTwoFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_rust_async(
      TupleStructWithTwoFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse(
      TupleStructWithTwoFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_sse(
      TupleStructWithTwoFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_sync(
      TupleStructWithTwoFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_sync_sse(
      TupleStructWithTwoFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_normal(
      UserIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_rust_async(
      UserIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_rust_async_sse(
      UserIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_sse(
      UserIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_sync(
      UserIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_sync_sse(
      UserIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_normal(
      WeekdaysTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_rust_async_sse(
      WeekdaysTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_sse(
      WeekdaysTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_sync(
      WeekdaysTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_sync_sse(
      WeekdaysTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_rust_async_sse(
      BenchmarkBinaryTreeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_sse(
      BenchmarkBinaryTreeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_sync_sse(
      BenchmarkBinaryTreeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_normal(
      BlobTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_rust_async(
      BlobTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_rust_async_sse(
      BlobTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_sse(BlobTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_sync(
      BlobTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_sync_sse(
      BlobTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_normal(
      DistanceTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_rust_async(
      DistanceTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_rust_async_sse(
      DistanceTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_sse(
      DistanceTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_sync(
      DistanceTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_sync_sse(
      DistanceTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_normal(
      FeedIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_rust_async(
      FeedIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_rust_async_sse(
      FeedIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_sse(
      FeedIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_sync(
      FeedIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_sync_sse(
      FeedIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_i_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_i_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_rust_async_sse(
      KitchenSinkTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_sse(
      KitchenSinkTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_sync(
      KitchenSinkTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_sync_sse(
      KitchenSinkTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_my_size(MySize self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_normal(
      SpeedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_rust_async(
      SpeedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_rust_async_sse(
      SpeedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_sse(
      SpeedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_sync(
      SpeedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_sync_sse(
      SpeedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_u_8_array_1600(
      U8Array1600 self, SseSerializer serializer);

  @protected
  void sse_encode_box_u_8_array_8(U8Array8 self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_normal(
      WeekdaysTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_rust_async_sse(
      WeekdaysTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_sse(
      WeekdaysTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_sync(
      WeekdaysTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_sync_sse(
      WeekdaysTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_normal(CTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_rust_async(
      CTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_rust_async_sse(
      CTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_sse(CTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_sync(CTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_sync_sse(CTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_normal(
      ConcatenateWithTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_rust_async(
      ConcatenateWithTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_rust_async_sse(
      ConcatenateWithTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_sse(
      ConcatenateWithTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_sync(
      ConcatenateWithTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_sync_sse(
      ConcatenateWithTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_constructor_translatable_struct_twin_normal(
      ConstructorTranslatableStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_constructor_translatable_sync_struct_twin_normal(
      ConstructorTranslatableSyncStructTwinNormal self,
      SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_normal(
      ContainsMirroredSubStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_rust_async(
      ContainsMirroredSubStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_rust_async_sse(
      ContainsMirroredSubStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_sse(
      ContainsMirroredSubStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_sync(
      ContainsMirroredSubStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_sync_sse(
      ContainsMirroredSubStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_normal(
      CustomEnumErrorTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_rust_async(
      CustomEnumErrorTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_rust_async_sse(
      CustomEnumErrorTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_sse(
      CustomEnumErrorTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_sync(
      CustomEnumErrorTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_sync_sse(
      CustomEnumErrorTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_normal(
      CustomErrorTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_rust_async(
      CustomErrorTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_rust_async_sse(
      CustomErrorTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_sse(
      CustomErrorTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_sync(
      CustomErrorTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_sync_sse(
      CustomErrorTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_normal(
      CustomNestedError1TwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_rust_async(
      CustomNestedError1TwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_rust_async_sse(
      CustomNestedError1TwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_sse(
      CustomNestedError1TwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_sync(
      CustomNestedError1TwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_sync_sse(
      CustomNestedError1TwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_normal(
      CustomNestedError2TwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_rust_async(
      CustomNestedError2TwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_rust_async_sse(
      CustomNestedError2TwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_sse(
      CustomNestedError2TwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_sync(
      CustomNestedError2TwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_sync_sse(
      CustomNestedError2TwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_normal(
      CustomNestedErrorInnerTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_rust_async(
      CustomNestedErrorInnerTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_rust_async_sse(
      CustomNestedErrorInnerTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_sse(
      CustomNestedErrorInnerTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_sync(
      CustomNestedErrorInnerTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_sync_sse(
      CustomNestedErrorInnerTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_normal(
      CustomNestedErrorOuterTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_rust_async(
      CustomNestedErrorOuterTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_rust_async_sse(
      CustomNestedErrorOuterTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_sse(
      CustomNestedErrorOuterTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_sync(
      CustomNestedErrorOuterTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_sync_sse(
      CustomNestedErrorOuterTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_normal(
      CustomStructErrorAnotherTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_rust_async(
      CustomStructErrorAnotherTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_rust_async_sse(
      CustomStructErrorAnotherTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_sse(
      CustomStructErrorAnotherTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_sync(
      CustomStructErrorAnotherTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_sync_sse(
      CustomStructErrorAnotherTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_normal(
      CustomStructErrorTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_rust_async(
      CustomStructErrorTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_rust_async_sse(
      CustomStructErrorTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_sse(
      CustomStructErrorTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_sync(
      CustomStructErrorTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_sync_sse(
      CustomStructErrorTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_normal(
      CustomStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_rust_async(
      CustomStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_rust_async_sse(
      CustomStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_sse(
      CustomStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_sync(
      CustomStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_sync_sse(
      CustomStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_normal(
      CustomizedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_rust_async(
      CustomizedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_rust_async_sse(
      CustomizedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_sse(
      CustomizedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_sync(
      CustomizedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_sync_sse(
      CustomizedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_normal(
      DartOpaqueNestedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_rust_async(
      DartOpaqueNestedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_rust_async_sse(
      DartOpaqueNestedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_sse(
      DartOpaqueNestedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_sync(
      DartOpaqueNestedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_sync_sse(
      DartOpaqueNestedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_dartabi(dynamic self, SseSerializer serializer);

  @protected
  void sse_encode_demo_struct_for_rust_call_dart_twin_normal(
      DemoStructForRustCallDartTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_demo_struct_for_rust_call_dart_twin_rust_async(
      DemoStructForRustCallDartTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_demo_struct_for_rust_call_dart_twin_rust_async_sse(
      DemoStructForRustCallDartTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_demo_struct_for_rust_call_dart_twin_sse(
      DemoStructForRustCallDartTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_normal(
      DistanceTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_rust_async(
      DistanceTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_rust_async_sse(
      DistanceTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_sse(
      DistanceTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_sync(
      DistanceTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_sync_sse(
      DistanceTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_normal(
      ElementTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_rust_async(
      ElementTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_rust_async_sse(
      ElementTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_sse(
      ElementTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_sync(
      ElementTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_sync_sse(
      ElementTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_normal(
      EmptyTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_rust_async(
      EmptyTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_rust_async_sse(
      EmptyTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_sse(EmptyTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_sync(EmptyTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_sync_sse(
      EmptyTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_normal(
      EnumDartOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_rust_async(
      EnumDartOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_rust_async_sse(
      EnumDartOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_sse(
      EnumDartOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_sync(
      EnumDartOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_sync_sse(
      EnumDartOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_moi(
      EnumOpaqueTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_moi_array_5(
      EnumOpaqueTwinMoiArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_normal(
      EnumOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_normal_array_5(
      EnumOpaqueTwinNormalArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async(
      EnumOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_array_5(
      EnumOpaqueTwinRustAsyncArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_moi(
      EnumOpaqueTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_moi_array_5(
      EnumOpaqueTwinRustAsyncMoiArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_sse(
      EnumOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_sse_array_5(
      EnumOpaqueTwinRustAsyncSseArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_sse_moi(
      EnumOpaqueTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_sse_moi_array_5(
      EnumOpaqueTwinRustAsyncSseMoiArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sse(
      EnumOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sse_array_5(
      EnumOpaqueTwinSseArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sse_moi(
      EnumOpaqueTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sse_moi_array_5(
      EnumOpaqueTwinSseMoiArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync(
      EnumOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_array_5(
      EnumOpaqueTwinSyncArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_moi(
      EnumOpaqueTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_moi_array_5(
      EnumOpaqueTwinSyncMoiArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_sse(
      EnumOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_sse_array_5(
      EnumOpaqueTwinSyncSseArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_sse_moi(
      EnumOpaqueTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_sse_moi_array_5(
      EnumOpaqueTwinSyncSseMoiArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_normal(
      EnumSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_rust_async(
      EnumSimpleTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_rust_async_sse(
      EnumSimpleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_sse(
      EnumSimpleTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_sync(
      EnumSimpleTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_sync_sse(
      EnumSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_discriminant_twin_normal(
      EnumWithDiscriminantTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_discriminant_twin_rust_async(
      EnumWithDiscriminantTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_discriminant_twin_rust_async_sse(
      EnumWithDiscriminantTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_discriminant_twin_sse(
      EnumWithDiscriminantTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_discriminant_twin_sync(
      EnumWithDiscriminantTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_discriminant_twin_sync_sse(
      EnumWithDiscriminantTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_moi(
      EnumWithGoodAndOpaqueTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_normal(
      EnumWithGoodAndOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_rust_async(
      EnumWithGoodAndOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_rust_async_moi(
      EnumWithGoodAndOpaqueTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_rust_async_sse(
      EnumWithGoodAndOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_rust_async_sse_moi(
      EnumWithGoodAndOpaqueTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_sse(
      EnumWithGoodAndOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_sse_moi(
      EnumWithGoodAndOpaqueTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_sync(
      EnumWithGoodAndOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_sync_moi(
      EnumWithGoodAndOpaqueTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_sync_sse(
      EnumWithGoodAndOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_sync_sse_moi(
      EnumWithGoodAndOpaqueTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_normal(
      EnumWithItemMixedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_rust_async(
      EnumWithItemMixedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_rust_async_sse(
      EnumWithItemMixedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_sse(
      EnumWithItemMixedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_sync(
      EnumWithItemMixedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_sync_sse(
      EnumWithItemMixedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_normal(
      EnumWithItemStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_rust_async(
      EnumWithItemStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_rust_async_sse(
      EnumWithItemStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_sse(
      EnumWithItemStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_sync(
      EnumWithItemStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_sync_sse(
      EnumWithItemStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_normal(
      EnumWithItemTupleTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_rust_async(
      EnumWithItemTupleTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_rust_async_sse(
      EnumWithItemTupleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_sse(
      EnumWithItemTupleTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_sync(
      EnumWithItemTupleTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_sync_sse(
      EnumWithItemTupleTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_event_twin_normal(
      EventTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_event_twin_rust_async(
      EventTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_event_twin_rust_async_sse(
      EventTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_event_twin_sse(EventTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_f_64_array_16(F64Array16 self, SseSerializer serializer);

  @protected
  void sse_encode_feature_chrono_twin_normal(
      FeatureChronoTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_feature_chrono_twin_rust_async(
      FeatureChronoTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_feature_chrono_twin_rust_async_sse(
      FeatureChronoTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_feature_chrono_twin_sse(
      FeatureChronoTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_feature_chrono_twin_sync(
      FeatureChronoTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_feature_chrono_twin_sync_sse(
      FeatureChronoTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_feature_uuid_twin_normal(
      FeatureUuidTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_feature_uuid_twin_rust_async(
      FeatureUuidTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_feature_uuid_twin_rust_async_sse(
      FeatureUuidTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_feature_uuid_twin_sse(
      FeatureUuidTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_feature_uuid_twin_sync(
      FeatureUuidTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_feature_uuid_twin_sync_sse(
      FeatureUuidTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_normal(
      FeedIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_rust_async(
      FeedIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_rust_async_sse(
      FeedIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_sse(
      FeedIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_sync(
      FeedIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_sync_sse(
      FeedIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_hash_map_value(HashMapValue self, SseSerializer serializer);

  @protected
  void sse_encode_i_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_32_array_2(I32Array2 self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_isize(int self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_rust_async_sse(
      KitchenSinkTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_sse(
      KitchenSinkTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_sync(
      KitchenSinkTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_sync_sse(
      KitchenSinkTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          List<NonCloneSimpleTwinMoi> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          List<NonCloneSimpleTwinNormal> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          List<NonCloneSimpleTwinRustAsync> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          List<NonCloneSimpleTwinRustAsyncMoi> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          List<NonCloneSimpleTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          List<NonCloneSimpleTwinRustAsyncSseMoi> self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          List<NonCloneSimpleTwinSse> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          List<NonCloneSimpleTwinSseMoi> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          List<NonCloneSimpleTwinSync> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          List<NonCloneSimpleTwinSyncMoi> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          List<NonCloneSimpleTwinSyncSse> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          List<NonCloneSimpleTwinSyncSseMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_Chrono_Duration(
      List<Duration> self, SseSerializer serializer);

  @protected
  void sse_encode_list_Chrono_Local(
      List<DateTime> self, SseSerializer serializer);

  @protected
  void sse_encode_list_Chrono_Naive(
      List<DateTime> self, SseSerializer serializer);

  @protected
  void sse_encode_list_DartOpaque(List<Object> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinMoi(
      List<HideDataTwinMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinNormal(
      List<HideDataTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinRustAsync(
      List<HideDataTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinRustAsyncMoi(
      List<HideDataTwinRustAsyncMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinRustAsyncSse(
      List<HideDataTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinRustAsyncSseMoi(
      List<HideDataTwinRustAsyncSseMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinSse(
      List<HideDataTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinSseMoi(
      List<HideDataTwinSseMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinSync(
      List<HideDataTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinSyncMoi(
      List<HideDataTwinSyncMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinSyncSse(
      List<HideDataTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinSyncSseMoi(
      List<HideDataTwinSyncSseMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_Uuid(List<UuidValue> self, SseSerializer serializer);

  @protected
  void sse_encode_list_application_env_var(
      List<ApplicationEnvVar> self, SseSerializer serializer);

  @protected
  void sse_encode_list_application_mode(
      List<ApplicationMode> self, SseSerializer serializer);

  @protected
  void sse_encode_list_application_settings(
      List<ApplicationSettings> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_normal(
      List<AttributeTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_rust_async(
      List<AttributeTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_rust_async_sse(
      List<AttributeTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_sse(
      List<AttributeTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_sync(
      List<AttributeTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_sync_sse(
      List<AttributeTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_general_enum_twin_normal(
      List<BasicGeneralEnumTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_general_enum_twin_rust_async(
      List<BasicGeneralEnumTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_general_enum_twin_rust_async_sse(
      List<BasicGeneralEnumTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_general_enum_twin_sse(
      List<BasicGeneralEnumTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_general_enum_twin_sync(
      List<BasicGeneralEnumTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_general_enum_twin_sync_sse(
      List<BasicGeneralEnumTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_primitive_enum_twin_normal(
      List<BasicPrimitiveEnumTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_primitive_enum_twin_rust_async(
      List<BasicPrimitiveEnumTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_primitive_enum_twin_rust_async_sse(
      List<BasicPrimitiveEnumTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_primitive_enum_twin_sse(
      List<BasicPrimitiveEnumTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_primitive_enum_twin_sync(
      List<BasicPrimitiveEnumTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_primitive_enum_twin_sync_sse(
      List<BasicPrimitiveEnumTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_struct_twin_normal(
      List<BasicStructTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_struct_twin_rust_async(
      List<BasicStructTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_struct_twin_rust_async_sse(
      List<BasicStructTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_struct_twin_sse(
      List<BasicStructTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_struct_twin_sync(
      List<BasicStructTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_struct_twin_sync_sse(
      List<BasicStructTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_bool(List<bool> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_normal(
      List<ElementTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_rust_async(
      List<ElementTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_rust_async_sse(
      List<ElementTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_sse(
      List<ElementTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_sync(
      List<ElementTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_sync_sse(
      List<ElementTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_moi(
      List<EnumOpaqueTwinMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_normal(
      List<EnumOpaqueTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_rust_async(
      List<EnumOpaqueTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_rust_async_moi(
      List<EnumOpaqueTwinRustAsyncMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_rust_async_sse(
      List<EnumOpaqueTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_rust_async_sse_moi(
      List<EnumOpaqueTwinRustAsyncSseMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_sse(
      List<EnumOpaqueTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_sse_moi(
      List<EnumOpaqueTwinSseMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_sync(
      List<EnumOpaqueTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_sync_moi(
      List<EnumOpaqueTwinSyncMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_sync_sse(
      List<EnumOpaqueTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_sync_sse_moi(
      List<EnumOpaqueTwinSyncSseMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_list_prim_u_8_strict(
      List<Uint8List> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_enum(List<MyEnum> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_size(List<MySize> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_normal(
      List<MyTreeNodeTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_rust_async(
      List<MyTreeNodeTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_rust_async_sse(
      List<MyTreeNodeTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_sse(
      List<MyTreeNodeTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_sync(
      List<MyTreeNodeTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_sync_sse(
      List<MyTreeNodeTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_nested_raw_string_mirrored(
      List<NestedRawStringMirrored> self, SseSerializer serializer);

  @protected
  void sse_encode_list_of_nested_raw_string_mirrored(
      ListOfNestedRawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_String(List<String?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_normal(
      List<AttributeTwinNormal?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_rust_async(
      List<AttributeTwinRustAsync?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_rust_async_sse(
      List<AttributeTwinRustAsyncSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_sse(
      List<AttributeTwinSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_sync(
      List<AttributeTwinSync?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_sync_sse(
      List<AttributeTwinSyncSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_i_32(
      List<int?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_normal(
      List<WeekdaysTwinNormal?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_rust_async(
      List<WeekdaysTwinRustAsync?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_rust_async_sse(
      List<WeekdaysTwinRustAsyncSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_sse(
      List<WeekdaysTwinSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_sync(
      List<WeekdaysTwinSync?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_sync_sse(
      List<WeekdaysTwinSyncSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_list_prim_i_32_strict(
      List<Int32List?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_normal(
      List<PointTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_rust_async(
      List<PointTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_rust_async_sse(
      List<PointTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_sse(
      List<PointTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_sync(
      List<PointTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_sync_sse(
      List<PointTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_f_32_loose(
      List<double> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_f_32_strict(
      Float32List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_f_64_loose(
      List<double> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_f_64_strict(
      Float64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_16_loose(
      List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_16_strict(
      Int16List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_32_loose(
      List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_32_strict(
      Int32List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_64_strict(
      Int64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_8_loose(List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_8_strict(Int8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_16_loose(
      List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_16_strict(
      Uint16List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_32_loose(
      List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_32_strict(
      Uint32List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_64_strict(
      Uint64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_loose(List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_raw_string_enum_mirrored(
      List<RawStringEnumMirrored> self, SseSerializer serializer);

  @protected
  void sse_encode_list_raw_string_mirrored(
      List<RawStringMirrored> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_general_enum_twin_normal(
      List<(int, BasicGeneralEnumTwinNormal)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_general_enum_twin_rust_async(
      List<(int, BasicGeneralEnumTwinRustAsync)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_general_enum_twin_rust_async_sse(
      List<(int, BasicGeneralEnumTwinRustAsyncSse)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_general_enum_twin_sse(
      List<(int, BasicGeneralEnumTwinSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_general_enum_twin_sync(
      List<(int, BasicGeneralEnumTwinSync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_general_enum_twin_sync_sse(
      List<(int, BasicGeneralEnumTwinSyncSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_primitive_enum_twin_normal(
      List<(int, BasicPrimitiveEnumTwinNormal)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_primitive_enum_twin_rust_async(
      List<(int, BasicPrimitiveEnumTwinRustAsync)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_primitive_enum_twin_rust_async_sse(
      List<(int, BasicPrimitiveEnumTwinRustAsyncSse)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_primitive_enum_twin_sse(
      List<(int, BasicPrimitiveEnumTwinSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_primitive_enum_twin_sync(
      List<(int, BasicPrimitiveEnumTwinSync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_primitive_enum_twin_sync_sse(
      List<(int, BasicPrimitiveEnumTwinSyncSse)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_struct_twin_normal(
      List<(int, BasicStructTwinNormal)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_struct_twin_rust_async(
      List<(int, BasicStructTwinRustAsync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_struct_twin_rust_async_sse(
      List<(int, BasicStructTwinRustAsyncSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_struct_twin_sse(
      List<(int, BasicStructTwinSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_struct_twin_sync(
      List<(int, BasicStructTwinSync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_struct_twin_sync_sse(
      List<(int, BasicStructTwinSyncSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_bool(
      List<(int, bool)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_f_32(
      List<(int, double)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_f_64(
      List<(int, double)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_i_16(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_i_32(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_i_64(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_i_8(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_isize(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_list_prim_u_8_strict(
      List<(int, Uint8List)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_string(
      List<(int, String)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_u_16(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_u_32(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_u_64(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_u_8(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_usize(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_normal(
      List<(String, EnumSimpleTwinNormal)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_rust_async(
      List<(String, EnumSimpleTwinRustAsync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_rust_async_sse(
      List<(String, EnumSimpleTwinRustAsyncSse)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_sse(
      List<(String, EnumSimpleTwinSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_sync(
      List<(String, EnumSimpleTwinSync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_sync_sse(
      List<(String, EnumSimpleTwinSyncSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_hash_map_value(
      List<(String, HashMapValue)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_i_32(
      List<(String, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_normal(
      List<(String, KitchenSinkTwinNormal)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_rust_async(
      List<(String, KitchenSinkTwinRustAsync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_rust_async_sse(
      List<(String, KitchenSinkTwinRustAsyncSse)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_sse(
      List<(String, KitchenSinkTwinSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_sync(
      List<(String, KitchenSinkTwinSync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_sync_sse(
      List<(String, KitchenSinkTwinSyncSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_list_prim_u_8_strict(
      List<(String, Uint8List)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_my_size(
      List<(String, MySize)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_string(
      List<(String, String)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_u_8_application_mode(
      List<(int, ApplicationMode)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_simple_struct_twin_normal(
      List<SimpleStructTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_simple_struct_twin_rust_async(
      List<SimpleStructTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_simple_struct_twin_rust_async_sse(
      List<SimpleStructTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_simple_struct_twin_sse(
      List<SimpleStructTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_simple_struct_twin_sync(
      List<SimpleStructTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_simple_struct_twin_sync_sse(
      List<SimpleStructTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_normal(
      List<SumWithTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_rust_async(
      List<SumWithTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_rust_async_sse(
      List<SumWithTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_sse(
      List<SumWithTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_sync(
      List<SumWithTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_sync_sse(
      List<SumWithTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_normal(
      List<TestIdTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_rust_async(
      List<TestIdTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_rust_async_sse(
      List<TestIdTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_sse(
      List<TestIdTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_sync(
      List<TestIdTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_sync_sse(
      List<TestIdTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_normal(
      List<WeekdaysTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_rust_async(
      List<WeekdaysTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_rust_async_sse(
      List<WeekdaysTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_sse(
      List<WeekdaysTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_sync(
      List<WeekdaysTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_sync_sse(
      List<WeekdaysTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_normal(
      Log2TwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_rust_async(
      Log2TwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_rust_async_sse(
      Log2TwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_sse(Log2TwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_sync(Log2TwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_sync_sse(
      Log2TwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_log_twin_normal(LogTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_log_twin_rust_async(
      LogTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_log_twin_rust_async_sse(
      LogTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_log_twin_sse(LogTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_macro_struct(MacroStruct self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_normal(
      MeasureTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_rust_async(
      MeasureTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_rust_async_sse(
      MeasureTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_sse(
      MeasureTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_sync(
      MeasureTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_sync_sse(
      MeasureTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_normal(
      MessageIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_rust_async(
      MessageIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_rust_async_sse(
      MessageIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_sse(
      MessageIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_sync(
      MessageIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_sync_sse(
      MessageIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_normal(
      MirrorStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_rust_async(
      MirrorStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_rust_async_sse(
      MirrorStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_sse(
      MirrorStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_sync(
      MirrorStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_sync_sse(
      MirrorStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_normal(
      MoreThanJustOneRawStringStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_rust_async(
      MoreThanJustOneRawStringStructTwinRustAsync self,
      SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_rust_async_sse(
      MoreThanJustOneRawStringStructTwinRustAsyncSse self,
      SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_sse(
      MoreThanJustOneRawStringStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_sync(
      MoreThanJustOneRawStringStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_sync_sse(
      MoreThanJustOneRawStringStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_callable_twin_normal(
      MyCallableTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_my_callable_twin_rust_async(
      MyCallableTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_my_callable_twin_rust_async_sse(
      MyCallableTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_callable_twin_sse(
      MyCallableTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_callable_twin_sync(
      MyCallableTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_my_callable_twin_sync_sse(
      MyCallableTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_enum(MyEnum self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_normal(
      MyNestedStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_rust_async(
      MyNestedStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_rust_async_sse(
      MyNestedStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_sse(
      MyNestedStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_sync(
      MyNestedStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_sync_sse(
      MyNestedStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_size(MySize self, SseSerializer serializer);

  @protected
  void sse_encode_my_stream_entry_twin_normal(
      MyStreamEntryTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_my_stream_entry_twin_rust_async(
      MyStreamEntryTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_my_stream_entry_twin_rust_async_sse(
      MyStreamEntryTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_stream_entry_twin_sse(
      MyStreamEntryTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_struct(MyStruct self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_normal(
      MyTreeNodeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_rust_async(
      MyTreeNodeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_rust_async_sse(
      MyTreeNodeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_sse(
      MyTreeNodeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_sync(
      MyTreeNodeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_sync_sse(
      MyTreeNodeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_nested_raw_string_mirrored(
      NestedRawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_new_simple_struct(
      NewSimpleStruct self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_normal(
      NewTypeIntTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_rust_async_sse(
      NewTypeIntTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_sse(
      NewTypeIntTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_sync(
      NewTypeIntTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_sync_sse(
      NewTypeIntTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_normal(
      NoteTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_rust_async(
      NoteTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_rust_async_sse(
      NoteTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_sse(NoteTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_sync(NoteTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_sync_sse(
      NoteTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_numbers(Numbers self, SseSerializer serializer);

  @protected
  void sse_encode_old_simple_struct(
      OldSimpleStruct self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_moi(
      OpaqueNestedTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_normal(
      OpaqueNestedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_rust_async(
      OpaqueNestedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_rust_async_moi(
      OpaqueNestedTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_rust_async_sse(
      OpaqueNestedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_rust_async_sse_moi(
      OpaqueNestedTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_sse(
      OpaqueNestedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_sse_moi(
      OpaqueNestedTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_sync(
      OpaqueNestedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_sync_moi(
      OpaqueNestedTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_sync_sse(
      OpaqueNestedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_sync_sse_moi(
      OpaqueNestedTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          NonCloneSimpleTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          NonCloneSimpleTwinRustAsyncSseMoi? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          NonCloneSimpleTwinSse? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          NonCloneSimpleTwinSseMoi? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          NonCloneSimpleTwinSyncSse? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          NonCloneSimpleTwinSyncSseMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_Chrono_Duration(
      Duration? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_Chrono_Naive(
      DateTime? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_Chrono_Utc(
      DateTime? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_DartOpaque(
      Object? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(
      HideDataAnotherTwinMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
      HideDataAnotherTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinSse(
      HideDataAnotherTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinSseMoi(
      HideDataAnotherTwinSseMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinMoi(
      HideDataTwinMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinNormal(
      HideDataTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsync(
      HideDataTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
      HideDataTwinRustAsyncMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncSse(
      HideDataTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncSseMoi(
      HideDataTwinRustAsyncSseMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinSse(
      HideDataTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinSseMoi(
      HideDataTwinSseMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinSync(
      HideDataTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
      HideDataTwinSyncMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinSyncSse(
      HideDataTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinSyncSseMoi(
      HideDataTwinSyncSseMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_application_env(
      ApplicationEnv? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_application_mode(
      ApplicationMode? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_normal(
      AttributeTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_rust_async(
      AttributeTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_rust_async_sse(
      AttributeTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_sse(
      AttributeTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_sync(
      AttributeTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_sync_sse(
      AttributeTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_general_enum_twin_normal(
      BasicGeneralEnumTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_general_enum_twin_rust_async(
      BasicGeneralEnumTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_general_enum_twin_rust_async_sse(
      BasicGeneralEnumTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_general_enum_twin_sse(
      BasicGeneralEnumTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_general_enum_twin_sync(
      BasicGeneralEnumTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_general_enum_twin_sync_sse(
      BasicGeneralEnumTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_primitive_enum_twin_normal(
      BasicPrimitiveEnumTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_primitive_enum_twin_rust_async(
      BasicPrimitiveEnumTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_primitive_enum_twin_rust_async_sse(
      BasicPrimitiveEnumTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_primitive_enum_twin_sse(
      BasicPrimitiveEnumTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_primitive_enum_twin_sync(
      BasicPrimitiveEnumTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_primitive_enum_twin_sync_sse(
      BasicPrimitiveEnumTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_struct_twin_normal(
      BasicStructTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_struct_twin_rust_async(
      BasicStructTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_struct_twin_rust_async_sse(
      BasicStructTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_struct_twin_sse(
      BasicStructTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_struct_twin_sync(
      BasicStructTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_struct_twin_sync_sse(
      BasicStructTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_bool(bool? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_normal(
      ElementTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_rust_async(
      ElementTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_rust_async_sse(
      ElementTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_sse(
      ElementTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_sync(
      ElementTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_sync_sse(
      ElementTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_f_32(double? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_f_64(double? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_16(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_64(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_isize(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_normal(
      MeasureTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_rust_async(
      MeasureTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_rust_async_sse(
      MeasureTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_sse(
      MeasureTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_sync(
      MeasureTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_sync_sse(
      MeasureTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_normal(
      NewTypeIntTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_rust_async_sse(
      NewTypeIntTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_sse(
      NewTypeIntTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_sync(
      NewTypeIntTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_sync_sse(
      NewTypeIntTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_record_string_i_32(
      (String, int)? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_16(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_64(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_usize(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_normal(
      WeekdaysTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_rust_async_sse(
      WeekdaysTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_sse(
      WeekdaysTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_sync(
      WeekdaysTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_sync_sse(
      WeekdaysTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_rust_async_sse(
      BenchmarkBinaryTreeTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_sse(
      BenchmarkBinaryTreeTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_sync_sse(
      BenchmarkBinaryTreeTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_bool(bool? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_f_64(double? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_i_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_i_64(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_i_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_u_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_normal(
      List<AttributeTwinNormal>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_rust_async(
      List<AttributeTwinRustAsync>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_rust_async_sse(
      List<AttributeTwinRustAsyncSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_sse(
      List<AttributeTwinSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_sync(
      List<AttributeTwinSync>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_sync_sse(
      List<AttributeTwinSyncSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_normal(
      List<ElementTwinNormal>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_rust_async(
      List<ElementTwinRustAsync>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_rust_async_sse(
      List<ElementTwinRustAsyncSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_sse(
      List<ElementTwinSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_sync(
      List<ElementTwinSync>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_sync_sse(
      List<ElementTwinSyncSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_normal(
      List<AttributeTwinNormal?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_rust_async(
      List<AttributeTwinRustAsync?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_rust_async_sse(
      List<AttributeTwinRustAsyncSse?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_sse(
      List<AttributeTwinSse?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_sync(
      List<AttributeTwinSync?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_sync_sse(
      List<AttributeTwinSyncSse?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_f_32_strict(
      Float32List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_f_64_strict(
      Float64List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_i_32_strict(
      Int32List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_i_8_strict(
      Int8List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_u_8_strict(
      Uint8List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_normal(
      OptVecsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_rust_async(
      OptVecsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_rust_async_sse(
      OptVecsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_sse(
      OptVecsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_sync(
      OptVecsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_sync_sse(
      OptVecsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_normal(
      PointTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_normal_array_2(
      PointTwinNormalArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_rust_async(
      PointTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_rust_async_array_2(
      PointTwinRustAsyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_rust_async_sse(
      PointTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_rust_async_sse_array_2(
      PointTwinRustAsyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sse(PointTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sse_array_2(
      PointTwinSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sync(PointTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sync_array_2(
      PointTwinSyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sync_sse(
      PointTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sync_sse_array_2(
      PointTwinSyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_enum_mirrored(
      RawStringEnumMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_normal(
      RawStringItemStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_rust_async(
      RawStringItemStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_rust_async_sse(
      RawStringItemStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_sse(
      RawStringItemStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_sync(
      RawStringItemStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_sync_sse(
      RawStringItemStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_mirrored(
      RawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_record_application_settings_raw_string_enum_mirrored(
      (ApplicationSettings, RawStringEnumMirrored) self,
      SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_moi(
          (OpaqueOneTwinMoi, OpaqueTwoTwinMoi) self, SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_normal_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_normal(
          (OpaqueOneTwinNormal, OpaqueTwoTwinNormal) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async(
          (OpaqueOneTwinRustAsync, OpaqueTwoTwinRustAsync) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_moi(
          (OpaqueOneTwinRustAsyncMoi, OpaqueTwoTwinRustAsyncMoi) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_sse(
          (OpaqueOneTwinRustAsyncSse, OpaqueTwoTwinRustAsyncSse) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_sse_moi(
          (OpaqueOneTwinRustAsyncSseMoi, OpaqueTwoTwinRustAsyncSseMoi) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sse(
          (OpaqueOneTwinSse, OpaqueTwoTwinSse) self, SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sse_moi(
          (OpaqueOneTwinSseMoi, OpaqueTwoTwinSseMoi) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync(
          (OpaqueOneTwinSync, OpaqueTwoTwinSync) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_moi(
          (OpaqueOneTwinSyncMoi, OpaqueTwoTwinSyncMoi) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_sse(
          (OpaqueOneTwinSyncSse, OpaqueTwoTwinSyncSse) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_sse_moi(
          (OpaqueOneTwinSyncSseMoi, OpaqueTwoTwinSyncSseMoi) self,
          SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_general_enum_twin_normal(
      (int, BasicGeneralEnumTwinNormal) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_general_enum_twin_rust_async(
      (int, BasicGeneralEnumTwinRustAsync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_general_enum_twin_rust_async_sse(
      (int, BasicGeneralEnumTwinRustAsyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_general_enum_twin_sse(
      (int, BasicGeneralEnumTwinSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_general_enum_twin_sync(
      (int, BasicGeneralEnumTwinSync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_general_enum_twin_sync_sse(
      (int, BasicGeneralEnumTwinSyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_primitive_enum_twin_normal(
      (int, BasicPrimitiveEnumTwinNormal) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_primitive_enum_twin_rust_async(
      (int, BasicPrimitiveEnumTwinRustAsync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_primitive_enum_twin_rust_async_sse(
      (int, BasicPrimitiveEnumTwinRustAsyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_primitive_enum_twin_sse(
      (int, BasicPrimitiveEnumTwinSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_primitive_enum_twin_sync(
      (int, BasicPrimitiveEnumTwinSync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_primitive_enum_twin_sync_sse(
      (int, BasicPrimitiveEnumTwinSyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_struct_twin_normal(
      (int, BasicStructTwinNormal) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_struct_twin_rust_async(
      (int, BasicStructTwinRustAsync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_struct_twin_rust_async_sse(
      (int, BasicStructTwinRustAsyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_struct_twin_sse(
      (int, BasicStructTwinSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_struct_twin_sync(
      (int, BasicStructTwinSync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_struct_twin_sync_sse(
      (int, BasicStructTwinSyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_bool((int, bool) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_f_32(
      (int, double) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_f_64(
      (int, double) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_i_16((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_i_32((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_i_64((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_i_8((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_isize((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_list_prim_u_8_strict(
      (int, Uint8List) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_string(
      (int, String) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_u_16((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_u_32((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_u_64((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_u_8((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_usize((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_normal(
      (String, EnumSimpleTwinNormal) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_rust_async(
      (String, EnumSimpleTwinRustAsync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_rust_async_sse(
      (String, EnumSimpleTwinRustAsyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_sse(
      (String, EnumSimpleTwinSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_sync(
      (String, EnumSimpleTwinSync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_sync_sse(
      (String, EnumSimpleTwinSyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_hash_map_value(
      (String, HashMapValue) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_i_32(
      (String, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_normal(
      (String, KitchenSinkTwinNormal) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_rust_async(
      (String, KitchenSinkTwinRustAsync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_rust_async_sse(
      (String, KitchenSinkTwinRustAsyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_sse(
      (String, KitchenSinkTwinSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_sync(
      (String, KitchenSinkTwinSync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_sync_sse(
      (String, KitchenSinkTwinSyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_list_prim_u_8_strict(
      (String, Uint8List) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_my_size(
      (String, MySize) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_string(
      (String, String) self, SseSerializer serializer);

  @protected
  void sse_encode_record_u_8_application_mode(
      (int, ApplicationMode) self, SseSerializer serializer);

  @protected
  void sse_encode_sequences(Sequences self, SseSerializer serializer);

  @protected
  void sse_encode_simple_struct_twin_normal(
      SimpleStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_simple_struct_twin_rust_async(
      SimpleStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_simple_struct_twin_rust_async_sse(
      SimpleStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_simple_struct_twin_sse(
      SimpleStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_simple_struct_twin_sync(
      SimpleStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_simple_struct_twin_sync_sse(
      SimpleStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_normal(
      SomeStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_rust_async(
      SomeStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_rust_async_sse(
      SomeStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_sse(
      SomeStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_sync(
      SomeStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_sync_sse(
      SomeStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_normal(
      SpeedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_rust_async(
      SpeedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_rust_async_sse(
      SpeedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_sse(SpeedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_sync(SpeedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_sync_sse(
      SpeedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_in_lower_level(
      StructInLowerLevel self, SseSerializer serializer);

  @protected
  void sse_encode_struct_in_upper_level(
      StructInUpperLevel self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_normal(
      StructWithCommentsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_rust_async(
      StructWithCommentsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_rust_async_sse(
      StructWithCommentsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_sse(
      StructWithCommentsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_sync(
      StructWithCommentsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_sync_sse(
      StructWithCommentsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_normal(
      StructWithEnumTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_rust_async(
      StructWithEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_rust_async_sse(
      StructWithEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_sse(
      StructWithEnumTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_sync(
      StructWithEnumTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_sync_sse(
      StructWithEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_moi(
      StructWithExplicitAutoOpaqueFieldTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_normal(
      StructWithExplicitAutoOpaqueFieldTwinNormal self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_rust_async(
      StructWithExplicitAutoOpaqueFieldTwinRustAsync self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
      StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_rust_async_sse(
      StructWithExplicitAutoOpaqueFieldTwinRustAsyncSse self,
      SseSerializer serializer);

  @protected
  void
      sse_encode_struct_with_explicit_auto_opaque_field_twin_rust_async_sse_moi(
          StructWithExplicitAutoOpaqueFieldTwinRustAsyncSseMoi self,
          SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_sse(
      StructWithExplicitAutoOpaqueFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_sse_moi(
      StructWithExplicitAutoOpaqueFieldTwinSseMoi self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_sync(
      StructWithExplicitAutoOpaqueFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_sync_moi(
      StructWithExplicitAutoOpaqueFieldTwinSyncMoi self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_sync_sse(
      StructWithExplicitAutoOpaqueFieldTwinSyncSse self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_sync_sse_moi(
      StructWithExplicitAutoOpaqueFieldTwinSyncSseMoi self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_moi(
      StructWithGoodAndOpaqueFieldTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_normal(
      StructWithGoodAndOpaqueFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_rust_async(
      StructWithGoodAndOpaqueFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_rust_async_moi(
      StructWithGoodAndOpaqueFieldTwinRustAsyncMoi self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_rust_async_sse(
      StructWithGoodAndOpaqueFieldTwinRustAsyncSse self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_rust_async_sse_moi(
      StructWithGoodAndOpaqueFieldTwinRustAsyncSseMoi self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_sse(
      StructWithGoodAndOpaqueFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_sse_moi(
      StructWithGoodAndOpaqueFieldTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_sync(
      StructWithGoodAndOpaqueFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_sync_moi(
      StructWithGoodAndOpaqueFieldTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_sync_sse(
      StructWithGoodAndOpaqueFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_sync_sse_moi(
      StructWithGoodAndOpaqueFieldTwinSyncSseMoi self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_hash_map(
      StructWithHashMap self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_normal(
      StructWithOneFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_rust_async(
      StructWithOneFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_rust_async_sse(
      StructWithOneFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_sse(
      StructWithOneFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_sync(
      StructWithOneFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_sync_sse(
      StructWithOneFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_normal(
      StructWithTwoFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_rust_async(
      StructWithTwoFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_rust_async_sse(
      StructWithTwoFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_sse(
      StructWithTwoFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_sync(
      StructWithTwoFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_sync_sse(
      StructWithTwoFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_normal(
      StructWithZeroFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_rust_async(
      StructWithZeroFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_rust_async_sse(
      StructWithZeroFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_sse(
      StructWithZeroFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_sync(
      StructWithZeroFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_sync_sse(
      StructWithZeroFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_normal(
      SumWithTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_normal_array_3(
      SumWithTwinNormalArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_rust_async(
      SumWithTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_rust_async_array_3(
      SumWithTwinRustAsyncArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_rust_async_sse(
      SumWithTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_rust_async_sse_array_3(
      SumWithTwinRustAsyncSseArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sse(
      SumWithTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sse_array_3(
      SumWithTwinSseArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sync(
      SumWithTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sync_array_3(
      SumWithTwinSyncArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sync_sse(
      SumWithTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sync_sse_array_3(
      SumWithTwinSyncSseArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_test_chrono_twin_normal(
      TestChronoTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_test_chrono_twin_rust_async(
      TestChronoTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_test_chrono_twin_rust_async_sse(
      TestChronoTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_chrono_twin_sse(
      TestChronoTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_chrono_twin_sync(
      TestChronoTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_test_chrono_twin_sync_sse(
      TestChronoTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_normal(
      TestIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_normal_array_2(
      TestIdTwinNormalArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_normal_array_4(
      TestIdTwinNormalArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async(
      TestIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async_array_2(
      TestIdTwinRustAsyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async_array_4(
      TestIdTwinRustAsyncArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async_sse(
      TestIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async_sse_array_2(
      TestIdTwinRustAsyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async_sse_array_4(
      TestIdTwinRustAsyncSseArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sse(
      TestIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sse_array_2(
      TestIdTwinSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sse_array_4(
      TestIdTwinSseArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync(
      TestIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync_array_2(
      TestIdTwinSyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync_array_4(
      TestIdTwinSyncArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync_sse(
      TestIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync_sse_array_2(
      TestIdTwinSyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync_sse_array_4(
      TestIdTwinSyncSseArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_normal(
      TestModelTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_rust_async(
      TestModelTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_rust_async_sse(
      TestModelTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_sse(
      TestModelTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_sync(
      TestModelTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_sync_sse(
      TestModelTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_normal(
      TupleStructWithOneFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_rust_async(
      TupleStructWithOneFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_rust_async_sse(
      TupleStructWithOneFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_sse(
      TupleStructWithOneFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_sync(
      TupleStructWithOneFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_sync_sse(
      TupleStructWithOneFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_normal(
      TupleStructWithTwoFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_rust_async(
      TupleStructWithTwoFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_rust_async_sse(
      TupleStructWithTwoFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_sse(
      TupleStructWithTwoFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_sync(
      TupleStructWithTwoFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_sync_sse(
      TupleStructWithTwoFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_1600(U8Array1600 self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_2(U8Array2 self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_32(U8Array32 self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_5(U8Array5 self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_8(U8Array8 self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_normal(
      UserIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_rust_async(
      UserIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_rust_async_sse(
      UserIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_sse(
      UserIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_sync(
      UserIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_sync_sse(
      UserIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_normal(
      VecOfPrimitivePackTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_rust_async(
      VecOfPrimitivePackTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_rust_async_sse(
      VecOfPrimitivePackTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_sse(
      VecOfPrimitivePackTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_sync(
      VecOfPrimitivePackTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_sync_sse(
      VecOfPrimitivePackTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_normal(
      WeekdaysTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_rust_async_sse(
      WeekdaysTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_sse(
      WeekdaysTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_sync(
      WeekdaysTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_sync_sse(
      WeekdaysTwinSyncSse self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  RustLibWire.fromExternalLibrary(ExternalLibrary lib);

  void wire_boxed_blob_twin_normal(NativePortType port_, Uint8List blob) =>
      wasmModule.wire_boxed_blob_twin_normal(port_, blob);

  void wire_func_test_id_twin_normal(NativePortType port_, List<dynamic> id) =>
      wasmModule.wire_func_test_id_twin_normal(port_, id);

  void wire_get_array_twin_normal(NativePortType port_) =>
      wasmModule.wire_get_array_twin_normal(port_);

  void wire_get_complex_array_twin_normal(NativePortType port_) =>
      wasmModule.wire_get_complex_array_twin_normal(port_);

  void wire_last_number_twin_normal(NativePortType port_, Float64List array) =>
      wasmModule.wire_last_number_twin_normal(port_, array);

  void wire_nested_id_twin_normal(NativePortType port_, List<dynamic> id) =>
      wasmModule.wire_nested_id_twin_normal(port_, id);

  void wire_new_msgid_twin_normal(NativePortType port_, Uint8List id) =>
      wasmModule.wire_new_msgid_twin_normal(port_, id);

  void wire_return_boxed_feed_id_twin_normal(
          NativePortType port_, Uint8List id) =>
      wasmModule.wire_return_boxed_feed_id_twin_normal(port_, id);

  void wire_return_boxed_raw_feed_id_twin_normal(
          NativePortType port_, List<dynamic> id) =>
      wasmModule.wire_return_boxed_raw_feed_id_twin_normal(port_, id);

  void wire_use_boxed_blob_twin_normal(
          NativePortType port_, List<dynamic> blob) =>
      wasmModule.wire_use_boxed_blob_twin_normal(port_, blob);

  void wire_use_msgid_twin_normal(NativePortType port_, List<dynamic> id) =>
      wasmModule.wire_use_msgid_twin_normal(port_, id);

  void wire_func_async_simple_add_twin_normal(
          NativePortType port_, int a, int b) =>
      wasmModule.wire_func_async_simple_add_twin_normal(port_, a, b);

  void wire_func_async_void_twin_normal(NativePortType port_) =>
      wasmModule.wire_func_async_void_twin_normal(port_);

  void wire_simple_use_async_spawn(NativePortType port_, String arg) =>
      wasmModule.wire_simple_use_async_spawn(port_, arg);

  void wire_simple_use_async_spawn_blocking(NativePortType port_, String arg) =>
      wasmModule.wire_simple_use_async_spawn_blocking(port_, arg);

  void wire_simple_use_async_spawn_local(NativePortType port_, String arg) =>
      wasmModule.wire_simple_use_async_spawn_local(port_, arg);

  void wire_handle_customized_struct_twin_normal(
          NativePortType port_, List<dynamic> val) =>
      wasmModule.wire_handle_customized_struct_twin_normal(port_, val);

  void wire_next_user_id_twin_normal(
          NativePortType port_, List<dynamic> user_id) =>
      wasmModule.wire_next_user_id_twin_normal(port_, user_id);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_void_semi_serialize() =>
          wasmModule.wire_benchmark_void_semi_serialize();

  void wire_datetime_local_twin_normal(NativePortType port_, Object d) =>
      wasmModule.wire_datetime_local_twin_normal(port_, d);

  void wire_datetime_utc_twin_normal(NativePortType port_, Object d) =>
      wasmModule.wire_datetime_utc_twin_normal(port_, d);

  void wire_duration_twin_normal(NativePortType port_, Object d) =>
      wasmModule.wire_duration_twin_normal(port_, d);

  void wire_handle_durations_twin_normal(
          NativePortType port_, List<dynamic> durations, Object since) =>
      wasmModule.wire_handle_durations_twin_normal(port_, durations, since);

  void wire_handle_timestamps_twin_normal(
          NativePortType port_, List<dynamic> timestamps, Object epoch) =>
      wasmModule.wire_handle_timestamps_twin_normal(port_, timestamps, epoch);

  void wire_how_long_does_it_take_twin_normal(
          NativePortType port_, List<dynamic> mine) =>
      wasmModule.wire_how_long_does_it_take_twin_normal(port_, mine);

  void wire_naivedatetime_twin_normal(NativePortType port_, Object d) =>
      wasmModule.wire_naivedatetime_twin_normal(port_, d);

  void wire_optional_empty_datetime_utc_twin_normal(
          NativePortType port_, Object? d) =>
      wasmModule.wire_optional_empty_datetime_utc_twin_normal(port_, d);

  void wire_test_chrono_twin_normal(NativePortType port_) =>
      wasmModule.wire_test_chrono_twin_normal(port_);

  void wire_test_precise_chrono_twin_normal(NativePortType port_) =>
      wasmModule.wire_test_precise_chrono_twin_normal(port_);

  void wire_StructWithCommentsTwinNormal_instance_method_twin_normal(
          NativePortType port_, List<dynamic> that) =>
      wasmModule.wire_StructWithCommentsTwinNormal_instance_method_twin_normal(
          port_, that);

  void wire_StructWithCommentsTwinNormal_static_method_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_StructWithCommentsTwinNormal_static_method_twin_normal(port_);

  void wire_function_with_comments_slash_star_star_twin_normal(
          NativePortType port_) =>
      wasmModule.wire_function_with_comments_slash_star_star_twin_normal(port_);

  void wire_function_with_comments_triple_slash_multi_line_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_function_with_comments_triple_slash_multi_line_twin_normal(
              port_);

  void wire_function_with_comments_triple_slash_single_line_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_function_with_comments_triple_slash_single_line_twin_normal(
              port_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConstructorOpaqueStructTwinNormal_check(Object that) =>
          wasmModule.wire_ConstructorOpaqueStructTwinNormal_check(that);

  void wire_ConstructorOpaqueStructTwinNormal_new(NativePortType port_) =>
      wasmModule.wire_ConstructorOpaqueStructTwinNormal_new(port_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConstructorOpaqueSyncStructTwinNormal_check(Object that) =>
          wasmModule.wire_ConstructorOpaqueSyncStructTwinNormal_check(that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConstructorOpaqueSyncStructTwinNormal_new() =>
          wasmModule.wire_ConstructorOpaqueSyncStructTwinNormal_new();

  void wire_ConstructorTranslatableStructTwinNormal_new(NativePortType port_) =>
      wasmModule.wire_ConstructorTranslatableStructTwinNormal_new(port_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConstructorTranslatableSyncStructTwinNormal_new() =>
          wasmModule.wire_ConstructorTranslatableSyncStructTwinNormal_new();

  void wire_check_init_done(NativePortType port_) =>
      wasmModule.wire_check_init_done(port_);

  void wire_init_app(NativePortType port_) => wasmModule.wire_init_app(port_);

  void wire_my_init_one(NativePortType port_) =>
      wasmModule.wire_my_init_one(port_);

  void wire_my_init_two(NativePortType port_) =>
      wasmModule.wire_my_init_two(port_);

  void wire_return_dart_dynamic_twin_normal(NativePortType port_) =>
      wasmModule.wire_return_dart_dynamic_twin_normal(port_);

  void wire_rust_call_dart_loopback_twin_normal(
          NativePortType port_, PlatformPointer callback) =>
      wasmModule.wire_rust_call_dart_loopback_twin_normal(port_, callback);

  void wire_rust_call_dart_multi_times_twin_normal(
          NativePortType port_, PlatformPointer callback, int num_times) =>
      wasmModule.wire_rust_call_dart_multi_times_twin_normal(
          port_, callback, num_times);

  void wire_rust_call_dart_one_arg_twin_normal(
          NativePortType port_, PlatformPointer callback) =>
      wasmModule.wire_rust_call_dart_one_arg_twin_normal(port_, callback);

  void wire_rust_call_dart_return_twin_normal(
          NativePortType port_, PlatformPointer callback) =>
      wasmModule.wire_rust_call_dart_return_twin_normal(port_, callback);

  void wire_rust_call_dart_simple_twin_normal(
          NativePortType port_, PlatformPointer callback) =>
      wasmModule.wire_rust_call_dart_simple_twin_normal(port_, callback);

  void wire_rust_call_dart_two_args_twin_normal(
          NativePortType port_, PlatformPointer callback) =>
      wasmModule.wire_rust_call_dart_two_args_twin_normal(port_, callback);

  void wire_rust_call_dart_with_dart_opaque_arg_twin_normal(
          NativePortType port_,
          PlatformPointer input,
          PlatformPointer callback) =>
      wasmModule.wire_rust_call_dart_with_dart_opaque_arg_twin_normal(
          port_, input, callback);

  void wire_rust_call_dart_with_dart_opaque_result_twin_normal(
          NativePortType port_, PlatformPointer callback) =>
      wasmModule.wire_rust_call_dart_with_dart_opaque_result_twin_normal(
          port_, callback);

  void wire_async_accept_dart_opaque_twin_normal(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_async_accept_dart_opaque_twin_normal(port_, opaque);

  void wire_clone_dart_opaque_twin_normal(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_clone_dart_opaque_twin_normal(port_, opaque);

  void wire_create_enum_dart_opaque_twin_normal(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_create_enum_dart_opaque_twin_normal(port_, opaque);

  void wire_create_nested_dart_opaque_twin_normal(NativePortType port_,
          PlatformPointer opaque1, PlatformPointer opaque2) =>
      wasmModule.wire_create_nested_dart_opaque_twin_normal(
          port_, opaque1, opaque2);

  void wire_drop_static_dart_opaque_twin_normal(NativePortType port_, int id) =>
      wasmModule.wire_drop_static_dart_opaque_twin_normal(port_, id);

  void wire_get_enum_dart_opaque_twin_normal(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_get_enum_dart_opaque_twin_normal(port_, opaque);

  void wire_get_nested_dart_opaque_twin_normal(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_get_nested_dart_opaque_twin_normal(port_, opaque);

  void wire_loop_back_array_get_twin_normal(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_loop_back_array_get_twin_normal(port_, opaque);

  void wire_loop_back_array_twin_normal(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_loop_back_array_twin_normal(port_, opaque);

  void wire_loop_back_option_get_twin_normal(
          NativePortType port_, PlatformPointer? opaque) =>
      wasmModule.wire_loop_back_option_get_twin_normal(port_, opaque);

  void wire_loop_back_option_twin_normal(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_loop_back_option_twin_normal(port_, opaque);

  void wire_loop_back_twin_normal(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_loop_back_twin_normal(port_, opaque);

  void wire_loop_back_vec_get_twin_normal(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_loop_back_vec_get_twin_normal(port_, opaque);

  void wire_loop_back_vec_twin_normal(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_loop_back_vec_twin_normal(port_, opaque);

  void wire_panic_unwrap_dart_opaque_twin_normal(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_panic_unwrap_dart_opaque_twin_normal(port_, opaque);

  void wire_set_static_dart_opaque_twin_normal(
          NativePortType port_, int id, PlatformPointer opaque) =>
      wasmModule.wire_set_static_dart_opaque_twin_normal(port_, id, opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_accept_dart_opaque_twin_normal(PlatformPointer opaque) =>
          wasmModule.wire_sync_accept_dart_opaque_twin_normal(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_loopback_twin_normal(PlatformPointer opaque) =>
          wasmModule.wire_sync_loopback_twin_normal(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_option_dart_opaque_twin_normal(PlatformPointer opaque) =>
          wasmModule.wire_sync_option_dart_opaque_twin_normal(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_option_loopback_twin_normal(PlatformPointer? opaque) =>
          wasmModule.wire_sync_option_loopback_twin_normal(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_unwrap_dart_opaque_twin_normal(PlatformPointer opaque) =>
          wasmModule.wire_unwrap_dart_opaque_twin_normal(opaque);

  void wire_test_duplicated_module_names(
          NativePortType port_, List<dynamic> s) =>
      wasmModule.wire_test_duplicated_module_names(port_, s);

  void wire_DroppableTwinNormal_create_stream(
          NativePortType port_, Object that) =>
      wasmModule.wire_DroppableTwinNormal_create_stream(port_, that);

  void wire_DroppableTwinNormal_get_drop_count_twin_normal(
          NativePortType port_) =>
      wasmModule.wire_DroppableTwinNormal_get_drop_count_twin_normal(port_);

  void wire_DroppableTwinNormal_new_twin_normal(NativePortType port_) =>
      wasmModule.wire_DroppableTwinNormal_new_twin_normal(port_);

  void wire_DroppableTwinNormal_simple_method_twin_normal(
          NativePortType port_, Object that) =>
      wasmModule.wire_DroppableTwinNormal_simple_method_twin_normal(
          port_, that);

  void wire_func_enum_simple_twin_normal(NativePortType port_, int arg) =>
      wasmModule.wire_func_enum_simple_twin_normal(port_, arg);

  void wire_func_enum_with_discriminant_twin_normal(
          NativePortType port_, int arg) =>
      wasmModule.wire_func_enum_with_discriminant_twin_normal(port_, arg);

  void wire_func_enum_with_item_mixed_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_enum_with_item_mixed_twin_normal(port_, arg);

  void wire_func_enum_with_item_struct_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_enum_with_item_struct_twin_normal(port_, arg);

  void wire_func_enum_with_item_tuple_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_enum_with_item_tuple_twin_normal(port_, arg);

  void wire_handle_enum_parameter_twin_normal(
          NativePortType port_, int weekday) =>
      wasmModule.wire_handle_enum_parameter_twin_normal(port_, weekday);

  void wire_handle_enum_struct_twin_normal(
          NativePortType port_, List<dynamic> val) =>
      wasmModule.wire_handle_enum_struct_twin_normal(port_, val);

  void wire_handle_return_enum_twin_normal(
          NativePortType port_, String input) =>
      wasmModule.wire_handle_return_enum_twin_normal(port_, input);

  void wire_multiply_by_ten_twin_normal(
          NativePortType port_, List<dynamic> measure) =>
      wasmModule.wire_multiply_by_ten_twin_normal(port_, measure);

  void wire_print_note_twin_normal(NativePortType port_, List<dynamic> note) =>
      wasmModule.wire_print_note_twin_normal(port_, note);

  void wire_EventTwinNormal_as_string_twin_normal(
          NativePortType port_, List<dynamic> that) =>
      wasmModule.wire_EventTwinNormal_as_string_twin_normal(port_, that);

  void wire_close_event_listener_twin_normal(NativePortType port_) =>
      wasmModule.wire_close_event_listener_twin_normal(port_);

  void wire_create_event_twin_normal(
          NativePortType port_, String address, String payload) =>
      wasmModule.wire_create_event_twin_normal(port_, address, payload);

  void wire_register_event_listener_twin_normal(NativePortType port_) =>
      wasmModule.wire_register_event_listener_twin_normal(port_);

  void wire_CustomStructTwinNormal_new_twin_normal(
          NativePortType port_, String message) =>
      wasmModule.wire_CustomStructTwinNormal_new_twin_normal(port_, message);

  void wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normal(
          NativePortType port_, List<dynamic> that) =>
      wasmModule
          .wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normal(
              port_, that);

  void wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normal(
          NativePortType port_, List<dynamic> that) =>
      wasmModule
          .wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normal(
              port_, that);

  void wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normal(
              port_);

  void wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normal(
              port_);

  void wire_SomeStructTwinNormal_new_twin_normal(
          NativePortType port_, int value) =>
      wasmModule.wire_SomeStructTwinNormal_new_twin_normal(port_, value);

  void wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normal(
          NativePortType port_, List<dynamic> that) =>
      wasmModule
          .wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normal(
              port_, that);

  void wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normal(
          NativePortType port_, List<dynamic> that) =>
      wasmModule
          .wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normal(
              port_, that);

  void wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normal(
              port_);

  void wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normal(
              port_);

  void wire_custom_enum_error_panic_twin_normal(NativePortType port_) =>
      wasmModule.wire_custom_enum_error_panic_twin_normal(port_);

  void wire_custom_enum_error_return_error_twin_normal(NativePortType port_) =>
      wasmModule.wire_custom_enum_error_return_error_twin_normal(port_);

  void wire_custom_enum_error_return_ok_twin_normal(
          NativePortType port_, int arg) =>
      wasmModule.wire_custom_enum_error_return_ok_twin_normal(port_, arg);

  void wire_custom_nested_error_return_error_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_custom_nested_error_return_error_twin_normal(port_, arg);

  void wire_custom_struct_error_return_error_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_custom_struct_error_return_error_twin_normal(port_, arg);

  void wire_func_return_error_twin_normal(NativePortType port_) =>
      wasmModule.wire_func_return_error_twin_normal(port_);

  void wire_func_type_fallible_panic_twin_normal(NativePortType port_) =>
      wasmModule.wire_func_type_fallible_panic_twin_normal(port_);

  void wire_func_type_infallible_panic_twin_normal(NativePortType port_) =>
      wasmModule.wire_func_type_infallible_panic_twin_normal(port_);

  void wire_panic_with_custom_result_twin_normal(NativePortType port_) =>
      wasmModule.wire_panic_with_custom_result_twin_normal(port_);

  void wire_return_custom_nested_error_1_twin_normal(NativePortType port_) =>
      wasmModule.wire_return_custom_nested_error_1_twin_normal(port_);

  void wire_return_custom_nested_error_1_variant1_twin_normal(
          NativePortType port_) =>
      wasmModule.wire_return_custom_nested_error_1_variant1_twin_normal(port_);

  void wire_return_custom_nested_error_2_twin_normal(NativePortType port_) =>
      wasmModule.wire_return_custom_nested_error_2_twin_normal(port_);

  void wire_return_custom_struct_error_twin_normal(NativePortType port_) =>
      wasmModule.wire_return_custom_struct_error_twin_normal(port_);

  void wire_return_custom_struct_ok_twin_normal(NativePortType port_) =>
      wasmModule.wire_return_custom_struct_ok_twin_normal(port_);

  void wire_return_err_custom_error_twin_normal(NativePortType port_) =>
      wasmModule.wire_return_err_custom_error_twin_normal(port_);

  void wire_return_error_variant_twin_normal(
          NativePortType port_, int variant) =>
      wasmModule.wire_return_error_variant_twin_normal(port_, variant);

  void wire_return_ok_custom_error_twin_normal(NativePortType port_) =>
      wasmModule.wire_return_ok_custom_error_twin_normal(port_);

  void wire_stream_sink_throw_anyhow_twin_normal(NativePortType port_) =>
      wasmModule.wire_stream_sink_throw_anyhow_twin_normal(port_);

  void wire_throw_anyhow_twin_normal(NativePortType port_) =>
      wasmModule.wire_throw_anyhow_twin_normal(port_);

  void wire_call_new_module_system_twin_normal(NativePortType port_) =>
      wasmModule.wire_call_new_module_system_twin_normal(port_);

  void wire_call_old_module_system_twin_normal(NativePortType port_) =>
      wasmModule.wire_call_old_module_system_twin_normal(port_);

  void wire_use_imported_enum_twin_normal(NativePortType port_, int my_enum) =>
      wasmModule.wire_use_imported_enum_twin_normal(port_, my_enum);

  void wire_use_imported_struct_twin_normal(
          NativePortType port_, List<dynamic> my_struct) =>
      wasmModule.wire_use_imported_struct_twin_normal(port_, my_struct);

  void wire_another_macro_struct_twin_normal(NativePortType port_) =>
      wasmModule.wire_another_macro_struct_twin_normal(port_);

  void wire_func_macro_struct_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_macro_struct_twin_normal(port_, arg);

  void wire_func_hash_map_i32_i32_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_hash_map_i32_i32_twin_normal(port_, arg);

  void wire_func_hash_map_string_bytes_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_hash_map_string_bytes_twin_normal(port_, arg);

  void wire_func_hash_map_string_complex_enum_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_hash_map_string_complex_enum_twin_normal(port_, arg);

  void wire_func_hash_map_string_simple_enum_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_hash_map_string_simple_enum_twin_normal(port_, arg);

  void wire_func_hash_map_string_string_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_hash_map_string_string_twin_normal(port_, arg);

  void wire_func_hash_map_string_struct_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_hash_map_string_struct_twin_normal(port_, arg);

  void wire_func_hash_set_i32_twin_normal(
          NativePortType port_, Int32List arg) =>
      wasmModule.wire_func_hash_set_i32_twin_normal(port_, arg);

  void wire_func_hash_set_string_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_hash_set_string_twin_normal(port_, arg);

  void wire_ConcatenateWithTwinNormal_concatenate_static_twin_normal(
          NativePortType port_, String a, String b) =>
      wasmModule.wire_ConcatenateWithTwinNormal_concatenate_static_twin_normal(
          port_, a, b);

  void wire_ConcatenateWithTwinNormal_concatenate_twin_normal(
          NativePortType port_, List<dynamic> that, String b) =>
      wasmModule.wire_ConcatenateWithTwinNormal_concatenate_twin_normal(
          port_, that, b);

  void wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normal(
              port_);

  void wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normal(
          NativePortType port_, int key, int max) =>
      wasmModule
          .wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normal(
              port_, key, max);

  void wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normal(
          NativePortType port_, List<dynamic> that) =>
      wasmModule
          .wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normal(
              port_, that);

  void wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normal(
          NativePortType port_, List<dynamic> that, int key, int max) =>
      wasmModule
          .wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normal(
              port_, that, key, max);

  void wire_ConcatenateWithTwinNormal_new_twin_normal(
          NativePortType port_, String a) =>
      wasmModule.wire_ConcatenateWithTwinNormal_new_twin_normal(port_, a);

  void wire_ConcatenateWithTwinNormal_simple_getter_twin_normal(
          NativePortType port_, List<dynamic> that) =>
      wasmModule.wire_ConcatenateWithTwinNormal_simple_getter_twin_normal(
          port_, that);

  void wire_MyCallableTwinNormal_call(
          NativePortType port_, List<dynamic> that, String two) =>
      wasmModule.wire_MyCallableTwinNormal_call(port_, that, two);

  void wire_SimpleStructTwinNormal_arg_self_twin_normal(
          NativePortType port_, List<dynamic> a, List<dynamic> b) =>
      wasmModule.wire_SimpleStructTwinNormal_arg_self_twin_normal(port_, a, b);

  void wire_SimpleStructTwinNormal_return_self_twin_normal(
          NativePortType port_, String one) =>
      wasmModule.wire_SimpleStructTwinNormal_return_self_twin_normal(
          port_, one);

  void wire_SimpleStructTwinNormal_vec_self_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_SimpleStructTwinNormal_vec_self_twin_normal(port_, arg);

  void wire_SumWithTwinNormal_sum_twin_normal(
          NativePortType port_, List<dynamic> that, int y, int z) =>
      wasmModule.wire_SumWithTwinNormal_sum_twin_normal(port_, that, y, z);

  void wire_get_sum_array_twin_normal(
          NativePortType port_, int a, int b, int c) =>
      wasmModule.wire_get_sum_array_twin_normal(port_, a, b, c);

  void wire_get_sum_struct_twin_normal(NativePortType port_) =>
      wasmModule.wire_get_sum_struct_twin_normal(port_);

  void wire_app_settings_stream_twin_normal(NativePortType port_) =>
      wasmModule.wire_app_settings_stream_twin_normal(port_);

  void wire_app_settings_vec_stream_twin_normal(NativePortType port_) =>
      wasmModule.wire_app_settings_vec_stream_twin_normal(port_);

  void wire_first_number_twin_normal(
          NativePortType port_, List<dynamic> nums) =>
      wasmModule.wire_first_number_twin_normal(port_, nums);

  void wire_first_sequence_twin_normal(
          NativePortType port_, List<dynamic> seqs) =>
      wasmModule.wire_first_sequence_twin_normal(port_, seqs);

  void wire_get_app_settings_twin_normal(NativePortType port_) =>
      wasmModule.wire_get_app_settings_twin_normal(port_);

  void wire_get_fallible_app_settings_twin_normal(NativePortType port_) =>
      wasmModule.wire_get_fallible_app_settings_twin_normal(port_);

  void wire_get_message_twin_normal(NativePortType port_) =>
      wasmModule.wire_get_message_twin_normal(port_);

  void wire_is_app_embedded_twin_normal(
          NativePortType port_, List<dynamic> app_settings) =>
      wasmModule.wire_is_app_embedded_twin_normal(port_, app_settings);

  void wire_mirror_array_enum_stream_twin_normal(NativePortType port_) =>
      wasmModule.wire_mirror_array_enum_stream_twin_normal(port_);

  void wire_mirror_enum_stream_twin_normal(NativePortType port_) =>
      wasmModule.wire_mirror_enum_stream_twin_normal(port_);

  void wire_mirror_map_enum_stream_twin_normal(NativePortType port_) =>
      wasmModule.wire_mirror_map_enum_stream_twin_normal(port_);

  void wire_mirror_option_enum_stream_twin_normal(NativePortType port_) =>
      wasmModule.wire_mirror_option_enum_stream_twin_normal(port_);

  void wire_mirror_set_enum_stream_twin_normal(NativePortType port_) =>
      wasmModule.wire_mirror_set_enum_stream_twin_normal(port_);

  void wire_mirror_struct_stream_twin_normal(NativePortType port_) =>
      wasmModule.wire_mirror_struct_stream_twin_normal(port_);

  void wire_mirror_tuple_stream_twin_normal(NativePortType port_) =>
      wasmModule.wire_mirror_tuple_stream_twin_normal(port_);

  void wire_mirror_vec_enum_stream_twin_normal(NativePortType port_) =>
      wasmModule.wire_mirror_vec_enum_stream_twin_normal(port_);

  void wire_repeat_number_twin_normal(
          NativePortType port_, int num, int times) =>
      wasmModule.wire_repeat_number_twin_normal(port_, num, times);

  void wire_repeat_sequence_twin_normal(
          NativePortType port_, int seq, int times) =>
      wasmModule.wire_repeat_sequence_twin_normal(port_, seq, times);

  void wire_test_contains_mirrored_sub_struct_twin_normal(
          NativePortType port_) =>
      wasmModule.wire_test_contains_mirrored_sub_struct_twin_normal(port_);

  void wire_test_fallible_of_raw_string_mirrored_twin_normal(
          NativePortType port_) =>
      wasmModule.wire_test_fallible_of_raw_string_mirrored_twin_normal(port_);

  void wire_test_hashmap_with_mirrored_value_twin_normal(
          NativePortType port_) =>
      wasmModule.wire_test_hashmap_with_mirrored_value_twin_normal(port_);

  void wire_test_list_of_nested_enums_mirrored_twin_normal(
          NativePortType port_) =>
      wasmModule.wire_test_list_of_nested_enums_mirrored_twin_normal(port_);

  void wire_test_list_of_raw_nested_string_mirrored_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_test_list_of_raw_nested_string_mirrored_twin_normal(port_);

  void wire_test_nested_raw_string_mirrored_twin_normal(NativePortType port_) =>
      wasmModule.wire_test_nested_raw_string_mirrored_twin_normal(port_);

  void wire_test_raw_string_enum_mirrored_twin_normal(
          NativePortType port_, bool nested) =>
      wasmModule.wire_test_raw_string_enum_mirrored_twin_normal(port_, nested);

  void wire_test_raw_string_mirrored_twin_normal(NativePortType port_) =>
      wasmModule.wire_test_raw_string_mirrored_twin_normal(port_);

  void wire_handle_big_buffers_twin_normal(NativePortType port_) =>
      wasmModule.wire_handle_big_buffers_twin_normal(port_);

  void wire_handle_complex_struct_twin_normal(
          NativePortType port_, List<dynamic> s) =>
      wasmModule.wire_handle_complex_struct_twin_normal(port_, s);

  void wire_handle_nested_struct_twin_normal(
          NativePortType port_, List<dynamic> s) =>
      wasmModule.wire_handle_nested_struct_twin_normal(port_, s);

  void wire_handle_string_twin_normal(NativePortType port_, String s) =>
      wasmModule.wire_handle_string_twin_normal(port_, s);

  void wire_handle_struct_twin_normal(
          NativePortType port_, List<dynamic> arg, List<dynamic> boxed) =>
      wasmModule.wire_handle_struct_twin_normal(port_, arg, boxed);

  void wire_handle_vec_u8_twin_normal(NativePortType port_, List<int> v) =>
      wasmModule.wire_handle_vec_u8_twin_normal(port_, v);

  void wire_list_of_primitive_enums_twin_normal(
          NativePortType port_, List<dynamic> weekdays) =>
      wasmModule.wire_list_of_primitive_enums_twin_normal(port_, weekdays);

  void wire_test_abc_enum_twin_normal(
          NativePortType port_, List<dynamic> abc) =>
      wasmModule.wire_test_abc_enum_twin_normal(port_, abc);

  void wire_test_struct_with_enum_twin_normal(
          NativePortType port_, List<dynamic> se) =>
      wasmModule.wire_test_struct_with_enum_twin_normal(port_, se);

  void wire_StructInMiscNoTwinExampleA_sample_function_a(
          NativePortType port_, Object that) =>
      wasmModule.wire_StructInMiscNoTwinExampleA_sample_function_a(port_, that);

  void wire_StructWithImplBlockInMultiFile_method_in_a(
          NativePortType port_, Object that) =>
      wasmModule.wire_StructWithImplBlockInMultiFile_method_in_a(port_, that);

  void wire_StructInMiscNoTwinExampleB_get_struct_in_misc_no_twin_example_a(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_StructInMiscNoTwinExampleB_get_struct_in_misc_no_twin_example_a(
              port_, that);

  void wire_StructInMiscNoTwinExampleB_sample_function_b(
          NativePortType port_, Object that) =>
      wasmModule.wire_StructInMiscNoTwinExampleB_sample_function_b(port_, that);

  void wire_StructWithImplBlockInMultiFile_method_in_b(
          NativePortType port_, Object that) =>
      wasmModule.wire_StructWithImplBlockInMultiFile_method_in_b(port_, that);

  void wire_empty_struct_twin_normal(
          NativePortType port_, List<dynamic> empty) =>
      wasmModule.wire_empty_struct_twin_normal(port_, empty);

  void wire_func_return_unit_twin_normal(NativePortType port_) =>
      wasmModule.wire_func_return_unit_twin_normal(port_);

  void wire_handle_list_of_struct_twin_normal(
          NativePortType port_, List<dynamic> l) =>
      wasmModule.wire_handle_list_of_struct_twin_normal(port_, l);

  void wire_handle_string_list_twin_normal(
          NativePortType port_, List<dynamic> names) =>
      wasmModule.wire_handle_string_list_twin_normal(port_, names);

  void wire_handle_newtype_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_handle_newtype_twin_normal(port_, arg);

  void wire_handle_increment_boxed_optional_twin_normal(
          NativePortType port_, double? opt) =>
      wasmModule.wire_handle_increment_boxed_optional_twin_normal(port_, opt);

  void wire_handle_option_box_arguments_twin_normal(
          NativePortType port_,
          int? i8box,
          int? u8box,
          int? i32box,
          Object? i64box,
          double? f64box,
          bool? boolbox,
          List<dynamic>? structbox) =>
      wasmModule.wire_handle_option_box_arguments_twin_normal(
          port_, i8box, u8box, i32box, i64box, f64box, boolbox, structbox);

  void wire_handle_optional_increment_twin_normal(
          NativePortType port_, List<dynamic>? opt) =>
      wasmModule.wire_handle_optional_increment_twin_normal(port_, opt);

  void wire_handle_optional_return_twin_normal(
          NativePortType port_, double left, double right) =>
      wasmModule.wire_handle_optional_return_twin_normal(port_, left, right);

  void wire_handle_optional_struct_twin_normal(
          NativePortType port_, String? document) =>
      wasmModule.wire_handle_optional_struct_twin_normal(port_, document);

  void wire_handle_vec_of_opts_twin_normal(
          NativePortType port_, List<dynamic> opt) =>
      wasmModule.wire_handle_vec_of_opts_twin_normal(port_, opt);

  void wire_primitive_optional_types_twin_normal(NativePortType port_,
          int? my_i32, Object? my_i64, double? my_f64, bool? my_bool) =>
      wasmModule.wire_primitive_optional_types_twin_normal(
          port_, my_i32, my_i64, my_f64, my_bool);

  void wire_handle_vec_of_primitive_twin_normal(NativePortType port_, int n) =>
      wasmModule.wire_handle_vec_of_primitive_twin_normal(port_, n);

  void wire_primitive_types_twin_normal(NativePortType port_, int my_i32,
          Object my_i64, double my_f64, bool my_bool) =>
      wasmModule.wire_primitive_types_twin_normal(
          port_, my_i32, my_i64, my_f64, my_bool);

  void wire_primitive_u32_twin_normal(NativePortType port_, int my_u32) =>
      wasmModule.wire_primitive_u32_twin_normal(port_, my_u32);

  void wire_boxed_blob_twin_rust_async(NativePortType port_, Uint8List blob) =>
      wasmModule.wire_boxed_blob_twin_rust_async(port_, blob);

  void wire_func_test_id_twin_rust_async(
          NativePortType port_, List<dynamic> id) =>
      wasmModule.wire_func_test_id_twin_rust_async(port_, id);

  void wire_get_array_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_get_array_twin_rust_async(port_);

  void wire_get_complex_array_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_get_complex_array_twin_rust_async(port_);

  void wire_last_number_twin_rust_async(
          NativePortType port_, Float64List array) =>
      wasmModule.wire_last_number_twin_rust_async(port_, array);

  void wire_nested_id_twin_rust_async(NativePortType port_, List<dynamic> id) =>
      wasmModule.wire_nested_id_twin_rust_async(port_, id);

  void wire_new_msgid_twin_rust_async(NativePortType port_, Uint8List id) =>
      wasmModule.wire_new_msgid_twin_rust_async(port_, id);

  void wire_return_boxed_feed_id_twin_rust_async(
          NativePortType port_, Uint8List id) =>
      wasmModule.wire_return_boxed_feed_id_twin_rust_async(port_, id);

  void wire_return_boxed_raw_feed_id_twin_rust_async(
          NativePortType port_, List<dynamic> id) =>
      wasmModule.wire_return_boxed_raw_feed_id_twin_rust_async(port_, id);

  void wire_use_boxed_blob_twin_rust_async(
          NativePortType port_, List<dynamic> blob) =>
      wasmModule.wire_use_boxed_blob_twin_rust_async(port_, blob);

  void wire_use_msgid_twin_rust_async(NativePortType port_, List<dynamic> id) =>
      wasmModule.wire_use_msgid_twin_rust_async(port_, id);

  void wire_boxed_blob_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_boxed_blob_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_test_id_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_test_id_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_array_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_array_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_complex_array_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_complex_array_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_last_number_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_last_number_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_nested_id_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_nested_id_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_new_msgid_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_new_msgid_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_boxed_feed_id_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_boxed_feed_id_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_boxed_raw_feed_id_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_boxed_raw_feed_id_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_use_boxed_blob_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_use_boxed_blob_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_use_msgid_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_use_msgid_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_boxed_blob_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_boxed_blob_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_test_id_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_test_id_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_array_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_array_twin_sse(port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_complex_array_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_complex_array_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_last_number_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_last_number_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_nested_id_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_nested_id_twin_sse(port_, ptr_, rust_vec_len_, data_len_);

  void wire_new_msgid_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_new_msgid_twin_sse(port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_boxed_feed_id_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_boxed_feed_id_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_boxed_raw_feed_id_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_boxed_raw_feed_id_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_use_boxed_blob_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_use_boxed_blob_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_use_msgid_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_use_msgid_twin_sse(port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_boxed_blob_twin_sync(Uint8List blob) =>
          wasmModule.wire_boxed_blob_twin_sync(blob);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_test_id_twin_sync(List<dynamic> id) =>
          wasmModule.wire_func_test_id_twin_sync(id);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_array_twin_sync() => wasmModule.wire_get_array_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_complex_array_twin_sync() =>
          wasmModule.wire_get_complex_array_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_last_number_twin_sync(Float64List array) =>
          wasmModule.wire_last_number_twin_sync(array);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_nested_id_twin_sync(List<dynamic> id) =>
          wasmModule.wire_nested_id_twin_sync(id);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_new_msgid_twin_sync(Uint8List id) =>
          wasmModule.wire_new_msgid_twin_sync(id);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_boxed_feed_id_twin_sync(Uint8List id) =>
          wasmModule.wire_return_boxed_feed_id_twin_sync(id);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_boxed_raw_feed_id_twin_sync(List<dynamic> id) =>
          wasmModule.wire_return_boxed_raw_feed_id_twin_sync(id);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_use_boxed_blob_twin_sync(List<dynamic> blob) =>
          wasmModule.wire_use_boxed_blob_twin_sync(blob);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_use_msgid_twin_sync(List<dynamic> id) =>
          wasmModule.wire_use_msgid_twin_sync(id);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_boxed_blob_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_boxed_blob_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_test_id_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_func_test_id_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_array_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_get_array_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_complex_array_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_get_complex_array_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_last_number_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_last_number_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_nested_id_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_nested_id_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_new_msgid_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_new_msgid_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_boxed_feed_id_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_return_boxed_feed_id_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_boxed_raw_feed_id_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_return_boxed_raw_feed_id_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_use_boxed_blob_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_use_boxed_blob_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_use_msgid_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_use_msgid_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_func_async_simple_add_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_async_simple_add_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_async_void_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_async_void_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_customized_struct_twin_rust_async(
          NativePortType port_, List<dynamic> val) =>
      wasmModule.wire_handle_customized_struct_twin_rust_async(port_, val);

  void wire_next_user_id_twin_rust_async(
          NativePortType port_, List<dynamic> user_id) =>
      wasmModule.wire_next_user_id_twin_rust_async(port_, user_id);

  void wire_handle_customized_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_customized_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_next_user_id_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_next_user_id_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_customized_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_customized_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_next_user_id_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_next_user_id_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_customized_struct_twin_sync(List<dynamic> val) =>
          wasmModule.wire_handle_customized_struct_twin_sync(val);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_next_user_id_twin_sync(List<dynamic> user_id) =>
          wasmModule.wire_next_user_id_twin_sync(user_id);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_customized_struct_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_customized_struct_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_next_user_id_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_next_user_id_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_basic_general_enum_twin_normal_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_example_basic_type_basic_general_enum_twin_normal_twin_normal(
              port_, arg);

  void wire_example_basic_type_basic_primitive_enum_twin_normal_twin_normal(
          NativePortType port_, int arg) =>
      wasmModule
          .wire_example_basic_type_basic_primitive_enum_twin_normal_twin_normal(
              port_, arg);

  void wire_example_basic_type_basic_struct_twin_normal_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_type_basic_struct_twin_normal_twin_normal(
          port_, arg);

  void wire_example_basic_type_bool_twin_normal(
          NativePortType port_, bool arg) =>
      wasmModule.wire_example_basic_type_bool_twin_normal(port_, arg);

  void wire_example_basic_type_bytes_twin_normal(
          NativePortType port_, List<int> arg) =>
      wasmModule.wire_example_basic_type_bytes_twin_normal(port_, arg);

  void wire_example_basic_type_f32_twin_normal(
          NativePortType port_, double arg) =>
      wasmModule.wire_example_basic_type_f32_twin_normal(port_, arg);

  void wire_example_basic_type_f64_twin_normal(
          NativePortType port_, double arg) =>
      wasmModule.wire_example_basic_type_f64_twin_normal(port_, arg);

  void wire_example_basic_type_i16_twin_normal(NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_i16_twin_normal(port_, arg);

  void wire_example_basic_type_i32_twin_normal(NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_i32_twin_normal(port_, arg);

  void wire_example_basic_type_i64_twin_normal(
          NativePortType port_, Object arg) =>
      wasmModule.wire_example_basic_type_i64_twin_normal(port_, arg);

  void wire_example_basic_type_i8_twin_normal(NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_i8_twin_normal(port_, arg);

  void wire_example_basic_type_isize_twin_normal(
          NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_isize_twin_normal(port_, arg);

  void wire_example_basic_type_string_twin_normal(
          NativePortType port_, String arg) =>
      wasmModule.wire_example_basic_type_string_twin_normal(port_, arg);

  void wire_example_basic_type_u16_twin_normal(NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_u16_twin_normal(port_, arg);

  void wire_example_basic_type_u32_twin_normal(NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_u32_twin_normal(port_, arg);

  void wire_example_basic_type_u64_twin_normal(
          NativePortType port_, Object arg) =>
      wasmModule.wire_example_basic_type_u64_twin_normal(port_, arg);

  void wire_example_basic_type_u8_twin_normal(NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_u8_twin_normal(port_, arg);

  void wire_example_basic_type_usize_twin_normal(
          NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_usize_twin_normal(port_, arg);

  void wire_example_basic_list_type_basic_general_enum_twin_normal_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_example_basic_list_type_basic_general_enum_twin_normal_twin_normal(
              port_, arg);

  void wire_example_basic_list_type_basic_primitive_enum_twin_normal_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_example_basic_list_type_basic_primitive_enum_twin_normal_twin_normal(
              port_, arg);

  void wire_example_basic_list_type_basic_struct_twin_normal_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_example_basic_list_type_basic_struct_twin_normal_twin_normal(
              port_, arg);

  void wire_example_basic_list_type_bool_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_list_type_bool_twin_normal(port_, arg);

  void wire_example_basic_list_type_bytes_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_list_type_bytes_twin_normal(port_, arg);

  void wire_example_basic_list_type_f32_twin_normal(
          NativePortType port_, List<double> arg) =>
      wasmModule.wire_example_basic_list_type_f32_twin_normal(port_, arg);

  void wire_example_basic_list_type_f64_twin_normal(
          NativePortType port_, List<double> arg) =>
      wasmModule.wire_example_basic_list_type_f64_twin_normal(port_, arg);

  void wire_example_basic_list_type_i16_twin_normal(
          NativePortType port_, List<int> arg) =>
      wasmModule.wire_example_basic_list_type_i16_twin_normal(port_, arg);

  void wire_example_basic_list_type_i32_twin_normal(
          NativePortType port_, List<int> arg) =>
      wasmModule.wire_example_basic_list_type_i32_twin_normal(port_, arg);

  void wire_example_basic_list_type_i64_twin_normal(
          NativePortType port_, Object /* BigInt64Array */ arg) =>
      wasmModule.wire_example_basic_list_type_i64_twin_normal(port_, arg);

  void wire_example_basic_list_type_i8_twin_normal(
          NativePortType port_, List<int> arg) =>
      wasmModule.wire_example_basic_list_type_i8_twin_normal(port_, arg);

  void wire_example_basic_list_type_string_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_list_type_string_twin_normal(port_, arg);

  void wire_example_basic_list_type_u16_twin_normal(
          NativePortType port_, List<int> arg) =>
      wasmModule.wire_example_basic_list_type_u16_twin_normal(port_, arg);

  void wire_example_basic_list_type_u32_twin_normal(
          NativePortType port_, List<int> arg) =>
      wasmModule.wire_example_basic_list_type_u32_twin_normal(port_, arg);

  void wire_example_basic_list_type_u64_twin_normal(
          NativePortType port_, Object /* BigInt64Array */ arg) =>
      wasmModule.wire_example_basic_list_type_u64_twin_normal(port_, arg);

  void wire_example_basic_list_type_u8_twin_normal(
          NativePortType port_, List<int> arg) =>
      wasmModule.wire_example_basic_list_type_u8_twin_normal(port_, arg);

  void wire_example_basic_list_type_basic_general_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_example_basic_list_type_basic_general_enum_twin_rust_async_twin_rust_async(
              port_, arg);

  void wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
              port_, arg);

  void wire_example_basic_list_type_basic_struct_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_example_basic_list_type_basic_struct_twin_rust_async_twin_rust_async(
              port_, arg);

  void wire_example_basic_list_type_bool_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_list_type_bool_twin_rust_async(port_, arg);

  void wire_example_basic_list_type_bytes_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_list_type_bytes_twin_rust_async(port_, arg);

  void wire_example_basic_list_type_f32_twin_rust_async(
          NativePortType port_, List<double> arg) =>
      wasmModule.wire_example_basic_list_type_f32_twin_rust_async(port_, arg);

  void wire_example_basic_list_type_f64_twin_rust_async(
          NativePortType port_, List<double> arg) =>
      wasmModule.wire_example_basic_list_type_f64_twin_rust_async(port_, arg);

  void wire_example_basic_list_type_i16_twin_rust_async(
          NativePortType port_, List<int> arg) =>
      wasmModule.wire_example_basic_list_type_i16_twin_rust_async(port_, arg);

  void wire_example_basic_list_type_i32_twin_rust_async(
          NativePortType port_, List<int> arg) =>
      wasmModule.wire_example_basic_list_type_i32_twin_rust_async(port_, arg);

  void wire_example_basic_list_type_i64_twin_rust_async(
          NativePortType port_, Object /* BigInt64Array */ arg) =>
      wasmModule.wire_example_basic_list_type_i64_twin_rust_async(port_, arg);

  void wire_example_basic_list_type_i8_twin_rust_async(
          NativePortType port_, List<int> arg) =>
      wasmModule.wire_example_basic_list_type_i8_twin_rust_async(port_, arg);

  void wire_example_basic_list_type_string_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_list_type_string_twin_rust_async(
          port_, arg);

  void wire_example_basic_list_type_u16_twin_rust_async(
          NativePortType port_, List<int> arg) =>
      wasmModule.wire_example_basic_list_type_u16_twin_rust_async(port_, arg);

  void wire_example_basic_list_type_u32_twin_rust_async(
          NativePortType port_, List<int> arg) =>
      wasmModule.wire_example_basic_list_type_u32_twin_rust_async(port_, arg);

  void wire_example_basic_list_type_u64_twin_rust_async(
          NativePortType port_, Object /* BigInt64Array */ arg) =>
      wasmModule.wire_example_basic_list_type_u64_twin_rust_async(port_, arg);

  void wire_example_basic_list_type_u8_twin_rust_async(
          NativePortType port_, List<int> arg) =>
      wasmModule.wire_example_basic_list_type_u8_twin_rust_async(port_, arg);

  void wire_example_basic_list_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_list_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_list_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_bool_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_bool_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_bytes_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_bytes_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_f32_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_f32_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_f64_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_f64_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_i16_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_i16_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_i32_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_i32_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_i64_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_i64_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_i8_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_i8_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_string_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_string_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_u16_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_u16_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_u32_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_u32_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_u64_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_u64_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_u8_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_u8_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_basic_general_enum_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_list_type_basic_general_enum_twin_sse_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_basic_primitive_enum_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_list_type_basic_primitive_enum_twin_sse_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_basic_struct_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_basic_struct_twin_sse_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_bool_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_bool_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_bytes_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_bytes_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_f32_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_f32_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_f64_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_f64_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_i16_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_i16_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_i32_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_i32_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_i64_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_i64_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_i8_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_i8_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_string_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_string_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_u16_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_u16_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_u32_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_u32_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_u64_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_u64_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_list_type_u8_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_list_type_u8_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_basic_general_enum_twin_sync_twin_sync(
              List<dynamic> arg) =>
          wasmModule
              .wire_example_basic_list_type_basic_general_enum_twin_sync_twin_sync(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_basic_primitive_enum_twin_sync_twin_sync(
              List<dynamic> arg) =>
          wasmModule
              .wire_example_basic_list_type_basic_primitive_enum_twin_sync_twin_sync(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_basic_struct_twin_sync_twin_sync(
              List<dynamic> arg) =>
          wasmModule
              .wire_example_basic_list_type_basic_struct_twin_sync_twin_sync(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_bool_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_list_type_bool_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_bytes_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_list_type_bytes_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_f32_twin_sync(List<double> arg) =>
          wasmModule.wire_example_basic_list_type_f32_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_f64_twin_sync(List<double> arg) =>
          wasmModule.wire_example_basic_list_type_f64_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_i16_twin_sync(List<int> arg) =>
          wasmModule.wire_example_basic_list_type_i16_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_i32_twin_sync(List<int> arg) =>
          wasmModule.wire_example_basic_list_type_i32_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_i64_twin_sync(
              Object /* BigInt64Array */ arg) =>
          wasmModule.wire_example_basic_list_type_i64_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_i8_twin_sync(List<int> arg) =>
          wasmModule.wire_example_basic_list_type_i8_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_string_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_list_type_string_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_u16_twin_sync(List<int> arg) =>
          wasmModule.wire_example_basic_list_type_u16_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_u32_twin_sync(List<int> arg) =>
          wasmModule.wire_example_basic_list_type_u32_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_u64_twin_sync(
              Object /* BigInt64Array */ arg) =>
          wasmModule.wire_example_basic_list_type_u64_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_u8_twin_sync(List<int> arg) =>
          wasmModule.wire_example_basic_list_type_u8_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_example_basic_list_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_example_basic_list_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_basic_struct_twin_sync_sse_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_example_basic_list_type_basic_struct_twin_sync_sse_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_bool_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_list_type_bool_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_bytes_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_list_type_bytes_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_f32_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_list_type_f32_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_f64_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_list_type_f64_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_i16_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_list_type_i16_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_i32_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_list_type_i32_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_i64_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_list_type_i64_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_i8_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_list_type_i8_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_string_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_list_type_string_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_u16_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_list_type_u16_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_u32_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_list_type_u32_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_u64_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_list_type_u64_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_u8_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_list_type_u8_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_basic_general_enum_twin_normal_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_example_basic_map_type_basic_general_enum_twin_normal_twin_normal(
              port_, arg);

  void wire_example_basic_map_type_basic_primitive_enum_twin_normal_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_example_basic_map_type_basic_primitive_enum_twin_normal_twin_normal(
              port_, arg);

  void wire_example_basic_map_type_basic_struct_twin_normal_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_example_basic_map_type_basic_struct_twin_normal_twin_normal(
              port_, arg);

  void wire_example_basic_map_type_bool_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_bool_twin_normal(port_, arg);

  void wire_example_basic_map_type_bytes_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_bytes_twin_normal(port_, arg);

  void wire_example_basic_map_type_f32_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_f32_twin_normal(port_, arg);

  void wire_example_basic_map_type_f64_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_f64_twin_normal(port_, arg);

  void wire_example_basic_map_type_i16_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_i16_twin_normal(port_, arg);

  void wire_example_basic_map_type_i32_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_i32_twin_normal(port_, arg);

  void wire_example_basic_map_type_i64_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_i64_twin_normal(port_, arg);

  void wire_example_basic_map_type_i8_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_i8_twin_normal(port_, arg);

  void wire_example_basic_map_type_isize_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_isize_twin_normal(port_, arg);

  void wire_example_basic_map_type_string_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_string_twin_normal(port_, arg);

  void wire_example_basic_map_type_u16_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_u16_twin_normal(port_, arg);

  void wire_example_basic_map_type_u32_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_u32_twin_normal(port_, arg);

  void wire_example_basic_map_type_u64_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_u64_twin_normal(port_, arg);

  void wire_example_basic_map_type_u8_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_u8_twin_normal(port_, arg);

  void wire_example_basic_map_type_usize_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_usize_twin_normal(port_, arg);

  void wire_example_basic_map_type_basic_general_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_example_basic_map_type_basic_general_enum_twin_rust_async_twin_rust_async(
              port_, arg);

  void wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
              port_, arg);

  void wire_example_basic_map_type_basic_struct_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_example_basic_map_type_basic_struct_twin_rust_async_twin_rust_async(
              port_, arg);

  void wire_example_basic_map_type_bool_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_bool_twin_rust_async(port_, arg);

  void wire_example_basic_map_type_bytes_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_bytes_twin_rust_async(port_, arg);

  void wire_example_basic_map_type_f32_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_f32_twin_rust_async(port_, arg);

  void wire_example_basic_map_type_f64_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_f64_twin_rust_async(port_, arg);

  void wire_example_basic_map_type_i16_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_i16_twin_rust_async(port_, arg);

  void wire_example_basic_map_type_i32_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_i32_twin_rust_async(port_, arg);

  void wire_example_basic_map_type_i64_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_i64_twin_rust_async(port_, arg);

  void wire_example_basic_map_type_i8_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_i8_twin_rust_async(port_, arg);

  void wire_example_basic_map_type_isize_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_isize_twin_rust_async(port_, arg);

  void wire_example_basic_map_type_string_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_string_twin_rust_async(port_, arg);

  void wire_example_basic_map_type_u16_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_u16_twin_rust_async(port_, arg);

  void wire_example_basic_map_type_u32_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_u32_twin_rust_async(port_, arg);

  void wire_example_basic_map_type_u64_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_u64_twin_rust_async(port_, arg);

  void wire_example_basic_map_type_u8_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_u8_twin_rust_async(port_, arg);

  void wire_example_basic_map_type_usize_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_example_basic_map_type_usize_twin_rust_async(port_, arg);

  void wire_example_basic_map_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_map_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_map_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_bool_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_bool_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_bytes_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_bytes_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_f32_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_f32_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_f64_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_f64_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_i16_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_i16_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_i32_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_i32_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_i64_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_i64_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_i8_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_i8_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_isize_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_isize_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_string_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_string_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_u16_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_u16_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_u32_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_u32_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_u64_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_u64_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_u8_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_u8_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_usize_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_usize_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_basic_general_enum_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_map_type_basic_general_enum_twin_sse_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_basic_primitive_enum_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_map_type_basic_primitive_enum_twin_sse_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_basic_struct_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_basic_struct_twin_sse_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_bool_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_bool_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_bytes_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_bytes_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_f32_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_f32_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_f64_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_f64_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_i16_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_i16_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_i32_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_i32_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_i64_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_i64_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_i8_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_i8_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_isize_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_isize_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_string_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_string_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_u16_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_u16_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_u32_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_u32_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_u64_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_u64_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_u8_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_u8_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_map_type_usize_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_map_type_usize_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_basic_general_enum_twin_sync_twin_sync(
              List<dynamic> arg) =>
          wasmModule
              .wire_example_basic_map_type_basic_general_enum_twin_sync_twin_sync(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_basic_primitive_enum_twin_sync_twin_sync(
              List<dynamic> arg) =>
          wasmModule
              .wire_example_basic_map_type_basic_primitive_enum_twin_sync_twin_sync(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_basic_struct_twin_sync_twin_sync(
              List<dynamic> arg) =>
          wasmModule
              .wire_example_basic_map_type_basic_struct_twin_sync_twin_sync(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_bool_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_map_type_bool_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_bytes_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_map_type_bytes_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_f32_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_map_type_f32_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_f64_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_map_type_f64_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_i16_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_map_type_i16_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_i32_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_map_type_i32_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_i64_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_map_type_i64_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_i8_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_map_type_i8_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_isize_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_map_type_isize_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_string_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_map_type_string_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_u16_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_map_type_u16_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_u32_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_map_type_u32_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_u64_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_map_type_u64_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_u8_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_map_type_u8_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_usize_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_example_basic_map_type_usize_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_example_basic_map_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_example_basic_map_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_basic_struct_twin_sync_sse_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_example_basic_map_type_basic_struct_twin_sync_sse_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_bool_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_map_type_bool_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_bytes_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_map_type_bytes_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_f32_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_map_type_f32_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_f64_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_map_type_f64_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_i16_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_map_type_i16_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_i32_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_map_type_i32_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_i64_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_map_type_i64_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_i8_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_map_type_i8_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_isize_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_map_type_isize_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_string_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_map_type_string_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_u16_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_map_type_u16_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_u32_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_map_type_u32_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_u64_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_map_type_u64_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_u8_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_map_type_u8_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_usize_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_map_type_usize_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_basic_general_enum_twin_normal_twin_normal(
          NativePortType port_, List<dynamic>? arg) =>
      wasmModule
          .wire_example_basic_optional_type_basic_general_enum_twin_normal_twin_normal(
              port_, arg);

  void wire_example_basic_optional_type_basic_primitive_enum_twin_normal_twin_normal(
          NativePortType port_, int? arg) =>
      wasmModule
          .wire_example_basic_optional_type_basic_primitive_enum_twin_normal_twin_normal(
              port_, arg);

  void wire_example_basic_optional_type_basic_struct_twin_normal_twin_normal(
          NativePortType port_, List<dynamic>? arg) =>
      wasmModule
          .wire_example_basic_optional_type_basic_struct_twin_normal_twin_normal(
              port_, arg);

  void wire_example_basic_optional_type_bool_twin_normal(
          NativePortType port_, bool? arg) =>
      wasmModule.wire_example_basic_optional_type_bool_twin_normal(port_, arg);

  void wire_example_basic_optional_type_bytes_twin_normal(
          NativePortType port_, Uint8List? arg) =>
      wasmModule.wire_example_basic_optional_type_bytes_twin_normal(port_, arg);

  void wire_example_basic_optional_type_f32_twin_normal(
          NativePortType port_, double? arg) =>
      wasmModule.wire_example_basic_optional_type_f32_twin_normal(port_, arg);

  void wire_example_basic_optional_type_f64_twin_normal(
          NativePortType port_, double? arg) =>
      wasmModule.wire_example_basic_optional_type_f64_twin_normal(port_, arg);

  void wire_example_basic_optional_type_i16_twin_normal(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_i16_twin_normal(port_, arg);

  void wire_example_basic_optional_type_i32_twin_normal(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_i32_twin_normal(port_, arg);

  void wire_example_basic_optional_type_i64_twin_normal(
          NativePortType port_, Object? arg) =>
      wasmModule.wire_example_basic_optional_type_i64_twin_normal(port_, arg);

  void wire_example_basic_optional_type_i8_twin_normal(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_i8_twin_normal(port_, arg);

  void wire_example_basic_optional_type_isize_twin_normal(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_isize_twin_normal(port_, arg);

  void wire_example_basic_optional_type_string_twin_normal(
          NativePortType port_, String? arg) =>
      wasmModule.wire_example_basic_optional_type_string_twin_normal(
          port_, arg);

  void wire_example_basic_optional_type_u16_twin_normal(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_u16_twin_normal(port_, arg);

  void wire_example_basic_optional_type_u32_twin_normal(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_u32_twin_normal(port_, arg);

  void wire_example_basic_optional_type_u64_twin_normal(
          NativePortType port_, Object? arg) =>
      wasmModule.wire_example_basic_optional_type_u64_twin_normal(port_, arg);

  void wire_example_basic_optional_type_u8_twin_normal(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_u8_twin_normal(port_, arg);

  void wire_example_basic_optional_type_usize_twin_normal(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_usize_twin_normal(port_, arg);

  void wire_example_basic_optional_type_basic_general_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic>? arg) =>
      wasmModule
          .wire_example_basic_optional_type_basic_general_enum_twin_rust_async_twin_rust_async(
              port_, arg);

  void wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, int? arg) =>
      wasmModule
          .wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
              port_, arg);

  void wire_example_basic_optional_type_basic_struct_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic>? arg) =>
      wasmModule
          .wire_example_basic_optional_type_basic_struct_twin_rust_async_twin_rust_async(
              port_, arg);

  void wire_example_basic_optional_type_bool_twin_rust_async(
          NativePortType port_, bool? arg) =>
      wasmModule.wire_example_basic_optional_type_bool_twin_rust_async(
          port_, arg);

  void wire_example_basic_optional_type_bytes_twin_rust_async(
          NativePortType port_, Uint8List? arg) =>
      wasmModule.wire_example_basic_optional_type_bytes_twin_rust_async(
          port_, arg);

  void wire_example_basic_optional_type_f32_twin_rust_async(
          NativePortType port_, double? arg) =>
      wasmModule.wire_example_basic_optional_type_f32_twin_rust_async(
          port_, arg);

  void wire_example_basic_optional_type_f64_twin_rust_async(
          NativePortType port_, double? arg) =>
      wasmModule.wire_example_basic_optional_type_f64_twin_rust_async(
          port_, arg);

  void wire_example_basic_optional_type_i16_twin_rust_async(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_i16_twin_rust_async(
          port_, arg);

  void wire_example_basic_optional_type_i32_twin_rust_async(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_i32_twin_rust_async(
          port_, arg);

  void wire_example_basic_optional_type_i64_twin_rust_async(
          NativePortType port_, Object? arg) =>
      wasmModule.wire_example_basic_optional_type_i64_twin_rust_async(
          port_, arg);

  void wire_example_basic_optional_type_i8_twin_rust_async(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_i8_twin_rust_async(
          port_, arg);

  void wire_example_basic_optional_type_isize_twin_rust_async(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_isize_twin_rust_async(
          port_, arg);

  void wire_example_basic_optional_type_string_twin_rust_async(
          NativePortType port_, String? arg) =>
      wasmModule.wire_example_basic_optional_type_string_twin_rust_async(
          port_, arg);

  void wire_example_basic_optional_type_u16_twin_rust_async(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_u16_twin_rust_async(
          port_, arg);

  void wire_example_basic_optional_type_u32_twin_rust_async(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_u32_twin_rust_async(
          port_, arg);

  void wire_example_basic_optional_type_u64_twin_rust_async(
          NativePortType port_, Object? arg) =>
      wasmModule.wire_example_basic_optional_type_u64_twin_rust_async(
          port_, arg);

  void wire_example_basic_optional_type_u8_twin_rust_async(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_u8_twin_rust_async(
          port_, arg);

  void wire_example_basic_optional_type_usize_twin_rust_async(
          NativePortType port_, int? arg) =>
      wasmModule.wire_example_basic_optional_type_usize_twin_rust_async(
          port_, arg);

  void wire_example_basic_optional_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_optional_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_optional_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_bool_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_bool_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_bytes_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_bytes_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_f32_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_f32_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_f64_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_f64_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_i16_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_i16_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_i32_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_i32_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_i64_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_i64_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_i8_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_i8_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_isize_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_isize_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_string_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_string_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_u16_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_u16_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_u32_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_u32_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_u64_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_u64_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_u8_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_u8_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_usize_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_usize_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_basic_general_enum_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_optional_type_basic_general_enum_twin_sse_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_basic_primitive_enum_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_optional_type_basic_primitive_enum_twin_sse_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_basic_struct_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_optional_type_basic_struct_twin_sse_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_bool_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_bool_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_bytes_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_bytes_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_f32_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_f32_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_f64_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_f64_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_i16_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_i16_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_i32_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_i32_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_i64_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_i64_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_i8_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_i8_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_isize_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_isize_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_string_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_string_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_u16_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_u16_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_u32_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_u32_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_u64_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_u64_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_u8_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_u8_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_optional_type_usize_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_optional_type_usize_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_basic_general_enum_twin_sync_twin_sync(
              List<dynamic>? arg) =>
          wasmModule
              .wire_example_basic_optional_type_basic_general_enum_twin_sync_twin_sync(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_basic_primitive_enum_twin_sync_twin_sync(
              int? arg) =>
          wasmModule
              .wire_example_basic_optional_type_basic_primitive_enum_twin_sync_twin_sync(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_basic_struct_twin_sync_twin_sync(
              List<dynamic>? arg) =>
          wasmModule
              .wire_example_basic_optional_type_basic_struct_twin_sync_twin_sync(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_bool_twin_sync(bool? arg) =>
          wasmModule.wire_example_basic_optional_type_bool_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_bytes_twin_sync(Uint8List? arg) =>
          wasmModule.wire_example_basic_optional_type_bytes_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_f32_twin_sync(double? arg) =>
          wasmModule.wire_example_basic_optional_type_f32_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_f64_twin_sync(double? arg) =>
          wasmModule.wire_example_basic_optional_type_f64_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_i16_twin_sync(int? arg) =>
          wasmModule.wire_example_basic_optional_type_i16_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_i32_twin_sync(int? arg) =>
          wasmModule.wire_example_basic_optional_type_i32_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_i64_twin_sync(Object? arg) =>
          wasmModule.wire_example_basic_optional_type_i64_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_i8_twin_sync(int? arg) =>
          wasmModule.wire_example_basic_optional_type_i8_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_isize_twin_sync(int? arg) =>
          wasmModule.wire_example_basic_optional_type_isize_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_string_twin_sync(String? arg) =>
          wasmModule.wire_example_basic_optional_type_string_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_u16_twin_sync(int? arg) =>
          wasmModule.wire_example_basic_optional_type_u16_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_u32_twin_sync(int? arg) =>
          wasmModule.wire_example_basic_optional_type_u32_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_u64_twin_sync(Object? arg) =>
          wasmModule.wire_example_basic_optional_type_u64_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_u8_twin_sync(int? arg) =>
          wasmModule.wire_example_basic_optional_type_u8_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_usize_twin_sync(int? arg) =>
          wasmModule.wire_example_basic_optional_type_usize_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_example_basic_optional_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_example_basic_optional_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_basic_struct_twin_sync_sse_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_example_basic_optional_type_basic_struct_twin_sync_sse_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_bool_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_optional_type_bool_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_bytes_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_optional_type_bytes_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_f32_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_optional_type_f32_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_f64_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_optional_type_f64_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_i16_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_optional_type_i16_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_i32_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_optional_type_i32_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_i64_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_optional_type_i64_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_i8_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_optional_type_i8_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_isize_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_optional_type_isize_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_string_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_optional_type_string_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_u16_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_optional_type_u16_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_u32_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_optional_type_u32_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_u64_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_optional_type_u64_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_u8_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_optional_type_u8_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_usize_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_optional_type_usize_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_basic_general_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_example_basic_type_basic_general_enum_twin_rust_async_twin_rust_async(
              port_, arg);

  void wire_example_basic_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, int arg) =>
      wasmModule
          .wire_example_basic_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
              port_, arg);

  void wire_example_basic_type_basic_struct_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_example_basic_type_basic_struct_twin_rust_async_twin_rust_async(
              port_, arg);

  void wire_example_basic_type_bool_twin_rust_async(
          NativePortType port_, bool arg) =>
      wasmModule.wire_example_basic_type_bool_twin_rust_async(port_, arg);

  void wire_example_basic_type_bytes_twin_rust_async(
          NativePortType port_, List<int> arg) =>
      wasmModule.wire_example_basic_type_bytes_twin_rust_async(port_, arg);

  void wire_example_basic_type_f32_twin_rust_async(
          NativePortType port_, double arg) =>
      wasmModule.wire_example_basic_type_f32_twin_rust_async(port_, arg);

  void wire_example_basic_type_f64_twin_rust_async(
          NativePortType port_, double arg) =>
      wasmModule.wire_example_basic_type_f64_twin_rust_async(port_, arg);

  void wire_example_basic_type_i16_twin_rust_async(
          NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_i16_twin_rust_async(port_, arg);

  void wire_example_basic_type_i32_twin_rust_async(
          NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_i32_twin_rust_async(port_, arg);

  void wire_example_basic_type_i64_twin_rust_async(
          NativePortType port_, Object arg) =>
      wasmModule.wire_example_basic_type_i64_twin_rust_async(port_, arg);

  void wire_example_basic_type_i8_twin_rust_async(
          NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_i8_twin_rust_async(port_, arg);

  void wire_example_basic_type_isize_twin_rust_async(
          NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_isize_twin_rust_async(port_, arg);

  void wire_example_basic_type_string_twin_rust_async(
          NativePortType port_, String arg) =>
      wasmModule.wire_example_basic_type_string_twin_rust_async(port_, arg);

  void wire_example_basic_type_u16_twin_rust_async(
          NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_u16_twin_rust_async(port_, arg);

  void wire_example_basic_type_u32_twin_rust_async(
          NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_u32_twin_rust_async(port_, arg);

  void wire_example_basic_type_u64_twin_rust_async(
          NativePortType port_, Object arg) =>
      wasmModule.wire_example_basic_type_u64_twin_rust_async(port_, arg);

  void wire_example_basic_type_u8_twin_rust_async(
          NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_u8_twin_rust_async(port_, arg);

  void wire_example_basic_type_usize_twin_rust_async(
          NativePortType port_, int arg) =>
      wasmModule.wire_example_basic_type_usize_twin_rust_async(port_, arg);

  void wire_example_basic_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_example_basic_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_bool_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_bool_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_bytes_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_bytes_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_f32_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_f32_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_f64_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_f64_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_i16_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_i16_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_i32_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_i32_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_i64_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_i64_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_i8_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_i8_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_isize_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_isize_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_string_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_string_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_u16_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_u16_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_u32_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_u32_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_u64_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_u64_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_u8_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_u8_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_usize_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_usize_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_basic_general_enum_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_basic_general_enum_twin_sse_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_basic_primitive_enum_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_basic_primitive_enum_twin_sse_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_basic_struct_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_basic_struct_twin_sse_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_bool_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_bool_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_bytes_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_bytes_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_f32_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_f32_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_f64_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_f64_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_i16_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_i16_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_i32_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_i32_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_i64_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_i64_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_i8_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_i8_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_isize_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_isize_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_string_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_string_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_u16_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_u16_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_u32_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_u32_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_u64_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_u64_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_u8_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_u8_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_example_basic_type_usize_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_example_basic_type_usize_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_basic_general_enum_twin_sync_twin_sync(
              List<dynamic> arg) =>
          wasmModule
              .wire_example_basic_type_basic_general_enum_twin_sync_twin_sync(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_basic_primitive_enum_twin_sync_twin_sync(
              int arg) =>
          wasmModule
              .wire_example_basic_type_basic_primitive_enum_twin_sync_twin_sync(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_basic_struct_twin_sync_twin_sync(
              List<dynamic> arg) =>
          wasmModule
              .wire_example_basic_type_basic_struct_twin_sync_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_bool_twin_sync(bool arg) =>
          wasmModule.wire_example_basic_type_bool_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_bytes_twin_sync(List<int> arg) =>
          wasmModule.wire_example_basic_type_bytes_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_f32_twin_sync(double arg) =>
          wasmModule.wire_example_basic_type_f32_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_f64_twin_sync(double arg) =>
          wasmModule.wire_example_basic_type_f64_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_i16_twin_sync(int arg) =>
          wasmModule.wire_example_basic_type_i16_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_i32_twin_sync(int arg) =>
          wasmModule.wire_example_basic_type_i32_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_i64_twin_sync(Object arg) =>
          wasmModule.wire_example_basic_type_i64_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_i8_twin_sync(int arg) =>
          wasmModule.wire_example_basic_type_i8_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_isize_twin_sync(int arg) =>
          wasmModule.wire_example_basic_type_isize_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_string_twin_sync(String arg) =>
          wasmModule.wire_example_basic_type_string_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_u16_twin_sync(int arg) =>
          wasmModule.wire_example_basic_type_u16_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_u32_twin_sync(int arg) =>
          wasmModule.wire_example_basic_type_u32_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_u64_twin_sync(Object arg) =>
          wasmModule.wire_example_basic_type_u64_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_u8_twin_sync(int arg) =>
          wasmModule.wire_example_basic_type_u8_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_usize_twin_sync(int arg) =>
          wasmModule.wire_example_basic_type_usize_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_example_basic_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_example_basic_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_basic_struct_twin_sync_sse_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_example_basic_type_basic_struct_twin_sync_sse_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_bool_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_type_bool_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_bytes_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_type_bytes_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_f32_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_type_f32_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_f64_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_type_f64_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_i16_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_type_i16_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_i32_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_type_i32_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_i64_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_type_i64_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_i8_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_type_i8_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_isize_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_type_isize_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_string_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_type_string_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_u16_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_type_u16_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_u32_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_type_u32_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_u64_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_type_u64_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_u8_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_type_u8_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_usize_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_example_basic_type_usize_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_binary_tree_input_json_twin_normal(
          NativePortType port_, String raw) =>
      wasmModule.wire_benchmark_binary_tree_input_json_twin_normal(port_, raw);

  void wire_benchmark_binary_tree_input_protobuf_twin_normal(
          NativePortType port_, List<int> raw) =>
      wasmModule.wire_benchmark_binary_tree_input_protobuf_twin_normal(
          port_, raw);

  void wire_benchmark_binary_tree_input_twin_normal(
          NativePortType port_, List<dynamic> tree) =>
      wasmModule.wire_benchmark_binary_tree_input_twin_normal(port_, tree);

  void wire_benchmark_binary_tree_output_json_twin_normal(
          NativePortType port_, int depth) =>
      wasmModule.wire_benchmark_binary_tree_output_json_twin_normal(
          port_, depth);

  void wire_benchmark_binary_tree_output_protobuf_twin_normal(
          NativePortType port_, int depth) =>
      wasmModule.wire_benchmark_binary_tree_output_protobuf_twin_normal(
          port_, depth);

  void wire_benchmark_binary_tree_output_twin_normal(
          NativePortType port_, int depth) =>
      wasmModule.wire_benchmark_binary_tree_output_twin_normal(port_, depth);

  void wire_benchmark_blob_input_json_twin_normal(
          NativePortType port_, String raw) =>
      wasmModule.wire_benchmark_blob_input_json_twin_normal(port_, raw);

  void wire_benchmark_blob_input_protobuf_twin_normal(
          NativePortType port_, List<int> raw) =>
      wasmModule.wire_benchmark_blob_input_protobuf_twin_normal(port_, raw);

  void wire_benchmark_blob_input_twin_normal(
          NativePortType port_, List<dynamic> blob) =>
      wasmModule.wire_benchmark_blob_input_twin_normal(port_, blob);

  void wire_benchmark_blob_output_json_twin_normal(
          NativePortType port_, int size) =>
      wasmModule.wire_benchmark_blob_output_json_twin_normal(port_, size);

  void wire_benchmark_blob_output_protobuf_twin_normal(
          NativePortType port_, int size) =>
      wasmModule.wire_benchmark_blob_output_protobuf_twin_normal(port_, size);

  void wire_benchmark_blob_output_twin_normal(NativePortType port_, int size) =>
      wasmModule.wire_benchmark_blob_output_twin_normal(port_, size);

  void wire_benchmark_input_bytes_twin_normal(
          NativePortType port_, List<int> bytes) =>
      wasmModule.wire_benchmark_input_bytes_twin_normal(port_, bytes);

  void wire_benchmark_output_bytes_twin_normal(
          NativePortType port_, int size) =>
      wasmModule.wire_benchmark_output_bytes_twin_normal(port_, size);

  void wire_benchmark_void_twin_normal(NativePortType port_) =>
      wasmModule.wire_benchmark_void_twin_normal(port_);

  void wire_benchmark_binary_tree_input_json_twin_rust_async(
          NativePortType port_, String raw) =>
      wasmModule.wire_benchmark_binary_tree_input_json_twin_rust_async(
          port_, raw);

  void wire_benchmark_binary_tree_input_protobuf_twin_rust_async(
          NativePortType port_, List<int> raw) =>
      wasmModule.wire_benchmark_binary_tree_input_protobuf_twin_rust_async(
          port_, raw);

  void wire_benchmark_binary_tree_input_twin_rust_async(
          NativePortType port_, List<dynamic> tree) =>
      wasmModule.wire_benchmark_binary_tree_input_twin_rust_async(port_, tree);

  void wire_benchmark_binary_tree_output_json_twin_rust_async(
          NativePortType port_, int depth) =>
      wasmModule.wire_benchmark_binary_tree_output_json_twin_rust_async(
          port_, depth);

  void wire_benchmark_binary_tree_output_protobuf_twin_rust_async(
          NativePortType port_, int depth) =>
      wasmModule.wire_benchmark_binary_tree_output_protobuf_twin_rust_async(
          port_, depth);

  void wire_benchmark_binary_tree_output_twin_rust_async(
          NativePortType port_, int depth) =>
      wasmModule.wire_benchmark_binary_tree_output_twin_rust_async(
          port_, depth);

  void wire_benchmark_blob_input_json_twin_rust_async(
          NativePortType port_, String raw) =>
      wasmModule.wire_benchmark_blob_input_json_twin_rust_async(port_, raw);

  void wire_benchmark_blob_input_protobuf_twin_rust_async(
          NativePortType port_, List<int> raw) =>
      wasmModule.wire_benchmark_blob_input_protobuf_twin_rust_async(port_, raw);

  void wire_benchmark_blob_input_twin_rust_async(
          NativePortType port_, List<dynamic> blob) =>
      wasmModule.wire_benchmark_blob_input_twin_rust_async(port_, blob);

  void wire_benchmark_blob_output_json_twin_rust_async(
          NativePortType port_, int size) =>
      wasmModule.wire_benchmark_blob_output_json_twin_rust_async(port_, size);

  void wire_benchmark_blob_output_protobuf_twin_rust_async(
          NativePortType port_, int size) =>
      wasmModule.wire_benchmark_blob_output_protobuf_twin_rust_async(
          port_, size);

  void wire_benchmark_blob_output_twin_rust_async(
          NativePortType port_, int size) =>
      wasmModule.wire_benchmark_blob_output_twin_rust_async(port_, size);

  void wire_benchmark_input_bytes_twin_rust_async(
          NativePortType port_, List<int> bytes) =>
      wasmModule.wire_benchmark_input_bytes_twin_rust_async(port_, bytes);

  void wire_benchmark_output_bytes_twin_rust_async(
          NativePortType port_, int size) =>
      wasmModule.wire_benchmark_output_bytes_twin_rust_async(port_, size);

  void wire_benchmark_void_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_benchmark_void_twin_rust_async(port_);

  void wire_benchmark_binary_tree_input_json_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_binary_tree_input_json_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_binary_tree_input_protobuf_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_binary_tree_input_protobuf_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_binary_tree_input_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_binary_tree_input_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_binary_tree_output_json_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_binary_tree_output_json_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_binary_tree_output_protobuf_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_binary_tree_output_protobuf_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_binary_tree_output_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_binary_tree_output_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_blob_input_json_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_blob_input_json_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_blob_input_protobuf_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_blob_input_protobuf_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_blob_input_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_blob_input_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_blob_output_json_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_blob_output_json_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_blob_output_protobuf_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_blob_output_protobuf_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_blob_output_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_blob_output_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_input_bytes_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_input_bytes_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_output_bytes_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_output_bytes_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_void_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_void_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_binary_tree_input_json_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_binary_tree_input_json_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_binary_tree_input_protobuf_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_binary_tree_input_protobuf_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_binary_tree_input_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_binary_tree_input_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_binary_tree_output_json_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_binary_tree_output_json_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_binary_tree_output_protobuf_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_binary_tree_output_protobuf_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_binary_tree_output_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_binary_tree_output_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_blob_input_json_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_blob_input_json_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_blob_input_protobuf_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_blob_input_protobuf_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_blob_input_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_blob_input_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_blob_output_json_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_blob_output_json_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_blob_output_protobuf_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_blob_output_protobuf_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_blob_output_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_blob_output_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_input_bytes_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_input_bytes_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_output_bytes_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_output_bytes_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_benchmark_void_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_benchmark_void_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_binary_tree_input_json_twin_sync(String raw) =>
          wasmModule.wire_benchmark_binary_tree_input_json_twin_sync(raw);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_binary_tree_input_protobuf_twin_sync(List<int> raw) =>
          wasmModule.wire_benchmark_binary_tree_input_protobuf_twin_sync(raw);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_binary_tree_input_twin_sync(List<dynamic> tree) =>
          wasmModule.wire_benchmark_binary_tree_input_twin_sync(tree);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_binary_tree_output_json_twin_sync(int depth) =>
          wasmModule.wire_benchmark_binary_tree_output_json_twin_sync(depth);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_binary_tree_output_protobuf_twin_sync(int depth) =>
          wasmModule
              .wire_benchmark_binary_tree_output_protobuf_twin_sync(depth);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_binary_tree_output_twin_sync(int depth) =>
          wasmModule.wire_benchmark_binary_tree_output_twin_sync(depth);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_blob_input_json_twin_sync(String raw) =>
          wasmModule.wire_benchmark_blob_input_json_twin_sync(raw);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_blob_input_protobuf_twin_sync(List<int> raw) =>
          wasmModule.wire_benchmark_blob_input_protobuf_twin_sync(raw);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_blob_input_twin_sync(List<dynamic> blob) =>
          wasmModule.wire_benchmark_blob_input_twin_sync(blob);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_blob_output_json_twin_sync(int size) =>
          wasmModule.wire_benchmark_blob_output_json_twin_sync(size);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_blob_output_protobuf_twin_sync(int size) =>
          wasmModule.wire_benchmark_blob_output_protobuf_twin_sync(size);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_blob_output_twin_sync(int size) =>
          wasmModule.wire_benchmark_blob_output_twin_sync(size);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_input_bytes_twin_sync(List<int> bytes) =>
          wasmModule.wire_benchmark_input_bytes_twin_sync(bytes);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_output_bytes_twin_sync(int size) =>
          wasmModule.wire_benchmark_output_bytes_twin_sync(size);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_void_twin_sync() =>
          wasmModule.wire_benchmark_void_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_binary_tree_input_json_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_benchmark_binary_tree_input_json_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_binary_tree_input_protobuf_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_benchmark_binary_tree_input_protobuf_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_binary_tree_input_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_benchmark_binary_tree_input_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_binary_tree_output_json_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_benchmark_binary_tree_output_json_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_binary_tree_output_protobuf_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_benchmark_binary_tree_output_protobuf_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_binary_tree_output_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_benchmark_binary_tree_output_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_blob_input_json_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_benchmark_blob_input_json_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_blob_input_protobuf_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_benchmark_blob_input_protobuf_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_blob_input_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_benchmark_blob_input_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_blob_output_json_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_benchmark_blob_output_json_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_blob_output_protobuf_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_benchmark_blob_output_protobuf_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_blob_output_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_benchmark_blob_output_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_input_bytes_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_benchmark_input_bytes_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_output_bytes_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_benchmark_output_bytes_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_void_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_benchmark_void_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_datetime_local_twin_rust_async(NativePortType port_, Object d) =>
      wasmModule.wire_datetime_local_twin_rust_async(port_, d);

  void wire_datetime_utc_twin_rust_async(NativePortType port_, Object d) =>
      wasmModule.wire_datetime_utc_twin_rust_async(port_, d);

  void wire_duration_twin_rust_async(NativePortType port_, Object d) =>
      wasmModule.wire_duration_twin_rust_async(port_, d);

  void wire_handle_durations_twin_rust_async(
          NativePortType port_, List<dynamic> durations, Object since) =>
      wasmModule.wire_handle_durations_twin_rust_async(port_, durations, since);

  void wire_handle_timestamps_twin_rust_async(
          NativePortType port_, List<dynamic> timestamps, Object epoch) =>
      wasmModule.wire_handle_timestamps_twin_rust_async(
          port_, timestamps, epoch);

  void wire_how_long_does_it_take_twin_rust_async(
          NativePortType port_, List<dynamic> mine) =>
      wasmModule.wire_how_long_does_it_take_twin_rust_async(port_, mine);

  void wire_naivedatetime_twin_rust_async(NativePortType port_, Object d) =>
      wasmModule.wire_naivedatetime_twin_rust_async(port_, d);

  void wire_optional_empty_datetime_utc_twin_rust_async(
          NativePortType port_, Object? d) =>
      wasmModule.wire_optional_empty_datetime_utc_twin_rust_async(port_, d);

  void wire_test_chrono_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_test_chrono_twin_rust_async(port_);

  void wire_test_precise_chrono_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_test_precise_chrono_twin_rust_async(port_);

  void wire_datetime_local_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_datetime_local_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_datetime_utc_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_datetime_utc_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_duration_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_duration_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_durations_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_durations_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_timestamps_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_timestamps_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_how_long_does_it_take_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_how_long_does_it_take_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_naivedatetime_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_naivedatetime_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_optional_empty_datetime_utc_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_optional_empty_datetime_utc_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_chrono_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_chrono_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_precise_chrono_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_precise_chrono_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_datetime_local_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_datetime_local_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_datetime_utc_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_datetime_utc_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_duration_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_duration_twin_sse(port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_durations_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_durations_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_timestamps_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_timestamps_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_how_long_does_it_take_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_how_long_does_it_take_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_naivedatetime_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_naivedatetime_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_optional_empty_datetime_utc_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_optional_empty_datetime_utc_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_chrono_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_chrono_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_precise_chrono_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_precise_chrono_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_datetime_local_twin_sync(Object d) =>
          wasmModule.wire_datetime_local_twin_sync(d);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_datetime_utc_twin_sync(Object d) =>
          wasmModule.wire_datetime_utc_twin_sync(d);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_duration_twin_sync(Object d) =>
          wasmModule.wire_duration_twin_sync(d);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_durations_twin_sync(List<dynamic> durations, Object since) =>
          wasmModule.wire_handle_durations_twin_sync(durations, since);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_timestamps_twin_sync(
              List<dynamic> timestamps, Object epoch) =>
          wasmModule.wire_handle_timestamps_twin_sync(timestamps, epoch);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_how_long_does_it_take_twin_sync(List<dynamic> mine) =>
          wasmModule.wire_how_long_does_it_take_twin_sync(mine);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_naivedatetime_twin_sync(Object d) =>
          wasmModule.wire_naivedatetime_twin_sync(d);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_optional_empty_datetime_utc_twin_sync(Object? d) =>
          wasmModule.wire_optional_empty_datetime_utc_twin_sync(d);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_chrono_twin_sync() => wasmModule.wire_test_chrono_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_precise_chrono_twin_sync() =>
          wasmModule.wire_test_precise_chrono_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_datetime_local_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_datetime_local_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_datetime_utc_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_datetime_utc_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_duration_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_duration_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_durations_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_handle_durations_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_timestamps_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_handle_timestamps_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_how_long_does_it_take_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_how_long_does_it_take_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_naivedatetime_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_naivedatetime_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_optional_empty_datetime_utc_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_optional_empty_datetime_utc_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_chrono_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_test_chrono_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_precise_chrono_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_test_precise_chrono_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_async(
          NativePortType port_, List<dynamic> that) =>
      wasmModule
          .wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_async(
              port_, that);

  void wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_async(
              port_);

  void wire_function_with_comments_slash_star_star_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_function_with_comments_slash_star_star_twin_rust_async(port_);

  void wire_function_with_comments_triple_slash_multi_line_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_function_with_comments_triple_slash_multi_line_twin_rust_async(
              port_);

  void wire_function_with_comments_triple_slash_single_line_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_function_with_comments_triple_slash_single_line_twin_rust_async(
              port_);

  void wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_function_with_comments_slash_star_star_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_function_with_comments_slash_star_star_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_function_with_comments_triple_slash_multi_line_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_function_with_comments_triple_slash_multi_line_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_function_with_comments_triple_slash_single_line_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_function_with_comments_triple_slash_single_line_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_StructWithCommentsTwinSse_instance_method_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_StructWithCommentsTwinSse_instance_method_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_StructWithCommentsTwinSse_static_method_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_StructWithCommentsTwinSse_static_method_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_function_with_comments_slash_star_star_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_function_with_comments_slash_star_star_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_function_with_comments_triple_slash_multi_line_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_function_with_comments_triple_slash_multi_line_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_function_with_comments_triple_slash_single_line_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_function_with_comments_triple_slash_single_line_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_StructWithCommentsTwinSync_instance_method_twin_sync(
              List<dynamic> that) =>
          wasmModule
              .wire_StructWithCommentsTwinSync_instance_method_twin_sync(that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_StructWithCommentsTwinSync_static_method_twin_sync() =>
          wasmModule.wire_StructWithCommentsTwinSync_static_method_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_function_with_comments_slash_star_star_twin_sync() =>
          wasmModule.wire_function_with_comments_slash_star_star_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_function_with_comments_triple_slash_multi_line_twin_sync() =>
          wasmModule
              .wire_function_with_comments_triple_slash_multi_line_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_function_with_comments_triple_slash_single_line_twin_sync() =>
          wasmModule
              .wire_function_with_comments_triple_slash_single_line_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_function_with_comments_slash_star_star_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_function_with_comments_slash_star_star_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_function_with_comments_triple_slash_multi_line_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_function_with_comments_triple_slash_multi_line_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_function_with_comments_triple_slash_single_line_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_function_with_comments_triple_slash_single_line_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  void wire_return_dart_dynamic_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_return_dart_dynamic_twin_rust_async(port_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_dart_dynamic_twin_sync() =>
          wasmModule.wire_return_dart_dynamic_twin_sync();

  void wire_rust_call_dart_loopback_twin_rust_async(
          NativePortType port_, PlatformPointer callback) =>
      wasmModule.wire_rust_call_dart_loopback_twin_rust_async(port_, callback);

  void wire_rust_call_dart_multi_times_twin_rust_async(
          NativePortType port_, PlatformPointer callback, int num_times) =>
      wasmModule.wire_rust_call_dart_multi_times_twin_rust_async(
          port_, callback, num_times);

  void wire_rust_call_dart_one_arg_twin_rust_async(
          NativePortType port_, PlatformPointer callback) =>
      wasmModule.wire_rust_call_dart_one_arg_twin_rust_async(port_, callback);

  void wire_rust_call_dart_return_twin_rust_async(
          NativePortType port_, PlatformPointer callback) =>
      wasmModule.wire_rust_call_dart_return_twin_rust_async(port_, callback);

  void wire_rust_call_dart_simple_twin_rust_async(
          NativePortType port_, PlatformPointer callback) =>
      wasmModule.wire_rust_call_dart_simple_twin_rust_async(port_, callback);

  void wire_rust_call_dart_two_args_twin_rust_async(
          NativePortType port_, PlatformPointer callback) =>
      wasmModule.wire_rust_call_dart_two_args_twin_rust_async(port_, callback);

  void wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async(
          NativePortType port_,
          PlatformPointer input,
          PlatformPointer callback) =>
      wasmModule.wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async(
          port_, input, callback);

  void wire_rust_call_dart_with_dart_opaque_result_twin_rust_async(
          NativePortType port_, PlatformPointer callback) =>
      wasmModule.wire_rust_call_dart_with_dart_opaque_result_twin_rust_async(
          port_, callback);

  void wire_rust_call_dart_loopback_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_call_dart_loopback_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_call_dart_multi_times_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_call_dart_multi_times_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_call_dart_one_arg_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_call_dart_one_arg_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_call_dart_return_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_call_dart_return_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_call_dart_simple_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_call_dart_simple_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_call_dart_two_args_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_call_dart_two_args_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_call_dart_loopback_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_call_dart_loopback_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_call_dart_multi_times_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_call_dart_multi_times_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_call_dart_one_arg_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_call_dart_one_arg_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_call_dart_return_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_call_dart_return_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_call_dart_simple_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_call_dart_simple_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_call_dart_two_args_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_call_dart_two_args_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_call_dart_with_dart_opaque_arg_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_call_dart_with_dart_opaque_arg_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_call_dart_with_dart_opaque_result_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_call_dart_with_dart_opaque_result_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_accept_dart_opaque_twin_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_sync_accept_dart_opaque_twin_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_loopback_twin_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_sync_loopback_twin_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_option_dart_opaque_twin_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_sync_option_dart_opaque_twin_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_option_loopback_twin_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_sync_option_loopback_twin_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_unwrap_dart_opaque_twin_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_unwrap_dart_opaque_twin_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_async_accept_dart_opaque_twin_rust_async(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_async_accept_dart_opaque_twin_rust_async(port_, opaque);

  void wire_clone_dart_opaque_twin_rust_async(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_clone_dart_opaque_twin_rust_async(port_, opaque);

  void wire_create_enum_dart_opaque_twin_rust_async(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_create_enum_dart_opaque_twin_rust_async(port_, opaque);

  void wire_create_nested_dart_opaque_twin_rust_async(NativePortType port_,
          PlatformPointer opaque1, PlatformPointer opaque2) =>
      wasmModule.wire_create_nested_dart_opaque_twin_rust_async(
          port_, opaque1, opaque2);

  void wire_drop_static_dart_opaque_twin_rust_async(
          NativePortType port_, int id) =>
      wasmModule.wire_drop_static_dart_opaque_twin_rust_async(port_, id);

  void wire_get_enum_dart_opaque_twin_rust_async(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_get_enum_dart_opaque_twin_rust_async(port_, opaque);

  void wire_get_nested_dart_opaque_twin_rust_async(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_get_nested_dart_opaque_twin_rust_async(port_, opaque);

  void wire_loop_back_array_get_twin_rust_async(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_loop_back_array_get_twin_rust_async(port_, opaque);

  void wire_loop_back_array_twin_rust_async(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_loop_back_array_twin_rust_async(port_, opaque);

  void wire_loop_back_option_get_twin_rust_async(
          NativePortType port_, PlatformPointer? opaque) =>
      wasmModule.wire_loop_back_option_get_twin_rust_async(port_, opaque);

  void wire_loop_back_option_twin_rust_async(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_loop_back_option_twin_rust_async(port_, opaque);

  void wire_loop_back_twin_rust_async(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_loop_back_twin_rust_async(port_, opaque);

  void wire_loop_back_vec_get_twin_rust_async(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_loop_back_vec_get_twin_rust_async(port_, opaque);

  void wire_loop_back_vec_twin_rust_async(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_loop_back_vec_twin_rust_async(port_, opaque);

  void wire_panic_unwrap_dart_opaque_twin_rust_async(
          NativePortType port_, PlatformPointer opaque) =>
      wasmModule.wire_panic_unwrap_dart_opaque_twin_rust_async(port_, opaque);

  void wire_set_static_dart_opaque_twin_rust_async(
          NativePortType port_, int id, PlatformPointer opaque) =>
      wasmModule.wire_set_static_dart_opaque_twin_rust_async(port_, id, opaque);

  void wire_async_accept_dart_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_async_accept_dart_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_clone_dart_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_clone_dart_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_enum_dart_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_enum_dart_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_nested_dart_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_nested_dart_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_drop_static_dart_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_drop_static_dart_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_enum_dart_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_enum_dart_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_nested_dart_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_nested_dart_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_loop_back_array_get_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_loop_back_array_get_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_loop_back_array_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_loop_back_array_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_loop_back_option_get_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_loop_back_option_get_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_loop_back_option_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_loop_back_option_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_loop_back_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_loop_back_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_loop_back_vec_get_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_loop_back_vec_get_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_loop_back_vec_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_loop_back_vec_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_panic_unwrap_dart_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_panic_unwrap_dart_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_set_static_dart_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_set_static_dart_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_async_accept_dart_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_async_accept_dart_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_clone_dart_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_clone_dart_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_enum_dart_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_enum_dart_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_nested_dart_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_nested_dart_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_drop_static_dart_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_drop_static_dart_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_enum_dart_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_enum_dart_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_nested_dart_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_nested_dart_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_loop_back_array_get_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_loop_back_array_get_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_loop_back_array_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_loop_back_array_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_loop_back_option_get_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_loop_back_option_get_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_loop_back_option_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_loop_back_option_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_loop_back_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_loop_back_twin_sse(port_, ptr_, rust_vec_len_, data_len_);

  void wire_loop_back_vec_get_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_loop_back_vec_get_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_loop_back_vec_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_loop_back_vec_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_panic_unwrap_dart_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_panic_unwrap_dart_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_set_static_dart_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_set_static_dart_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_async_accept_dart_opaque_twin_sync(PlatformPointer opaque) =>
          wasmModule.wire_async_accept_dart_opaque_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_clone_dart_opaque_twin_sync(PlatformPointer opaque) =>
          wasmModule.wire_clone_dart_opaque_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_enum_dart_opaque_twin_sync(PlatformPointer opaque) =>
          wasmModule.wire_create_enum_dart_opaque_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_nested_dart_opaque_twin_sync(
              PlatformPointer opaque1, PlatformPointer opaque2) =>
          wasmModule.wire_create_nested_dart_opaque_twin_sync(opaque1, opaque2);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_drop_static_dart_opaque_twin_sync(int id) =>
          wasmModule.wire_drop_static_dart_opaque_twin_sync(id);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_enum_dart_opaque_twin_sync(List<dynamic> opaque) =>
          wasmModule.wire_get_enum_dart_opaque_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_nested_dart_opaque_twin_sync(List<dynamic> opaque) =>
          wasmModule.wire_get_nested_dart_opaque_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_loop_back_array_get_twin_sync(List<dynamic> opaque) =>
          wasmModule.wire_loop_back_array_get_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_loop_back_array_twin_sync(PlatformPointer opaque) =>
          wasmModule.wire_loop_back_array_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_loop_back_option_get_twin_sync(PlatformPointer? opaque) =>
          wasmModule.wire_loop_back_option_get_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_loop_back_option_twin_sync(PlatformPointer opaque) =>
          wasmModule.wire_loop_back_option_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_loop_back_twin_sync(PlatformPointer opaque) =>
          wasmModule.wire_loop_back_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_loop_back_vec_get_twin_sync(List<dynamic> opaque) =>
          wasmModule.wire_loop_back_vec_get_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_loop_back_vec_twin_sync(PlatformPointer opaque) =>
          wasmModule.wire_loop_back_vec_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_panic_unwrap_dart_opaque_twin_sync(PlatformPointer opaque) =>
          wasmModule.wire_panic_unwrap_dart_opaque_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_set_static_dart_opaque_twin_sync(int id, PlatformPointer opaque) =>
          wasmModule.wire_set_static_dart_opaque_twin_sync(id, opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_async_accept_dart_opaque_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_async_accept_dart_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_clone_dart_opaque_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_clone_dart_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_enum_dart_opaque_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_create_enum_dart_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_nested_dart_opaque_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_create_nested_dart_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_drop_static_dart_opaque_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_drop_static_dart_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_enum_dart_opaque_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_get_enum_dart_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_nested_dart_opaque_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_get_nested_dart_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_loop_back_array_get_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_loop_back_array_get_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_loop_back_array_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_loop_back_array_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_loop_back_option_get_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_loop_back_option_get_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_loop_back_option_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_loop_back_option_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_loop_back_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_loop_back_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_loop_back_vec_get_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_loop_back_vec_get_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_loop_back_vec_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_loop_back_vec_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_panic_unwrap_dart_opaque_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_panic_unwrap_dart_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_set_static_dart_opaque_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_set_static_dart_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_DroppableTwinRustAsync_create_stream_twin_rust_async(
          NativePortType port_, Object that) =>
      wasmModule.wire_DroppableTwinRustAsync_create_stream_twin_rust_async(
          port_, that);

  void wire_DroppableTwinRustAsync_get_drop_count_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_DroppableTwinRustAsync_get_drop_count_twin_rust_async(port_);

  void wire_DroppableTwinRustAsync_new_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_DroppableTwinRustAsync_new_twin_rust_async(port_);

  void wire_DroppableTwinRustAsync_simple_method_twin_rust_async(
          NativePortType port_, Object that) =>
      wasmModule.wire_DroppableTwinRustAsync_simple_method_twin_rust_async(
          port_, that);

  void wire_DroppableTwinRustAsyncSse_create_stream_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_DroppableTwinRustAsyncSse_create_stream_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_DroppableTwinRustAsyncSse_get_drop_count_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_DroppableTwinRustAsyncSse_get_drop_count_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_DroppableTwinRustAsyncSse_new_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_DroppableTwinRustAsyncSse_new_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_DroppableTwinRustAsyncSse_simple_method_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_DroppableTwinRustAsyncSse_simple_method_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_DroppableTwinSse_create_stream_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_DroppableTwinSse_create_stream_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_DroppableTwinSse_get_drop_count_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_DroppableTwinSse_get_drop_count_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_DroppableTwinSse_new_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_DroppableTwinSse_new_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_DroppableTwinSse_simple_method_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_DroppableTwinSse_simple_method_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_DroppableTwinSync_create_stream_twin_sync(
          NativePortType port_, Object that) =>
      wasmModule.wire_DroppableTwinSync_create_stream_twin_sync(port_, that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_DroppableTwinSync_get_drop_count_twin_sync() =>
          wasmModule.wire_DroppableTwinSync_get_drop_count_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_DroppableTwinSync_new_twin_sync() =>
          wasmModule.wire_DroppableTwinSync_new_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_DroppableTwinSync_simple_method_twin_sync(Object that) =>
          wasmModule.wire_DroppableTwinSync_simple_method_twin_sync(that);

  void wire_DroppableTwinSyncSse_create_stream_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_DroppableTwinSyncSse_create_stream_twin_sync_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_DroppableTwinSyncSse_get_drop_count_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_DroppableTwinSyncSse_get_drop_count_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_DroppableTwinSyncSse_new_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_DroppableTwinSyncSse_new_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_DroppableTwinSyncSse_simple_method_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_DroppableTwinSyncSse_simple_method_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_func_enum_simple_twin_rust_async(NativePortType port_, int arg) =>
      wasmModule.wire_func_enum_simple_twin_rust_async(port_, arg);

  void wire_func_enum_with_discriminant_twin_rust_async(
          NativePortType port_, int arg) =>
      wasmModule.wire_func_enum_with_discriminant_twin_rust_async(port_, arg);

  void wire_func_enum_with_item_mixed_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_enum_with_item_mixed_twin_rust_async(port_, arg);

  void wire_func_enum_with_item_struct_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_enum_with_item_struct_twin_rust_async(port_, arg);

  void wire_func_enum_with_item_tuple_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_enum_with_item_tuple_twin_rust_async(port_, arg);

  void wire_handle_enum_parameter_twin_rust_async(
          NativePortType port_, int weekday) =>
      wasmModule.wire_handle_enum_parameter_twin_rust_async(port_, weekday);

  void wire_handle_enum_struct_twin_rust_async(
          NativePortType port_, List<dynamic> val) =>
      wasmModule.wire_handle_enum_struct_twin_rust_async(port_, val);

  void wire_handle_return_enum_twin_rust_async(
          NativePortType port_, String input) =>
      wasmModule.wire_handle_return_enum_twin_rust_async(port_, input);

  void wire_multiply_by_ten_twin_rust_async(
          NativePortType port_, List<dynamic> measure) =>
      wasmModule.wire_multiply_by_ten_twin_rust_async(port_, measure);

  void wire_print_note_twin_rust_async(
          NativePortType port_, List<dynamic> note) =>
      wasmModule.wire_print_note_twin_rust_async(port_, note);

  void wire_func_enum_simple_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_enum_simple_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_enum_with_discriminant_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_enum_with_discriminant_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_enum_with_item_mixed_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_enum_with_item_mixed_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_enum_with_item_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_enum_with_item_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_enum_with_item_tuple_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_enum_with_item_tuple_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_enum_parameter_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_enum_parameter_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_enum_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_enum_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_return_enum_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_return_enum_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_multiply_by_ten_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_multiply_by_ten_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_print_note_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_print_note_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_enum_simple_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_enum_simple_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_enum_with_discriminant_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_enum_with_discriminant_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_enum_with_item_mixed_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_enum_with_item_mixed_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_enum_with_item_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_enum_with_item_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_enum_with_item_tuple_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_enum_with_item_tuple_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_enum_parameter_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_enum_parameter_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_enum_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_enum_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_return_enum_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_return_enum_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_multiply_by_ten_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_multiply_by_ten_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_print_note_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_print_note_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_enum_simple_twin_sync(int arg) =>
          wasmModule.wire_func_enum_simple_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_enum_with_discriminant_twin_sync(int arg) =>
          wasmModule.wire_func_enum_with_discriminant_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_enum_with_item_mixed_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_func_enum_with_item_mixed_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_enum_with_item_struct_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_func_enum_with_item_struct_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_enum_with_item_tuple_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_func_enum_with_item_tuple_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_enum_parameter_twin_sync(int weekday) =>
          wasmModule.wire_handle_enum_parameter_twin_sync(weekday);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_enum_struct_twin_sync(List<dynamic> val) =>
          wasmModule.wire_handle_enum_struct_twin_sync(val);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_return_enum_twin_sync(String input) =>
          wasmModule.wire_handle_return_enum_twin_sync(input);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_multiply_by_ten_twin_sync(List<dynamic> measure) =>
          wasmModule.wire_multiply_by_ten_twin_sync(measure);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_print_note_twin_sync(List<dynamic> note) =>
          wasmModule.wire_print_note_twin_sync(note);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_enum_simple_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_func_enum_simple_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_enum_with_discriminant_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_enum_with_discriminant_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_enum_with_item_mixed_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_enum_with_item_mixed_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_enum_with_item_struct_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_enum_with_item_struct_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_enum_with_item_tuple_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_enum_with_item_tuple_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_enum_parameter_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_enum_parameter_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_enum_struct_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_enum_struct_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_return_enum_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_return_enum_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_multiply_by_ten_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_multiply_by_ten_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_print_note_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_print_note_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_EventTwinRustAsync_as_string_twin_rust_async(
          NativePortType port_, List<dynamic> that) =>
      wasmModule.wire_EventTwinRustAsync_as_string_twin_rust_async(port_, that);

  void wire_close_event_listener_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_close_event_listener_twin_rust_async(port_);

  void wire_create_event_twin_rust_async(
          NativePortType port_, String address, String payload) =>
      wasmModule.wire_create_event_twin_rust_async(port_, address, payload);

  void wire_register_event_listener_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_register_event_listener_twin_rust_async(port_);

  void wire_EventTwinRustAsyncSse_as_string_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_EventTwinRustAsyncSse_as_string_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_close_event_listener_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_close_event_listener_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_event_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_event_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_register_event_listener_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_register_event_listener_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_EventTwinSse_as_string_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_EventTwinSse_as_string_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_close_event_listener_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_close_event_listener_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_event_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_event_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_register_event_listener_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_register_event_listener_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_CustomStructTwinRustAsync_new_twin_rust_async(
          NativePortType port_, String message) =>
      wasmModule.wire_CustomStructTwinRustAsync_new_twin_rust_async(
          port_, message);

  void wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_async(
          NativePortType port_, List<dynamic> that) =>
      wasmModule
          .wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_async(
              port_, that);

  void wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_async(
          NativePortType port_, List<dynamic> that) =>
      wasmModule
          .wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_async(
              port_, that);

  void wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_async(
              port_);

  void wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_async(
              port_);

  void wire_SomeStructTwinRustAsync_new_twin_rust_async(
          NativePortType port_, int value) =>
      wasmModule.wire_SomeStructTwinRustAsync_new_twin_rust_async(port_, value);

  void wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_async(
          NativePortType port_, List<dynamic> that) =>
      wasmModule
          .wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_async(
              port_, that);

  void wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_async(
          NativePortType port_, List<dynamic> that) =>
      wasmModule
          .wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_async(
              port_, that);

  void wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_async(
              port_);

  void wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_async(
              port_);

  void wire_custom_enum_error_panic_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_custom_enum_error_panic_twin_rust_async(port_);

  void wire_custom_enum_error_return_error_twin_rust_async(
          NativePortType port_) =>
      wasmModule.wire_custom_enum_error_return_error_twin_rust_async(port_);

  void wire_custom_enum_error_return_ok_twin_rust_async(
          NativePortType port_, int arg) =>
      wasmModule.wire_custom_enum_error_return_ok_twin_rust_async(port_, arg);

  void wire_custom_nested_error_return_error_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_custom_nested_error_return_error_twin_rust_async(
          port_, arg);

  void wire_custom_struct_error_return_error_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_custom_struct_error_return_error_twin_rust_async(
          port_, arg);

  void wire_func_return_error_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_func_return_error_twin_rust_async(port_);

  void wire_func_type_fallible_panic_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_func_type_fallible_panic_twin_rust_async(port_);

  void wire_func_type_infallible_panic_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_func_type_infallible_panic_twin_rust_async(port_);

  void wire_panic_with_custom_result_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_panic_with_custom_result_twin_rust_async(port_);

  void wire_return_custom_nested_error_1_twin_rust_async(
          NativePortType port_) =>
      wasmModule.wire_return_custom_nested_error_1_twin_rust_async(port_);

  void wire_return_custom_nested_error_1_variant1_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_return_custom_nested_error_1_variant1_twin_rust_async(port_);

  void wire_return_custom_nested_error_2_twin_rust_async(
          NativePortType port_) =>
      wasmModule.wire_return_custom_nested_error_2_twin_rust_async(port_);

  void wire_return_custom_struct_error_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_return_custom_struct_error_twin_rust_async(port_);

  void wire_return_custom_struct_ok_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_return_custom_struct_ok_twin_rust_async(port_);

  void wire_return_err_custom_error_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_return_err_custom_error_twin_rust_async(port_);

  void wire_return_error_variant_twin_rust_async(
          NativePortType port_, int variant) =>
      wasmModule.wire_return_error_variant_twin_rust_async(port_, variant);

  void wire_return_ok_custom_error_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_return_ok_custom_error_twin_rust_async(port_);

  void wire_stream_sink_throw_anyhow_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_stream_sink_throw_anyhow_twin_rust_async(port_);

  void wire_throw_anyhow_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_throw_anyhow_twin_rust_async(port_);

  void wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_custom_enum_error_panic_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_custom_enum_error_panic_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_custom_enum_error_return_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_custom_enum_error_return_error_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_custom_enum_error_return_ok_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_custom_enum_error_return_ok_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_custom_nested_error_return_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_custom_nested_error_return_error_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_custom_struct_error_return_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_custom_struct_error_return_error_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_return_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_return_error_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_type_fallible_panic_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_type_fallible_panic_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_type_infallible_panic_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_type_infallible_panic_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_panic_with_custom_result_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_panic_with_custom_result_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_custom_nested_error_1_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_custom_nested_error_1_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_custom_nested_error_1_variant1_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_custom_nested_error_1_variant1_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_custom_nested_error_2_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_custom_nested_error_2_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_custom_struct_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_custom_struct_error_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_custom_struct_ok_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_custom_struct_ok_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_err_custom_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_err_custom_error_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_error_variant_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_error_variant_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_ok_custom_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_ok_custom_error_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_stream_sink_throw_anyhow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_stream_sink_throw_anyhow_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_throw_anyhow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_throw_anyhow_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_CustomStructTwinSse_new_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_CustomStructTwinSse_new_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_CustomStructTwinSse_static_return_custom_struct_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_CustomStructTwinSse_static_return_custom_struct_error_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_SomeStructTwinSse_new_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_SomeStructTwinSse_new_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_SomeStructTwinSse_static_return_err_custom_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_SomeStructTwinSse_static_return_err_custom_error_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_SomeStructTwinSse_static_return_ok_custom_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_SomeStructTwinSse_static_return_ok_custom_error_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_custom_enum_error_panic_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_custom_enum_error_panic_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_custom_enum_error_return_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_custom_enum_error_return_error_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_custom_enum_error_return_ok_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_custom_enum_error_return_ok_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_custom_nested_error_return_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_custom_nested_error_return_error_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_custom_struct_error_return_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_custom_struct_error_return_error_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_return_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_return_error_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_type_fallible_panic_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_type_fallible_panic_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_type_infallible_panic_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_type_infallible_panic_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_panic_with_custom_result_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_panic_with_custom_result_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_custom_nested_error_1_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_custom_nested_error_1_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_custom_nested_error_1_variant1_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_custom_nested_error_1_variant1_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_custom_nested_error_2_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_custom_nested_error_2_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_custom_struct_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_custom_struct_error_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_custom_struct_ok_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_custom_struct_ok_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_err_custom_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_err_custom_error_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_error_variant_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_error_variant_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_return_ok_custom_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_return_ok_custom_error_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_stream_sink_throw_anyhow_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_stream_sink_throw_anyhow_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_throw_anyhow_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_throw_anyhow_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_CustomStructTwinSync_new_twin_sync(String message) =>
          wasmModule.wire_CustomStructTwinSync_new_twin_sync(message);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_sync(
              List<dynamic> that) =>
          wasmModule
              .wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_sync(
                  that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_sync(
              List<dynamic> that) =>
          wasmModule
              .wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_sync(
                  that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_CustomStructTwinSync_static_return_custom_struct_error_twin_sync() =>
          wasmModule
              .wire_CustomStructTwinSync_static_return_custom_struct_error_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_sync() =>
          wasmModule
              .wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SomeStructTwinSync_new_twin_sync(int value) =>
          wasmModule.wire_SomeStructTwinSync_new_twin_sync(value);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_sync(
              List<dynamic> that) =>
          wasmModule
              .wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_sync(
                  that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_sync(
              List<dynamic> that) =>
          wasmModule
              .wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_sync(
                  that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SomeStructTwinSync_static_return_err_custom_error_twin_sync() =>
          wasmModule
              .wire_SomeStructTwinSync_static_return_err_custom_error_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SomeStructTwinSync_static_return_ok_custom_error_twin_sync() =>
          wasmModule
              .wire_SomeStructTwinSync_static_return_ok_custom_error_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_custom_enum_error_panic_twin_sync() =>
          wasmModule.wire_custom_enum_error_panic_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_custom_enum_error_return_error_twin_sync() =>
          wasmModule.wire_custom_enum_error_return_error_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_custom_enum_error_return_ok_twin_sync(int arg) =>
          wasmModule.wire_custom_enum_error_return_ok_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_custom_nested_error_return_error_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_custom_nested_error_return_error_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_custom_struct_error_return_error_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_custom_struct_error_return_error_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_return_error_twin_sync() =>
          wasmModule.wire_func_return_error_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_type_fallible_panic_twin_sync() =>
          wasmModule.wire_func_type_fallible_panic_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_type_infallible_panic_twin_sync() =>
          wasmModule.wire_func_type_infallible_panic_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_panic_with_custom_result_twin_sync() =>
          wasmModule.wire_panic_with_custom_result_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_custom_nested_error_1_twin_sync() =>
          wasmModule.wire_return_custom_nested_error_1_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_custom_nested_error_1_variant1_twin_sync() =>
          wasmModule.wire_return_custom_nested_error_1_variant1_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_custom_nested_error_2_twin_sync() =>
          wasmModule.wire_return_custom_nested_error_2_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_custom_struct_error_twin_sync() =>
          wasmModule.wire_return_custom_struct_error_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_custom_struct_ok_twin_sync() =>
          wasmModule.wire_return_custom_struct_ok_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_err_custom_error_twin_sync() =>
          wasmModule.wire_return_err_custom_error_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_error_variant_twin_sync(int variant) =>
          wasmModule.wire_return_error_variant_twin_sync(variant);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_ok_custom_error_twin_sync() =>
          wasmModule.wire_return_ok_custom_error_twin_sync();

  void wire_stream_sink_throw_anyhow_twin_sync(NativePortType port_) =>
      wasmModule.wire_stream_sink_throw_anyhow_twin_sync(port_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_throw_anyhow_twin_sync() => wasmModule.wire_throw_anyhow_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_CustomStructTwinSyncSse_new_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_CustomStructTwinSyncSse_new_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SomeStructTwinSyncSse_new_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_SomeStructTwinSyncSse_new_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_custom_enum_error_panic_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_custom_enum_error_panic_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_custom_enum_error_return_error_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_custom_enum_error_return_error_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_custom_enum_error_return_ok_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_custom_enum_error_return_ok_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_custom_nested_error_return_error_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_custom_nested_error_return_error_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_custom_struct_error_return_error_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_custom_struct_error_return_error_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_return_error_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_func_return_error_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_type_fallible_panic_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_type_fallible_panic_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_type_infallible_panic_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_type_infallible_panic_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_panic_with_custom_result_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_panic_with_custom_result_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_custom_nested_error_1_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_return_custom_nested_error_1_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_custom_nested_error_1_variant1_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_return_custom_nested_error_1_variant1_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_custom_nested_error_2_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_return_custom_nested_error_2_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_custom_struct_error_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_return_custom_struct_error_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_custom_struct_ok_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_return_custom_struct_ok_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_err_custom_error_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_return_err_custom_error_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_error_variant_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_return_error_variant_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_ok_custom_error_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_return_ok_custom_error_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_stream_sink_throw_anyhow_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_stream_sink_throw_anyhow_twin_sync_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_throw_anyhow_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_throw_anyhow_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_call_new_module_system_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_call_new_module_system_twin_rust_async(port_);

  void wire_call_old_module_system_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_call_old_module_system_twin_rust_async(port_);

  void wire_use_imported_enum_twin_rust_async(
          NativePortType port_, int my_enum) =>
      wasmModule.wire_use_imported_enum_twin_rust_async(port_, my_enum);

  void wire_use_imported_struct_twin_rust_async(
          NativePortType port_, List<dynamic> my_struct) =>
      wasmModule.wire_use_imported_struct_twin_rust_async(port_, my_struct);

  void wire_call_new_module_system_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_call_new_module_system_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_call_old_module_system_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_call_old_module_system_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_use_imported_enum_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_use_imported_enum_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_use_imported_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_use_imported_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_call_new_module_system_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_call_new_module_system_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_call_old_module_system_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_call_old_module_system_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_use_imported_enum_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_use_imported_enum_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_use_imported_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_use_imported_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_call_new_module_system_twin_sync() =>
          wasmModule.wire_call_new_module_system_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_call_old_module_system_twin_sync() =>
          wasmModule.wire_call_old_module_system_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_use_imported_enum_twin_sync(int my_enum) =>
          wasmModule.wire_use_imported_enum_twin_sync(my_enum);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_use_imported_struct_twin_sync(List<dynamic> my_struct) =>
          wasmModule.wire_use_imported_struct_twin_sync(my_struct);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_call_new_module_system_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_call_new_module_system_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_call_old_module_system_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_call_old_module_system_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_use_imported_enum_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_use_imported_enum_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_use_imported_struct_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_use_imported_struct_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_map_i32_i32_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_hash_map_i32_i32_twin_rust_async(port_, arg);

  void wire_func_hash_map_string_bytes_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_hash_map_string_bytes_twin_rust_async(port_, arg);

  void wire_func_hash_map_string_complex_enum_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_hash_map_string_complex_enum_twin_rust_async(
          port_, arg);

  void wire_func_hash_map_string_simple_enum_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_hash_map_string_simple_enum_twin_rust_async(
          port_, arg);

  void wire_func_hash_map_string_string_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_hash_map_string_string_twin_rust_async(port_, arg);

  void wire_func_hash_map_string_struct_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_hash_map_string_struct_twin_rust_async(port_, arg);

  void wire_func_hash_set_i32_twin_rust_async(
          NativePortType port_, Int32List arg) =>
      wasmModule.wire_func_hash_set_i32_twin_rust_async(port_, arg);

  void wire_func_hash_set_string_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_hash_set_string_twin_rust_async(port_, arg);

  void wire_func_hash_map_i32_i32_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_map_i32_i32_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_map_string_bytes_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_map_string_bytes_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_map_string_complex_enum_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_map_string_complex_enum_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_map_string_simple_enum_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_map_string_simple_enum_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_map_string_string_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_map_string_string_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_map_string_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_map_string_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_set_i32_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_set_i32_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_set_string_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_set_string_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_map_i32_i32_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_map_i32_i32_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_map_string_bytes_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_map_string_bytes_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_map_string_complex_enum_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_map_string_complex_enum_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_map_string_simple_enum_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_map_string_simple_enum_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_map_string_string_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_map_string_string_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_map_string_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_map_string_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_set_i32_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_set_i32_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_hash_set_string_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_hash_set_string_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_map_i32_i32_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_func_hash_map_i32_i32_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_map_string_bytes_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_func_hash_map_string_bytes_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_map_string_complex_enum_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_func_hash_map_string_complex_enum_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_map_string_simple_enum_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_func_hash_map_string_simple_enum_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_map_string_string_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_func_hash_map_string_string_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_map_string_struct_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_func_hash_map_string_struct_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_set_i32_twin_sync(Int32List arg) =>
          wasmModule.wire_func_hash_set_i32_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_set_string_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_func_hash_set_string_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_map_i32_i32_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_hash_map_i32_i32_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_map_string_bytes_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_hash_map_string_bytes_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_map_string_complex_enum_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_hash_map_string_complex_enum_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_map_string_simple_enum_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_hash_map_string_simple_enum_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_map_string_string_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_hash_map_string_string_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_map_string_struct_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_hash_map_string_struct_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_set_i32_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_func_hash_set_i32_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_set_string_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_hash_set_string_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_async(
          NativePortType port_, String a, String b) =>
      wasmModule
          .wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_async(
              port_, a, b);

  void wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_async(
          NativePortType port_, List<dynamic> that, String b) =>
      wasmModule.wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_async(
          port_, that, b);

  void wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_async(
              port_);

  void wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_async(
          NativePortType port_, int key, int max) =>
      wasmModule
          .wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_async(
              port_, key, max);

  void wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_async(
          NativePortType port_, List<dynamic> that) =>
      wasmModule
          .wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_async(
              port_, that);

  void wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_async(
          NativePortType port_, List<dynamic> that, int key, int max) =>
      wasmModule
          .wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_async(
              port_, that, key, max);

  void wire_ConcatenateWithTwinRustAsync_new_twin_rust_async(
          NativePortType port_, String a) =>
      wasmModule.wire_ConcatenateWithTwinRustAsync_new_twin_rust_async(
          port_, a);

  void wire_ConcatenateWithTwinRustAsync_simple_getter_twin_rust_async(
          NativePortType port_, List<dynamic> that) =>
      wasmModule
          .wire_ConcatenateWithTwinRustAsync_simple_getter_twin_rust_async(
              port_, that);

  void wire_MyCallableTwinRustAsync_call(
          NativePortType port_, List<dynamic> that, String two) =>
      wasmModule.wire_MyCallableTwinRustAsync_call(port_, that, two);

  void wire_SimpleStructTwinRustAsync_arg_self_twin_rust_async(
          NativePortType port_, List<dynamic> a, List<dynamic> b) =>
      wasmModule.wire_SimpleStructTwinRustAsync_arg_self_twin_rust_async(
          port_, a, b);

  void wire_SimpleStructTwinRustAsync_return_self_twin_rust_async(
          NativePortType port_, String one) =>
      wasmModule.wire_SimpleStructTwinRustAsync_return_self_twin_rust_async(
          port_, one);

  void wire_SimpleStructTwinRustAsync_vec_self_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_SimpleStructTwinRustAsync_vec_self_twin_rust_async(
          port_, arg);

  void wire_SumWithTwinRustAsync_sum_twin_rust_async(
          NativePortType port_, List<dynamic> that, int y, int z) =>
      wasmModule.wire_SumWithTwinRustAsync_sum_twin_rust_async(
          port_, that, y, z);

  void wire_get_sum_array_twin_rust_async(
          NativePortType port_, int a, int b, int c) =>
      wasmModule.wire_get_sum_array_twin_rust_async(port_, a, b, c);

  void wire_get_sum_struct_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_get_sum_struct_twin_rust_async(port_);

  void wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinRustAsyncSse_simple_getter_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_ConcatenateWithTwinRustAsyncSse_simple_getter_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_MyCallableTwinRustAsyncSse_call(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_MyCallableTwinRustAsyncSse_call(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_SimpleStructTwinRustAsyncSse_arg_self_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_SimpleStructTwinRustAsyncSse_arg_self_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_SimpleStructTwinRustAsyncSse_return_self_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_SimpleStructTwinRustAsyncSse_return_self_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_SimpleStructTwinRustAsyncSse_vec_self_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_SimpleStructTwinRustAsyncSse_vec_self_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_sum_array_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_sum_array_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_sum_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_sum_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinSse_concatenate_static_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_ConcatenateWithTwinSse_concatenate_static_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinSse_concatenate_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_ConcatenateWithTwinSse_concatenate_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinSse_new_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_ConcatenateWithTwinSse_new_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinSse_simple_getter_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_ConcatenateWithTwinSse_simple_getter_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_MyCallableTwinSse_call(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_MyCallableTwinSse_call(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_SimpleStructTwinSse_arg_self_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_SimpleStructTwinSse_arg_self_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_SimpleStructTwinSse_return_self_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_SimpleStructTwinSse_return_self_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_SimpleStructTwinSse_vec_self_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_SimpleStructTwinSse_vec_self_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_SumWithTwinSse_sum_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_SumWithTwinSse_sum_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_sum_array_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_sum_array_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_sum_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_sum_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConcatenateWithTwinSync_concatenate_static_twin_sync(
              String a, String b) =>
          wasmModule.wire_ConcatenateWithTwinSync_concatenate_static_twin_sync(
              a, b);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConcatenateWithTwinSync_concatenate_twin_sync(
              List<dynamic> that, String b) =>
          wasmModule.wire_ConcatenateWithTwinSync_concatenate_twin_sync(
              that, b);

  void wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_sync(
          NativePortType port_) =>
      wasmModule
          .wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_sync(
              port_);

  void wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_sync(
          NativePortType port_, int key, int max) =>
      wasmModule
          .wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_sync(
              port_, key, max);

  void wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_sync(
          NativePortType port_, List<dynamic> that) =>
      wasmModule
          .wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_sync(
              port_, that);

  void wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_sync(
          NativePortType port_, List<dynamic> that, int key, int max) =>
      wasmModule.wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_sync(
          port_, that, key, max);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConcatenateWithTwinSync_new_twin_sync(String a) =>
          wasmModule.wire_ConcatenateWithTwinSync_new_twin_sync(a);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConcatenateWithTwinSync_simple_getter_twin_sync(
              List<dynamic> that) =>
          wasmModule.wire_ConcatenateWithTwinSync_simple_getter_twin_sync(that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_MyCallableTwinSync_call(List<dynamic> that, String two) =>
          wasmModule.wire_MyCallableTwinSync_call(that, two);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SimpleStructTwinSync_arg_self_twin_sync(
              List<dynamic> a, List<dynamic> b) =>
          wasmModule.wire_SimpleStructTwinSync_arg_self_twin_sync(a, b);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SimpleStructTwinSync_return_self_twin_sync(String one) =>
          wasmModule.wire_SimpleStructTwinSync_return_self_twin_sync(one);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SimpleStructTwinSync_vec_self_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_SimpleStructTwinSync_vec_self_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SumWithTwinSync_sum_twin_sync(List<dynamic> that, int y, int z) =>
          wasmModule.wire_SumWithTwinSync_sum_twin_sync(that, y, z);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_sum_array_twin_sync(int a, int b, int c) =>
          wasmModule.wire_get_sum_array_twin_sync(a, b, c);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_sum_struct_twin_sync() =>
          wasmModule.wire_get_sum_struct_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_ConcatenateWithTwinSyncSse_new_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_ConcatenateWithTwinSyncSse_new_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_ConcatenateWithTwinSyncSse_simple_getter_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_ConcatenateWithTwinSyncSse_simple_getter_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_MyCallableTwinSyncSse_call(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_MyCallableTwinSyncSse_call(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SimpleStructTwinSyncSse_arg_self_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_SimpleStructTwinSyncSse_arg_self_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SimpleStructTwinSyncSse_return_self_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_SimpleStructTwinSyncSse_return_self_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SimpleStructTwinSyncSse_vec_self_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_SimpleStructTwinSyncSse_vec_self_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SumWithTwinSyncSse_sum_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_SumWithTwinSyncSse_sum_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_sum_array_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_get_sum_array_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_sum_struct_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_get_sum_struct_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_app_settings_stream_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_app_settings_stream_twin_rust_async(port_);

  void wire_app_settings_vec_stream_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_app_settings_vec_stream_twin_rust_async(port_);

  void wire_first_number_twin_rust_async(
          NativePortType port_, List<dynamic> nums) =>
      wasmModule.wire_first_number_twin_rust_async(port_, nums);

  void wire_first_sequence_twin_rust_async(
          NativePortType port_, List<dynamic> seqs) =>
      wasmModule.wire_first_sequence_twin_rust_async(port_, seqs);

  void wire_get_app_settings_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_get_app_settings_twin_rust_async(port_);

  void wire_get_fallible_app_settings_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_get_fallible_app_settings_twin_rust_async(port_);

  void wire_get_message_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_get_message_twin_rust_async(port_);

  void wire_is_app_embedded_twin_rust_async(
          NativePortType port_, List<dynamic> app_settings) =>
      wasmModule.wire_is_app_embedded_twin_rust_async(port_, app_settings);

  void wire_mirror_array_enum_stream_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_mirror_array_enum_stream_twin_rust_async(port_);

  void wire_mirror_enum_stream_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_mirror_enum_stream_twin_rust_async(port_);

  void wire_mirror_map_enum_stream_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_mirror_map_enum_stream_twin_rust_async(port_);

  void wire_mirror_option_enum_stream_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_mirror_option_enum_stream_twin_rust_async(port_);

  void wire_mirror_set_enum_stream_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_mirror_set_enum_stream_twin_rust_async(port_);

  void wire_mirror_struct_stream_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_mirror_struct_stream_twin_rust_async(port_);

  void wire_mirror_tuple_stream_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_mirror_tuple_stream_twin_rust_async(port_);

  void wire_mirror_vec_enum_stream_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_mirror_vec_enum_stream_twin_rust_async(port_);

  void wire_repeat_number_twin_rust_async(
          NativePortType port_, int num, int times) =>
      wasmModule.wire_repeat_number_twin_rust_async(port_, num, times);

  void wire_repeat_sequence_twin_rust_async(
          NativePortType port_, int seq, int times) =>
      wasmModule.wire_repeat_sequence_twin_rust_async(port_, seq, times);

  void wire_test_contains_mirrored_sub_struct_twin_rust_async(
          NativePortType port_) =>
      wasmModule.wire_test_contains_mirrored_sub_struct_twin_rust_async(port_);

  void wire_test_fallible_of_raw_string_mirrored_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_test_fallible_of_raw_string_mirrored_twin_rust_async(port_);

  void wire_test_hashmap_with_mirrored_value_twin_rust_async(
          NativePortType port_) =>
      wasmModule.wire_test_hashmap_with_mirrored_value_twin_rust_async(port_);

  void wire_test_list_of_nested_enums_mirrored_twin_rust_async(
          NativePortType port_) =>
      wasmModule.wire_test_list_of_nested_enums_mirrored_twin_rust_async(port_);

  void wire_test_list_of_raw_nested_string_mirrored_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_test_list_of_raw_nested_string_mirrored_twin_rust_async(port_);

  void wire_test_nested_raw_string_mirrored_twin_rust_async(
          NativePortType port_) =>
      wasmModule.wire_test_nested_raw_string_mirrored_twin_rust_async(port_);

  void wire_test_raw_string_enum_mirrored_twin_rust_async(
          NativePortType port_, bool nested) =>
      wasmModule.wire_test_raw_string_enum_mirrored_twin_rust_async(
          port_, nested);

  void wire_test_raw_string_mirrored_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_test_raw_string_mirrored_twin_rust_async(port_);

  void wire_app_settings_stream_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_app_settings_stream_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_app_settings_vec_stream_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_app_settings_vec_stream_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_first_number_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_first_number_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_first_sequence_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_first_sequence_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_app_settings_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_app_settings_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_fallible_app_settings_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_fallible_app_settings_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_message_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_message_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_is_app_embedded_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_is_app_embedded_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_array_enum_stream_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_array_enum_stream_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_enum_stream_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_enum_stream_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_map_enum_stream_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_map_enum_stream_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_option_enum_stream_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_option_enum_stream_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_set_enum_stream_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_set_enum_stream_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_struct_stream_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_struct_stream_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_tuple_stream_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_tuple_stream_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_vec_enum_stream_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_vec_enum_stream_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_repeat_number_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_repeat_number_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_repeat_sequence_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_repeat_sequence_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_contains_mirrored_sub_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_contains_mirrored_sub_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_fallible_of_raw_string_mirrored_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_fallible_of_raw_string_mirrored_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_hashmap_with_mirrored_value_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_hashmap_with_mirrored_value_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_list_of_nested_enums_mirrored_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_list_of_nested_enums_mirrored_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_nested_raw_string_mirrored_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_nested_raw_string_mirrored_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_raw_string_enum_mirrored_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_raw_string_enum_mirrored_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_raw_string_mirrored_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_raw_string_mirrored_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_app_settings_stream_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_app_settings_stream_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_app_settings_vec_stream_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_app_settings_vec_stream_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_first_number_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_first_number_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_first_sequence_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_first_sequence_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_app_settings_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_app_settings_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_fallible_app_settings_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_fallible_app_settings_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_get_message_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_get_message_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_is_app_embedded_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_is_app_embedded_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_array_enum_stream_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_array_enum_stream_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_enum_stream_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_enum_stream_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_map_enum_stream_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_map_enum_stream_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_option_enum_stream_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_option_enum_stream_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_set_enum_stream_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_set_enum_stream_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_struct_stream_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_struct_stream_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_tuple_stream_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_tuple_stream_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_vec_enum_stream_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_vec_enum_stream_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_repeat_number_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_repeat_number_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_repeat_sequence_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_repeat_sequence_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_contains_mirrored_sub_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_contains_mirrored_sub_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_fallible_of_raw_string_mirrored_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_fallible_of_raw_string_mirrored_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_hashmap_with_mirrored_value_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_hashmap_with_mirrored_value_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_list_of_nested_enums_mirrored_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_list_of_nested_enums_mirrored_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_list_of_raw_nested_string_mirrored_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_list_of_raw_nested_string_mirrored_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_nested_raw_string_mirrored_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_nested_raw_string_mirrored_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_raw_string_enum_mirrored_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_raw_string_enum_mirrored_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_raw_string_mirrored_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_raw_string_mirrored_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_app_settings_stream_twin_sync(NativePortType port_) =>
      wasmModule.wire_app_settings_stream_twin_sync(port_);

  void wire_app_settings_vec_stream_twin_sync(NativePortType port_) =>
      wasmModule.wire_app_settings_vec_stream_twin_sync(port_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_first_number_twin_sync(List<dynamic> nums) =>
          wasmModule.wire_first_number_twin_sync(nums);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_first_sequence_twin_sync(List<dynamic> seqs) =>
          wasmModule.wire_first_sequence_twin_sync(seqs);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_app_settings_twin_sync() =>
          wasmModule.wire_get_app_settings_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_fallible_app_settings_twin_sync() =>
          wasmModule.wire_get_fallible_app_settings_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_message_twin_sync() => wasmModule.wire_get_message_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_is_app_embedded_twin_sync(List<dynamic> app_settings) =>
          wasmModule.wire_is_app_embedded_twin_sync(app_settings);

  void wire_mirror_array_enum_stream_twin_sync(NativePortType port_) =>
      wasmModule.wire_mirror_array_enum_stream_twin_sync(port_);

  void wire_mirror_enum_stream_twin_sync(NativePortType port_) =>
      wasmModule.wire_mirror_enum_stream_twin_sync(port_);

  void wire_mirror_map_enum_stream_twin_sync(NativePortType port_) =>
      wasmModule.wire_mirror_map_enum_stream_twin_sync(port_);

  void wire_mirror_option_enum_stream_twin_sync(NativePortType port_) =>
      wasmModule.wire_mirror_option_enum_stream_twin_sync(port_);

  void wire_mirror_set_enum_stream_twin_sync(NativePortType port_) =>
      wasmModule.wire_mirror_set_enum_stream_twin_sync(port_);

  void wire_mirror_struct_stream_twin_sync(NativePortType port_) =>
      wasmModule.wire_mirror_struct_stream_twin_sync(port_);

  void wire_mirror_tuple_stream_twin_sync(NativePortType port_) =>
      wasmModule.wire_mirror_tuple_stream_twin_sync(port_);

  void wire_mirror_vec_enum_stream_twin_sync(NativePortType port_) =>
      wasmModule.wire_mirror_vec_enum_stream_twin_sync(port_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_repeat_number_twin_sync(int num, int times) =>
          wasmModule.wire_repeat_number_twin_sync(num, times);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_repeat_sequence_twin_sync(int seq, int times) =>
          wasmModule.wire_repeat_sequence_twin_sync(seq, times);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_contains_mirrored_sub_struct_twin_sync() =>
          wasmModule.wire_test_contains_mirrored_sub_struct_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_fallible_of_raw_string_mirrored_twin_sync() =>
          wasmModule.wire_test_fallible_of_raw_string_mirrored_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_hashmap_with_mirrored_value_twin_sync() =>
          wasmModule.wire_test_hashmap_with_mirrored_value_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_list_of_nested_enums_mirrored_twin_sync() =>
          wasmModule.wire_test_list_of_nested_enums_mirrored_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_list_of_raw_nested_string_mirrored_twin_sync() =>
          wasmModule.wire_test_list_of_raw_nested_string_mirrored_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_nested_raw_string_mirrored_twin_sync() =>
          wasmModule.wire_test_nested_raw_string_mirrored_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_raw_string_enum_mirrored_twin_sync(bool nested) =>
          wasmModule.wire_test_raw_string_enum_mirrored_twin_sync(nested);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_raw_string_mirrored_twin_sync() =>
          wasmModule.wire_test_raw_string_mirrored_twin_sync();

  void wire_app_settings_stream_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_app_settings_stream_twin_sync_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_app_settings_vec_stream_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_app_settings_vec_stream_twin_sync_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_first_number_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_first_number_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_first_sequence_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_first_sequence_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_app_settings_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_get_app_settings_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_fallible_app_settings_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_get_fallible_app_settings_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_message_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_get_message_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_is_app_embedded_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_is_app_embedded_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_mirror_array_enum_stream_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_array_enum_stream_twin_sync_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_enum_stream_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_enum_stream_twin_sync_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_map_enum_stream_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_map_enum_stream_twin_sync_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_option_enum_stream_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_option_enum_stream_twin_sync_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_set_enum_stream_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_set_enum_stream_twin_sync_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_struct_stream_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_struct_stream_twin_sync_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_tuple_stream_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_tuple_stream_twin_sync_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_mirror_vec_enum_stream_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_mirror_vec_enum_stream_twin_sync_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_repeat_number_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_repeat_number_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_repeat_sequence_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_repeat_sequence_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_contains_mirrored_sub_struct_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_test_contains_mirrored_sub_struct_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_fallible_of_raw_string_mirrored_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_test_fallible_of_raw_string_mirrored_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_hashmap_with_mirrored_value_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_test_hashmap_with_mirrored_value_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_list_of_nested_enums_mirrored_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_test_list_of_nested_enums_mirrored_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_list_of_raw_nested_string_mirrored_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_test_list_of_raw_nested_string_mirrored_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_nested_raw_string_mirrored_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_test_nested_raw_string_mirrored_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_raw_string_enum_mirrored_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_test_raw_string_enum_mirrored_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_raw_string_mirrored_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_test_raw_string_mirrored_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_handle_big_buffers_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_handle_big_buffers_twin_rust_async(port_);

  void wire_handle_complex_struct_twin_rust_async(
          NativePortType port_, List<dynamic> s) =>
      wasmModule.wire_handle_complex_struct_twin_rust_async(port_, s);

  void wire_handle_nested_struct_twin_rust_async(
          NativePortType port_, List<dynamic> s) =>
      wasmModule.wire_handle_nested_struct_twin_rust_async(port_, s);

  void wire_handle_string_twin_rust_async(NativePortType port_, String s) =>
      wasmModule.wire_handle_string_twin_rust_async(port_, s);

  void wire_handle_struct_twin_rust_async(
          NativePortType port_, List<dynamic> arg, List<dynamic> boxed) =>
      wasmModule.wire_handle_struct_twin_rust_async(port_, arg, boxed);

  void wire_handle_vec_u8_twin_rust_async(NativePortType port_, List<int> v) =>
      wasmModule.wire_handle_vec_u8_twin_rust_async(port_, v);

  void wire_list_of_primitive_enums_twin_rust_async(
          NativePortType port_, List<dynamic> weekdays) =>
      wasmModule.wire_list_of_primitive_enums_twin_rust_async(port_, weekdays);

  void wire_test_abc_enum_twin_rust_async(
          NativePortType port_, List<dynamic> abc) =>
      wasmModule.wire_test_abc_enum_twin_rust_async(port_, abc);

  void wire_test_struct_with_enum_twin_rust_async(
          NativePortType port_, List<dynamic> se) =>
      wasmModule.wire_test_struct_with_enum_twin_rust_async(port_, se);

  void wire_handle_big_buffers_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_big_buffers_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_complex_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_complex_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_nested_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_nested_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_string_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_string_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_vec_u8_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_vec_u8_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_list_of_primitive_enums_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_list_of_primitive_enums_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_abc_enum_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_abc_enum_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_struct_with_enum_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_struct_with_enum_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_big_buffers_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_big_buffers_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_complex_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_complex_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_nested_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_nested_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_string_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_string_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_vec_u8_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_vec_u8_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_list_of_primitive_enums_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_list_of_primitive_enums_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_abc_enum_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_abc_enum_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_struct_with_enum_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_struct_with_enum_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_big_buffers_twin_sync() =>
          wasmModule.wire_handle_big_buffers_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_complex_struct_twin_sync(List<dynamic> s) =>
          wasmModule.wire_handle_complex_struct_twin_sync(s);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_nested_struct_twin_sync(List<dynamic> s) =>
          wasmModule.wire_handle_nested_struct_twin_sync(s);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_string_twin_sync(String s) =>
          wasmModule.wire_handle_string_twin_sync(s);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_struct_twin_sync(List<dynamic> arg, List<dynamic> boxed) =>
          wasmModule.wire_handle_struct_twin_sync(arg, boxed);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_vec_u8_twin_sync(List<int> v) =>
          wasmModule.wire_handle_vec_u8_twin_sync(v);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_list_of_primitive_enums_twin_sync(List<dynamic> weekdays) =>
          wasmModule.wire_list_of_primitive_enums_twin_sync(weekdays);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_abc_enum_twin_sync(List<dynamic> abc) =>
          wasmModule.wire_test_abc_enum_twin_sync(abc);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_struct_with_enum_twin_sync(List<dynamic> se) =>
          wasmModule.wire_test_struct_with_enum_twin_sync(se);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_big_buffers_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_big_buffers_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_complex_struct_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_complex_struct_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_nested_struct_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_nested_struct_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_string_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_handle_string_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_struct_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_handle_struct_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_vec_u8_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_handle_vec_u8_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_list_of_primitive_enums_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_list_of_primitive_enums_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_abc_enum_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_test_abc_enum_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_struct_with_enum_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_test_struct_with_enum_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_empty_struct_twin_rust_async(
          NativePortType port_, List<dynamic> empty) =>
      wasmModule.wire_empty_struct_twin_rust_async(port_, empty);

  void wire_func_return_unit_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_func_return_unit_twin_rust_async(port_);

  void wire_handle_list_of_struct_twin_rust_async(
          NativePortType port_, List<dynamic> l) =>
      wasmModule.wire_handle_list_of_struct_twin_rust_async(port_, l);

  void wire_handle_string_list_twin_rust_async(
          NativePortType port_, List<dynamic> names) =>
      wasmModule.wire_handle_string_list_twin_rust_async(port_, names);

  void wire_empty_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_empty_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_return_unit_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_return_unit_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_list_of_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_list_of_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_string_list_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_string_list_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_empty_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_empty_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_return_unit_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_return_unit_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_list_of_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_list_of_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_string_list_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_string_list_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_empty_struct_twin_sync(List<dynamic> empty) =>
          wasmModule.wire_empty_struct_twin_sync(empty);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_return_unit_twin_sync() =>
          wasmModule.wire_func_return_unit_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_list_of_struct_twin_sync(List<dynamic> l) =>
          wasmModule.wire_handle_list_of_struct_twin_sync(l);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_string_list_twin_sync(List<dynamic> names) =>
          wasmModule.wire_handle_string_list_twin_sync(names);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_empty_struct_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_empty_struct_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_return_unit_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_func_return_unit_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_list_of_struct_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_list_of_struct_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_string_list_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_string_list_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_handle_newtype_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_handle_newtype_twin_rust_async(port_, arg);

  void wire_handle_newtype_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_newtype_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_newtype_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_newtype_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_newtype_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_handle_newtype_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_newtype_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_handle_newtype_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_primitive_optional_types_twin_rust_async(NativePortType port_,
          int? my_i32, Object? my_i64, double? my_f64, bool? my_bool) =>
      wasmModule.wire_primitive_optional_types_twin_rust_async(
          port_, my_i32, my_i64, my_f64, my_bool);

  void wire_primitive_optional_types_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_primitive_optional_types_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_primitive_optional_types_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_primitive_optional_types_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_primitive_optional_types_twin_sync(
              int? my_i32, Object? my_i64, double? my_f64, bool? my_bool) =>
          wasmModule.wire_primitive_optional_types_twin_sync(
              my_i32, my_i64, my_f64, my_bool);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_primitive_optional_types_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_primitive_optional_types_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_handle_increment_boxed_optional_twin_rust_async(
          NativePortType port_, double? opt) =>
      wasmModule.wire_handle_increment_boxed_optional_twin_rust_async(
          port_, opt);

  void wire_handle_option_box_arguments_twin_rust_async(
          NativePortType port_,
          int? i8box,
          int? u8box,
          int? i32box,
          Object? i64box,
          double? f64box,
          bool? boolbox,
          List<dynamic>? structbox) =>
      wasmModule.wire_handle_option_box_arguments_twin_rust_async(
          port_, i8box, u8box, i32box, i64box, f64box, boolbox, structbox);

  void wire_handle_optional_increment_twin_rust_async(
          NativePortType port_, List<dynamic>? opt) =>
      wasmModule.wire_handle_optional_increment_twin_rust_async(port_, opt);

  void wire_handle_optional_return_twin_rust_async(
          NativePortType port_, double left, double right) =>
      wasmModule.wire_handle_optional_return_twin_rust_async(
          port_, left, right);

  void wire_handle_optional_struct_twin_rust_async(
          NativePortType port_, String? document) =>
      wasmModule.wire_handle_optional_struct_twin_rust_async(port_, document);

  void wire_handle_vec_of_opts_twin_rust_async(
          NativePortType port_, List<dynamic> opt) =>
      wasmModule.wire_handle_vec_of_opts_twin_rust_async(port_, opt);

  void wire_handle_increment_boxed_optional_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_increment_boxed_optional_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_option_box_arguments_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_option_box_arguments_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_optional_increment_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_optional_increment_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_optional_return_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_optional_return_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_optional_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_optional_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_vec_of_opts_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_vec_of_opts_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_increment_boxed_optional_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_increment_boxed_optional_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_option_box_arguments_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_option_box_arguments_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_optional_increment_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_optional_increment_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_optional_return_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_optional_return_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_optional_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_optional_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_vec_of_opts_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_vec_of_opts_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_increment_boxed_optional_twin_sync(double? opt) =>
          wasmModule.wire_handle_increment_boxed_optional_twin_sync(opt);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_option_box_arguments_twin_sync(
              int? i8box,
              int? u8box,
              int? i32box,
              Object? i64box,
              double? f64box,
              bool? boolbox,
              List<dynamic>? structbox) =>
          wasmModule.wire_handle_option_box_arguments_twin_sync(
              i8box, u8box, i32box, i64box, f64box, boolbox, structbox);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_optional_increment_twin_sync(List<dynamic>? opt) =>
          wasmModule.wire_handle_optional_increment_twin_sync(opt);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_optional_return_twin_sync(double left, double right) =>
          wasmModule.wire_handle_optional_return_twin_sync(left, right);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_optional_struct_twin_sync(String? document) =>
          wasmModule.wire_handle_optional_struct_twin_sync(document);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_vec_of_opts_twin_sync(List<dynamic> opt) =>
          wasmModule.wire_handle_vec_of_opts_twin_sync(opt);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_increment_boxed_optional_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_increment_boxed_optional_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_option_box_arguments_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_option_box_arguments_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_optional_increment_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_optional_increment_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_optional_return_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_optional_return_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_optional_struct_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_optional_struct_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_vec_of_opts_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_vec_of_opts_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_handle_vec_of_primitive_twin_rust_async(
          NativePortType port_, int n) =>
      wasmModule.wire_handle_vec_of_primitive_twin_rust_async(port_, n);

  void wire_handle_vec_of_primitive_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_vec_of_primitive_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_vec_of_primitive_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_vec_of_primitive_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_vec_of_primitive_twin_sync(int n) =>
          wasmModule.wire_handle_vec_of_primitive_twin_sync(n);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_vec_of_primitive_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_vec_of_primitive_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_primitive_types_twin_rust_async(NativePortType port_, int my_i32,
          Object my_i64, double my_f64, bool my_bool) =>
      wasmModule.wire_primitive_types_twin_rust_async(
          port_, my_i32, my_i64, my_f64, my_bool);

  void wire_primitive_u32_twin_rust_async(NativePortType port_, int my_u32) =>
      wasmModule.wire_primitive_u32_twin_rust_async(port_, my_u32);

  void wire_primitive_types_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_primitive_types_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_primitive_u32_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_primitive_u32_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_primitive_types_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_primitive_types_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_primitive_u32_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_primitive_u32_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_primitive_types_twin_sync(
              int my_i32, Object my_i64, double my_f64, bool my_bool) =>
          wasmModule.wire_primitive_types_twin_sync(
              my_i32, my_i64, my_f64, my_bool);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_primitive_u32_twin_sync(int my_u32) =>
          wasmModule.wire_primitive_u32_twin_sync(my_u32);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_primitive_types_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_primitive_types_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_primitive_u32_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_primitive_u32_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_test_more_than_just_one_raw_string_struct_twin_rust_async(
          NativePortType port_) =>
      wasmModule.wire_test_more_than_just_one_raw_string_struct_twin_rust_async(
          port_);

  void wire_test_raw_string_item_struct_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_test_raw_string_item_struct_twin_rust_async(port_);

  void wire_test_more_than_just_one_raw_string_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_test_more_than_just_one_raw_string_struct_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_raw_string_item_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_raw_string_item_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_more_than_just_one_raw_string_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_more_than_just_one_raw_string_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_raw_string_item_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_raw_string_item_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_more_than_just_one_raw_string_struct_twin_sync() =>
          wasmModule.wire_test_more_than_just_one_raw_string_struct_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_raw_string_item_struct_twin_sync() =>
          wasmModule.wire_test_raw_string_item_struct_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_more_than_just_one_raw_string_struct_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_test_more_than_just_one_raw_string_struct_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_raw_string_item_struct_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_test_raw_string_item_struct_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinMoi_instance_method_arg_borrow_twin_moi(
          NativePortType port_, Object that) =>
      wasmModule.wire_NonCloneSimpleTwinMoi_instance_method_arg_borrow_twin_moi(
          port_, that);

  void wire_NonCloneSimpleTwinMoi_instance_method_arg_mut_borrow_twin_moi(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinMoi_instance_method_arg_mut_borrow_twin_moi(
              port_, that);

  void wire_NonCloneSimpleTwinMoi_instance_method_arg_own_twin_moi(
          NativePortType port_, Object that) =>
      wasmModule.wire_NonCloneSimpleTwinMoi_instance_method_arg_own_twin_moi(
          port_, that);

  void wire_NonCloneSimpleTwinMoi_instance_method_getter_twin_moi(
          NativePortType port_, Object that) =>
      wasmModule.wire_NonCloneSimpleTwinMoi_instance_method_getter_twin_moi(
          port_, that);

  void wire_NonCloneSimpleTwinMoi_instance_method_return_own_twin_moi(
          NativePortType port_, Object that) =>
      wasmModule.wire_NonCloneSimpleTwinMoi_instance_method_return_own_twin_moi(
          port_, that);

  void wire_NonCloneSimpleTwinMoi_new_custom_name_twin_moi(
          NativePortType port_) =>
      wasmModule.wire_NonCloneSimpleTwinMoi_new_custom_name_twin_moi(port_);

  void wire_NonCloneSimpleTwinMoi_new_twin_moi(NativePortType port_) =>
      wasmModule.wire_NonCloneSimpleTwinMoi_new_twin_moi(port_);

  void wire_NonCloneSimpleTwinMoi_new_with_result_twin_moi(
          NativePortType port_) =>
      wasmModule.wire_NonCloneSimpleTwinMoi_new_with_result_twin_moi(port_);

  void wire_NonCloneSimpleTwinMoi_static_method_arg_borrow_twin_moi(
          NativePortType port_, Object arg) =>
      wasmModule.wire_NonCloneSimpleTwinMoi_static_method_arg_borrow_twin_moi(
          port_, arg);

  void wire_NonCloneSimpleTwinMoi_static_method_arg_mut_borrow_twin_moi(
          NativePortType port_, Object arg) =>
      wasmModule
          .wire_NonCloneSimpleTwinMoi_static_method_arg_mut_borrow_twin_moi(
              port_, arg);

  void wire_NonCloneSimpleTwinMoi_static_method_arg_own_twin_moi(
          NativePortType port_, Object arg) =>
      wasmModule.wire_NonCloneSimpleTwinMoi_static_method_arg_own_twin_moi(
          port_, arg);

  void wire_NonCloneSimpleTwinMoi_static_method_return_own_twin_moi(
          NativePortType port_) =>
      wasmModule
          .wire_NonCloneSimpleTwinMoi_static_method_return_own_twin_moi(port_);

  void wire_rust_auto_opaque_arg_borrow_twin_moi(
          NativePortType port_, Object arg, int expect) =>
      wasmModule.wire_rust_auto_opaque_arg_borrow_twin_moi(port_, arg, expect);

  void wire_rust_auto_opaque_arg_mut_borrow_twin_moi(
          NativePortType port_, Object arg, int expect, int adder) =>
      wasmModule.wire_rust_auto_opaque_arg_mut_borrow_twin_moi(
          port_, arg, expect, adder);

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_moi(
          NativePortType port_, Object arg) =>
      wasmModule.wire_rust_auto_opaque_arg_own_and_return_own_twin_moi(
          port_, arg);

  void wire_rust_auto_opaque_arg_own_twin_moi(
          NativePortType port_, Object arg, int expect) =>
      wasmModule.wire_rust_auto_opaque_arg_own_twin_moi(port_, arg, expect);

  void wire_rust_auto_opaque_arg_vec_own_twin_moi(
          NativePortType port_, List<dynamic> arg, List<int> expect) =>
      wasmModule.wire_rust_auto_opaque_arg_vec_own_twin_moi(port_, arg, expect);

  void wire_rust_auto_opaque_borrow_and_borrow_twin_moi(
          NativePortType port_, Object a, Object b) =>
      wasmModule.wire_rust_auto_opaque_borrow_and_borrow_twin_moi(port_, a, b);

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_moi(
          NativePortType port_, Object borrow, Object mut_borrow) =>
      wasmModule.wire_rust_auto_opaque_borrow_and_mut_borrow_twin_moi(
          port_, borrow, mut_borrow);

  void wire_rust_auto_opaque_callable_arg_twin_moi(
          NativePortType port_, Object arg) =>
      wasmModule.wire_rust_auto_opaque_callable_arg_twin_moi(port_, arg);

  void wire_rust_auto_opaque_callable_return_twin_moi(NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_callable_return_twin_moi(port_);

  void wire_rust_auto_opaque_dummy_twin_moi(
          NativePortType port_, Object a, Object b) =>
      wasmModule.wire_rust_auto_opaque_dummy_twin_moi(port_, a, b);

  void wire_rust_auto_opaque_enum_arg_borrow_twin_moi(
          NativePortType port_, Object arg) =>
      wasmModule.wire_rust_auto_opaque_enum_arg_borrow_twin_moi(port_, arg);

  void wire_rust_auto_opaque_enum_return_own_twin_moi(NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_enum_return_own_twin_moi(port_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_moi(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_moi(
              port_, arg);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_moi(
              port_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_moi(
              port_);

  void wire_rust_auto_opaque_explicit_arg_twin_moi(
          NativePortType port_, Object arg, int expect) =>
      wasmModule.wire_rust_auto_opaque_explicit_arg_twin_moi(
          port_, arg, expect);

  void wire_rust_auto_opaque_explicit_return_twin_moi(
          NativePortType port_, int initial) =>
      wasmModule.wire_rust_auto_opaque_explicit_return_twin_moi(port_, initial);

  void wire_rust_auto_opaque_explicit_struct_twin_moi(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_rust_auto_opaque_explicit_struct_twin_moi(port_, arg);

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_moi(
          NativePortType port_, Object a, String b) =>
      wasmModule.wire_rust_auto_opaque_normal_and_opaque_arg_twin_moi(
          port_, a, b);

  void wire_rust_auto_opaque_plus_sign_arg_twin_moi(
          NativePortType port_, Object arg) =>
      wasmModule.wire_rust_auto_opaque_plus_sign_arg_twin_moi(port_, arg);

  void wire_rust_auto_opaque_plus_sign_return_twin_moi(NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_plus_sign_return_twin_moi(port_);

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_return_opaque_one_and_two_twin_moi(port_);

  void wire_rust_auto_opaque_return_opaque_two_twin_moi(NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_return_opaque_two_twin_moi(port_);

  void wire_rust_auto_opaque_return_own_twin_moi(
          NativePortType port_, int initial) =>
      wasmModule.wire_rust_auto_opaque_return_own_twin_moi(port_, initial);

  void wire_rust_auto_opaque_return_vec_own_twin_moi(NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_return_vec_own_twin_moi(port_);

  void wire_rust_auto_opaque_stream_sink_twin_moi(NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_stream_sink_twin_moi(port_);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_moi(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_moi(
              port_, arg);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_moi(
              port_);

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_moi(
          NativePortType port_, Object arg, String expect) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_borrow_twin_moi(
          port_, arg, expect);

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_moi(
          NativePortType port_, Object arg, String expect) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_moi(
          port_, arg, expect);

  void wire_rust_auto_opaque_trait_object_arg_own_twin_moi(
          NativePortType port_, Object arg, String expect) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_own_twin_moi(
          port_, arg, expect);

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_return_own_one_twin_moi(port_);

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_return_own_two_twin_moi(port_);

  void wire_rust_auto_opaque_two_args_twin_moi(
          NativePortType port_, Object a, Object b) =>
      wasmModule.wire_rust_auto_opaque_two_args_twin_moi(port_, a, b);

  void wire_NonCloneSimpleTwinRustAsync_instance_method_arg_borrow_twin_rust_async(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsync_instance_method_arg_borrow_twin_rust_async(
              port_, that);

  void wire_NonCloneSimpleTwinRustAsync_instance_method_arg_mut_borrow_twin_rust_async(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsync_instance_method_arg_mut_borrow_twin_rust_async(
              port_, that);

  void wire_NonCloneSimpleTwinRustAsync_instance_method_arg_own_twin_rust_async(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsync_instance_method_arg_own_twin_rust_async(
              port_, that);

  void wire_NonCloneSimpleTwinRustAsync_instance_method_getter_twin_rust_async(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsync_instance_method_getter_twin_rust_async(
              port_, that);

  void wire_NonCloneSimpleTwinRustAsync_instance_method_return_own_twin_rust_async(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsync_instance_method_return_own_twin_rust_async(
              port_, that);

  void wire_NonCloneSimpleTwinRustAsync_new_custom_name_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsync_new_custom_name_twin_rust_async(
              port_);

  void wire_NonCloneSimpleTwinRustAsync_new_twin_rust_async(
          NativePortType port_) =>
      wasmModule.wire_NonCloneSimpleTwinRustAsync_new_twin_rust_async(port_);

  void wire_NonCloneSimpleTwinRustAsync_new_with_result_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsync_new_with_result_twin_rust_async(
              port_);

  void wire_NonCloneSimpleTwinRustAsync_static_method_arg_borrow_twin_rust_async(
          NativePortType port_, Object arg) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsync_static_method_arg_borrow_twin_rust_async(
              port_, arg);

  void wire_NonCloneSimpleTwinRustAsync_static_method_arg_mut_borrow_twin_rust_async(
          NativePortType port_, Object arg) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsync_static_method_arg_mut_borrow_twin_rust_async(
              port_, arg);

  void wire_NonCloneSimpleTwinRustAsync_static_method_arg_own_twin_rust_async(
          NativePortType port_, Object arg) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsync_static_method_arg_own_twin_rust_async(
              port_, arg);

  void wire_NonCloneSimpleTwinRustAsync_static_method_return_own_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsync_static_method_return_own_twin_rust_async(
              port_);

  void wire_rust_auto_opaque_arg_borrow_twin_rust_async(
          NativePortType port_, Object arg, int expect) =>
      wasmModule.wire_rust_auto_opaque_arg_borrow_twin_rust_async(
          port_, arg, expect);

  void wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async(
          NativePortType port_, Object arg, int expect, int adder) =>
      wasmModule.wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async(
          port_, arg, expect, adder);

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async(
          NativePortType port_, Object arg) =>
      wasmModule.wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async(
          port_, arg);

  void wire_rust_auto_opaque_arg_own_twin_rust_async(
          NativePortType port_, Object arg, int expect) =>
      wasmModule.wire_rust_auto_opaque_arg_own_twin_rust_async(
          port_, arg, expect);

  void wire_rust_auto_opaque_arg_vec_own_twin_rust_async(
          NativePortType port_, List<dynamic> arg, List<int> expect) =>
      wasmModule.wire_rust_auto_opaque_arg_vec_own_twin_rust_async(
          port_, arg, expect);

  void wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async(
          NativePortType port_, Object a, Object b) =>
      wasmModule.wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async(
          port_, a, b);

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async(
          NativePortType port_, Object borrow, Object mut_borrow) =>
      wasmModule.wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async(
          port_, borrow, mut_borrow);

  void wire_rust_auto_opaque_callable_arg_twin_rust_async(
          NativePortType port_, Object arg) =>
      wasmModule.wire_rust_auto_opaque_callable_arg_twin_rust_async(port_, arg);

  void wire_rust_auto_opaque_callable_return_twin_rust_async(
          NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_callable_return_twin_rust_async(port_);

  void wire_rust_auto_opaque_dummy_twin_rust_async(
          NativePortType port_, Object a, Object b) =>
      wasmModule.wire_rust_auto_opaque_dummy_twin_rust_async(port_, a, b);

  void wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async(
          NativePortType port_, Object arg) =>
      wasmModule.wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async(
          port_, arg);

  void wire_rust_auto_opaque_enum_return_own_twin_rust_async(
          NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_enum_return_own_twin_rust_async(port_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async(
              port_, arg);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async(
              port_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async(
              port_);

  void wire_rust_auto_opaque_explicit_arg_twin_rust_async(
          NativePortType port_, Object arg, int expect) =>
      wasmModule.wire_rust_auto_opaque_explicit_arg_twin_rust_async(
          port_, arg, expect);

  void wire_rust_auto_opaque_explicit_return_twin_rust_async(
          NativePortType port_, int initial) =>
      wasmModule.wire_rust_auto_opaque_explicit_return_twin_rust_async(
          port_, initial);

  void wire_rust_auto_opaque_explicit_struct_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_rust_auto_opaque_explicit_struct_twin_rust_async(
          port_, arg);

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async(
          NativePortType port_, Object a, String b) =>
      wasmModule.wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async(
          port_, a, b);

  void wire_rust_auto_opaque_plus_sign_arg_twin_rust_async(
          NativePortType port_, Object arg) =>
      wasmModule.wire_rust_auto_opaque_plus_sign_arg_twin_rust_async(
          port_, arg);

  void wire_rust_auto_opaque_plus_sign_return_twin_rust_async(
          NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_plus_sign_return_twin_rust_async(port_);

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async(
              port_);

  void wire_rust_auto_opaque_return_opaque_two_twin_rust_async(
          NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_return_opaque_two_twin_rust_async(port_);

  void wire_rust_auto_opaque_return_own_twin_rust_async(
          NativePortType port_, int initial) =>
      wasmModule.wire_rust_auto_opaque_return_own_twin_rust_async(
          port_, initial);

  void wire_rust_auto_opaque_return_vec_own_twin_rust_async(
          NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_return_vec_own_twin_rust_async(port_);

  void wire_rust_auto_opaque_stream_sink_twin_rust_async(
          NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_stream_sink_twin_rust_async(port_);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async(
              port_, arg);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async(
              port_);

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async(
          NativePortType port_, Object arg, String expect) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async(
          port_, arg, expect);

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async(
          NativePortType port_, Object arg, String expect) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async(
              port_, arg, expect);

  void wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async(
          NativePortType port_, Object arg, String expect) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async(
          port_, arg, expect);

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async(
              port_);

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async(
              port_);

  void wire_rust_auto_opaque_two_args_twin_rust_async(
          NativePortType port_, Object a, Object b) =>
      wasmModule.wire_rust_auto_opaque_two_args_twin_rust_async(port_, a, b);

  void wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_borrow_twin_rust_async_moi(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_borrow_twin_rust_async_moi(
              port_, that);

  void wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_mut_borrow_twin_rust_async_moi(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_mut_borrow_twin_rust_async_moi(
              port_, that);

  void wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_own_twin_rust_async_moi(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_own_twin_rust_async_moi(
              port_, that);

  void wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_getter_twin_rust_async_moi(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_getter_twin_rust_async_moi(
              port_, that);

  void wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_return_own_twin_rust_async_moi(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_return_own_twin_rust_async_moi(
              port_, that);

  void wire_NonCloneSimpleTwinRustAsyncMoi_new_custom_name_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncMoi_new_custom_name_twin_rust_async_moi(
              port_);

  void wire_NonCloneSimpleTwinRustAsyncMoi_new_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncMoi_new_twin_rust_async_moi(port_);

  void wire_NonCloneSimpleTwinRustAsyncMoi_new_with_result_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncMoi_new_with_result_twin_rust_async_moi(
              port_);

  void wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_borrow_twin_rust_async_moi(
          NativePortType port_, Object arg) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_borrow_twin_rust_async_moi(
              port_, arg);

  void wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_mut_borrow_twin_rust_async_moi(
          NativePortType port_, Object arg) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_mut_borrow_twin_rust_async_moi(
              port_, arg);

  void wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_own_twin_rust_async_moi(
          NativePortType port_, Object arg) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_own_twin_rust_async_moi(
              port_, arg);

  void wire_NonCloneSimpleTwinRustAsyncMoi_static_method_return_own_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncMoi_static_method_return_own_twin_rust_async_moi(
              port_);

  void wire_rust_auto_opaque_arg_borrow_twin_rust_async_moi(
          NativePortType port_, Object arg, int expect) =>
      wasmModule.wire_rust_auto_opaque_arg_borrow_twin_rust_async_moi(
          port_, arg, expect);

  void wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_moi(
          NativePortType port_, Object arg, int expect, int adder) =>
      wasmModule.wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_moi(
          port_, arg, expect, adder);

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_moi(
          NativePortType port_, Object arg) =>
      wasmModule
          .wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_moi(
              port_, arg);

  void wire_rust_auto_opaque_arg_own_twin_rust_async_moi(
          NativePortType port_, Object arg, int expect) =>
      wasmModule.wire_rust_auto_opaque_arg_own_twin_rust_async_moi(
          port_, arg, expect);

  void wire_rust_auto_opaque_arg_vec_own_twin_rust_async_moi(
          NativePortType port_, List<dynamic> arg, List<int> expect) =>
      wasmModule.wire_rust_auto_opaque_arg_vec_own_twin_rust_async_moi(
          port_, arg, expect);

  void wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_moi(
          NativePortType port_, Object a, Object b) =>
      wasmModule.wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_moi(
          port_, a, b);

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_moi(
          NativePortType port_, Object borrow, Object mut_borrow) =>
      wasmModule
          .wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_moi(
              port_, borrow, mut_borrow);

  void wire_rust_auto_opaque_callable_arg_twin_rust_async_moi(
          NativePortType port_, Object arg) =>
      wasmModule.wire_rust_auto_opaque_callable_arg_twin_rust_async_moi(
          port_, arg);

  void wire_rust_auto_opaque_callable_return_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_callable_return_twin_rust_async_moi(port_);

  void wire_rust_auto_opaque_dummy_twin_rust_async_moi(
          NativePortType port_, Object a, Object b) =>
      wasmModule.wire_rust_auto_opaque_dummy_twin_rust_async_moi(port_, a, b);

  void wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_moi(
          NativePortType port_, Object arg) =>
      wasmModule.wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_moi(
          port_, arg);

  void wire_rust_auto_opaque_enum_return_own_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_return_own_twin_rust_async_moi(port_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_moi(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_moi(
              port_, arg);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_moi(
              port_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_moi(
              port_);

  void wire_rust_auto_opaque_explicit_arg_twin_rust_async_moi(
          NativePortType port_, Object arg, int expect) =>
      wasmModule.wire_rust_auto_opaque_explicit_arg_twin_rust_async_moi(
          port_, arg, expect);

  void wire_rust_auto_opaque_explicit_return_twin_rust_async_moi(
          NativePortType port_, int initial) =>
      wasmModule.wire_rust_auto_opaque_explicit_return_twin_rust_async_moi(
          port_, initial);

  void wire_rust_auto_opaque_explicit_struct_twin_rust_async_moi(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_rust_auto_opaque_explicit_struct_twin_rust_async_moi(
          port_, arg);

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_moi(
          NativePortType port_, Object a, String b) =>
      wasmModule
          .wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_moi(
              port_, a, b);

  void wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_moi(
          NativePortType port_, Object arg) =>
      wasmModule.wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_moi(
          port_, arg);

  void wire_rust_auto_opaque_plus_sign_return_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_plus_sign_return_twin_rust_async_moi(port_);

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_moi(
              port_);

  void wire_rust_auto_opaque_return_opaque_two_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_return_opaque_two_twin_rust_async_moi(port_);

  void wire_rust_auto_opaque_return_own_twin_rust_async_moi(
          NativePortType port_, int initial) =>
      wasmModule.wire_rust_auto_opaque_return_own_twin_rust_async_moi(
          port_, initial);

  void wire_rust_auto_opaque_return_vec_own_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_return_vec_own_twin_rust_async_moi(port_);

  void wire_rust_auto_opaque_stream_sink_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_stream_sink_twin_rust_async_moi(port_);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_moi(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_moi(
              port_, arg);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_moi(
              port_);

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_moi(
          NativePortType port_, Object arg, String expect) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_moi(
              port_, arg, expect);

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_moi(
          NativePortType port_, Object arg, String expect) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_moi(
              port_, arg, expect);

  void wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_moi(
          NativePortType port_, Object arg, String expect) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_moi(
          port_, arg, expect);

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_moi(
              port_);

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_moi(
              port_);

  void wire_rust_auto_opaque_two_args_twin_rust_async_moi(
          NativePortType port_, Object a, Object b) =>
      wasmModule.wire_rust_auto_opaque_two_args_twin_rust_async_moi(
          port_, a, b);

  void wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_borrow_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_mut_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_mut_borrow_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_own_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSse_instance_method_getter_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSse_instance_method_getter_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSse_instance_method_return_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSse_instance_method_return_own_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSse_new_custom_name_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSse_new_custom_name_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSse_new_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_NonCloneSimpleTwinRustAsyncSse_new_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSse_new_with_result_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSse_new_with_result_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_borrow_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_mut_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_mut_borrow_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_own_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSse_static_method_return_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSse_static_method_return_own_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_own_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_callable_arg_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_callable_arg_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_callable_return_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_callable_return_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_dummy_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_dummy_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_explicit_return_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_explicit_return_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_return_own_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_stream_sink_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_stream_sink_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_two_args_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_two_args_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_borrow_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_mut_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_mut_borrow_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_own_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_getter_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_getter_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_return_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_return_own_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSseMoi_new_custom_name_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSseMoi_new_custom_name_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSseMoi_new_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSseMoi_new_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSseMoi_new_with_result_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSseMoi_new_with_result_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_borrow_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_mut_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_mut_borrow_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_own_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_return_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_return_own_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_own_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_callable_arg_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_callable_arg_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_callable_return_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_callable_return_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_dummy_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_dummy_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_explicit_return_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_explicit_return_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_return_own_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_stream_sink_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_stream_sink_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_two_args_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_two_args_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSse_instance_method_getter_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_NonCloneSimpleTwinSse_instance_method_getter_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSse_new_custom_name_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_NonCloneSimpleTwinSse_new_custom_name_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSse_new_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_NonCloneSimpleTwinSse_new_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSse_new_with_result_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_NonCloneSimpleTwinSse_new_with_result_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSse_static_method_return_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_NonCloneSimpleTwinSse_static_method_return_own_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_borrow_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_borrow_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_mut_borrow_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_mut_borrow_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_own_and_return_own_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_own_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_vec_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_vec_own_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_borrow_and_borrow_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_borrow_and_borrow_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_callable_arg_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_callable_arg_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_callable_return_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_callable_return_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_dummy_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_dummy_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_arg_borrow_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_enum_arg_borrow_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_return_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_enum_return_own_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_explicit_arg_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_explicit_arg_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_explicit_return_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_explicit_return_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_explicit_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_explicit_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_plus_sign_arg_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_plus_sign_arg_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_plus_sign_return_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_plus_sign_return_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_opaque_two_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_return_opaque_two_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_return_own_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_vec_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_return_vec_own_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_stream_sink_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_stream_sink_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_arg_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_own_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_trait_object_return_own_one_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_trait_object_return_own_two_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_two_args_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_two_args_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSseMoi_instance_method_arg_borrow_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinSseMoi_instance_method_arg_borrow_twin_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSseMoi_instance_method_arg_mut_borrow_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinSseMoi_instance_method_arg_mut_borrow_twin_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSseMoi_instance_method_arg_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinSseMoi_instance_method_arg_own_twin_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSseMoi_instance_method_getter_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinSseMoi_instance_method_getter_twin_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSseMoi_instance_method_return_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinSseMoi_instance_method_return_own_twin_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSseMoi_new_custom_name_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_NonCloneSimpleTwinSseMoi_new_custom_name_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSseMoi_new_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_NonCloneSimpleTwinSseMoi_new_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSseMoi_new_with_result_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_NonCloneSimpleTwinSseMoi_new_with_result_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSseMoi_static_method_arg_borrow_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinSseMoi_static_method_arg_borrow_twin_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSseMoi_static_method_arg_mut_borrow_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinSseMoi_static_method_arg_mut_borrow_twin_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSseMoi_static_method_arg_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinSseMoi_static_method_arg_own_twin_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_NonCloneSimpleTwinSseMoi_static_method_return_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_NonCloneSimpleTwinSseMoi_static_method_return_own_twin_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_borrow_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_borrow_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_mut_borrow_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_mut_borrow_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_own_and_return_own_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_own_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_arg_vec_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_arg_vec_own_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_borrow_and_borrow_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_borrow_and_borrow_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_callable_arg_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_callable_arg_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_callable_return_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_callable_return_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_dummy_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_dummy_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_arg_borrow_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_enum_arg_borrow_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_return_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_enum_return_own_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_explicit_arg_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_explicit_arg_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_explicit_return_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_explicit_return_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_explicit_struct_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_explicit_struct_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_plus_sign_arg_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_plus_sign_arg_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_plus_sign_return_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_plus_sign_return_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_opaque_two_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_return_opaque_two_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_return_own_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_return_vec_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_return_vec_own_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_stream_sink_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_stream_sink_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse_moi(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_arg_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_own_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_trait_object_return_own_one_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_trait_object_return_own_two_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_two_args_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_two_args_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_sync(
              Object that) =>
          wasmModule
              .wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_sync(
                  that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_sync(
              Object that) =>
          wasmModule
              .wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_sync(
                  that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_sync(
              Object that) =>
          wasmModule
              .wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_sync(
                  that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_instance_method_getter_twin_sync(
              Object that) =>
          wasmModule
              .wire_NonCloneSimpleTwinSync_instance_method_getter_twin_sync(
                  that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_sync(
              Object that) =>
          wasmModule
              .wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_sync(
                  that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_new_custom_name_twin_sync() =>
          wasmModule.wire_NonCloneSimpleTwinSync_new_custom_name_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_new_twin_sync() =>
          wasmModule.wire_NonCloneSimpleTwinSync_new_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_new_with_result_twin_sync() =>
          wasmModule.wire_NonCloneSimpleTwinSync_new_with_result_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_sync(
              Object arg) =>
          wasmModule
              .wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_sync(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_sync(
              Object arg) =>
          wasmModule
              .wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_sync(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_sync(Object arg) =>
          wasmModule
              .wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_static_method_return_own_twin_sync() =>
          wasmModule
              .wire_NonCloneSimpleTwinSync_static_method_return_own_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_borrow_twin_sync(Object arg, int expect) =>
          wasmModule.wire_rust_auto_opaque_arg_borrow_twin_sync(arg, expect);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_mut_borrow_twin_sync(
              Object arg, int expect, int adder) =>
          wasmModule.wire_rust_auto_opaque_arg_mut_borrow_twin_sync(
              arg, expect, adder);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_own_and_return_own_twin_sync(Object arg) =>
          wasmModule
              .wire_rust_auto_opaque_arg_own_and_return_own_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_own_twin_sync(Object arg, int expect) =>
          wasmModule.wire_rust_auto_opaque_arg_own_twin_sync(arg, expect);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_vec_own_twin_sync(
              List<dynamic> arg, List<int> expect) =>
          wasmModule.wire_rust_auto_opaque_arg_vec_own_twin_sync(arg, expect);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_borrow_and_borrow_twin_sync(Object a, Object b) =>
          wasmModule.wire_rust_auto_opaque_borrow_and_borrow_twin_sync(a, b);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync(
              Object borrow, Object mut_borrow) =>
          wasmModule.wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync(
              borrow, mut_borrow);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_callable_arg_twin_sync(Object arg) =>
          wasmModule.wire_rust_auto_opaque_callable_arg_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_callable_return_twin_sync() =>
          wasmModule.wire_rust_auto_opaque_callable_return_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_dummy_twin_sync(Object a, Object b) =>
          wasmModule.wire_rust_auto_opaque_dummy_twin_sync(a, b);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_arg_borrow_twin_sync(Object arg) =>
          wasmModule.wire_rust_auto_opaque_enum_arg_borrow_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_return_own_twin_sync() =>
          wasmModule.wire_rust_auto_opaque_enum_return_own_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync(
              List<dynamic> arg) =>
          wasmModule
              .wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync() =>
          wasmModule
              .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync() =>
          wasmModule
              .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_explicit_arg_twin_sync(Object arg, int expect) =>
          wasmModule.wire_rust_auto_opaque_explicit_arg_twin_sync(arg, expect);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_explicit_return_twin_sync(int initial) =>
          wasmModule.wire_rust_auto_opaque_explicit_return_twin_sync(initial);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_explicit_struct_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_rust_auto_opaque_explicit_struct_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync(
              Object a, String b) =>
          wasmModule.wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync(
              a, b);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_plus_sign_arg_twin_sync(Object arg) =>
          wasmModule.wire_rust_auto_opaque_plus_sign_arg_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_plus_sign_return_twin_sync() =>
          wasmModule.wire_rust_auto_opaque_plus_sign_return_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync() => wasmModule
          .wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_opaque_two_twin_sync() =>
          wasmModule.wire_rust_auto_opaque_return_opaque_two_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_own_twin_sync(int initial) =>
          wasmModule.wire_rust_auto_opaque_return_own_twin_sync(initial);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_vec_own_twin_sync() =>
          wasmModule.wire_rust_auto_opaque_return_vec_own_twin_sync();

  void wire_rust_auto_opaque_stream_sink_twin_sync(NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_stream_sink_twin_sync(port_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync(
              List<dynamic> arg) =>
          wasmModule
              .wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync() =>
          wasmModule
              .wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync(
              Object arg, String expect) =>
          wasmModule.wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync(
              arg, expect);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync(
              Object arg, String expect) =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync(
                  arg, expect);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_arg_own_twin_sync(
              Object arg, String expect) =>
          wasmModule.wire_rust_auto_opaque_trait_object_arg_own_twin_sync(
              arg, expect);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_return_own_one_twin_sync() =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_return_own_one_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_return_own_two_twin_sync() =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_return_own_two_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_two_args_twin_sync(Object a, Object b) =>
          wasmModule.wire_rust_auto_opaque_two_args_twin_sync(a, b);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_borrow_twin_sync_moi(
              Object that) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_borrow_twin_sync_moi(
                  that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_mut_borrow_twin_sync_moi(
              Object that) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_mut_borrow_twin_sync_moi(
                  that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_own_twin_sync_moi(
              Object that) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_own_twin_sync_moi(
                  that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_instance_method_getter_twin_sync_moi(
              Object that) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncMoi_instance_method_getter_twin_sync_moi(
                  that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_instance_method_return_own_twin_sync_moi(
              Object that) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncMoi_instance_method_return_own_twin_sync_moi(
                  that);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_new_custom_name_twin_sync_moi() =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncMoi_new_custom_name_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_new_twin_sync_moi() =>
          wasmModule.wire_NonCloneSimpleTwinSyncMoi_new_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_new_with_result_twin_sync_moi() =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncMoi_new_with_result_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_static_method_arg_borrow_twin_sync_moi(
              Object arg) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncMoi_static_method_arg_borrow_twin_sync_moi(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_static_method_arg_mut_borrow_twin_sync_moi(
              Object arg) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncMoi_static_method_arg_mut_borrow_twin_sync_moi(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_static_method_arg_own_twin_sync_moi(
              Object arg) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncMoi_static_method_arg_own_twin_sync_moi(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_static_method_return_own_twin_sync_moi() =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncMoi_static_method_return_own_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_borrow_twin_sync_moi(Object arg, int expect) =>
          wasmModule.wire_rust_auto_opaque_arg_borrow_twin_sync_moi(
              arg, expect);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_mut_borrow_twin_sync_moi(
              Object arg, int expect, int adder) =>
          wasmModule.wire_rust_auto_opaque_arg_mut_borrow_twin_sync_moi(
              arg, expect, adder);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_moi(Object arg) =>
          wasmModule
              .wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_moi(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_own_twin_sync_moi(Object arg, int expect) =>
          wasmModule.wire_rust_auto_opaque_arg_own_twin_sync_moi(arg, expect);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_vec_own_twin_sync_moi(
              List<dynamic> arg, List<int> expect) =>
          wasmModule.wire_rust_auto_opaque_arg_vec_own_twin_sync_moi(
              arg, expect);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_borrow_and_borrow_twin_sync_moi(
              Object a, Object b) =>
          wasmModule.wire_rust_auto_opaque_borrow_and_borrow_twin_sync_moi(
              a, b);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_moi(
              Object borrow, Object mut_borrow) =>
          wasmModule.wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_moi(
              borrow, mut_borrow);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_callable_arg_twin_sync_moi(Object arg) =>
          wasmModule.wire_rust_auto_opaque_callable_arg_twin_sync_moi(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_callable_return_twin_sync_moi() =>
          wasmModule.wire_rust_auto_opaque_callable_return_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_dummy_twin_sync_moi(Object a, Object b) =>
          wasmModule.wire_rust_auto_opaque_dummy_twin_sync_moi(a, b);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_arg_borrow_twin_sync_moi(Object arg) =>
          wasmModule.wire_rust_auto_opaque_enum_arg_borrow_twin_sync_moi(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_return_own_twin_sync_moi() =>
          wasmModule.wire_rust_auto_opaque_enum_return_own_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_moi(
              List<dynamic> arg) =>
          wasmModule
              .wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_moi(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_moi() =>
          wasmModule
              .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_moi() =>
          wasmModule
              .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_explicit_arg_twin_sync_moi(
              Object arg, int expect) =>
          wasmModule.wire_rust_auto_opaque_explicit_arg_twin_sync_moi(
              arg, expect);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_explicit_return_twin_sync_moi(int initial) =>
          wasmModule
              .wire_rust_auto_opaque_explicit_return_twin_sync_moi(initial);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_explicit_struct_twin_sync_moi(List<dynamic> arg) =>
          wasmModule.wire_rust_auto_opaque_explicit_struct_twin_sync_moi(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_moi(
              Object a, String b) =>
          wasmModule.wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_moi(
              a, b);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_plus_sign_arg_twin_sync_moi(Object arg) =>
          wasmModule.wire_rust_auto_opaque_plus_sign_arg_twin_sync_moi(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_plus_sign_return_twin_sync_moi() =>
          wasmModule.wire_rust_auto_opaque_plus_sign_return_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_moi() =>
          wasmModule
              .wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_opaque_two_twin_sync_moi() =>
          wasmModule.wire_rust_auto_opaque_return_opaque_two_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_own_twin_sync_moi(int initial) =>
          wasmModule.wire_rust_auto_opaque_return_own_twin_sync_moi(initial);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_vec_own_twin_sync_moi() =>
          wasmModule.wire_rust_auto_opaque_return_vec_own_twin_sync_moi();

  void wire_rust_auto_opaque_stream_sink_twin_sync_moi(NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_stream_sink_twin_sync_moi(port_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_moi(
              List<dynamic> arg) =>
          wasmModule
              .wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_moi(
                  arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_moi() =>
          wasmModule
              .wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_moi(
              Object arg, String expect) =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_moi(
                  arg, expect);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_moi(
              Object arg, String expect) =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_moi(
                  arg, expect);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_arg_own_twin_sync_moi(
              Object arg, String expect) =>
          wasmModule.wire_rust_auto_opaque_trait_object_arg_own_twin_sync_moi(
              arg, expect);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_moi() =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_moi() =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_two_args_twin_sync_moi(Object a, Object b) =>
          wasmModule.wire_rust_auto_opaque_two_args_twin_sync_moi(a, b);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_instance_method_getter_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSse_instance_method_getter_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_new_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_NonCloneSimpleTwinSyncSse_new_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_borrow_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_arg_borrow_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_own_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_arg_own_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_vec_own_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_arg_vec_own_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_callable_arg_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_callable_arg_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_callable_return_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_callable_return_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_dummy_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_dummy_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_return_own_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_enum_return_own_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_explicit_arg_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_explicit_arg_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_explicit_return_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_explicit_return_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_explicit_struct_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_explicit_struct_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_plus_sign_return_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_plus_sign_return_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_opaque_two_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_return_opaque_two_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_own_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_return_own_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_vec_own_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_return_vec_own_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_stream_sink_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_stream_sink_twin_sync_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_two_args_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_two_args_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_borrow_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_borrow_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_mut_borrow_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_mut_borrow_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_own_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_own_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_instance_method_getter_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSseMoi_instance_method_getter_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_instance_method_return_own_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSseMoi_instance_method_return_own_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_new_custom_name_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSseMoi_new_custom_name_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_new_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_NonCloneSimpleTwinSyncSseMoi_new_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_new_with_result_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSseMoi_new_with_result_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_borrow_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_borrow_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_mut_borrow_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_mut_borrow_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_own_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_own_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_static_method_return_own_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_NonCloneSimpleTwinSyncSseMoi_static_method_return_own_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_borrow_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_arg_borrow_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_own_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_arg_own_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_vec_own_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_arg_vec_own_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_callable_arg_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_callable_arg_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_callable_return_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_callable_return_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_dummy_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_dummy_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_return_own_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_enum_return_own_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_explicit_arg_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_explicit_arg_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_explicit_return_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_explicit_return_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_explicit_struct_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_explicit_struct_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_plus_sign_return_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_plus_sign_return_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_opaque_two_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_return_opaque_two_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_own_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_return_own_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_vec_own_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_return_vec_own_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  void wire_rust_auto_opaque_stream_sink_twin_sync_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_rust_auto_opaque_stream_sink_twin_sync_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule
              .wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse_moi(
                  ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_two_args_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_rust_auto_opaque_two_args_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_frb_sync_generator_test_twin_moi() =>
          wasmModule.wire_frb_sync_generator_test_twin_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_create_non_clone_twin_moi() =>
          wasmModule.wire_sync_create_non_clone_twin_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_create_opaque_twin_moi() =>
          wasmModule.wire_sync_create_opaque_twin_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_option_rust_opaque_twin_moi() =>
          wasmModule.wire_sync_option_rust_opaque_twin_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_frb_sync_generator_test_twin_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_frb_sync_generator_test_twin_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_create_non_clone_twin_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_sync_create_non_clone_twin_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_create_opaque_twin_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_sync_create_opaque_twin_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_option_rust_opaque_twin_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_sync_option_rust_opaque_twin_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_frb_sync_generator_test_twin_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_frb_sync_generator_test_twin_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_create_non_clone_twin_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_sync_create_non_clone_twin_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_create_opaque_twin_sse_moi(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_sync_create_opaque_twin_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_option_rust_opaque_twin_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_sync_option_rust_opaque_twin_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  void wire_create_array_opaque_enum_twin_moi(NativePortType port_) =>
      wasmModule.wire_create_array_opaque_enum_twin_moi(port_);

  void wire_create_nested_opaque_twin_moi(NativePortType port_) =>
      wasmModule.wire_create_nested_opaque_twin_moi(port_);

  void wire_create_opaque_twin_moi(NativePortType port_) =>
      wasmModule.wire_create_opaque_twin_moi(port_);

  void wire_create_option_opaque_twin_moi(
          NativePortType port_, Object? opaque) =>
      wasmModule.wire_create_option_opaque_twin_moi(port_, opaque);

  void wire_frb_generator_test_twin_moi(NativePortType port_) =>
      wasmModule.wire_frb_generator_test_twin_moi(port_);

  void wire_opaque_array_run_twin_moi(
          NativePortType port_, List<dynamic> data) =>
      wasmModule.wire_opaque_array_run_twin_moi(port_, data);

  void wire_opaque_array_twin_moi(NativePortType port_) =>
      wasmModule.wire_opaque_array_twin_moi(port_);

  void wire_opaque_vec_run_twin_moi(NativePortType port_, List<dynamic> data) =>
      wasmModule.wire_opaque_vec_run_twin_moi(port_, data);

  void wire_opaque_vec_twin_moi(NativePortType port_) =>
      wasmModule.wire_opaque_vec_twin_moi(port_);

  void wire_run_enum_opaque_twin_moi(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_run_enum_opaque_twin_moi(port_, opaque);

  void wire_run_nested_opaque_twin_moi(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_run_nested_opaque_twin_moi(port_, opaque);

  void wire_run_non_clone_twin_moi(NativePortType port_, Object clone) =>
      wasmModule.wire_run_non_clone_twin_moi(port_, clone);

  void wire_run_opaque_twin_moi(NativePortType port_, Object opaque) =>
      wasmModule.wire_run_opaque_twin_moi(port_, opaque);

  void wire_run_opaque_with_delay_twin_moi(
          NativePortType port_, Object opaque) =>
      wasmModule.wire_run_opaque_with_delay_twin_moi(port_, opaque);

  void wire_unwrap_rust_opaque_twin_moi(NativePortType port_, Object opaque) =>
      wasmModule.wire_unwrap_rust_opaque_twin_moi(port_, opaque);

  void wire_create_array_opaque_enum_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_create_array_opaque_enum_twin_rust_async(port_);

  void wire_create_nested_opaque_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_create_nested_opaque_twin_rust_async(port_);

  void wire_create_opaque_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_create_opaque_twin_rust_async(port_);

  void wire_create_option_opaque_twin_rust_async(
          NativePortType port_, Object? opaque) =>
      wasmModule.wire_create_option_opaque_twin_rust_async(port_, opaque);

  void wire_frb_generator_test_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_frb_generator_test_twin_rust_async(port_);

  void wire_opaque_array_run_twin_rust_async(
          NativePortType port_, List<dynamic> data) =>
      wasmModule.wire_opaque_array_run_twin_rust_async(port_, data);

  void wire_opaque_array_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_opaque_array_twin_rust_async(port_);

  void wire_opaque_vec_run_twin_rust_async(
          NativePortType port_, List<dynamic> data) =>
      wasmModule.wire_opaque_vec_run_twin_rust_async(port_, data);

  void wire_opaque_vec_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_opaque_vec_twin_rust_async(port_);

  void wire_run_enum_opaque_twin_rust_async(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_run_enum_opaque_twin_rust_async(port_, opaque);

  void wire_run_nested_opaque_twin_rust_async(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_run_nested_opaque_twin_rust_async(port_, opaque);

  void wire_run_non_clone_twin_rust_async(NativePortType port_, Object clone) =>
      wasmModule.wire_run_non_clone_twin_rust_async(port_, clone);

  void wire_run_opaque_twin_rust_async(NativePortType port_, Object opaque) =>
      wasmModule.wire_run_opaque_twin_rust_async(port_, opaque);

  void wire_run_opaque_with_delay_twin_rust_async(
          NativePortType port_, Object opaque) =>
      wasmModule.wire_run_opaque_with_delay_twin_rust_async(port_, opaque);

  void wire_unwrap_rust_opaque_twin_rust_async(
          NativePortType port_, Object opaque) =>
      wasmModule.wire_unwrap_rust_opaque_twin_rust_async(port_, opaque);

  void wire_create_array_opaque_enum_twin_rust_async_moi(
          NativePortType port_) =>
      wasmModule.wire_create_array_opaque_enum_twin_rust_async_moi(port_);

  void wire_create_nested_opaque_twin_rust_async_moi(NativePortType port_) =>
      wasmModule.wire_create_nested_opaque_twin_rust_async_moi(port_);

  void wire_create_opaque_twin_rust_async_moi(NativePortType port_) =>
      wasmModule.wire_create_opaque_twin_rust_async_moi(port_);

  void wire_create_option_opaque_twin_rust_async_moi(
          NativePortType port_, Object? opaque) =>
      wasmModule.wire_create_option_opaque_twin_rust_async_moi(port_, opaque);

  void wire_frb_generator_test_twin_rust_async_moi(NativePortType port_) =>
      wasmModule.wire_frb_generator_test_twin_rust_async_moi(port_);

  void wire_opaque_array_run_twin_rust_async_moi(
          NativePortType port_, List<dynamic> data) =>
      wasmModule.wire_opaque_array_run_twin_rust_async_moi(port_, data);

  void wire_opaque_array_twin_rust_async_moi(NativePortType port_) =>
      wasmModule.wire_opaque_array_twin_rust_async_moi(port_);

  void wire_opaque_vec_run_twin_rust_async_moi(
          NativePortType port_, List<dynamic> data) =>
      wasmModule.wire_opaque_vec_run_twin_rust_async_moi(port_, data);

  void wire_opaque_vec_twin_rust_async_moi(NativePortType port_) =>
      wasmModule.wire_opaque_vec_twin_rust_async_moi(port_);

  void wire_run_enum_opaque_twin_rust_async_moi(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_run_enum_opaque_twin_rust_async_moi(port_, opaque);

  void wire_run_nested_opaque_twin_rust_async_moi(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_run_nested_opaque_twin_rust_async_moi(port_, opaque);

  void wire_run_non_clone_twin_rust_async_moi(
          NativePortType port_, Object clone) =>
      wasmModule.wire_run_non_clone_twin_rust_async_moi(port_, clone);

  void wire_run_opaque_twin_rust_async_moi(
          NativePortType port_, Object opaque) =>
      wasmModule.wire_run_opaque_twin_rust_async_moi(port_, opaque);

  void wire_run_opaque_with_delay_twin_rust_async_moi(
          NativePortType port_, Object opaque) =>
      wasmModule.wire_run_opaque_with_delay_twin_rust_async_moi(port_, opaque);

  void wire_unwrap_rust_opaque_twin_rust_async_moi(
          NativePortType port_, Object opaque) =>
      wasmModule.wire_unwrap_rust_opaque_twin_rust_async_moi(port_, opaque);

  void wire_create_array_opaque_enum_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_array_opaque_enum_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_nested_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_nested_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_option_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_option_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_frb_generator_test_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_frb_generator_test_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_array_run_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_array_run_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_array_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_array_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_vec_run_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_vec_run_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_vec_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_vec_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_enum_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_enum_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_nested_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_nested_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_non_clone_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_non_clone_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_opaque_with_delay_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_opaque_with_delay_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_unwrap_rust_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_unwrap_rust_opaque_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_array_opaque_enum_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_array_opaque_enum_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_nested_opaque_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_nested_opaque_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_opaque_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_opaque_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_option_opaque_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_option_opaque_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_frb_generator_test_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_frb_generator_test_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_array_run_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_array_run_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_array_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_array_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_vec_run_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_vec_run_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_vec_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_vec_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_enum_opaque_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_enum_opaque_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_nested_opaque_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_nested_opaque_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_non_clone_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_non_clone_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_opaque_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_opaque_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_opaque_with_delay_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_opaque_with_delay_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_unwrap_rust_opaque_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_unwrap_rust_opaque_twin_rust_async_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_array_opaque_enum_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_array_opaque_enum_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_nested_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_nested_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_option_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_option_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_frb_generator_test_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_frb_generator_test_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_array_run_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_array_run_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_array_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_array_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_vec_run_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_vec_run_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_vec_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_vec_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_enum_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_enum_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_nested_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_nested_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_non_clone_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_non_clone_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_opaque_with_delay_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_opaque_with_delay_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_unwrap_rust_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_unwrap_rust_opaque_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_array_opaque_enum_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_array_opaque_enum_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_nested_opaque_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_nested_opaque_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_opaque_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_opaque_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_create_option_opaque_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_create_option_opaque_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_frb_generator_test_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_frb_generator_test_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_array_run_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_array_run_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_array_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_array_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_vec_run_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_vec_run_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_opaque_vec_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_opaque_vec_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_enum_opaque_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_enum_opaque_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_nested_opaque_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_nested_opaque_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_non_clone_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_non_clone_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_opaque_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_opaque_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_run_opaque_with_delay_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_run_opaque_with_delay_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_unwrap_rust_opaque_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_unwrap_rust_opaque_twin_sse_moi(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_array_opaque_enum_twin_sync() =>
          wasmModule.wire_create_array_opaque_enum_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_nested_opaque_twin_sync() =>
          wasmModule.wire_create_nested_opaque_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_opaque_twin_sync() =>
          wasmModule.wire_create_opaque_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_option_opaque_twin_sync(Object? opaque) =>
          wasmModule.wire_create_option_opaque_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_frb_generator_test_twin_sync() =>
          wasmModule.wire_frb_generator_test_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_array_run_twin_sync(List<dynamic> data) =>
          wasmModule.wire_opaque_array_run_twin_sync(data);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_array_twin_sync() => wasmModule.wire_opaque_array_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_vec_run_twin_sync(List<dynamic> data) =>
          wasmModule.wire_opaque_vec_run_twin_sync(data);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_vec_twin_sync() => wasmModule.wire_opaque_vec_twin_sync();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_enum_opaque_twin_sync(List<dynamic> opaque) =>
          wasmModule.wire_run_enum_opaque_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_nested_opaque_twin_sync(List<dynamic> opaque) =>
          wasmModule.wire_run_nested_opaque_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_non_clone_twin_sync(Object clone) =>
          wasmModule.wire_run_non_clone_twin_sync(clone);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_opaque_twin_sync(Object opaque) =>
          wasmModule.wire_run_opaque_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_opaque_with_delay_twin_sync(Object opaque) =>
          wasmModule.wire_run_opaque_with_delay_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_unwrap_rust_opaque_twin_sync(Object opaque) =>
          wasmModule.wire_unwrap_rust_opaque_twin_sync(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_array_opaque_enum_twin_sync_moi() =>
          wasmModule.wire_create_array_opaque_enum_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_nested_opaque_twin_sync_moi() =>
          wasmModule.wire_create_nested_opaque_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_opaque_twin_sync_moi() =>
          wasmModule.wire_create_opaque_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_option_opaque_twin_sync_moi(Object? opaque) =>
          wasmModule.wire_create_option_opaque_twin_sync_moi(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_frb_generator_test_twin_sync_moi() =>
          wasmModule.wire_frb_generator_test_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_array_run_twin_sync_moi(List<dynamic> data) =>
          wasmModule.wire_opaque_array_run_twin_sync_moi(data);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_array_twin_sync_moi() =>
          wasmModule.wire_opaque_array_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_vec_run_twin_sync_moi(List<dynamic> data) =>
          wasmModule.wire_opaque_vec_run_twin_sync_moi(data);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_vec_twin_sync_moi() =>
          wasmModule.wire_opaque_vec_twin_sync_moi();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_enum_opaque_twin_sync_moi(List<dynamic> opaque) =>
          wasmModule.wire_run_enum_opaque_twin_sync_moi(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_nested_opaque_twin_sync_moi(List<dynamic> opaque) =>
          wasmModule.wire_run_nested_opaque_twin_sync_moi(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_non_clone_twin_sync_moi(Object clone) =>
          wasmModule.wire_run_non_clone_twin_sync_moi(clone);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_opaque_twin_sync_moi(Object opaque) =>
          wasmModule.wire_run_opaque_twin_sync_moi(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_opaque_with_delay_twin_sync_moi(Object opaque) =>
          wasmModule.wire_run_opaque_with_delay_twin_sync_moi(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_unwrap_rust_opaque_twin_sync_moi(Object opaque) =>
          wasmModule.wire_unwrap_rust_opaque_twin_sync_moi(opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_array_opaque_enum_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_create_array_opaque_enum_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_nested_opaque_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_create_nested_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_opaque_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_create_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_option_opaque_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_create_option_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_frb_generator_test_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_frb_generator_test_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_array_run_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_opaque_array_run_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_array_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_opaque_array_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_vec_run_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_opaque_vec_run_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_vec_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_opaque_vec_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_enum_opaque_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_run_enum_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_nested_opaque_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_run_nested_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_non_clone_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_run_non_clone_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_opaque_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_run_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_opaque_with_delay_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_run_opaque_with_delay_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_unwrap_rust_opaque_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_unwrap_rust_opaque_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_array_opaque_enum_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_create_array_opaque_enum_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_nested_opaque_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_create_nested_opaque_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_opaque_twin_sync_sse_moi(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_create_opaque_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_option_opaque_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_create_option_opaque_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_frb_generator_test_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_frb_generator_test_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_array_run_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_opaque_array_run_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_array_twin_sync_sse_moi(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_opaque_array_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_vec_run_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_opaque_vec_run_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_vec_twin_sync_sse_moi(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_opaque_vec_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_enum_opaque_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_run_enum_opaque_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_nested_opaque_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_run_nested_opaque_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_non_clone_twin_sync_sse_moi(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_run_non_clone_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_opaque_twin_sync_sse_moi(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_run_opaque_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_opaque_with_delay_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_run_opaque_with_delay_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_unwrap_rust_opaque_twin_sync_sse_moi(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_unwrap_rust_opaque_twin_sync_sse_moi(
              ptr_, rust_vec_len_, data_len_);

  void wire_simple_adder_twin_rust_async(NativePortType port_, int a, int b) =>
      wasmModule.wire_simple_adder_twin_rust_async(port_, a, b);

  void wire_simple_adder_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_simple_adder_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_simple_adder_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_simple_adder_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_simple_adder_twin_sync(int a, int b) =>
          wasmModule.wire_simple_adder_twin_sync(a, b);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_simple_adder_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_simple_adder_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_func_stream_realistic_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_stream_realistic_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_stream_return_error_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_func_stream_return_error_twin_rust_async(port_);

  void wire_func_stream_return_panic_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_func_stream_return_panic_twin_rust_async(port_);

  void wire_func_stream_sink_arg_position_twin_rust_async(
          NativePortType port_, int a, int b) =>
      wasmModule.wire_func_stream_sink_arg_position_twin_rust_async(
          port_, a, b);

  void wire_handle_stream_of_struct_twin_rust_async(NativePortType port_) =>
      wasmModule.wire_handle_stream_of_struct_twin_rust_async(port_);

  void wire_handle_stream_sink_at_1_twin_rust_async(
          NativePortType port_, int key, int max) =>
      wasmModule.wire_handle_stream_sink_at_1_twin_rust_async(port_, key, max);

  void wire_handle_stream_sink_at_2_twin_rust_async(
          NativePortType port_, int key, int max) =>
      wasmModule.wire_handle_stream_sink_at_2_twin_rust_async(port_, key, max);

  void wire_handle_stream_sink_at_3_twin_rust_async(
          NativePortType port_, int key, int max) =>
      wasmModule.wire_handle_stream_sink_at_3_twin_rust_async(port_, key, max);

  void wire_stream_sink_fixed_sized_primitive_array_twin_rust_async(
          NativePortType port_) =>
      wasmModule
          .wire_stream_sink_fixed_sized_primitive_array_twin_rust_async(port_);

  void wire_func_stream_return_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_stream_return_error_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_stream_return_panic_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_stream_return_panic_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_stream_sink_arg_position_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_stream_sink_arg_position_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_stream_of_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_stream_of_struct_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_stream_sink_at_1_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_stream_sink_at_1_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_stream_sink_at_2_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_stream_sink_at_2_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_stream_sink_at_3_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_stream_sink_at_3_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_stream_sink_fixed_sized_primitive_array_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule
          .wire_stream_sink_fixed_sized_primitive_array_twin_rust_async_sse(
              port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_stream_return_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_stream_return_error_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_stream_return_panic_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_stream_return_panic_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_stream_sink_arg_position_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_stream_sink_arg_position_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_stream_of_struct_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_stream_of_struct_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_stream_sink_at_1_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_stream_sink_at_1_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_stream_sink_at_2_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_stream_sink_at_2_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_stream_sink_at_3_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_stream_sink_at_3_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_stream_sink_fixed_sized_primitive_array_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_stream_sink_fixed_sized_primitive_array_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_struct_with_one_field_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_struct_with_one_field_twin_rust_async(port_, arg);

  void wire_func_struct_with_two_field_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_struct_with_two_field_twin_rust_async(port_, arg);

  void wire_func_struct_with_zero_field_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_struct_with_zero_field_twin_rust_async(port_, arg);

  void wire_func_tuple_struct_with_one_field_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_tuple_struct_with_one_field_twin_rust_async(
          port_, arg);

  void wire_func_tuple_struct_with_two_field_twin_rust_async(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_tuple_struct_with_two_field_twin_rust_async(
          port_, arg);

  void wire_func_struct_with_one_field_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_struct_with_one_field_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_struct_with_two_field_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_struct_with_two_field_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_struct_with_zero_field_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_struct_with_zero_field_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_tuple_struct_with_one_field_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_tuple_struct_with_one_field_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_tuple_struct_with_two_field_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_tuple_struct_with_two_field_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_struct_with_one_field_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_struct_with_one_field_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_struct_with_two_field_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_struct_with_two_field_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_struct_with_zero_field_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_struct_with_zero_field_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_tuple_struct_with_one_field_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_tuple_struct_with_one_field_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_func_tuple_struct_with_two_field_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_func_tuple_struct_with_two_field_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_struct_with_one_field_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_func_struct_with_one_field_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_struct_with_two_field_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_func_struct_with_two_field_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_struct_with_zero_field_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_func_struct_with_zero_field_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_tuple_struct_with_one_field_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_func_tuple_struct_with_one_field_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_tuple_struct_with_two_field_twin_sync(List<dynamic> arg) =>
          wasmModule.wire_func_tuple_struct_with_two_field_twin_sync(arg);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_struct_with_one_field_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_struct_with_one_field_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_struct_with_two_field_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_struct_with_two_field_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_struct_with_zero_field_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_struct_with_zero_field_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_tuple_struct_with_one_field_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_tuple_struct_with_one_field_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_tuple_struct_with_two_field_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_func_tuple_struct_with_two_field_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_test_tuple_2_twin_rust_async(
          NativePortType port_, List<dynamic> value) =>
      wasmModule.wire_test_tuple_2_twin_rust_async(port_, value);

  void wire_test_tuple_twin_rust_async(
          NativePortType port_, List<dynamic>? value) =>
      wasmModule.wire_test_tuple_twin_rust_async(port_, value);

  void wire_test_tuple_2_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_tuple_2_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_tuple_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_tuple_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_tuple_2_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_tuple_2_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_test_tuple_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_test_tuple_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_tuple_2_twin_sync(List<dynamic> value) =>
          wasmModule.wire_test_tuple_2_twin_sync(value);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_tuple_twin_sync(List<dynamic>? value) =>
          wasmModule.wire_test_tuple_twin_sync(value);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_tuple_2_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_test_tuple_2_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_tuple_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_test_tuple_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_handle_type_alias_id_twin_rust_async(
          NativePortType port_, Object input) =>
      wasmModule.wire_handle_type_alias_id_twin_rust_async(port_, input);

  void wire_handle_type_alias_model_twin_rust_async(
          NativePortType port_, Object input) =>
      wasmModule.wire_handle_type_alias_model_twin_rust_async(port_, input);

  void wire_handle_type_nest_alias_id_twin_rust_async(
          NativePortType port_, Object input) =>
      wasmModule.wire_handle_type_nest_alias_id_twin_rust_async(port_, input);

  void wire_handle_type_alias_id_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_type_alias_id_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_type_alias_model_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_type_alias_model_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_type_nest_alias_id_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_type_nest_alias_id_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_type_alias_id_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_type_alias_id_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_type_alias_model_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_type_alias_model_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_type_nest_alias_id_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_type_nest_alias_id_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_type_alias_id_twin_sync(Object input) =>
          wasmModule.wire_handle_type_alias_id_twin_sync(input);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_type_alias_model_twin_sync(Object input) =>
          wasmModule.wire_handle_type_alias_model_twin_sync(input);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_type_nest_alias_id_twin_sync(Object input) =>
          wasmModule.wire_handle_type_nest_alias_id_twin_sync(input);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_type_alias_id_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_type_alias_id_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_type_alias_model_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_type_alias_model_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_type_nest_alias_id_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_type_nest_alias_id_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_handle_nested_uuids_twin_rust_async(
          NativePortType port_, List<dynamic> ids) =>
      wasmModule.wire_handle_nested_uuids_twin_rust_async(port_, ids);

  void wire_handle_uuid_twin_rust_async(NativePortType port_, Uint8List id) =>
      wasmModule.wire_handle_uuid_twin_rust_async(port_, id);

  void wire_handle_uuids_twin_rust_async(
          NativePortType port_, List<dynamic> ids) =>
      wasmModule.wire_handle_uuids_twin_rust_async(port_, ids);

  void wire_handle_nested_uuids_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_nested_uuids_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_uuid_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_uuid_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_uuids_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_uuids_twin_rust_async_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_nested_uuids_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_nested_uuids_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_uuid_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_uuid_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  void wire_handle_uuids_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_) =>
      wasmModule.wire_handle_uuids_twin_sse(
          port_, ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_nested_uuids_twin_sync(List<dynamic> ids) =>
          wasmModule.wire_handle_nested_uuids_twin_sync(ids);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_uuid_twin_sync(Uint8List id) =>
          wasmModule.wire_handle_uuid_twin_sync(id);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_uuids_twin_sync(List<dynamic> ids) =>
          wasmModule.wire_handle_uuids_twin_sync(ids);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_nested_uuids_twin_sync_sse(
              PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_,
              int data_len_) =>
          wasmModule.wire_handle_nested_uuids_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_uuid_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_handle_uuid_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_uuids_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
              int rust_vec_len_, int data_len_) =>
          wasmModule.wire_handle_uuids_twin_sync_sse(
              ptr_, rust_vec_len_, data_len_);

  void wire_test_more_than_just_one_raw_string_struct_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_test_more_than_just_one_raw_string_struct_twin_normal(port_);

  void wire_test_raw_string_item_struct_twin_normal(NativePortType port_) =>
      wasmModule.wire_test_raw_string_item_struct_twin_normal(port_);

  void wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normal(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normal(
              port_, that);

  void wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normal(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normal(
              port_, that);

  void wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normal(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normal(
              port_, that);

  void wire_NonCloneSimpleTwinNormal_instance_method_getter_twin_normal(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinNormal_instance_method_getter_twin_normal(
              port_, that);

  void wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normal(
          NativePortType port_, Object that) =>
      wasmModule
          .wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normal(
              port_, that);

  void wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normal(port_);

  void wire_NonCloneSimpleTwinNormal_new_twin_normal(NativePortType port_) =>
      wasmModule.wire_NonCloneSimpleTwinNormal_new_twin_normal(port_);

  void wire_NonCloneSimpleTwinNormal_new_with_result_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_NonCloneSimpleTwinNormal_new_with_result_twin_normal(port_);

  void wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normal(
          NativePortType port_, Object arg) =>
      wasmModule
          .wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normal(
              port_, arg);

  void wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normal(
          NativePortType port_, Object arg) =>
      wasmModule
          .wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normal(
              port_, arg);

  void wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normal(
          NativePortType port_, Object arg) =>
      wasmModule
          .wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normal(
              port_, arg);

  void wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normal(
              port_);

  void wire_rust_auto_opaque_arg_borrow_twin_normal(
          NativePortType port_, Object arg, int expect) =>
      wasmModule.wire_rust_auto_opaque_arg_borrow_twin_normal(
          port_, arg, expect);

  void wire_rust_auto_opaque_arg_mut_borrow_twin_normal(
          NativePortType port_, Object arg, int expect, int adder) =>
      wasmModule.wire_rust_auto_opaque_arg_mut_borrow_twin_normal(
          port_, arg, expect, adder);

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_normal(
          NativePortType port_, Object arg) =>
      wasmModule.wire_rust_auto_opaque_arg_own_and_return_own_twin_normal(
          port_, arg);

  void wire_rust_auto_opaque_arg_own_twin_normal(
          NativePortType port_, Object arg, int expect) =>
      wasmModule.wire_rust_auto_opaque_arg_own_twin_normal(port_, arg, expect);

  void wire_rust_auto_opaque_arg_vec_own_twin_normal(
          NativePortType port_, List<dynamic> arg, List<int> expect) =>
      wasmModule.wire_rust_auto_opaque_arg_vec_own_twin_normal(
          port_, arg, expect);

  void wire_rust_auto_opaque_borrow_and_borrow_twin_normal(
          NativePortType port_, Object a, Object b) =>
      wasmModule.wire_rust_auto_opaque_borrow_and_borrow_twin_normal(
          port_, a, b);

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_normal(
          NativePortType port_, Object borrow, Object mut_borrow) =>
      wasmModule.wire_rust_auto_opaque_borrow_and_mut_borrow_twin_normal(
          port_, borrow, mut_borrow);

  void wire_rust_auto_opaque_callable_arg_twin_normal(
          NativePortType port_, Object arg) =>
      wasmModule.wire_rust_auto_opaque_callable_arg_twin_normal(port_, arg);

  void wire_rust_auto_opaque_callable_return_twin_normal(
          NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_callable_return_twin_normal(port_);

  void wire_rust_auto_opaque_dummy_twin_normal(
          NativePortType port_, Object a, Object b) =>
      wasmModule.wire_rust_auto_opaque_dummy_twin_normal(port_, a, b);

  void wire_rust_auto_opaque_enum_arg_borrow_twin_normal(
          NativePortType port_, Object arg) =>
      wasmModule.wire_rust_auto_opaque_enum_arg_borrow_twin_normal(port_, arg);

  void wire_rust_auto_opaque_enum_return_own_twin_normal(
          NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_enum_return_own_twin_normal(port_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_normal(
              port_, arg);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_normal(
              port_);

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_normal(
              port_);

  void wire_rust_auto_opaque_explicit_arg_twin_normal(
          NativePortType port_, Object arg, int expect) =>
      wasmModule.wire_rust_auto_opaque_explicit_arg_twin_normal(
          port_, arg, expect);

  void wire_rust_auto_opaque_explicit_return_twin_normal(
          NativePortType port_, int initial) =>
      wasmModule.wire_rust_auto_opaque_explicit_return_twin_normal(
          port_, initial);

  void wire_rust_auto_opaque_explicit_struct_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_rust_auto_opaque_explicit_struct_twin_normal(port_, arg);

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_normal(
          NativePortType port_, Object a, String b) =>
      wasmModule.wire_rust_auto_opaque_normal_and_opaque_arg_twin_normal(
          port_, a, b);

  void wire_rust_auto_opaque_plus_sign_arg_twin_normal(
          NativePortType port_, Object arg) =>
      wasmModule.wire_rust_auto_opaque_plus_sign_arg_twin_normal(port_, arg);

  void wire_rust_auto_opaque_plus_sign_return_twin_normal(
          NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_plus_sign_return_twin_normal(port_);

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_return_opaque_one_and_two_twin_normal(port_);

  void wire_rust_auto_opaque_return_opaque_two_twin_normal(
          NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_return_opaque_two_twin_normal(port_);

  void wire_rust_auto_opaque_return_own_twin_normal(
          NativePortType port_, int initial) =>
      wasmModule.wire_rust_auto_opaque_return_own_twin_normal(port_, initial);

  void wire_rust_auto_opaque_return_vec_own_twin_normal(NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_return_vec_own_twin_normal(port_);

  void wire_rust_auto_opaque_stream_sink_twin_normal(NativePortType port_) =>
      wasmModule.wire_rust_auto_opaque_stream_sink_twin_normal(port_);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normal(
              port_, arg);

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normal(
              port_);

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_normal(
          NativePortType port_, Object arg, String expect) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_borrow_twin_normal(
          port_, arg, expect);

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normal(
          NativePortType port_, Object arg, String expect) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normal(
          port_, arg, expect);

  void wire_rust_auto_opaque_trait_object_arg_own_twin_normal(
          NativePortType port_, Object arg, String expect) =>
      wasmModule.wire_rust_auto_opaque_trait_object_arg_own_twin_normal(
          port_, arg, expect);

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_return_own_one_twin_normal(port_);

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_rust_auto_opaque_trait_object_return_own_two_twin_normal(port_);

  void wire_rust_auto_opaque_two_args_twin_normal(
          NativePortType port_, Object a, Object b) =>
      wasmModule.wire_rust_auto_opaque_two_args_twin_normal(port_, a, b);

  void wire_create_array_opaque_enum_twin_normal(NativePortType port_) =>
      wasmModule.wire_create_array_opaque_enum_twin_normal(port_);

  void wire_create_nested_opaque_twin_normal(NativePortType port_) =>
      wasmModule.wire_create_nested_opaque_twin_normal(port_);

  void wire_create_opaque_twin_normal(NativePortType port_) =>
      wasmModule.wire_create_opaque_twin_normal(port_);

  void wire_create_option_opaque_twin_normal(
          NativePortType port_, Object? opaque) =>
      wasmModule.wire_create_option_opaque_twin_normal(port_, opaque);

  void wire_frb_generator_test_twin_normal(NativePortType port_) =>
      wasmModule.wire_frb_generator_test_twin_normal(port_);

  void wire_opaque_array_run_twin_normal(
          NativePortType port_, List<dynamic> data) =>
      wasmModule.wire_opaque_array_run_twin_normal(port_, data);

  void wire_opaque_array_twin_normal(NativePortType port_) =>
      wasmModule.wire_opaque_array_twin_normal(port_);

  void wire_opaque_vec_run_twin_normal(
          NativePortType port_, List<dynamic> data) =>
      wasmModule.wire_opaque_vec_run_twin_normal(port_, data);

  void wire_opaque_vec_twin_normal(NativePortType port_) =>
      wasmModule.wire_opaque_vec_twin_normal(port_);

  void wire_run_enum_opaque_twin_normal(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_run_enum_opaque_twin_normal(port_, opaque);

  void wire_run_nested_opaque_twin_normal(
          NativePortType port_, List<dynamic> opaque) =>
      wasmModule.wire_run_nested_opaque_twin_normal(port_, opaque);

  void wire_run_non_clone_twin_normal(NativePortType port_, Object clone) =>
      wasmModule.wire_run_non_clone_twin_normal(port_, clone);

  void wire_run_opaque_twin_normal(NativePortType port_, Object opaque) =>
      wasmModule.wire_run_opaque_twin_normal(port_, opaque);

  void wire_run_opaque_with_delay_twin_normal(
          NativePortType port_, Object opaque) =>
      wasmModule.wire_run_opaque_with_delay_twin_normal(port_, opaque);

  void wire_unwrap_rust_opaque_twin_normal(
          NativePortType port_, Object opaque) =>
      wasmModule.wire_unwrap_rust_opaque_twin_normal(port_, opaque);

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_frb_sync_generator_test_twin_normal() =>
          wasmModule.wire_frb_sync_generator_test_twin_normal();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_create_non_clone_twin_normal() =>
          wasmModule.wire_sync_create_non_clone_twin_normal();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_create_opaque_twin_normal() =>
          wasmModule.wire_sync_create_opaque_twin_normal();

  dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_option_rust_opaque_twin_normal() =>
          wasmModule.wire_sync_option_rust_opaque_twin_normal();

  void wire_simple_adder_twin_normal(NativePortType port_, int a, int b) =>
      wasmModule.wire_simple_adder_twin_normal(port_, a, b);

  void wire_func_stream_return_error_twin_normal(NativePortType port_) =>
      wasmModule.wire_func_stream_return_error_twin_normal(port_);

  void wire_func_stream_return_panic_twin_normal(NativePortType port_) =>
      wasmModule.wire_func_stream_return_panic_twin_normal(port_);

  void wire_func_stream_sink_arg_position_twin_normal(
          NativePortType port_, int a, int b) =>
      wasmModule.wire_func_stream_sink_arg_position_twin_normal(port_, a, b);

  void wire_handle_stream_of_struct_twin_normal(NativePortType port_) =>
      wasmModule.wire_handle_stream_of_struct_twin_normal(port_);

  void wire_handle_stream_sink_at_1_twin_normal(
          NativePortType port_, int key, int max) =>
      wasmModule.wire_handle_stream_sink_at_1_twin_normal(port_, key, max);

  void wire_handle_stream_sink_at_2_twin_normal(
          NativePortType port_, int key, int max) =>
      wasmModule.wire_handle_stream_sink_at_2_twin_normal(port_, key, max);

  void wire_handle_stream_sink_at_3_twin_normal(
          NativePortType port_, int key, int max) =>
      wasmModule.wire_handle_stream_sink_at_3_twin_normal(port_, key, max);

  void wire_stream_sink_fixed_sized_primitive_array_twin_normal(
          NativePortType port_) =>
      wasmModule
          .wire_stream_sink_fixed_sized_primitive_array_twin_normal(port_);

  void wire_func_stream_realistic_twin_normal(
          NativePortType port_, String arg) =>
      wasmModule.wire_func_stream_realistic_twin_normal(port_, arg);

  void wire_func_struct_with_one_field_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_struct_with_one_field_twin_normal(port_, arg);

  void wire_func_struct_with_two_field_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_struct_with_two_field_twin_normal(port_, arg);

  void wire_func_struct_with_zero_field_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_struct_with_zero_field_twin_normal(port_, arg);

  void wire_func_tuple_struct_with_one_field_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_tuple_struct_with_one_field_twin_normal(port_, arg);

  void wire_func_tuple_struct_with_two_field_twin_normal(
          NativePortType port_, List<dynamic> arg) =>
      wasmModule.wire_func_tuple_struct_with_two_field_twin_normal(port_, arg);

  void wire_test_tuple_2_twin_normal(
          NativePortType port_, List<dynamic> value) =>
      wasmModule.wire_test_tuple_2_twin_normal(port_, value);

  void wire_test_tuple_twin_normal(
          NativePortType port_, List<dynamic>? value) =>
      wasmModule.wire_test_tuple_twin_normal(port_, value);

  void wire_handle_type_alias_id_twin_normal(
          NativePortType port_, Object input) =>
      wasmModule.wire_handle_type_alias_id_twin_normal(port_, input);

  void wire_handle_type_alias_model_twin_normal(
          NativePortType port_, Object input) =>
      wasmModule.wire_handle_type_alias_model_twin_normal(port_, input);

  void wire_handle_type_nest_alias_id_twin_normal(
          NativePortType port_, Object input) =>
      wasmModule.wire_handle_type_nest_alias_id_twin_normal(port_, input);

  void wire_handle_nested_uuids_twin_normal(
          NativePortType port_, List<dynamic> ids) =>
      wasmModule.wire_handle_nested_uuids_twin_normal(port_, ids);

  void wire_handle_uuid_twin_normal(NativePortType port_, Uint8List id) =>
      wasmModule.wire_handle_uuid_twin_normal(port_, id);

  void wire_handle_uuids_twin_normal(NativePortType port_, List<dynamic> ids) =>
      wasmModule.wire_handle_uuids_twin_normal(port_, ids);

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataTwinMoi(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinMoi(ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataTwinNormal(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinNormal(ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataTwinSse(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSse(ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataTwinSseMoi(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSseMoi(ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataTwinSync(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSync(ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncMoi(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncMoi(ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSse(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSse(ptr);

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinMoi(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinMoi(ptr);

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSse(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSse(ptr);

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinMoi(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinMoi(ptr);

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSse(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSse(ptr);

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSync(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSync(ptr);

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          dynamic ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          dynamic ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_i16(dynamic ptr) =>
      wasmModule.rust_arc_increment_strong_count_RustOpaque_i16(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_i16(dynamic ptr) =>
      wasmModule.rust_arc_decrement_strong_count_RustOpaque_i16(ptr);

  void rust_arc_increment_strong_count_RustOpaque_i32(dynamic ptr) =>
      wasmModule.rust_arc_increment_strong_count_RustOpaque_i32(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_i32(dynamic ptr) =>
      wasmModule.rust_arc_decrement_strong_count_RustOpaque_i32(ptr);
}

@JS('wasm_bindgen')
external RustLibWasmModule get wasmModule;

@JS()
@anonymous
class RustLibWasmModule implements WasmModule {
  @override
  external Object /* Promise */ call([String? moduleName]);

  @override
  external RustLibWasmModule bind(dynamic thisArg, String moduleName);

  external void wire_boxed_blob_twin_normal(
      NativePortType port_, Uint8List blob);

  external void wire_func_test_id_twin_normal(
      NativePortType port_, List<dynamic> id);

  external void wire_get_array_twin_normal(NativePortType port_);

  external void wire_get_complex_array_twin_normal(NativePortType port_);

  external void wire_last_number_twin_normal(
      NativePortType port_, Float64List array);

  external void wire_nested_id_twin_normal(
      NativePortType port_, List<dynamic> id);

  external void wire_new_msgid_twin_normal(NativePortType port_, Uint8List id);

  external void wire_return_boxed_feed_id_twin_normal(
      NativePortType port_, Uint8List id);

  external void wire_return_boxed_raw_feed_id_twin_normal(
      NativePortType port_, List<dynamic> id);

  external void wire_use_boxed_blob_twin_normal(
      NativePortType port_, List<dynamic> blob);

  external void wire_use_msgid_twin_normal(
      NativePortType port_, List<dynamic> id);

  external void wire_func_async_simple_add_twin_normal(
      NativePortType port_, int a, int b);

  external void wire_func_async_void_twin_normal(NativePortType port_);

  external void wire_simple_use_async_spawn(NativePortType port_, String arg);

  external void wire_simple_use_async_spawn_blocking(
      NativePortType port_, String arg);

  external void wire_simple_use_async_spawn_local(
      NativePortType port_, String arg);

  external void wire_handle_customized_struct_twin_normal(
      NativePortType port_, List<dynamic> val);

  external void wire_next_user_id_twin_normal(
      NativePortType port_, List<dynamic> user_id);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_void_semi_serialize();

  external void wire_datetime_local_twin_normal(NativePortType port_, Object d);

  external void wire_datetime_utc_twin_normal(NativePortType port_, Object d);

  external void wire_duration_twin_normal(NativePortType port_, Object d);

  external void wire_handle_durations_twin_normal(
      NativePortType port_, List<dynamic> durations, Object since);

  external void wire_handle_timestamps_twin_normal(
      NativePortType port_, List<dynamic> timestamps, Object epoch);

  external void wire_how_long_does_it_take_twin_normal(
      NativePortType port_, List<dynamic> mine);

  external void wire_naivedatetime_twin_normal(NativePortType port_, Object d);

  external void wire_optional_empty_datetime_utc_twin_normal(
      NativePortType port_, Object? d);

  external void wire_test_chrono_twin_normal(NativePortType port_);

  external void wire_test_precise_chrono_twin_normal(NativePortType port_);

  external void wire_StructWithCommentsTwinNormal_instance_method_twin_normal(
      NativePortType port_, List<dynamic> that);

  external void wire_StructWithCommentsTwinNormal_static_method_twin_normal(
      NativePortType port_);

  external void wire_function_with_comments_slash_star_star_twin_normal(
      NativePortType port_);

  external void wire_function_with_comments_triple_slash_multi_line_twin_normal(
      NativePortType port_);

  external void
      wire_function_with_comments_triple_slash_single_line_twin_normal(
          NativePortType port_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConstructorOpaqueStructTwinNormal_check(Object that);

  external void wire_ConstructorOpaqueStructTwinNormal_new(
      NativePortType port_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConstructorOpaqueSyncStructTwinNormal_check(Object that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConstructorOpaqueSyncStructTwinNormal_new();

  external void wire_ConstructorTranslatableStructTwinNormal_new(
      NativePortType port_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConstructorTranslatableSyncStructTwinNormal_new();

  external void wire_check_init_done(NativePortType port_);

  external void wire_init_app(NativePortType port_);

  external void wire_my_init_one(NativePortType port_);

  external void wire_my_init_two(NativePortType port_);

  external void wire_return_dart_dynamic_twin_normal(NativePortType port_);

  external void wire_rust_call_dart_loopback_twin_normal(
      NativePortType port_, PlatformPointer callback);

  external void wire_rust_call_dart_multi_times_twin_normal(
      NativePortType port_, PlatformPointer callback, int num_times);

  external void wire_rust_call_dart_one_arg_twin_normal(
      NativePortType port_, PlatformPointer callback);

  external void wire_rust_call_dart_return_twin_normal(
      NativePortType port_, PlatformPointer callback);

  external void wire_rust_call_dart_simple_twin_normal(
      NativePortType port_, PlatformPointer callback);

  external void wire_rust_call_dart_two_args_twin_normal(
      NativePortType port_, PlatformPointer callback);

  external void wire_rust_call_dart_with_dart_opaque_arg_twin_normal(
      NativePortType port_, PlatformPointer input, PlatformPointer callback);

  external void wire_rust_call_dart_with_dart_opaque_result_twin_normal(
      NativePortType port_, PlatformPointer callback);

  external void wire_async_accept_dart_opaque_twin_normal(
      NativePortType port_, PlatformPointer opaque);

  external void wire_clone_dart_opaque_twin_normal(
      NativePortType port_, PlatformPointer opaque);

  external void wire_create_enum_dart_opaque_twin_normal(
      NativePortType port_, PlatformPointer opaque);

  external void wire_create_nested_dart_opaque_twin_normal(
      NativePortType port_, PlatformPointer opaque1, PlatformPointer opaque2);

  external void wire_drop_static_dart_opaque_twin_normal(
      NativePortType port_, int id);

  external void wire_get_enum_dart_opaque_twin_normal(
      NativePortType port_, List<dynamic> opaque);

  external void wire_get_nested_dart_opaque_twin_normal(
      NativePortType port_, List<dynamic> opaque);

  external void wire_loop_back_array_get_twin_normal(
      NativePortType port_, List<dynamic> opaque);

  external void wire_loop_back_array_twin_normal(
      NativePortType port_, PlatformPointer opaque);

  external void wire_loop_back_option_get_twin_normal(
      NativePortType port_, PlatformPointer? opaque);

  external void wire_loop_back_option_twin_normal(
      NativePortType port_, PlatformPointer opaque);

  external void wire_loop_back_twin_normal(
      NativePortType port_, PlatformPointer opaque);

  external void wire_loop_back_vec_get_twin_normal(
      NativePortType port_, List<dynamic> opaque);

  external void wire_loop_back_vec_twin_normal(
      NativePortType port_, PlatformPointer opaque);

  external void wire_panic_unwrap_dart_opaque_twin_normal(
      NativePortType port_, PlatformPointer opaque);

  external void wire_set_static_dart_opaque_twin_normal(
      NativePortType port_, int id, PlatformPointer opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_accept_dart_opaque_twin_normal(PlatformPointer opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_loopback_twin_normal(PlatformPointer opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_option_dart_opaque_twin_normal(PlatformPointer opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_option_loopback_twin_normal(PlatformPointer? opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_unwrap_dart_opaque_twin_normal(PlatformPointer opaque);

  external void wire_test_duplicated_module_names(
      NativePortType port_, List<dynamic> s);

  external void wire_DroppableTwinNormal_create_stream(
      NativePortType port_, Object that);

  external void wire_DroppableTwinNormal_get_drop_count_twin_normal(
      NativePortType port_);

  external void wire_DroppableTwinNormal_new_twin_normal(NativePortType port_);

  external void wire_DroppableTwinNormal_simple_method_twin_normal(
      NativePortType port_, Object that);

  external void wire_func_enum_simple_twin_normal(
      NativePortType port_, int arg);

  external void wire_func_enum_with_discriminant_twin_normal(
      NativePortType port_, int arg);

  external void wire_func_enum_with_item_mixed_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_enum_with_item_struct_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_enum_with_item_tuple_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_handle_enum_parameter_twin_normal(
      NativePortType port_, int weekday);

  external void wire_handle_enum_struct_twin_normal(
      NativePortType port_, List<dynamic> val);

  external void wire_handle_return_enum_twin_normal(
      NativePortType port_, String input);

  external void wire_multiply_by_ten_twin_normal(
      NativePortType port_, List<dynamic> measure);

  external void wire_print_note_twin_normal(
      NativePortType port_, List<dynamic> note);

  external void wire_EventTwinNormal_as_string_twin_normal(
      NativePortType port_, List<dynamic> that);

  external void wire_close_event_listener_twin_normal(NativePortType port_);

  external void wire_create_event_twin_normal(
      NativePortType port_, String address, String payload);

  external void wire_register_event_listener_twin_normal(NativePortType port_);

  external void wire_CustomStructTwinNormal_new_twin_normal(
      NativePortType port_, String message);

  external void
      wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normal(
          NativePortType port_, List<dynamic> that);

  external void
      wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normal(
          NativePortType port_, List<dynamic> that);

  external void
      wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normal(
          NativePortType port_);

  external void
      wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normal(
          NativePortType port_);

  external void wire_SomeStructTwinNormal_new_twin_normal(
      NativePortType port_, int value);

  external void
      wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normal(
          NativePortType port_, List<dynamic> that);

  external void
      wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normal(
          NativePortType port_, List<dynamic> that);

  external void
      wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normal(
          NativePortType port_);

  external void
      wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normal(
          NativePortType port_);

  external void wire_custom_enum_error_panic_twin_normal(NativePortType port_);

  external void wire_custom_enum_error_return_error_twin_normal(
      NativePortType port_);

  external void wire_custom_enum_error_return_ok_twin_normal(
      NativePortType port_, int arg);

  external void wire_custom_nested_error_return_error_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_custom_struct_error_return_error_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_return_error_twin_normal(NativePortType port_);

  external void wire_func_type_fallible_panic_twin_normal(NativePortType port_);

  external void wire_func_type_infallible_panic_twin_normal(
      NativePortType port_);

  external void wire_panic_with_custom_result_twin_normal(NativePortType port_);

  external void wire_return_custom_nested_error_1_twin_normal(
      NativePortType port_);

  external void wire_return_custom_nested_error_1_variant1_twin_normal(
      NativePortType port_);

  external void wire_return_custom_nested_error_2_twin_normal(
      NativePortType port_);

  external void wire_return_custom_struct_error_twin_normal(
      NativePortType port_);

  external void wire_return_custom_struct_ok_twin_normal(NativePortType port_);

  external void wire_return_err_custom_error_twin_normal(NativePortType port_);

  external void wire_return_error_variant_twin_normal(
      NativePortType port_, int variant);

  external void wire_return_ok_custom_error_twin_normal(NativePortType port_);

  external void wire_stream_sink_throw_anyhow_twin_normal(NativePortType port_);

  external void wire_throw_anyhow_twin_normal(NativePortType port_);

  external void wire_call_new_module_system_twin_normal(NativePortType port_);

  external void wire_call_old_module_system_twin_normal(NativePortType port_);

  external void wire_use_imported_enum_twin_normal(
      NativePortType port_, int my_enum);

  external void wire_use_imported_struct_twin_normal(
      NativePortType port_, List<dynamic> my_struct);

  external void wire_another_macro_struct_twin_normal(NativePortType port_);

  external void wire_func_macro_struct_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_hash_map_i32_i32_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_hash_map_string_bytes_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_hash_map_string_complex_enum_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_hash_map_string_simple_enum_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_hash_map_string_string_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_hash_map_string_struct_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_hash_set_i32_twin_normal(
      NativePortType port_, Int32List arg);

  external void wire_func_hash_set_string_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_ConcatenateWithTwinNormal_concatenate_static_twin_normal(
      NativePortType port_, String a, String b);

  external void wire_ConcatenateWithTwinNormal_concatenate_twin_normal(
      NativePortType port_, List<dynamic> that, String b);

  external void
      wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normal(
          NativePortType port_);

  external void
      wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normal(
          NativePortType port_, int key, int max);

  external void
      wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normal(
          NativePortType port_, List<dynamic> that);

  external void
      wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normal(
          NativePortType port_, List<dynamic> that, int key, int max);

  external void wire_ConcatenateWithTwinNormal_new_twin_normal(
      NativePortType port_, String a);

  external void wire_ConcatenateWithTwinNormal_simple_getter_twin_normal(
      NativePortType port_, List<dynamic> that);

  external void wire_MyCallableTwinNormal_call(
      NativePortType port_, List<dynamic> that, String two);

  external void wire_SimpleStructTwinNormal_arg_self_twin_normal(
      NativePortType port_, List<dynamic> a, List<dynamic> b);

  external void wire_SimpleStructTwinNormal_return_self_twin_normal(
      NativePortType port_, String one);

  external void wire_SimpleStructTwinNormal_vec_self_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_SumWithTwinNormal_sum_twin_normal(
      NativePortType port_, List<dynamic> that, int y, int z);

  external void wire_get_sum_array_twin_normal(
      NativePortType port_, int a, int b, int c);

  external void wire_get_sum_struct_twin_normal(NativePortType port_);

  external void wire_app_settings_stream_twin_normal(NativePortType port_);

  external void wire_app_settings_vec_stream_twin_normal(NativePortType port_);

  external void wire_first_number_twin_normal(
      NativePortType port_, List<dynamic> nums);

  external void wire_first_sequence_twin_normal(
      NativePortType port_, List<dynamic> seqs);

  external void wire_get_app_settings_twin_normal(NativePortType port_);

  external void wire_get_fallible_app_settings_twin_normal(
      NativePortType port_);

  external void wire_get_message_twin_normal(NativePortType port_);

  external void wire_is_app_embedded_twin_normal(
      NativePortType port_, List<dynamic> app_settings);

  external void wire_mirror_array_enum_stream_twin_normal(NativePortType port_);

  external void wire_mirror_enum_stream_twin_normal(NativePortType port_);

  external void wire_mirror_map_enum_stream_twin_normal(NativePortType port_);

  external void wire_mirror_option_enum_stream_twin_normal(
      NativePortType port_);

  external void wire_mirror_set_enum_stream_twin_normal(NativePortType port_);

  external void wire_mirror_struct_stream_twin_normal(NativePortType port_);

  external void wire_mirror_tuple_stream_twin_normal(NativePortType port_);

  external void wire_mirror_vec_enum_stream_twin_normal(NativePortType port_);

  external void wire_repeat_number_twin_normal(
      NativePortType port_, int num, int times);

  external void wire_repeat_sequence_twin_normal(
      NativePortType port_, int seq, int times);

  external void wire_test_contains_mirrored_sub_struct_twin_normal(
      NativePortType port_);

  external void wire_test_fallible_of_raw_string_mirrored_twin_normal(
      NativePortType port_);

  external void wire_test_hashmap_with_mirrored_value_twin_normal(
      NativePortType port_);

  external void wire_test_list_of_nested_enums_mirrored_twin_normal(
      NativePortType port_);

  external void wire_test_list_of_raw_nested_string_mirrored_twin_normal(
      NativePortType port_);

  external void wire_test_nested_raw_string_mirrored_twin_normal(
      NativePortType port_);

  external void wire_test_raw_string_enum_mirrored_twin_normal(
      NativePortType port_, bool nested);

  external void wire_test_raw_string_mirrored_twin_normal(NativePortType port_);

  external void wire_handle_big_buffers_twin_normal(NativePortType port_);

  external void wire_handle_complex_struct_twin_normal(
      NativePortType port_, List<dynamic> s);

  external void wire_handle_nested_struct_twin_normal(
      NativePortType port_, List<dynamic> s);

  external void wire_handle_string_twin_normal(NativePortType port_, String s);

  external void wire_handle_struct_twin_normal(
      NativePortType port_, List<dynamic> arg, List<dynamic> boxed);

  external void wire_handle_vec_u8_twin_normal(
      NativePortType port_, List<int> v);

  external void wire_list_of_primitive_enums_twin_normal(
      NativePortType port_, List<dynamic> weekdays);

  external void wire_test_abc_enum_twin_normal(
      NativePortType port_, List<dynamic> abc);

  external void wire_test_struct_with_enum_twin_normal(
      NativePortType port_, List<dynamic> se);

  external void wire_StructInMiscNoTwinExampleA_sample_function_a(
      NativePortType port_, Object that);

  external void wire_StructWithImplBlockInMultiFile_method_in_a(
      NativePortType port_, Object that);

  external void
      wire_StructInMiscNoTwinExampleB_get_struct_in_misc_no_twin_example_a(
          NativePortType port_, Object that);

  external void wire_StructInMiscNoTwinExampleB_sample_function_b(
      NativePortType port_, Object that);

  external void wire_StructWithImplBlockInMultiFile_method_in_b(
      NativePortType port_, Object that);

  external void wire_empty_struct_twin_normal(
      NativePortType port_, List<dynamic> empty);

  external void wire_func_return_unit_twin_normal(NativePortType port_);

  external void wire_handle_list_of_struct_twin_normal(
      NativePortType port_, List<dynamic> l);

  external void wire_handle_string_list_twin_normal(
      NativePortType port_, List<dynamic> names);

  external void wire_handle_newtype_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_handle_increment_boxed_optional_twin_normal(
      NativePortType port_, double? opt);

  external void wire_handle_option_box_arguments_twin_normal(
      NativePortType port_,
      int? i8box,
      int? u8box,
      int? i32box,
      Object? i64box,
      double? f64box,
      bool? boolbox,
      List<dynamic>? structbox);

  external void wire_handle_optional_increment_twin_normal(
      NativePortType port_, List<dynamic>? opt);

  external void wire_handle_optional_return_twin_normal(
      NativePortType port_, double left, double right);

  external void wire_handle_optional_struct_twin_normal(
      NativePortType port_, String? document);

  external void wire_handle_vec_of_opts_twin_normal(
      NativePortType port_, List<dynamic> opt);

  external void wire_primitive_optional_types_twin_normal(NativePortType port_,
      int? my_i32, Object? my_i64, double? my_f64, bool? my_bool);

  external void wire_handle_vec_of_primitive_twin_normal(
      NativePortType port_, int n);

  external void wire_primitive_types_twin_normal(NativePortType port_,
      int my_i32, Object my_i64, double my_f64, bool my_bool);

  external void wire_primitive_u32_twin_normal(
      NativePortType port_, int my_u32);

  external void wire_boxed_blob_twin_rust_async(
      NativePortType port_, Uint8List blob);

  external void wire_func_test_id_twin_rust_async(
      NativePortType port_, List<dynamic> id);

  external void wire_get_array_twin_rust_async(NativePortType port_);

  external void wire_get_complex_array_twin_rust_async(NativePortType port_);

  external void wire_last_number_twin_rust_async(
      NativePortType port_, Float64List array);

  external void wire_nested_id_twin_rust_async(
      NativePortType port_, List<dynamic> id);

  external void wire_new_msgid_twin_rust_async(
      NativePortType port_, Uint8List id);

  external void wire_return_boxed_feed_id_twin_rust_async(
      NativePortType port_, Uint8List id);

  external void wire_return_boxed_raw_feed_id_twin_rust_async(
      NativePortType port_, List<dynamic> id);

  external void wire_use_boxed_blob_twin_rust_async(
      NativePortType port_, List<dynamic> blob);

  external void wire_use_msgid_twin_rust_async(
      NativePortType port_, List<dynamic> id);

  external void wire_boxed_blob_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_test_id_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_get_array_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_get_complex_array_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_last_number_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_nested_id_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_new_msgid_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_return_boxed_feed_id_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_return_boxed_raw_feed_id_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_use_boxed_blob_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_use_msgid_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_boxed_blob_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_test_id_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_get_array_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_get_complex_array_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_last_number_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_nested_id_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_new_msgid_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_return_boxed_feed_id_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_return_boxed_raw_feed_id_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_use_boxed_blob_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_use_msgid_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_boxed_blob_twin_sync(Uint8List blob);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_test_id_twin_sync(List<dynamic> id);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_array_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_complex_array_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_last_number_twin_sync(Float64List array);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_nested_id_twin_sync(List<dynamic> id);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_new_msgid_twin_sync(Uint8List id);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_boxed_feed_id_twin_sync(Uint8List id);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_boxed_raw_feed_id_twin_sync(List<dynamic> id);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_use_boxed_blob_twin_sync(List<dynamic> blob);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_use_msgid_twin_sync(List<dynamic> id);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_boxed_blob_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_test_id_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_array_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_complex_array_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_last_number_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_nested_id_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_new_msgid_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_boxed_feed_id_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_boxed_raw_feed_id_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_use_boxed_blob_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_use_msgid_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external void wire_func_async_simple_add_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_async_void_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_customized_struct_twin_rust_async(
      NativePortType port_, List<dynamic> val);

  external void wire_next_user_id_twin_rust_async(
      NativePortType port_, List<dynamic> user_id);

  external void wire_handle_customized_struct_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_next_user_id_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_customized_struct_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_next_user_id_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_customized_struct_twin_sync(List<dynamic> val);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_next_user_id_twin_sync(List<dynamic> user_id);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_customized_struct_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_next_user_id_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external void
      wire_example_basic_type_basic_general_enum_twin_normal_twin_normal(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_example_basic_type_basic_primitive_enum_twin_normal_twin_normal(
          NativePortType port_, int arg);

  external void wire_example_basic_type_basic_struct_twin_normal_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_type_bool_twin_normal(
      NativePortType port_, bool arg);

  external void wire_example_basic_type_bytes_twin_normal(
      NativePortType port_, List<int> arg);

  external void wire_example_basic_type_f32_twin_normal(
      NativePortType port_, double arg);

  external void wire_example_basic_type_f64_twin_normal(
      NativePortType port_, double arg);

  external void wire_example_basic_type_i16_twin_normal(
      NativePortType port_, int arg);

  external void wire_example_basic_type_i32_twin_normal(
      NativePortType port_, int arg);

  external void wire_example_basic_type_i64_twin_normal(
      NativePortType port_, Object arg);

  external void wire_example_basic_type_i8_twin_normal(
      NativePortType port_, int arg);

  external void wire_example_basic_type_isize_twin_normal(
      NativePortType port_, int arg);

  external void wire_example_basic_type_string_twin_normal(
      NativePortType port_, String arg);

  external void wire_example_basic_type_u16_twin_normal(
      NativePortType port_, int arg);

  external void wire_example_basic_type_u32_twin_normal(
      NativePortType port_, int arg);

  external void wire_example_basic_type_u64_twin_normal(
      NativePortType port_, Object arg);

  external void wire_example_basic_type_u8_twin_normal(
      NativePortType port_, int arg);

  external void wire_example_basic_type_usize_twin_normal(
      NativePortType port_, int arg);

  external void
      wire_example_basic_list_type_basic_general_enum_twin_normal_twin_normal(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_example_basic_list_type_basic_primitive_enum_twin_normal_twin_normal(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_example_basic_list_type_basic_struct_twin_normal_twin_normal(
          NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_list_type_bool_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_list_type_bytes_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_list_type_f32_twin_normal(
      NativePortType port_, List<double> arg);

  external void wire_example_basic_list_type_f64_twin_normal(
      NativePortType port_, List<double> arg);

  external void wire_example_basic_list_type_i16_twin_normal(
      NativePortType port_, List<int> arg);

  external void wire_example_basic_list_type_i32_twin_normal(
      NativePortType port_, List<int> arg);

  external void wire_example_basic_list_type_i64_twin_normal(
      NativePortType port_, Object /* BigInt64Array */ arg);

  external void wire_example_basic_list_type_i8_twin_normal(
      NativePortType port_, List<int> arg);

  external void wire_example_basic_list_type_string_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_list_type_u16_twin_normal(
      NativePortType port_, List<int> arg);

  external void wire_example_basic_list_type_u32_twin_normal(
      NativePortType port_, List<int> arg);

  external void wire_example_basic_list_type_u64_twin_normal(
      NativePortType port_, Object /* BigInt64Array */ arg);

  external void wire_example_basic_list_type_u8_twin_normal(
      NativePortType port_, List<int> arg);

  external void
      wire_example_basic_list_type_basic_general_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_example_basic_list_type_basic_struct_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_list_type_bool_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_list_type_bytes_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_list_type_f32_twin_rust_async(
      NativePortType port_, List<double> arg);

  external void wire_example_basic_list_type_f64_twin_rust_async(
      NativePortType port_, List<double> arg);

  external void wire_example_basic_list_type_i16_twin_rust_async(
      NativePortType port_, List<int> arg);

  external void wire_example_basic_list_type_i32_twin_rust_async(
      NativePortType port_, List<int> arg);

  external void wire_example_basic_list_type_i64_twin_rust_async(
      NativePortType port_, Object /* BigInt64Array */ arg);

  external void wire_example_basic_list_type_i8_twin_rust_async(
      NativePortType port_, List<int> arg);

  external void wire_example_basic_list_type_string_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_list_type_u16_twin_rust_async(
      NativePortType port_, List<int> arg);

  external void wire_example_basic_list_type_u32_twin_rust_async(
      NativePortType port_, List<int> arg);

  external void wire_example_basic_list_type_u64_twin_rust_async(
      NativePortType port_, Object /* BigInt64Array */ arg);

  external void wire_example_basic_list_type_u8_twin_rust_async(
      NativePortType port_, List<int> arg);

  external void
      wire_example_basic_list_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_example_basic_list_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_example_basic_list_type_bool_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_list_type_bytes_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_list_type_f32_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_list_type_f64_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_list_type_i16_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_list_type_i32_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_list_type_i64_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_list_type_i8_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_list_type_string_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_list_type_u16_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_list_type_u32_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_list_type_u64_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_list_type_u8_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_example_basic_list_type_basic_general_enum_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_example_basic_list_type_basic_primitive_enum_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_example_basic_list_type_basic_struct_twin_sse_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_list_type_bool_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_list_type_bytes_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_list_type_f32_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_list_type_f64_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_list_type_i16_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_list_type_i32_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_list_type_i64_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_list_type_i8_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_list_type_string_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_list_type_u16_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_list_type_u32_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_list_type_u64_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_list_type_u8_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_basic_general_enum_twin_sync_twin_sync(
          List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_basic_primitive_enum_twin_sync_twin_sync(
          List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_basic_struct_twin_sync_twin_sync(
          List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_bool_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_bytes_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_f32_twin_sync(List<double> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_f64_twin_sync(List<double> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_i16_twin_sync(List<int> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_i32_twin_sync(List<int> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_i64_twin_sync(
          Object /* BigInt64Array */ arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_i8_twin_sync(List<int> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_string_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_u16_twin_sync(List<int> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_u32_twin_sync(List<int> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_u64_twin_sync(
          Object /* BigInt64Array */ arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_list_type_u8_twin_sync(List<int> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_basic_struct_twin_sync_sse_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_bool_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_bytes_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_f32_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_f64_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_i16_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_i32_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_i64_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_i8_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_string_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_u16_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_u32_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_u64_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_list_type_u8_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_example_basic_map_type_basic_general_enum_twin_normal_twin_normal(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_example_basic_map_type_basic_primitive_enum_twin_normal_twin_normal(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_example_basic_map_type_basic_struct_twin_normal_twin_normal(
          NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_bool_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_bytes_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_f32_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_f64_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_i16_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_i32_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_i64_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_i8_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_isize_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_string_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_u16_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_u32_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_u64_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_u8_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_usize_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void
      wire_example_basic_map_type_basic_general_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_example_basic_map_type_basic_struct_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_bool_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_bytes_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_f32_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_f64_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_i16_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_i32_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_i64_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_i8_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_isize_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_string_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_u16_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_u32_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_u64_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_u8_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_map_type_usize_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void
      wire_example_basic_map_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_example_basic_map_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_example_basic_map_type_bool_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_bytes_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_f32_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_f64_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_i16_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_i32_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_i64_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_i8_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_isize_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_string_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_u16_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_u32_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_u64_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_u8_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_usize_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_example_basic_map_type_basic_general_enum_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_example_basic_map_type_basic_primitive_enum_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_example_basic_map_type_basic_struct_twin_sse_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_bool_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_map_type_bytes_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_map_type_f32_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_map_type_f64_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_map_type_i16_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_map_type_i32_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_map_type_i64_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_map_type_i8_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_map_type_isize_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_map_type_string_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_map_type_u16_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_map_type_u32_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_map_type_u64_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_map_type_u8_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_map_type_usize_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_basic_general_enum_twin_sync_twin_sync(
          List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_basic_primitive_enum_twin_sync_twin_sync(
          List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_basic_struct_twin_sync_twin_sync(
          List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_bool_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_bytes_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_f32_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_f64_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_i16_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_i32_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_i64_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_i8_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_isize_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_string_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_u16_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_u32_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_u64_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_u8_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_map_type_usize_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_basic_struct_twin_sync_sse_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_bool_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_bytes_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_f32_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_f64_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_i16_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_i32_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_i64_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_i8_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_isize_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_string_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_u16_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_u32_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_u64_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_u8_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_map_type_usize_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_example_basic_optional_type_basic_general_enum_twin_normal_twin_normal(
          NativePortType port_, List<dynamic>? arg);

  external void
      wire_example_basic_optional_type_basic_primitive_enum_twin_normal_twin_normal(
          NativePortType port_, int? arg);

  external void
      wire_example_basic_optional_type_basic_struct_twin_normal_twin_normal(
          NativePortType port_, List<dynamic>? arg);

  external void wire_example_basic_optional_type_bool_twin_normal(
      NativePortType port_, bool? arg);

  external void wire_example_basic_optional_type_bytes_twin_normal(
      NativePortType port_, Uint8List? arg);

  external void wire_example_basic_optional_type_f32_twin_normal(
      NativePortType port_, double? arg);

  external void wire_example_basic_optional_type_f64_twin_normal(
      NativePortType port_, double? arg);

  external void wire_example_basic_optional_type_i16_twin_normal(
      NativePortType port_, int? arg);

  external void wire_example_basic_optional_type_i32_twin_normal(
      NativePortType port_, int? arg);

  external void wire_example_basic_optional_type_i64_twin_normal(
      NativePortType port_, Object? arg);

  external void wire_example_basic_optional_type_i8_twin_normal(
      NativePortType port_, int? arg);

  external void wire_example_basic_optional_type_isize_twin_normal(
      NativePortType port_, int? arg);

  external void wire_example_basic_optional_type_string_twin_normal(
      NativePortType port_, String? arg);

  external void wire_example_basic_optional_type_u16_twin_normal(
      NativePortType port_, int? arg);

  external void wire_example_basic_optional_type_u32_twin_normal(
      NativePortType port_, int? arg);

  external void wire_example_basic_optional_type_u64_twin_normal(
      NativePortType port_, Object? arg);

  external void wire_example_basic_optional_type_u8_twin_normal(
      NativePortType port_, int? arg);

  external void wire_example_basic_optional_type_usize_twin_normal(
      NativePortType port_, int? arg);

  external void
      wire_example_basic_optional_type_basic_general_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic>? arg);

  external void
      wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, int? arg);

  external void
      wire_example_basic_optional_type_basic_struct_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic>? arg);

  external void wire_example_basic_optional_type_bool_twin_rust_async(
      NativePortType port_, bool? arg);

  external void wire_example_basic_optional_type_bytes_twin_rust_async(
      NativePortType port_, Uint8List? arg);

  external void wire_example_basic_optional_type_f32_twin_rust_async(
      NativePortType port_, double? arg);

  external void wire_example_basic_optional_type_f64_twin_rust_async(
      NativePortType port_, double? arg);

  external void wire_example_basic_optional_type_i16_twin_rust_async(
      NativePortType port_, int? arg);

  external void wire_example_basic_optional_type_i32_twin_rust_async(
      NativePortType port_, int? arg);

  external void wire_example_basic_optional_type_i64_twin_rust_async(
      NativePortType port_, Object? arg);

  external void wire_example_basic_optional_type_i8_twin_rust_async(
      NativePortType port_, int? arg);

  external void wire_example_basic_optional_type_isize_twin_rust_async(
      NativePortType port_, int? arg);

  external void wire_example_basic_optional_type_string_twin_rust_async(
      NativePortType port_, String? arg);

  external void wire_example_basic_optional_type_u16_twin_rust_async(
      NativePortType port_, int? arg);

  external void wire_example_basic_optional_type_u32_twin_rust_async(
      NativePortType port_, int? arg);

  external void wire_example_basic_optional_type_u64_twin_rust_async(
      NativePortType port_, Object? arg);

  external void wire_example_basic_optional_type_u8_twin_rust_async(
      NativePortType port_, int? arg);

  external void wire_example_basic_optional_type_usize_twin_rust_async(
      NativePortType port_, int? arg);

  external void
      wire_example_basic_optional_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_example_basic_optional_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_example_basic_optional_type_bool_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_bytes_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_f32_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_f64_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_i16_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_i32_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_i64_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_i8_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_isize_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_string_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_u16_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_u32_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_u64_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_u8_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_usize_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_example_basic_optional_type_basic_general_enum_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_example_basic_optional_type_basic_primitive_enum_twin_sse_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_example_basic_optional_type_basic_struct_twin_sse_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_bool_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_bytes_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_f32_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_f64_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_i16_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_i32_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_i64_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_i8_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_isize_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_string_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_u16_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_u32_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_u64_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_u8_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_optional_type_usize_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_basic_general_enum_twin_sync_twin_sync(
          List<dynamic>? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_basic_primitive_enum_twin_sync_twin_sync(
          int? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_basic_struct_twin_sync_twin_sync(
          List<dynamic>? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_bool_twin_sync(bool? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_bytes_twin_sync(Uint8List? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_f32_twin_sync(double? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_f64_twin_sync(double? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_i16_twin_sync(int? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_i32_twin_sync(int? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_i64_twin_sync(Object? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_i8_twin_sync(int? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_isize_twin_sync(int? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_string_twin_sync(String? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_u16_twin_sync(int? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_u32_twin_sync(int? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_u64_twin_sync(Object? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_u8_twin_sync(int? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_optional_type_usize_twin_sync(int? arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_basic_struct_twin_sync_sse_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_bool_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_bytes_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_f32_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_f64_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_i16_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_i32_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_i64_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_i8_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_isize_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_string_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_u16_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_u32_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_u64_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_u8_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_optional_type_usize_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_example_basic_type_basic_general_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_example_basic_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
          NativePortType port_, int arg);

  external void
      wire_example_basic_type_basic_struct_twin_rust_async_twin_rust_async(
          NativePortType port_, List<dynamic> arg);

  external void wire_example_basic_type_bool_twin_rust_async(
      NativePortType port_, bool arg);

  external void wire_example_basic_type_bytes_twin_rust_async(
      NativePortType port_, List<int> arg);

  external void wire_example_basic_type_f32_twin_rust_async(
      NativePortType port_, double arg);

  external void wire_example_basic_type_f64_twin_rust_async(
      NativePortType port_, double arg);

  external void wire_example_basic_type_i16_twin_rust_async(
      NativePortType port_, int arg);

  external void wire_example_basic_type_i32_twin_rust_async(
      NativePortType port_, int arg);

  external void wire_example_basic_type_i64_twin_rust_async(
      NativePortType port_, Object arg);

  external void wire_example_basic_type_i8_twin_rust_async(
      NativePortType port_, int arg);

  external void wire_example_basic_type_isize_twin_rust_async(
      NativePortType port_, int arg);

  external void wire_example_basic_type_string_twin_rust_async(
      NativePortType port_, String arg);

  external void wire_example_basic_type_u16_twin_rust_async(
      NativePortType port_, int arg);

  external void wire_example_basic_type_u32_twin_rust_async(
      NativePortType port_, int arg);

  external void wire_example_basic_type_u64_twin_rust_async(
      NativePortType port_, Object arg);

  external void wire_example_basic_type_u8_twin_rust_async(
      NativePortType port_, int arg);

  external void wire_example_basic_type_usize_twin_rust_async(
      NativePortType port_, int arg);

  external void
      wire_example_basic_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_example_basic_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_example_basic_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_example_basic_type_bool_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_bytes_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_f32_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_f64_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_i16_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_i32_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_i64_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_i8_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_isize_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_string_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_u16_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_u32_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_u64_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_u8_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_usize_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_basic_general_enum_twin_sse_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_basic_primitive_enum_twin_sse_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_basic_struct_twin_sse_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_example_basic_type_bool_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_type_bytes_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_type_f32_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_type_f64_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_type_i16_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_type_i32_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_type_i64_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_type_i8_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_type_isize_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_type_string_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_type_u16_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_type_u32_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_type_u64_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_type_u8_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_example_basic_type_usize_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_basic_general_enum_twin_sync_twin_sync(
          List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_basic_primitive_enum_twin_sync_twin_sync(int arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_basic_struct_twin_sync_twin_sync(
          List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_bool_twin_sync(bool arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_bytes_twin_sync(List<int> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_f32_twin_sync(double arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_f64_twin_sync(double arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_i16_twin_sync(int arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_i32_twin_sync(int arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_i64_twin_sync(Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_i8_twin_sync(int arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_isize_twin_sync(int arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_string_twin_sync(String arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_u16_twin_sync(int arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_u32_twin_sync(int arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_u64_twin_sync(Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_u8_twin_sync(int arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_example_basic_type_usize_twin_sync(int arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_basic_struct_twin_sync_sse_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_bool_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_bytes_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_f32_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_f64_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_i16_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_i32_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_i64_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_i8_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_isize_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_string_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_u16_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_u32_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_u64_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_u8_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_example_basic_type_usize_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_benchmark_binary_tree_input_json_twin_normal(
      NativePortType port_, String raw);

  external void wire_benchmark_binary_tree_input_protobuf_twin_normal(
      NativePortType port_, List<int> raw);

  external void wire_benchmark_binary_tree_input_twin_normal(
      NativePortType port_, List<dynamic> tree);

  external void wire_benchmark_binary_tree_output_json_twin_normal(
      NativePortType port_, int depth);

  external void wire_benchmark_binary_tree_output_protobuf_twin_normal(
      NativePortType port_, int depth);

  external void wire_benchmark_binary_tree_output_twin_normal(
      NativePortType port_, int depth);

  external void wire_benchmark_blob_input_json_twin_normal(
      NativePortType port_, String raw);

  external void wire_benchmark_blob_input_protobuf_twin_normal(
      NativePortType port_, List<int> raw);

  external void wire_benchmark_blob_input_twin_normal(
      NativePortType port_, List<dynamic> blob);

  external void wire_benchmark_blob_output_json_twin_normal(
      NativePortType port_, int size);

  external void wire_benchmark_blob_output_protobuf_twin_normal(
      NativePortType port_, int size);

  external void wire_benchmark_blob_output_twin_normal(
      NativePortType port_, int size);

  external void wire_benchmark_input_bytes_twin_normal(
      NativePortType port_, List<int> bytes);

  external void wire_benchmark_output_bytes_twin_normal(
      NativePortType port_, int size);

  external void wire_benchmark_void_twin_normal(NativePortType port_);

  external void wire_benchmark_binary_tree_input_json_twin_rust_async(
      NativePortType port_, String raw);

  external void wire_benchmark_binary_tree_input_protobuf_twin_rust_async(
      NativePortType port_, List<int> raw);

  external void wire_benchmark_binary_tree_input_twin_rust_async(
      NativePortType port_, List<dynamic> tree);

  external void wire_benchmark_binary_tree_output_json_twin_rust_async(
      NativePortType port_, int depth);

  external void wire_benchmark_binary_tree_output_protobuf_twin_rust_async(
      NativePortType port_, int depth);

  external void wire_benchmark_binary_tree_output_twin_rust_async(
      NativePortType port_, int depth);

  external void wire_benchmark_blob_input_json_twin_rust_async(
      NativePortType port_, String raw);

  external void wire_benchmark_blob_input_protobuf_twin_rust_async(
      NativePortType port_, List<int> raw);

  external void wire_benchmark_blob_input_twin_rust_async(
      NativePortType port_, List<dynamic> blob);

  external void wire_benchmark_blob_output_json_twin_rust_async(
      NativePortType port_, int size);

  external void wire_benchmark_blob_output_protobuf_twin_rust_async(
      NativePortType port_, int size);

  external void wire_benchmark_blob_output_twin_rust_async(
      NativePortType port_, int size);

  external void wire_benchmark_input_bytes_twin_rust_async(
      NativePortType port_, List<int> bytes);

  external void wire_benchmark_output_bytes_twin_rust_async(
      NativePortType port_, int size);

  external void wire_benchmark_void_twin_rust_async(NativePortType port_);

  external void wire_benchmark_binary_tree_input_json_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_binary_tree_input_protobuf_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_binary_tree_input_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_binary_tree_output_json_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_binary_tree_output_protobuf_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_binary_tree_output_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_blob_input_json_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_blob_input_protobuf_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_blob_input_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_blob_output_json_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_blob_output_protobuf_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_blob_output_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_input_bytes_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_output_bytes_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_void_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_benchmark_binary_tree_input_json_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_binary_tree_input_protobuf_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_binary_tree_input_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_benchmark_binary_tree_output_json_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_binary_tree_output_protobuf_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_binary_tree_output_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_benchmark_blob_input_json_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_benchmark_blob_input_protobuf_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_blob_input_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_benchmark_blob_output_json_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_benchmark_blob_output_protobuf_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_benchmark_blob_output_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_benchmark_input_bytes_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_benchmark_output_bytes_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_benchmark_void_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_binary_tree_input_json_twin_sync(String raw);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_binary_tree_input_protobuf_twin_sync(List<int> raw);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_binary_tree_input_twin_sync(List<dynamic> tree);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_binary_tree_output_json_twin_sync(int depth);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_binary_tree_output_protobuf_twin_sync(int depth);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_binary_tree_output_twin_sync(int depth);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_blob_input_json_twin_sync(String raw);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_blob_input_protobuf_twin_sync(List<int> raw);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_blob_input_twin_sync(List<dynamic> blob);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_blob_output_json_twin_sync(int size);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_blob_output_protobuf_twin_sync(int size);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_blob_output_twin_sync(int size);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_input_bytes_twin_sync(List<int> bytes);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_output_bytes_twin_sync(int size);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_benchmark_void_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_binary_tree_input_json_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_binary_tree_input_protobuf_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_binary_tree_input_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_binary_tree_output_json_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_binary_tree_output_protobuf_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_binary_tree_output_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_blob_input_json_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_blob_input_protobuf_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_blob_input_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_blob_output_json_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_blob_output_protobuf_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_blob_output_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_input_bytes_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_output_bytes_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_benchmark_void_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external void wire_datetime_local_twin_rust_async(
      NativePortType port_, Object d);

  external void wire_datetime_utc_twin_rust_async(
      NativePortType port_, Object d);

  external void wire_duration_twin_rust_async(NativePortType port_, Object d);

  external void wire_handle_durations_twin_rust_async(
      NativePortType port_, List<dynamic> durations, Object since);

  external void wire_handle_timestamps_twin_rust_async(
      NativePortType port_, List<dynamic> timestamps, Object epoch);

  external void wire_how_long_does_it_take_twin_rust_async(
      NativePortType port_, List<dynamic> mine);

  external void wire_naivedatetime_twin_rust_async(
      NativePortType port_, Object d);

  external void wire_optional_empty_datetime_utc_twin_rust_async(
      NativePortType port_, Object? d);

  external void wire_test_chrono_twin_rust_async(NativePortType port_);

  external void wire_test_precise_chrono_twin_rust_async(NativePortType port_);

  external void wire_datetime_local_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_datetime_utc_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_duration_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_durations_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_timestamps_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_how_long_does_it_take_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_naivedatetime_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_optional_empty_datetime_utc_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_chrono_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_test_precise_chrono_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_datetime_local_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_datetime_utc_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_duration_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_durations_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_timestamps_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_how_long_does_it_take_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_naivedatetime_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_optional_empty_datetime_utc_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_test_chrono_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_test_precise_chrono_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_datetime_local_twin_sync(Object d);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_datetime_utc_twin_sync(Object d);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_duration_twin_sync(Object d);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_durations_twin_sync(List<dynamic> durations, Object since);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_timestamps_twin_sync(List<dynamic> timestamps, Object epoch);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_how_long_does_it_take_twin_sync(List<dynamic> mine);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_naivedatetime_twin_sync(Object d);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_optional_empty_datetime_utc_twin_sync(Object? d);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_chrono_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_precise_chrono_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_datetime_local_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_datetime_utc_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_duration_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_durations_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_timestamps_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_how_long_does_it_take_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_naivedatetime_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_optional_empty_datetime_utc_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_chrono_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_precise_chrono_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_async(
          NativePortType port_, List<dynamic> that);

  external void
      wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_async(
          NativePortType port_);

  external void wire_function_with_comments_slash_star_star_twin_rust_async(
      NativePortType port_);

  external void
      wire_function_with_comments_triple_slash_multi_line_twin_rust_async(
          NativePortType port_);

  external void
      wire_function_with_comments_triple_slash_single_line_twin_rust_async(
          NativePortType port_);

  external void
      wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_function_with_comments_slash_star_star_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_function_with_comments_triple_slash_multi_line_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_function_with_comments_triple_slash_single_line_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_StructWithCommentsTwinSse_instance_method_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_StructWithCommentsTwinSse_static_method_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_function_with_comments_slash_star_star_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_function_with_comments_triple_slash_multi_line_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_function_with_comments_triple_slash_single_line_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_StructWithCommentsTwinSync_instance_method_twin_sync(
          List<dynamic> that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_StructWithCommentsTwinSync_static_method_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_function_with_comments_slash_star_star_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_function_with_comments_triple_slash_multi_line_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_function_with_comments_triple_slash_single_line_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_function_with_comments_slash_star_star_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_function_with_comments_triple_slash_multi_line_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_function_with_comments_triple_slash_single_line_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_return_dart_dynamic_twin_rust_async(NativePortType port_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_dart_dynamic_twin_sync();

  external void wire_rust_call_dart_loopback_twin_rust_async(
      NativePortType port_, PlatformPointer callback);

  external void wire_rust_call_dart_multi_times_twin_rust_async(
      NativePortType port_, PlatformPointer callback, int num_times);

  external void wire_rust_call_dart_one_arg_twin_rust_async(
      NativePortType port_, PlatformPointer callback);

  external void wire_rust_call_dart_return_twin_rust_async(
      NativePortType port_, PlatformPointer callback);

  external void wire_rust_call_dart_simple_twin_rust_async(
      NativePortType port_, PlatformPointer callback);

  external void wire_rust_call_dart_two_args_twin_rust_async(
      NativePortType port_, PlatformPointer callback);

  external void wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async(
      NativePortType port_, PlatformPointer input, PlatformPointer callback);

  external void wire_rust_call_dart_with_dart_opaque_result_twin_rust_async(
      NativePortType port_, PlatformPointer callback);

  external void wire_rust_call_dart_loopback_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_call_dart_multi_times_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_call_dart_one_arg_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_call_dart_return_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_call_dart_simple_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_call_dart_two_args_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_call_dart_loopback_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_rust_call_dart_multi_times_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_rust_call_dart_one_arg_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_rust_call_dart_return_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_rust_call_dart_simple_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_rust_call_dart_two_args_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_rust_call_dart_with_dart_opaque_arg_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_call_dart_with_dart_opaque_result_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_accept_dart_opaque_twin_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_loopback_twin_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_option_dart_opaque_twin_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_option_loopback_twin_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_unwrap_dart_opaque_twin_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external void wire_async_accept_dart_opaque_twin_rust_async(
      NativePortType port_, PlatformPointer opaque);

  external void wire_clone_dart_opaque_twin_rust_async(
      NativePortType port_, PlatformPointer opaque);

  external void wire_create_enum_dart_opaque_twin_rust_async(
      NativePortType port_, PlatformPointer opaque);

  external void wire_create_nested_dart_opaque_twin_rust_async(
      NativePortType port_, PlatformPointer opaque1, PlatformPointer opaque2);

  external void wire_drop_static_dart_opaque_twin_rust_async(
      NativePortType port_, int id);

  external void wire_get_enum_dart_opaque_twin_rust_async(
      NativePortType port_, List<dynamic> opaque);

  external void wire_get_nested_dart_opaque_twin_rust_async(
      NativePortType port_, List<dynamic> opaque);

  external void wire_loop_back_array_get_twin_rust_async(
      NativePortType port_, List<dynamic> opaque);

  external void wire_loop_back_array_twin_rust_async(
      NativePortType port_, PlatformPointer opaque);

  external void wire_loop_back_option_get_twin_rust_async(
      NativePortType port_, PlatformPointer? opaque);

  external void wire_loop_back_option_twin_rust_async(
      NativePortType port_, PlatformPointer opaque);

  external void wire_loop_back_twin_rust_async(
      NativePortType port_, PlatformPointer opaque);

  external void wire_loop_back_vec_get_twin_rust_async(
      NativePortType port_, List<dynamic> opaque);

  external void wire_loop_back_vec_twin_rust_async(
      NativePortType port_, PlatformPointer opaque);

  external void wire_panic_unwrap_dart_opaque_twin_rust_async(
      NativePortType port_, PlatformPointer opaque);

  external void wire_set_static_dart_opaque_twin_rust_async(
      NativePortType port_, int id, PlatformPointer opaque);

  external void wire_async_accept_dart_opaque_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_clone_dart_opaque_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_create_enum_dart_opaque_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_create_nested_dart_opaque_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_drop_static_dart_opaque_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_get_enum_dart_opaque_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_get_nested_dart_opaque_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_loop_back_array_get_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_loop_back_array_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_loop_back_option_get_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_loop_back_option_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_loop_back_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_loop_back_vec_get_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_loop_back_vec_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_panic_unwrap_dart_opaque_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_set_static_dart_opaque_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_async_accept_dart_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_clone_dart_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_create_enum_dart_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_create_nested_dart_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_drop_static_dart_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_get_enum_dart_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_get_nested_dart_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_loop_back_array_get_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_loop_back_array_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_loop_back_option_get_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_loop_back_option_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_loop_back_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_loop_back_vec_get_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_loop_back_vec_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_panic_unwrap_dart_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_set_static_dart_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_async_accept_dart_opaque_twin_sync(PlatformPointer opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_clone_dart_opaque_twin_sync(PlatformPointer opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_enum_dart_opaque_twin_sync(PlatformPointer opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_nested_dart_opaque_twin_sync(
          PlatformPointer opaque1, PlatformPointer opaque2);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_drop_static_dart_opaque_twin_sync(int id);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_enum_dart_opaque_twin_sync(List<dynamic> opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_nested_dart_opaque_twin_sync(List<dynamic> opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_loop_back_array_get_twin_sync(List<dynamic> opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_loop_back_array_twin_sync(PlatformPointer opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_loop_back_option_get_twin_sync(PlatformPointer? opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_loop_back_option_twin_sync(PlatformPointer opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_loop_back_twin_sync(PlatformPointer opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_loop_back_vec_get_twin_sync(List<dynamic> opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_loop_back_vec_twin_sync(PlatformPointer opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_panic_unwrap_dart_opaque_twin_sync(PlatformPointer opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_set_static_dart_opaque_twin_sync(int id, PlatformPointer opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_async_accept_dart_opaque_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_clone_dart_opaque_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_enum_dart_opaque_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_nested_dart_opaque_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_drop_static_dart_opaque_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_enum_dart_opaque_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_nested_dart_opaque_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_loop_back_array_get_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_loop_back_array_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_loop_back_option_get_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_loop_back_option_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_loop_back_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_loop_back_vec_get_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_loop_back_vec_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_panic_unwrap_dart_opaque_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_set_static_dart_opaque_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_DroppableTwinRustAsync_create_stream_twin_rust_async(
      NativePortType port_, Object that);

  external void wire_DroppableTwinRustAsync_get_drop_count_twin_rust_async(
      NativePortType port_);

  external void wire_DroppableTwinRustAsync_new_twin_rust_async(
      NativePortType port_);

  external void wire_DroppableTwinRustAsync_simple_method_twin_rust_async(
      NativePortType port_, Object that);

  external void
      wire_DroppableTwinRustAsyncSse_create_stream_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_DroppableTwinRustAsyncSse_get_drop_count_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_DroppableTwinRustAsyncSse_new_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_DroppableTwinRustAsyncSse_simple_method_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_DroppableTwinSse_create_stream_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_DroppableTwinSse_get_drop_count_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_DroppableTwinSse_new_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_DroppableTwinSse_simple_method_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_DroppableTwinSync_create_stream_twin_sync(
      NativePortType port_, Object that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_DroppableTwinSync_get_drop_count_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_DroppableTwinSync_new_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_DroppableTwinSync_simple_method_twin_sync(Object that);

  external void wire_DroppableTwinSyncSse_create_stream_twin_sync_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_DroppableTwinSyncSse_get_drop_count_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_DroppableTwinSyncSse_new_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_DroppableTwinSyncSse_simple_method_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_func_enum_simple_twin_rust_async(
      NativePortType port_, int arg);

  external void wire_func_enum_with_discriminant_twin_rust_async(
      NativePortType port_, int arg);

  external void wire_func_enum_with_item_mixed_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_enum_with_item_struct_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_enum_with_item_tuple_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_handle_enum_parameter_twin_rust_async(
      NativePortType port_, int weekday);

  external void wire_handle_enum_struct_twin_rust_async(
      NativePortType port_, List<dynamic> val);

  external void wire_handle_return_enum_twin_rust_async(
      NativePortType port_, String input);

  external void wire_multiply_by_ten_twin_rust_async(
      NativePortType port_, List<dynamic> measure);

  external void wire_print_note_twin_rust_async(
      NativePortType port_, List<dynamic> note);

  external void wire_func_enum_simple_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_enum_with_discriminant_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_enum_with_item_mixed_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_enum_with_item_struct_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_enum_with_item_tuple_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_enum_parameter_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_enum_struct_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_return_enum_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_multiply_by_ten_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_print_note_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_enum_simple_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_enum_with_discriminant_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_enum_with_item_mixed_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_enum_with_item_struct_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_enum_with_item_tuple_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_enum_parameter_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_enum_struct_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_return_enum_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_multiply_by_ten_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_print_note_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_enum_simple_twin_sync(int arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_enum_with_discriminant_twin_sync(int arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_enum_with_item_mixed_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_enum_with_item_struct_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_enum_with_item_tuple_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_enum_parameter_twin_sync(int weekday);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_enum_struct_twin_sync(List<dynamic> val);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_return_enum_twin_sync(String input);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_multiply_by_ten_twin_sync(List<dynamic> measure);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_print_note_twin_sync(List<dynamic> note);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_enum_simple_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_enum_with_discriminant_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_enum_with_item_mixed_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_enum_with_item_struct_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_enum_with_item_tuple_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_enum_parameter_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_enum_struct_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_return_enum_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_multiply_by_ten_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_print_note_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external void wire_EventTwinRustAsync_as_string_twin_rust_async(
      NativePortType port_, List<dynamic> that);

  external void wire_close_event_listener_twin_rust_async(NativePortType port_);

  external void wire_create_event_twin_rust_async(
      NativePortType port_, String address, String payload);

  external void wire_register_event_listener_twin_rust_async(
      NativePortType port_);

  external void wire_EventTwinRustAsyncSse_as_string_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_close_event_listener_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_create_event_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_register_event_listener_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_EventTwinSse_as_string_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_close_event_listener_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_create_event_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_register_event_listener_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_CustomStructTwinRustAsync_new_twin_rust_async(
      NativePortType port_, String message);

  external void
      wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_async(
          NativePortType port_, List<dynamic> that);

  external void
      wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_async(
          NativePortType port_, List<dynamic> that);

  external void
      wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_async(
          NativePortType port_);

  external void
      wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_async(
          NativePortType port_);

  external void wire_SomeStructTwinRustAsync_new_twin_rust_async(
      NativePortType port_, int value);

  external void
      wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_async(
          NativePortType port_, List<dynamic> that);

  external void
      wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_async(
          NativePortType port_, List<dynamic> that);

  external void
      wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_async(
          NativePortType port_);

  external void
      wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_async(
          NativePortType port_);

  external void wire_custom_enum_error_panic_twin_rust_async(
      NativePortType port_);

  external void wire_custom_enum_error_return_error_twin_rust_async(
      NativePortType port_);

  external void wire_custom_enum_error_return_ok_twin_rust_async(
      NativePortType port_, int arg);

  external void wire_custom_nested_error_return_error_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_custom_struct_error_return_error_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_return_error_twin_rust_async(NativePortType port_);

  external void wire_func_type_fallible_panic_twin_rust_async(
      NativePortType port_);

  external void wire_func_type_infallible_panic_twin_rust_async(
      NativePortType port_);

  external void wire_panic_with_custom_result_twin_rust_async(
      NativePortType port_);

  external void wire_return_custom_nested_error_1_twin_rust_async(
      NativePortType port_);

  external void wire_return_custom_nested_error_1_variant1_twin_rust_async(
      NativePortType port_);

  external void wire_return_custom_nested_error_2_twin_rust_async(
      NativePortType port_);

  external void wire_return_custom_struct_error_twin_rust_async(
      NativePortType port_);

  external void wire_return_custom_struct_ok_twin_rust_async(
      NativePortType port_);

  external void wire_return_err_custom_error_twin_rust_async(
      NativePortType port_);

  external void wire_return_error_variant_twin_rust_async(
      NativePortType port_, int variant);

  external void wire_return_ok_custom_error_twin_rust_async(
      NativePortType port_);

  external void wire_stream_sink_throw_anyhow_twin_rust_async(
      NativePortType port_);

  external void wire_throw_anyhow_twin_rust_async(NativePortType port_);

  external void wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_custom_enum_error_panic_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_custom_enum_error_return_error_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_custom_enum_error_return_ok_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_custom_nested_error_return_error_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_custom_struct_error_return_error_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_return_error_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_type_fallible_panic_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_type_infallible_panic_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_panic_with_custom_result_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_return_custom_nested_error_1_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_return_custom_nested_error_1_variant1_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_return_custom_nested_error_2_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_return_custom_struct_error_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_return_custom_struct_ok_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_return_err_custom_error_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_return_error_variant_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_return_ok_custom_error_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_stream_sink_throw_anyhow_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_throw_anyhow_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_CustomStructTwinSse_new_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void
      wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_CustomStructTwinSse_static_return_custom_struct_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_SomeStructTwinSse_new_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void
      wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_SomeStructTwinSse_static_return_err_custom_error_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_SomeStructTwinSse_static_return_ok_custom_error_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_custom_enum_error_panic_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_custom_enum_error_return_error_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_custom_enum_error_return_ok_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_custom_nested_error_return_error_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_custom_struct_error_return_error_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_return_error_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_type_fallible_panic_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_type_infallible_panic_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_panic_with_custom_result_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_return_custom_nested_error_1_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_return_custom_nested_error_1_variant1_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_return_custom_nested_error_2_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_return_custom_struct_error_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_return_custom_struct_ok_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_return_err_custom_error_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_return_error_variant_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_return_ok_custom_error_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_stream_sink_throw_anyhow_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_throw_anyhow_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_CustomStructTwinSync_new_twin_sync(String message);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_sync(
          List<dynamic> that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_sync(
          List<dynamic> that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_CustomStructTwinSync_static_return_custom_struct_error_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SomeStructTwinSync_new_twin_sync(int value);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_sync(
          List<dynamic> that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_sync(
          List<dynamic> that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SomeStructTwinSync_static_return_err_custom_error_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SomeStructTwinSync_static_return_ok_custom_error_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_custom_enum_error_panic_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_custom_enum_error_return_error_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_custom_enum_error_return_ok_twin_sync(int arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_custom_nested_error_return_error_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_custom_struct_error_return_error_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_return_error_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_type_fallible_panic_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_type_infallible_panic_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_panic_with_custom_result_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_custom_nested_error_1_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_custom_nested_error_1_variant1_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_custom_nested_error_2_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_custom_struct_error_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_custom_struct_ok_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_err_custom_error_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_error_variant_twin_sync(int variant);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_return_ok_custom_error_twin_sync();

  external void wire_stream_sink_throw_anyhow_twin_sync(NativePortType port_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_throw_anyhow_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_CustomStructTwinSyncSse_new_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SomeStructTwinSyncSse_new_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_custom_enum_error_panic_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_custom_enum_error_return_error_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_custom_enum_error_return_ok_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_custom_nested_error_return_error_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_custom_struct_error_return_error_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_return_error_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_type_fallible_panic_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_type_infallible_panic_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_panic_with_custom_result_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_custom_nested_error_1_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_custom_nested_error_1_variant1_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_custom_nested_error_2_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_custom_struct_error_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_custom_struct_ok_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_err_custom_error_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_error_variant_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_return_ok_custom_error_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_stream_sink_throw_anyhow_twin_sync_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_throw_anyhow_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external void wire_call_new_module_system_twin_rust_async(
      NativePortType port_);

  external void wire_call_old_module_system_twin_rust_async(
      NativePortType port_);

  external void wire_use_imported_enum_twin_rust_async(
      NativePortType port_, int my_enum);

  external void wire_use_imported_struct_twin_rust_async(
      NativePortType port_, List<dynamic> my_struct);

  external void wire_call_new_module_system_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_call_old_module_system_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_use_imported_enum_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_use_imported_struct_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_call_new_module_system_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_call_old_module_system_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_use_imported_enum_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_use_imported_struct_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_call_new_module_system_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_call_old_module_system_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_use_imported_enum_twin_sync(int my_enum);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_use_imported_struct_twin_sync(List<dynamic> my_struct);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_call_new_module_system_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_call_old_module_system_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_use_imported_enum_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_use_imported_struct_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_func_hash_map_i32_i32_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_hash_map_string_bytes_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_hash_map_string_complex_enum_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_hash_map_string_simple_enum_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_hash_map_string_string_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_hash_map_string_struct_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_hash_set_i32_twin_rust_async(
      NativePortType port_, Int32List arg);

  external void wire_func_hash_set_string_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_hash_map_i32_i32_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_hash_map_string_bytes_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_hash_map_string_complex_enum_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_hash_map_string_simple_enum_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_hash_map_string_string_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_hash_map_string_struct_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_hash_set_i32_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_hash_set_string_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_hash_map_i32_i32_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_hash_map_string_bytes_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_hash_map_string_complex_enum_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_hash_map_string_simple_enum_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_hash_map_string_string_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_hash_map_string_struct_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_hash_set_i32_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_hash_set_string_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_map_i32_i32_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_map_string_bytes_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_map_string_complex_enum_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_map_string_simple_enum_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_map_string_string_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_map_string_struct_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_set_i32_twin_sync(Int32List arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_hash_set_string_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_map_i32_i32_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_map_string_bytes_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_map_string_complex_enum_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_map_string_simple_enum_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_map_string_string_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_map_string_struct_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_set_i32_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_hash_set_string_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_async(
          NativePortType port_, String a, String b);

  external void wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_async(
      NativePortType port_, List<dynamic> that, String b);

  external void
      wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_async(
          NativePortType port_);

  external void
      wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_async(
          NativePortType port_, int key, int max);

  external void
      wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_async(
          NativePortType port_, List<dynamic> that);

  external void
      wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_async(
          NativePortType port_, List<dynamic> that, int key, int max);

  external void wire_ConcatenateWithTwinRustAsync_new_twin_rust_async(
      NativePortType port_, String a);

  external void wire_ConcatenateWithTwinRustAsync_simple_getter_twin_rust_async(
      NativePortType port_, List<dynamic> that);

  external void wire_MyCallableTwinRustAsync_call(
      NativePortType port_, List<dynamic> that, String two);

  external void wire_SimpleStructTwinRustAsync_arg_self_twin_rust_async(
      NativePortType port_, List<dynamic> a, List<dynamic> b);

  external void wire_SimpleStructTwinRustAsync_return_self_twin_rust_async(
      NativePortType port_, String one);

  external void wire_SimpleStructTwinRustAsync_vec_self_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_SumWithTwinRustAsync_sum_twin_rust_async(
      NativePortType port_, List<dynamic> that, int y, int z);

  external void wire_get_sum_array_twin_rust_async(
      NativePortType port_, int a, int b, int c);

  external void wire_get_sum_struct_twin_rust_async(NativePortType port_);

  external void
      wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_ConcatenateWithTwinRustAsyncSse_simple_getter_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_MyCallableTwinRustAsyncSse_call(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_SimpleStructTwinRustAsyncSse_arg_self_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_SimpleStructTwinRustAsyncSse_return_self_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_SimpleStructTwinRustAsyncSse_vec_self_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_get_sum_array_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_get_sum_struct_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_ConcatenateWithTwinSse_concatenate_static_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_ConcatenateWithTwinSse_concatenate_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_ConcatenateWithTwinSse_new_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_ConcatenateWithTwinSse_simple_getter_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_MyCallableTwinSse_call(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_SimpleStructTwinSse_arg_self_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_SimpleStructTwinSse_return_self_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_SimpleStructTwinSse_vec_self_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_SumWithTwinSse_sum_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_get_sum_array_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_get_sum_struct_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConcatenateWithTwinSync_concatenate_static_twin_sync(
          String a, String b);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConcatenateWithTwinSync_concatenate_twin_sync(
          List<dynamic> that, String b);

  external void
      wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_sync(
          NativePortType port_);

  external void
      wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_sync(
          NativePortType port_, int key, int max);

  external void
      wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_sync(
          NativePortType port_, List<dynamic> that);

  external void wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_sync(
      NativePortType port_, List<dynamic> that, int key, int max);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConcatenateWithTwinSync_new_twin_sync(String a);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_ConcatenateWithTwinSync_simple_getter_twin_sync(List<dynamic> that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_MyCallableTwinSync_call(List<dynamic> that, String two);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SimpleStructTwinSync_arg_self_twin_sync(
          List<dynamic> a, List<dynamic> b);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SimpleStructTwinSync_return_self_twin_sync(String one);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SimpleStructTwinSync_vec_self_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_SumWithTwinSync_sum_twin_sync(List<dynamic> that, int y, int z);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_sum_array_twin_sync(int a, int b, int c);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_sum_struct_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_ConcatenateWithTwinSyncSse_new_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_ConcatenateWithTwinSyncSse_simple_getter_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_MyCallableTwinSyncSse_call(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SimpleStructTwinSyncSse_arg_self_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SimpleStructTwinSyncSse_return_self_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SimpleStructTwinSyncSse_vec_self_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_SumWithTwinSyncSse_sum_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_sum_array_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_sum_struct_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external void wire_app_settings_stream_twin_rust_async(NativePortType port_);

  external void wire_app_settings_vec_stream_twin_rust_async(
      NativePortType port_);

  external void wire_first_number_twin_rust_async(
      NativePortType port_, List<dynamic> nums);

  external void wire_first_sequence_twin_rust_async(
      NativePortType port_, List<dynamic> seqs);

  external void wire_get_app_settings_twin_rust_async(NativePortType port_);

  external void wire_get_fallible_app_settings_twin_rust_async(
      NativePortType port_);

  external void wire_get_message_twin_rust_async(NativePortType port_);

  external void wire_is_app_embedded_twin_rust_async(
      NativePortType port_, List<dynamic> app_settings);

  external void wire_mirror_array_enum_stream_twin_rust_async(
      NativePortType port_);

  external void wire_mirror_enum_stream_twin_rust_async(NativePortType port_);

  external void wire_mirror_map_enum_stream_twin_rust_async(
      NativePortType port_);

  external void wire_mirror_option_enum_stream_twin_rust_async(
      NativePortType port_);

  external void wire_mirror_set_enum_stream_twin_rust_async(
      NativePortType port_);

  external void wire_mirror_struct_stream_twin_rust_async(NativePortType port_);

  external void wire_mirror_tuple_stream_twin_rust_async(NativePortType port_);

  external void wire_mirror_vec_enum_stream_twin_rust_async(
      NativePortType port_);

  external void wire_repeat_number_twin_rust_async(
      NativePortType port_, int num, int times);

  external void wire_repeat_sequence_twin_rust_async(
      NativePortType port_, int seq, int times);

  external void wire_test_contains_mirrored_sub_struct_twin_rust_async(
      NativePortType port_);

  external void wire_test_fallible_of_raw_string_mirrored_twin_rust_async(
      NativePortType port_);

  external void wire_test_hashmap_with_mirrored_value_twin_rust_async(
      NativePortType port_);

  external void wire_test_list_of_nested_enums_mirrored_twin_rust_async(
      NativePortType port_);

  external void wire_test_list_of_raw_nested_string_mirrored_twin_rust_async(
      NativePortType port_);

  external void wire_test_nested_raw_string_mirrored_twin_rust_async(
      NativePortType port_);

  external void wire_test_raw_string_enum_mirrored_twin_rust_async(
      NativePortType port_, bool nested);

  external void wire_test_raw_string_mirrored_twin_rust_async(
      NativePortType port_);

  external void wire_app_settings_stream_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_app_settings_vec_stream_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_first_number_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_first_sequence_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_get_app_settings_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_get_fallible_app_settings_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_get_message_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_is_app_embedded_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_mirror_array_enum_stream_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_mirror_enum_stream_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_mirror_map_enum_stream_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_mirror_option_enum_stream_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_mirror_set_enum_stream_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_mirror_struct_stream_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_mirror_tuple_stream_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_mirror_vec_enum_stream_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_repeat_number_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_repeat_sequence_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_test_contains_mirrored_sub_struct_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_fallible_of_raw_string_mirrored_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_hashmap_with_mirrored_value_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_list_of_nested_enums_mirrored_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_test_nested_raw_string_mirrored_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_raw_string_enum_mirrored_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_raw_string_mirrored_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_app_settings_stream_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_app_settings_vec_stream_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_first_number_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_first_sequence_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_get_app_settings_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_get_fallible_app_settings_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_get_message_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_is_app_embedded_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_mirror_array_enum_stream_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_mirror_enum_stream_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_mirror_map_enum_stream_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_mirror_option_enum_stream_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_mirror_set_enum_stream_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_mirror_struct_stream_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_mirror_tuple_stream_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_mirror_vec_enum_stream_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_repeat_number_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_repeat_sequence_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_test_contains_mirrored_sub_struct_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_fallible_of_raw_string_mirrored_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_hashmap_with_mirrored_value_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_list_of_nested_enums_mirrored_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_list_of_raw_nested_string_mirrored_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_nested_raw_string_mirrored_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_raw_string_enum_mirrored_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_raw_string_mirrored_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_app_settings_stream_twin_sync(NativePortType port_);

  external void wire_app_settings_vec_stream_twin_sync(NativePortType port_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_first_number_twin_sync(List<dynamic> nums);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_first_sequence_twin_sync(List<dynamic> seqs);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_app_settings_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_fallible_app_settings_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_get_message_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_is_app_embedded_twin_sync(List<dynamic> app_settings);

  external void wire_mirror_array_enum_stream_twin_sync(NativePortType port_);

  external void wire_mirror_enum_stream_twin_sync(NativePortType port_);

  external void wire_mirror_map_enum_stream_twin_sync(NativePortType port_);

  external void wire_mirror_option_enum_stream_twin_sync(NativePortType port_);

  external void wire_mirror_set_enum_stream_twin_sync(NativePortType port_);

  external void wire_mirror_struct_stream_twin_sync(NativePortType port_);

  external void wire_mirror_tuple_stream_twin_sync(NativePortType port_);

  external void wire_mirror_vec_enum_stream_twin_sync(NativePortType port_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_repeat_number_twin_sync(int num, int times);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_repeat_sequence_twin_sync(int seq, int times);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_contains_mirrored_sub_struct_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_fallible_of_raw_string_mirrored_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_hashmap_with_mirrored_value_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_list_of_nested_enums_mirrored_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_list_of_raw_nested_string_mirrored_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_nested_raw_string_mirrored_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_raw_string_enum_mirrored_twin_sync(bool nested);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_raw_string_mirrored_twin_sync();

  external void wire_app_settings_stream_twin_sync_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_app_settings_vec_stream_twin_sync_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_first_number_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_first_sequence_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_app_settings_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_fallible_app_settings_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_get_message_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_is_app_embedded_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external void wire_mirror_array_enum_stream_twin_sync_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_mirror_enum_stream_twin_sync_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_mirror_map_enum_stream_twin_sync_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_mirror_option_enum_stream_twin_sync_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_mirror_set_enum_stream_twin_sync_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_mirror_struct_stream_twin_sync_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_mirror_tuple_stream_twin_sync_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_mirror_vec_enum_stream_twin_sync_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_repeat_number_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_repeat_sequence_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_contains_mirrored_sub_struct_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_fallible_of_raw_string_mirrored_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_hashmap_with_mirrored_value_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_list_of_nested_enums_mirrored_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_list_of_raw_nested_string_mirrored_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_nested_raw_string_mirrored_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_raw_string_enum_mirrored_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_raw_string_mirrored_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_handle_big_buffers_twin_rust_async(NativePortType port_);

  external void wire_handle_complex_struct_twin_rust_async(
      NativePortType port_, List<dynamic> s);

  external void wire_handle_nested_struct_twin_rust_async(
      NativePortType port_, List<dynamic> s);

  external void wire_handle_string_twin_rust_async(
      NativePortType port_, String s);

  external void wire_handle_struct_twin_rust_async(
      NativePortType port_, List<dynamic> arg, List<dynamic> boxed);

  external void wire_handle_vec_u8_twin_rust_async(
      NativePortType port_, List<int> v);

  external void wire_list_of_primitive_enums_twin_rust_async(
      NativePortType port_, List<dynamic> weekdays);

  external void wire_test_abc_enum_twin_rust_async(
      NativePortType port_, List<dynamic> abc);

  external void wire_test_struct_with_enum_twin_rust_async(
      NativePortType port_, List<dynamic> se);

  external void wire_handle_big_buffers_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_complex_struct_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_nested_struct_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_string_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_struct_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_vec_u8_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_list_of_primitive_enums_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_abc_enum_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_test_struct_with_enum_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_big_buffers_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_complex_struct_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_nested_struct_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_string_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_struct_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_vec_u8_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_list_of_primitive_enums_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_test_abc_enum_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_test_struct_with_enum_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_big_buffers_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_complex_struct_twin_sync(List<dynamic> s);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_nested_struct_twin_sync(List<dynamic> s);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_string_twin_sync(String s);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_struct_twin_sync(List<dynamic> arg, List<dynamic> boxed);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_vec_u8_twin_sync(List<int> v);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_list_of_primitive_enums_twin_sync(List<dynamic> weekdays);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_abc_enum_twin_sync(List<dynamic> abc);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_struct_with_enum_twin_sync(List<dynamic> se);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_big_buffers_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_complex_struct_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_nested_struct_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_string_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_struct_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_vec_u8_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_list_of_primitive_enums_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_abc_enum_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_struct_with_enum_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_empty_struct_twin_rust_async(
      NativePortType port_, List<dynamic> empty);

  external void wire_func_return_unit_twin_rust_async(NativePortType port_);

  external void wire_handle_list_of_struct_twin_rust_async(
      NativePortType port_, List<dynamic> l);

  external void wire_handle_string_list_twin_rust_async(
      NativePortType port_, List<dynamic> names);

  external void wire_empty_struct_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_return_unit_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_list_of_struct_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_string_list_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_empty_struct_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_return_unit_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_list_of_struct_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_string_list_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_empty_struct_twin_sync(List<dynamic> empty);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_return_unit_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_list_of_struct_twin_sync(List<dynamic> l);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_string_list_twin_sync(List<dynamic> names);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_empty_struct_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_return_unit_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_list_of_struct_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_string_list_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_handle_newtype_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_handle_newtype_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_newtype_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_newtype_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_newtype_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external void wire_primitive_optional_types_twin_rust_async(
      NativePortType port_,
      int? my_i32,
      Object? my_i64,
      double? my_f64,
      bool? my_bool);

  external void wire_primitive_optional_types_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_primitive_optional_types_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_primitive_optional_types_twin_sync(
          int? my_i32, Object? my_i64, double? my_f64, bool? my_bool);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_primitive_optional_types_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_handle_increment_boxed_optional_twin_rust_async(
      NativePortType port_, double? opt);

  external void wire_handle_option_box_arguments_twin_rust_async(
      NativePortType port_,
      int? i8box,
      int? u8box,
      int? i32box,
      Object? i64box,
      double? f64box,
      bool? boolbox,
      List<dynamic>? structbox);

  external void wire_handle_optional_increment_twin_rust_async(
      NativePortType port_, List<dynamic>? opt);

  external void wire_handle_optional_return_twin_rust_async(
      NativePortType port_, double left, double right);

  external void wire_handle_optional_struct_twin_rust_async(
      NativePortType port_, String? document);

  external void wire_handle_vec_of_opts_twin_rust_async(
      NativePortType port_, List<dynamic> opt);

  external void wire_handle_increment_boxed_optional_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_option_box_arguments_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_optional_increment_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_optional_return_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_optional_struct_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_vec_of_opts_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_increment_boxed_optional_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_option_box_arguments_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_optional_increment_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_optional_return_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_optional_struct_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_vec_of_opts_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_increment_boxed_optional_twin_sync(double? opt);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_option_box_arguments_twin_sync(
          int? i8box,
          int? u8box,
          int? i32box,
          Object? i64box,
          double? f64box,
          bool? boolbox,
          List<dynamic>? structbox);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_optional_increment_twin_sync(List<dynamic>? opt);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_optional_return_twin_sync(double left, double right);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_optional_struct_twin_sync(String? document);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_vec_of_opts_twin_sync(List<dynamic> opt);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_increment_boxed_optional_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_option_box_arguments_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_optional_increment_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_optional_return_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_optional_struct_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_vec_of_opts_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_handle_vec_of_primitive_twin_rust_async(
      NativePortType port_, int n);

  external void wire_handle_vec_of_primitive_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_vec_of_primitive_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_vec_of_primitive_twin_sync(int n);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_vec_of_primitive_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_primitive_types_twin_rust_async(NativePortType port_,
      int my_i32, Object my_i64, double my_f64, bool my_bool);

  external void wire_primitive_u32_twin_rust_async(
      NativePortType port_, int my_u32);

  external void wire_primitive_types_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_primitive_u32_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_primitive_types_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_primitive_u32_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_primitive_types_twin_sync(
          int my_i32, Object my_i64, double my_f64, bool my_bool);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_primitive_u32_twin_sync(int my_u32);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_primitive_types_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_primitive_u32_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external void wire_test_more_than_just_one_raw_string_struct_twin_rust_async(
      NativePortType port_);

  external void wire_test_raw_string_item_struct_twin_rust_async(
      NativePortType port_);

  external void
      wire_test_more_than_just_one_raw_string_struct_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_test_raw_string_item_struct_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_more_than_just_one_raw_string_struct_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_test_raw_string_item_struct_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_more_than_just_one_raw_string_struct_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_raw_string_item_struct_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_more_than_just_one_raw_string_struct_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_raw_string_item_struct_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_NonCloneSimpleTwinMoi_instance_method_arg_borrow_twin_moi(
      NativePortType port_, Object that);

  external void
      wire_NonCloneSimpleTwinMoi_instance_method_arg_mut_borrow_twin_moi(
          NativePortType port_, Object that);

  external void wire_NonCloneSimpleTwinMoi_instance_method_arg_own_twin_moi(
      NativePortType port_, Object that);

  external void wire_NonCloneSimpleTwinMoi_instance_method_getter_twin_moi(
      NativePortType port_, Object that);

  external void wire_NonCloneSimpleTwinMoi_instance_method_return_own_twin_moi(
      NativePortType port_, Object that);

  external void wire_NonCloneSimpleTwinMoi_new_custom_name_twin_moi(
      NativePortType port_);

  external void wire_NonCloneSimpleTwinMoi_new_twin_moi(NativePortType port_);

  external void wire_NonCloneSimpleTwinMoi_new_with_result_twin_moi(
      NativePortType port_);

  external void wire_NonCloneSimpleTwinMoi_static_method_arg_borrow_twin_moi(
      NativePortType port_, Object arg);

  external void
      wire_NonCloneSimpleTwinMoi_static_method_arg_mut_borrow_twin_moi(
          NativePortType port_, Object arg);

  external void wire_NonCloneSimpleTwinMoi_static_method_arg_own_twin_moi(
      NativePortType port_, Object arg);

  external void wire_NonCloneSimpleTwinMoi_static_method_return_own_twin_moi(
      NativePortType port_);

  external void wire_rust_auto_opaque_arg_borrow_twin_moi(
      NativePortType port_, Object arg, int expect);

  external void wire_rust_auto_opaque_arg_mut_borrow_twin_moi(
      NativePortType port_, Object arg, int expect, int adder);

  external void wire_rust_auto_opaque_arg_own_and_return_own_twin_moi(
      NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_arg_own_twin_moi(
      NativePortType port_, Object arg, int expect);

  external void wire_rust_auto_opaque_arg_vec_own_twin_moi(
      NativePortType port_, List<dynamic> arg, List<int> expect);

  external void wire_rust_auto_opaque_borrow_and_borrow_twin_moi(
      NativePortType port_, Object a, Object b);

  external void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_moi(
      NativePortType port_, Object borrow, Object mut_borrow);

  external void wire_rust_auto_opaque_callable_arg_twin_moi(
      NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_callable_return_twin_moi(
      NativePortType port_);

  external void wire_rust_auto_opaque_dummy_twin_moi(
      NativePortType port_, Object a, Object b);

  external void wire_rust_auto_opaque_enum_arg_borrow_twin_moi(
      NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_enum_return_own_twin_moi(
      NativePortType port_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_moi(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_moi(
          NativePortType port_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_moi(
          NativePortType port_);

  external void wire_rust_auto_opaque_explicit_arg_twin_moi(
      NativePortType port_, Object arg, int expect);

  external void wire_rust_auto_opaque_explicit_return_twin_moi(
      NativePortType port_, int initial);

  external void wire_rust_auto_opaque_explicit_struct_twin_moi(
      NativePortType port_, List<dynamic> arg);

  external void wire_rust_auto_opaque_normal_and_opaque_arg_twin_moi(
      NativePortType port_, Object a, String b);

  external void wire_rust_auto_opaque_plus_sign_arg_twin_moi(
      NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_plus_sign_return_twin_moi(
      NativePortType port_);

  external void wire_rust_auto_opaque_return_opaque_one_and_two_twin_moi(
      NativePortType port_);

  external void wire_rust_auto_opaque_return_opaque_two_twin_moi(
      NativePortType port_);

  external void wire_rust_auto_opaque_return_own_twin_moi(
      NativePortType port_, int initial);

  external void wire_rust_auto_opaque_return_vec_own_twin_moi(
      NativePortType port_);

  external void wire_rust_auto_opaque_stream_sink_twin_moi(
      NativePortType port_);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_moi(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_moi(
          NativePortType port_);

  external void wire_rust_auto_opaque_trait_object_arg_borrow_twin_moi(
      NativePortType port_, Object arg, String expect);

  external void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_moi(
      NativePortType port_, Object arg, String expect);

  external void wire_rust_auto_opaque_trait_object_arg_own_twin_moi(
      NativePortType port_, Object arg, String expect);

  external void wire_rust_auto_opaque_trait_object_return_own_one_twin_moi(
      NativePortType port_);

  external void wire_rust_auto_opaque_trait_object_return_own_two_twin_moi(
      NativePortType port_);

  external void wire_rust_auto_opaque_two_args_twin_moi(
      NativePortType port_, Object a, Object b);

  external void
      wire_NonCloneSimpleTwinRustAsync_instance_method_arg_borrow_twin_rust_async(
          NativePortType port_, Object that);

  external void
      wire_NonCloneSimpleTwinRustAsync_instance_method_arg_mut_borrow_twin_rust_async(
          NativePortType port_, Object that);

  external void
      wire_NonCloneSimpleTwinRustAsync_instance_method_arg_own_twin_rust_async(
          NativePortType port_, Object that);

  external void
      wire_NonCloneSimpleTwinRustAsync_instance_method_getter_twin_rust_async(
          NativePortType port_, Object that);

  external void
      wire_NonCloneSimpleTwinRustAsync_instance_method_return_own_twin_rust_async(
          NativePortType port_, Object that);

  external void
      wire_NonCloneSimpleTwinRustAsync_new_custom_name_twin_rust_async(
          NativePortType port_);

  external void wire_NonCloneSimpleTwinRustAsync_new_twin_rust_async(
      NativePortType port_);

  external void
      wire_NonCloneSimpleTwinRustAsync_new_with_result_twin_rust_async(
          NativePortType port_);

  external void
      wire_NonCloneSimpleTwinRustAsync_static_method_arg_borrow_twin_rust_async(
          NativePortType port_, Object arg);

  external void
      wire_NonCloneSimpleTwinRustAsync_static_method_arg_mut_borrow_twin_rust_async(
          NativePortType port_, Object arg);

  external void
      wire_NonCloneSimpleTwinRustAsync_static_method_arg_own_twin_rust_async(
          NativePortType port_, Object arg);

  external void
      wire_NonCloneSimpleTwinRustAsync_static_method_return_own_twin_rust_async(
          NativePortType port_);

  external void wire_rust_auto_opaque_arg_borrow_twin_rust_async(
      NativePortType port_, Object arg, int expect);

  external void wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async(
      NativePortType port_, Object arg, int expect, int adder);

  external void wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async(
      NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_arg_own_twin_rust_async(
      NativePortType port_, Object arg, int expect);

  external void wire_rust_auto_opaque_arg_vec_own_twin_rust_async(
      NativePortType port_, List<dynamic> arg, List<int> expect);

  external void wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async(
      NativePortType port_, Object a, Object b);

  external void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async(
      NativePortType port_, Object borrow, Object mut_borrow);

  external void wire_rust_auto_opaque_callable_arg_twin_rust_async(
      NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_callable_return_twin_rust_async(
      NativePortType port_);

  external void wire_rust_auto_opaque_dummy_twin_rust_async(
      NativePortType port_, Object a, Object b);

  external void wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async(
      NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_enum_return_own_twin_rust_async(
      NativePortType port_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async(
          NativePortType port_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async(
          NativePortType port_);

  external void wire_rust_auto_opaque_explicit_arg_twin_rust_async(
      NativePortType port_, Object arg, int expect);

  external void wire_rust_auto_opaque_explicit_return_twin_rust_async(
      NativePortType port_, int initial);

  external void wire_rust_auto_opaque_explicit_struct_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async(
      NativePortType port_, Object a, String b);

  external void wire_rust_auto_opaque_plus_sign_arg_twin_rust_async(
      NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_plus_sign_return_twin_rust_async(
      NativePortType port_);

  external void wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async(
      NativePortType port_);

  external void wire_rust_auto_opaque_return_opaque_two_twin_rust_async(
      NativePortType port_);

  external void wire_rust_auto_opaque_return_own_twin_rust_async(
      NativePortType port_, int initial);

  external void wire_rust_auto_opaque_return_vec_own_twin_rust_async(
      NativePortType port_);

  external void wire_rust_auto_opaque_stream_sink_twin_rust_async(
      NativePortType port_);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async(
          NativePortType port_);

  external void wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async(
      NativePortType port_, Object arg, String expect);

  external void
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async(
          NativePortType port_, Object arg, String expect);

  external void wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async(
      NativePortType port_, Object arg, String expect);

  external void
      wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async(
          NativePortType port_);

  external void
      wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async(
          NativePortType port_);

  external void wire_rust_auto_opaque_two_args_twin_rust_async(
      NativePortType port_, Object a, Object b);

  external void
      wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_borrow_twin_rust_async_moi(
          NativePortType port_, Object that);

  external void
      wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_mut_borrow_twin_rust_async_moi(
          NativePortType port_, Object that);

  external void
      wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_own_twin_rust_async_moi(
          NativePortType port_, Object that);

  external void
      wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_getter_twin_rust_async_moi(
          NativePortType port_, Object that);

  external void
      wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_return_own_twin_rust_async_moi(
          NativePortType port_, Object that);

  external void
      wire_NonCloneSimpleTwinRustAsyncMoi_new_custom_name_twin_rust_async_moi(
          NativePortType port_);

  external void wire_NonCloneSimpleTwinRustAsyncMoi_new_twin_rust_async_moi(
      NativePortType port_);

  external void
      wire_NonCloneSimpleTwinRustAsyncMoi_new_with_result_twin_rust_async_moi(
          NativePortType port_);

  external void
      wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_borrow_twin_rust_async_moi(
          NativePortType port_, Object arg);

  external void
      wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_mut_borrow_twin_rust_async_moi(
          NativePortType port_, Object arg);

  external void
      wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_own_twin_rust_async_moi(
          NativePortType port_, Object arg);

  external void
      wire_NonCloneSimpleTwinRustAsyncMoi_static_method_return_own_twin_rust_async_moi(
          NativePortType port_);

  external void wire_rust_auto_opaque_arg_borrow_twin_rust_async_moi(
      NativePortType port_, Object arg, int expect);

  external void wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_moi(
      NativePortType port_, Object arg, int expect, int adder);

  external void
      wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_moi(
          NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_arg_own_twin_rust_async_moi(
      NativePortType port_, Object arg, int expect);

  external void wire_rust_auto_opaque_arg_vec_own_twin_rust_async_moi(
      NativePortType port_, List<dynamic> arg, List<int> expect);

  external void wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_moi(
      NativePortType port_, Object a, Object b);

  external void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_moi(
      NativePortType port_, Object borrow, Object mut_borrow);

  external void wire_rust_auto_opaque_callable_arg_twin_rust_async_moi(
      NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_callable_return_twin_rust_async_moi(
      NativePortType port_);

  external void wire_rust_auto_opaque_dummy_twin_rust_async_moi(
      NativePortType port_, Object a, Object b);

  external void wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_moi(
      NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_enum_return_own_twin_rust_async_moi(
      NativePortType port_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_moi(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_moi(
          NativePortType port_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_moi(
          NativePortType port_);

  external void wire_rust_auto_opaque_explicit_arg_twin_rust_async_moi(
      NativePortType port_, Object arg, int expect);

  external void wire_rust_auto_opaque_explicit_return_twin_rust_async_moi(
      NativePortType port_, int initial);

  external void wire_rust_auto_opaque_explicit_struct_twin_rust_async_moi(
      NativePortType port_, List<dynamic> arg);

  external void wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_moi(
      NativePortType port_, Object a, String b);

  external void wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_moi(
      NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_plus_sign_return_twin_rust_async_moi(
      NativePortType port_);

  external void
      wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_moi(
          NativePortType port_);

  external void wire_rust_auto_opaque_return_opaque_two_twin_rust_async_moi(
      NativePortType port_);

  external void wire_rust_auto_opaque_return_own_twin_rust_async_moi(
      NativePortType port_, int initial);

  external void wire_rust_auto_opaque_return_vec_own_twin_rust_async_moi(
      NativePortType port_);

  external void wire_rust_auto_opaque_stream_sink_twin_rust_async_moi(
      NativePortType port_);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_moi(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_moi(
          NativePortType port_);

  external void
      wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_moi(
          NativePortType port_, Object arg, String expect);

  external void
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_moi(
          NativePortType port_, Object arg, String expect);

  external void wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_moi(
      NativePortType port_, Object arg, String expect);

  external void
      wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_moi(
          NativePortType port_);

  external void
      wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_moi(
          NativePortType port_);

  external void wire_rust_auto_opaque_two_args_twin_rust_async_moi(
      NativePortType port_, Object a, Object b);

  external void
      wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_mut_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSse_instance_method_getter_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSse_instance_method_return_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSse_new_custom_name_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_NonCloneSimpleTwinRustAsyncSse_new_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSse_new_with_result_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_mut_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSse_static_method_return_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_arg_own_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_callable_arg_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_callable_return_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_dummy_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_explicit_return_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_return_own_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_stream_sink_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_two_args_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_mut_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_getter_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_return_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_new_custom_name_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_new_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_new_with_result_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_mut_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_return_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_arg_own_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_callable_arg_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_callable_return_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_dummy_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_explicit_return_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_return_own_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_stream_sink_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_two_args_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_NonCloneSimpleTwinSse_instance_method_getter_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_NonCloneSimpleTwinSse_new_custom_name_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_NonCloneSimpleTwinSse_new_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_NonCloneSimpleTwinSse_new_with_result_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_NonCloneSimpleTwinSse_static_method_return_own_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_arg_borrow_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_rust_auto_opaque_arg_mut_borrow_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_arg_own_and_return_own_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_arg_own_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_rust_auto_opaque_arg_vec_own_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_rust_auto_opaque_borrow_and_borrow_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_callable_arg_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_callable_return_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_dummy_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_rust_auto_opaque_enum_arg_borrow_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_enum_return_own_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_explicit_arg_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_explicit_return_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_explicit_struct_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_plus_sign_arg_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_plus_sign_return_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_return_opaque_two_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_return_own_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_rust_auto_opaque_return_vec_own_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_stream_sink_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_trait_object_arg_own_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_trait_object_return_own_one_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_trait_object_return_own_two_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_two_args_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void
      wire_NonCloneSimpleTwinSseMoi_instance_method_arg_borrow_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinSseMoi_instance_method_arg_mut_borrow_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinSseMoi_instance_method_arg_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinSseMoi_instance_method_getter_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinSseMoi_instance_method_return_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_NonCloneSimpleTwinSseMoi_new_custom_name_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_NonCloneSimpleTwinSseMoi_new_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_NonCloneSimpleTwinSseMoi_new_with_result_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_NonCloneSimpleTwinSseMoi_static_method_arg_borrow_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinSseMoi_static_method_arg_mut_borrow_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinSseMoi_static_method_arg_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_NonCloneSimpleTwinSseMoi_static_method_return_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_arg_borrow_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_arg_mut_borrow_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_arg_own_and_return_own_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_arg_own_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_rust_auto_opaque_arg_vec_own_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_borrow_and_borrow_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_callable_arg_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_callable_return_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_dummy_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_rust_auto_opaque_enum_arg_borrow_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_enum_return_own_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_explicit_arg_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_explicit_return_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_explicit_struct_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_plus_sign_arg_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_plus_sign_return_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_return_opaque_two_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_return_own_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_return_vec_own_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_stream_sink_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse_moi(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_trait_object_arg_own_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_trait_object_return_own_one_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_trait_object_return_own_two_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_rust_auto_opaque_two_args_twin_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_sync(
          Object that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_sync(
          Object that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_sync(
          Object that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_instance_method_getter_twin_sync(Object that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_sync(
          Object that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_new_custom_name_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_new_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_new_with_result_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_sync(
          Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_sync(
          Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_sync(Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSync_static_method_return_own_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_borrow_twin_sync(Object arg, int expect);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_mut_borrow_twin_sync(
          Object arg, int expect, int adder);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_own_and_return_own_twin_sync(Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_own_twin_sync(Object arg, int expect);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_vec_own_twin_sync(
          List<dynamic> arg, List<int> expect);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_borrow_and_borrow_twin_sync(Object a, Object b);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync(
          Object borrow, Object mut_borrow);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_callable_arg_twin_sync(Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_callable_return_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_dummy_twin_sync(Object a, Object b);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_arg_borrow_twin_sync(Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_return_own_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync(
          List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_explicit_arg_twin_sync(Object arg, int expect);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_explicit_return_twin_sync(int initial);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_explicit_struct_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync(Object a, String b);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_plus_sign_arg_twin_sync(Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_plus_sign_return_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_opaque_two_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_own_twin_sync(int initial);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_vec_own_twin_sync();

  external void wire_rust_auto_opaque_stream_sink_twin_sync(
      NativePortType port_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync(
          List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync(
          Object arg, String expect);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync(
          Object arg, String expect);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_arg_own_twin_sync(
          Object arg, String expect);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_return_own_one_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_return_own_two_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_two_args_twin_sync(Object a, Object b);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_borrow_twin_sync_moi(
          Object that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_mut_borrow_twin_sync_moi(
          Object that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_own_twin_sync_moi(
          Object that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_instance_method_getter_twin_sync_moi(
          Object that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_instance_method_return_own_twin_sync_moi(
          Object that);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_new_custom_name_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_new_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_new_with_result_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_static_method_arg_borrow_twin_sync_moi(
          Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_static_method_arg_mut_borrow_twin_sync_moi(
          Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_static_method_arg_own_twin_sync_moi(
          Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_NonCloneSimpleTwinSyncMoi_static_method_return_own_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_borrow_twin_sync_moi(Object arg, int expect);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_mut_borrow_twin_sync_moi(
          Object arg, int expect, int adder);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_moi(Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_own_twin_sync_moi(Object arg, int expect);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_arg_vec_own_twin_sync_moi(
          List<dynamic> arg, List<int> expect);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_borrow_and_borrow_twin_sync_moi(Object a, Object b);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_moi(
          Object borrow, Object mut_borrow);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_callable_arg_twin_sync_moi(Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_callable_return_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_dummy_twin_sync_moi(Object a, Object b);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_arg_borrow_twin_sync_moi(Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_return_own_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_moi(
          List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_explicit_arg_twin_sync_moi(Object arg, int expect);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_explicit_return_twin_sync_moi(int initial);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_explicit_struct_twin_sync_moi(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_moi(
          Object a, String b);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_plus_sign_arg_twin_sync_moi(Object arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_plus_sign_return_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_opaque_two_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_own_twin_sync_moi(int initial);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_return_vec_own_twin_sync_moi();

  external void wire_rust_auto_opaque_stream_sink_twin_sync_moi(
      NativePortType port_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_moi(
          List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_moi(
          Object arg, String expect);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_moi(
          Object arg, String expect);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_arg_own_twin_sync_moi(
          Object arg, String expect);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_rust_auto_opaque_two_args_twin_sync_moi(Object a, Object b);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_instance_method_getter_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_new_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_borrow_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_own_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_vec_own_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_callable_arg_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_callable_return_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_dummy_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_return_own_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_explicit_arg_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_explicit_return_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_explicit_struct_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_plus_sign_return_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_opaque_two_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_own_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_vec_own_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_stream_sink_twin_sync_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_two_args_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_borrow_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_mut_borrow_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_own_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_instance_method_getter_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_instance_method_return_own_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_new_custom_name_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_new_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_new_with_result_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_borrow_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_mut_borrow_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_own_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_NonCloneSimpleTwinSyncSseMoi_static_method_return_own_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_borrow_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_own_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_arg_vec_own_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_callable_arg_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_callable_return_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_dummy_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_return_own_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_explicit_arg_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_explicit_return_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_explicit_struct_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_plus_sign_return_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_opaque_two_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_own_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_return_vec_own_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_rust_auto_opaque_stream_sink_twin_sync_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_rust_auto_opaque_two_args_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_frb_sync_generator_test_twin_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_create_non_clone_twin_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_create_opaque_twin_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_option_rust_opaque_twin_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_frb_sync_generator_test_twin_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_create_non_clone_twin_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_create_opaque_twin_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_option_rust_opaque_twin_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_frb_sync_generator_test_twin_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_create_non_clone_twin_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_create_opaque_twin_sse_moi(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_sync_option_rust_opaque_twin_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_create_array_opaque_enum_twin_moi(NativePortType port_);

  external void wire_create_nested_opaque_twin_moi(NativePortType port_);

  external void wire_create_opaque_twin_moi(NativePortType port_);

  external void wire_create_option_opaque_twin_moi(
      NativePortType port_, Object? opaque);

  external void wire_frb_generator_test_twin_moi(NativePortType port_);

  external void wire_opaque_array_run_twin_moi(
      NativePortType port_, List<dynamic> data);

  external void wire_opaque_array_twin_moi(NativePortType port_);

  external void wire_opaque_vec_run_twin_moi(
      NativePortType port_, List<dynamic> data);

  external void wire_opaque_vec_twin_moi(NativePortType port_);

  external void wire_run_enum_opaque_twin_moi(
      NativePortType port_, List<dynamic> opaque);

  external void wire_run_nested_opaque_twin_moi(
      NativePortType port_, List<dynamic> opaque);

  external void wire_run_non_clone_twin_moi(NativePortType port_, Object clone);

  external void wire_run_opaque_twin_moi(NativePortType port_, Object opaque);

  external void wire_run_opaque_with_delay_twin_moi(
      NativePortType port_, Object opaque);

  external void wire_unwrap_rust_opaque_twin_moi(
      NativePortType port_, Object opaque);

  external void wire_create_array_opaque_enum_twin_rust_async(
      NativePortType port_);

  external void wire_create_nested_opaque_twin_rust_async(NativePortType port_);

  external void wire_create_opaque_twin_rust_async(NativePortType port_);

  external void wire_create_option_opaque_twin_rust_async(
      NativePortType port_, Object? opaque);

  external void wire_frb_generator_test_twin_rust_async(NativePortType port_);

  external void wire_opaque_array_run_twin_rust_async(
      NativePortType port_, List<dynamic> data);

  external void wire_opaque_array_twin_rust_async(NativePortType port_);

  external void wire_opaque_vec_run_twin_rust_async(
      NativePortType port_, List<dynamic> data);

  external void wire_opaque_vec_twin_rust_async(NativePortType port_);

  external void wire_run_enum_opaque_twin_rust_async(
      NativePortType port_, List<dynamic> opaque);

  external void wire_run_nested_opaque_twin_rust_async(
      NativePortType port_, List<dynamic> opaque);

  external void wire_run_non_clone_twin_rust_async(
      NativePortType port_, Object clone);

  external void wire_run_opaque_twin_rust_async(
      NativePortType port_, Object opaque);

  external void wire_run_opaque_with_delay_twin_rust_async(
      NativePortType port_, Object opaque);

  external void wire_unwrap_rust_opaque_twin_rust_async(
      NativePortType port_, Object opaque);

  external void wire_create_array_opaque_enum_twin_rust_async_moi(
      NativePortType port_);

  external void wire_create_nested_opaque_twin_rust_async_moi(
      NativePortType port_);

  external void wire_create_opaque_twin_rust_async_moi(NativePortType port_);

  external void wire_create_option_opaque_twin_rust_async_moi(
      NativePortType port_, Object? opaque);

  external void wire_frb_generator_test_twin_rust_async_moi(
      NativePortType port_);

  external void wire_opaque_array_run_twin_rust_async_moi(
      NativePortType port_, List<dynamic> data);

  external void wire_opaque_array_twin_rust_async_moi(NativePortType port_);

  external void wire_opaque_vec_run_twin_rust_async_moi(
      NativePortType port_, List<dynamic> data);

  external void wire_opaque_vec_twin_rust_async_moi(NativePortType port_);

  external void wire_run_enum_opaque_twin_rust_async_moi(
      NativePortType port_, List<dynamic> opaque);

  external void wire_run_nested_opaque_twin_rust_async_moi(
      NativePortType port_, List<dynamic> opaque);

  external void wire_run_non_clone_twin_rust_async_moi(
      NativePortType port_, Object clone);

  external void wire_run_opaque_twin_rust_async_moi(
      NativePortType port_, Object opaque);

  external void wire_run_opaque_with_delay_twin_rust_async_moi(
      NativePortType port_, Object opaque);

  external void wire_unwrap_rust_opaque_twin_rust_async_moi(
      NativePortType port_, Object opaque);

  external void wire_create_array_opaque_enum_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_create_nested_opaque_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_create_opaque_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_create_option_opaque_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_frb_generator_test_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_opaque_array_run_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_opaque_array_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_opaque_vec_run_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_opaque_vec_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_enum_opaque_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_nested_opaque_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_non_clone_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_opaque_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_opaque_with_delay_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_unwrap_rust_opaque_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_create_array_opaque_enum_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_create_nested_opaque_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_create_opaque_twin_rust_async_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_create_option_opaque_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_frb_generator_test_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_opaque_array_run_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_opaque_array_twin_rust_async_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_opaque_vec_run_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_opaque_vec_twin_rust_async_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_enum_opaque_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_run_nested_opaque_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_run_non_clone_twin_rust_async_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_opaque_twin_rust_async_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_opaque_with_delay_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_unwrap_rust_opaque_twin_rust_async_sse_moi(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_create_array_opaque_enum_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_create_nested_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_create_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_create_option_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_frb_generator_test_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_opaque_array_run_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_opaque_array_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_opaque_vec_run_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_opaque_vec_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_enum_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_nested_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_non_clone_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_opaque_with_delay_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_unwrap_rust_opaque_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_create_array_opaque_enum_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_create_nested_opaque_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_create_opaque_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_create_option_opaque_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_frb_generator_test_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_opaque_array_run_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_opaque_array_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_opaque_vec_run_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_opaque_vec_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_enum_opaque_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_nested_opaque_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_non_clone_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_opaque_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_run_opaque_with_delay_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_unwrap_rust_opaque_twin_sse_moi(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_array_opaque_enum_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_nested_opaque_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_opaque_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_option_opaque_twin_sync(Object? opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_frb_generator_test_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_array_run_twin_sync(List<dynamic> data);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_array_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_vec_run_twin_sync(List<dynamic> data);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_vec_twin_sync();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_enum_opaque_twin_sync(List<dynamic> opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_nested_opaque_twin_sync(List<dynamic> opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_non_clone_twin_sync(Object clone);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_opaque_twin_sync(Object opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_opaque_with_delay_twin_sync(Object opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_unwrap_rust_opaque_twin_sync(Object opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_array_opaque_enum_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_nested_opaque_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_opaque_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_create_option_opaque_twin_sync_moi(Object? opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_frb_generator_test_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_array_run_twin_sync_moi(List<dynamic> data);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_array_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_vec_run_twin_sync_moi(List<dynamic> data);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_opaque_vec_twin_sync_moi();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_enum_opaque_twin_sync_moi(List<dynamic> opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_nested_opaque_twin_sync_moi(List<dynamic> opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_non_clone_twin_sync_moi(Object clone);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_opaque_twin_sync_moi(Object opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_run_opaque_with_delay_twin_sync_moi(Object opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_unwrap_rust_opaque_twin_sync_moi(Object opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_array_opaque_enum_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_nested_opaque_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_opaque_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_option_opaque_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_frb_generator_test_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_array_run_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_array_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_vec_run_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_vec_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_enum_opaque_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_nested_opaque_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_non_clone_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_opaque_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_opaque_with_delay_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_unwrap_rust_opaque_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_array_opaque_enum_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_nested_opaque_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_opaque_twin_sync_sse_moi(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_create_option_opaque_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_frb_generator_test_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_array_run_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_array_twin_sync_sse_moi(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_vec_run_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_opaque_vec_twin_sync_sse_moi(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_enum_opaque_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_nested_opaque_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_non_clone_twin_sync_sse_moi(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_opaque_twin_sync_sse_moi(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_run_opaque_with_delay_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_unwrap_rust_opaque_twin_sync_sse_moi(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_simple_adder_twin_rust_async(
      NativePortType port_, int a, int b);

  external void wire_simple_adder_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_simple_adder_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_simple_adder_twin_sync(int a, int b);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_simple_adder_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external void wire_func_stream_realistic_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_stream_return_error_twin_rust_async(
      NativePortType port_);

  external void wire_func_stream_return_panic_twin_rust_async(
      NativePortType port_);

  external void wire_func_stream_sink_arg_position_twin_rust_async(
      NativePortType port_, int a, int b);

  external void wire_handle_stream_of_struct_twin_rust_async(
      NativePortType port_);

  external void wire_handle_stream_sink_at_1_twin_rust_async(
      NativePortType port_, int key, int max);

  external void wire_handle_stream_sink_at_2_twin_rust_async(
      NativePortType port_, int key, int max);

  external void wire_handle_stream_sink_at_3_twin_rust_async(
      NativePortType port_, int key, int max);

  external void wire_stream_sink_fixed_sized_primitive_array_twin_rust_async(
      NativePortType port_);

  external void wire_func_stream_return_error_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_stream_return_panic_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_stream_sink_arg_position_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_stream_of_struct_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_stream_sink_at_1_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_stream_sink_at_2_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_stream_sink_at_3_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void
      wire_stream_sink_fixed_sized_primitive_array_twin_rust_async_sse(
          NativePortType port_,
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_func_stream_return_error_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_stream_return_panic_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_stream_sink_arg_position_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_stream_of_struct_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_stream_sink_at_1_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_stream_sink_at_2_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_stream_sink_at_3_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_stream_sink_fixed_sized_primitive_array_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_struct_with_one_field_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_struct_with_two_field_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_struct_with_zero_field_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_tuple_struct_with_one_field_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_tuple_struct_with_two_field_twin_rust_async(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_struct_with_one_field_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_struct_with_two_field_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_struct_with_zero_field_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_tuple_struct_with_one_field_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_tuple_struct_with_two_field_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_struct_with_one_field_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_struct_with_two_field_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_struct_with_zero_field_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_func_tuple_struct_with_one_field_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_func_tuple_struct_with_two_field_twin_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_struct_with_one_field_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_struct_with_two_field_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_struct_with_zero_field_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_tuple_struct_with_one_field_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_func_tuple_struct_with_two_field_twin_sync(List<dynamic> arg);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_struct_with_one_field_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_struct_with_two_field_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_struct_with_zero_field_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_tuple_struct_with_one_field_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_func_tuple_struct_with_two_field_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_test_tuple_2_twin_rust_async(
      NativePortType port_, List<dynamic> value);

  external void wire_test_tuple_twin_rust_async(
      NativePortType port_, List<dynamic>? value);

  external void wire_test_tuple_2_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_test_tuple_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_test_tuple_2_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_test_tuple_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_tuple_2_twin_sync(List<dynamic> value);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_test_tuple_twin_sync(List<dynamic>? value);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_tuple_2_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_test_tuple_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external void wire_handle_type_alias_id_twin_rust_async(
      NativePortType port_, Object input);

  external void wire_handle_type_alias_model_twin_rust_async(
      NativePortType port_, Object input);

  external void wire_handle_type_nest_alias_id_twin_rust_async(
      NativePortType port_, Object input);

  external void wire_handle_type_alias_id_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_type_alias_model_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_type_nest_alias_id_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_type_alias_id_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_type_alias_model_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_type_nest_alias_id_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_type_alias_id_twin_sync(Object input);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_type_alias_model_twin_sync(Object input);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_type_nest_alias_id_twin_sync(Object input);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_type_alias_id_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_type_alias_model_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_type_nest_alias_id_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external void wire_handle_nested_uuids_twin_rust_async(
      NativePortType port_, List<dynamic> ids);

  external void wire_handle_uuid_twin_rust_async(
      NativePortType port_, Uint8List id);

  external void wire_handle_uuids_twin_rust_async(
      NativePortType port_, List<dynamic> ids);

  external void wire_handle_nested_uuids_twin_rust_async_sse(
      NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_,
      int rust_vec_len_,
      int data_len_);

  external void wire_handle_uuid_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_uuids_twin_rust_async_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_nested_uuids_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_uuid_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external void wire_handle_uuids_twin_sse(NativePortType port_,
      PlatformGeneralizedUint8ListPtr ptr_, int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_nested_uuids_twin_sync(List<dynamic> ids);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_uuid_twin_sync(Uint8List id);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_handle_uuids_twin_sync(List<dynamic> ids);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_nested_uuids_twin_sync_sse(
          PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_,
          int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_uuid_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartSse */
      wire_handle_uuids_twin_sync_sse(PlatformGeneralizedUint8ListPtr ptr_,
          int rust_vec_len_, int data_len_);

  external void wire_test_more_than_just_one_raw_string_struct_twin_normal(
      NativePortType port_);

  external void wire_test_raw_string_item_struct_twin_normal(
      NativePortType port_);

  external void
      wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normal(
          NativePortType port_, Object that);

  external void
      wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normal(
          NativePortType port_, Object that);

  external void
      wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normal(
          NativePortType port_, Object that);

  external void
      wire_NonCloneSimpleTwinNormal_instance_method_getter_twin_normal(
          NativePortType port_, Object that);

  external void
      wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normal(
          NativePortType port_, Object that);

  external void wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normal(
      NativePortType port_);

  external void wire_NonCloneSimpleTwinNormal_new_twin_normal(
      NativePortType port_);

  external void wire_NonCloneSimpleTwinNormal_new_with_result_twin_normal(
      NativePortType port_);

  external void
      wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normal(
          NativePortType port_, Object arg);

  external void
      wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normal(
          NativePortType port_, Object arg);

  external void wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normal(
      NativePortType port_, Object arg);

  external void
      wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normal(
          NativePortType port_);

  external void wire_rust_auto_opaque_arg_borrow_twin_normal(
      NativePortType port_, Object arg, int expect);

  external void wire_rust_auto_opaque_arg_mut_borrow_twin_normal(
      NativePortType port_, Object arg, int expect, int adder);

  external void wire_rust_auto_opaque_arg_own_and_return_own_twin_normal(
      NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_arg_own_twin_normal(
      NativePortType port_, Object arg, int expect);

  external void wire_rust_auto_opaque_arg_vec_own_twin_normal(
      NativePortType port_, List<dynamic> arg, List<int> expect);

  external void wire_rust_auto_opaque_borrow_and_borrow_twin_normal(
      NativePortType port_, Object a, Object b);

  external void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_normal(
      NativePortType port_, Object borrow, Object mut_borrow);

  external void wire_rust_auto_opaque_callable_arg_twin_normal(
      NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_callable_return_twin_normal(
      NativePortType port_);

  external void wire_rust_auto_opaque_dummy_twin_normal(
      NativePortType port_, Object a, Object b);

  external void wire_rust_auto_opaque_enum_arg_borrow_twin_normal(
      NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_enum_return_own_twin_normal(
      NativePortType port_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_normal(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_normal(
          NativePortType port_);

  external void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_normal(
          NativePortType port_);

  external void wire_rust_auto_opaque_explicit_arg_twin_normal(
      NativePortType port_, Object arg, int expect);

  external void wire_rust_auto_opaque_explicit_return_twin_normal(
      NativePortType port_, int initial);

  external void wire_rust_auto_opaque_explicit_struct_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_rust_auto_opaque_normal_and_opaque_arg_twin_normal(
      NativePortType port_, Object a, String b);

  external void wire_rust_auto_opaque_plus_sign_arg_twin_normal(
      NativePortType port_, Object arg);

  external void wire_rust_auto_opaque_plus_sign_return_twin_normal(
      NativePortType port_);

  external void wire_rust_auto_opaque_return_opaque_one_and_two_twin_normal(
      NativePortType port_);

  external void wire_rust_auto_opaque_return_opaque_two_twin_normal(
      NativePortType port_);

  external void wire_rust_auto_opaque_return_own_twin_normal(
      NativePortType port_, int initial);

  external void wire_rust_auto_opaque_return_vec_own_twin_normal(
      NativePortType port_);

  external void wire_rust_auto_opaque_stream_sink_twin_normal(
      NativePortType port_);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normal(
          NativePortType port_, List<dynamic> arg);

  external void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normal(
          NativePortType port_);

  external void wire_rust_auto_opaque_trait_object_arg_borrow_twin_normal(
      NativePortType port_, Object arg, String expect);

  external void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normal(
      NativePortType port_, Object arg, String expect);

  external void wire_rust_auto_opaque_trait_object_arg_own_twin_normal(
      NativePortType port_, Object arg, String expect);

  external void wire_rust_auto_opaque_trait_object_return_own_one_twin_normal(
      NativePortType port_);

  external void wire_rust_auto_opaque_trait_object_return_own_two_twin_normal(
      NativePortType port_);

  external void wire_rust_auto_opaque_two_args_twin_normal(
      NativePortType port_, Object a, Object b);

  external void wire_create_array_opaque_enum_twin_normal(NativePortType port_);

  external void wire_create_nested_opaque_twin_normal(NativePortType port_);

  external void wire_create_opaque_twin_normal(NativePortType port_);

  external void wire_create_option_opaque_twin_normal(
      NativePortType port_, Object? opaque);

  external void wire_frb_generator_test_twin_normal(NativePortType port_);

  external void wire_opaque_array_run_twin_normal(
      NativePortType port_, List<dynamic> data);

  external void wire_opaque_array_twin_normal(NativePortType port_);

  external void wire_opaque_vec_run_twin_normal(
      NativePortType port_, List<dynamic> data);

  external void wire_opaque_vec_twin_normal(NativePortType port_);

  external void wire_run_enum_opaque_twin_normal(
      NativePortType port_, List<dynamic> opaque);

  external void wire_run_nested_opaque_twin_normal(
      NativePortType port_, List<dynamic> opaque);

  external void wire_run_non_clone_twin_normal(
      NativePortType port_, Object clone);

  external void wire_run_opaque_twin_normal(
      NativePortType port_, Object opaque);

  external void wire_run_opaque_with_delay_twin_normal(
      NativePortType port_, Object opaque);

  external void wire_unwrap_rust_opaque_twin_normal(
      NativePortType port_, Object opaque);

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_frb_sync_generator_test_twin_normal();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_create_non_clone_twin_normal();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_create_opaque_twin_normal();

  external dynamic /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire_sync_option_rust_opaque_twin_normal();

  external void wire_simple_adder_twin_normal(
      NativePortType port_, int a, int b);

  external void wire_func_stream_return_error_twin_normal(NativePortType port_);

  external void wire_func_stream_return_panic_twin_normal(NativePortType port_);

  external void wire_func_stream_sink_arg_position_twin_normal(
      NativePortType port_, int a, int b);

  external void wire_handle_stream_of_struct_twin_normal(NativePortType port_);

  external void wire_handle_stream_sink_at_1_twin_normal(
      NativePortType port_, int key, int max);

  external void wire_handle_stream_sink_at_2_twin_normal(
      NativePortType port_, int key, int max);

  external void wire_handle_stream_sink_at_3_twin_normal(
      NativePortType port_, int key, int max);

  external void wire_stream_sink_fixed_sized_primitive_array_twin_normal(
      NativePortType port_);

  external void wire_func_stream_realistic_twin_normal(
      NativePortType port_, String arg);

  external void wire_func_struct_with_one_field_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_struct_with_two_field_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_struct_with_zero_field_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_tuple_struct_with_one_field_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_func_tuple_struct_with_two_field_twin_normal(
      NativePortType port_, List<dynamic> arg);

  external void wire_test_tuple_2_twin_normal(
      NativePortType port_, List<dynamic> value);

  external void wire_test_tuple_twin_normal(
      NativePortType port_, List<dynamic>? value);

  external void wire_handle_type_alias_id_twin_normal(
      NativePortType port_, Object input);

  external void wire_handle_type_alias_model_twin_normal(
      NativePortType port_, Object input);

  external void wire_handle_type_nest_alias_id_twin_normal(
      NativePortType port_, Object input);

  external void wire_handle_nested_uuids_twin_normal(
      NativePortType port_, List<dynamic> ids);

  external void wire_handle_uuid_twin_normal(
      NativePortType port_, Uint8List id);

  external void wire_handle_uuids_twin_normal(
      NativePortType port_, List<dynamic> ids);

  external void
      rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSseMoi(
          dynamic ptr);

  external void rust_arc_increment_strong_count_RustOpaque_HideDataTwinMoi(
      dynamic ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinMoi(
      dynamic ptr);

  external void rust_arc_increment_strong_count_RustOpaque_HideDataTwinNormal(
      dynamic ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinNormal(
      dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi(
          dynamic ptr);

  external void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSse(
      dynamic ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSse(
      dynamic ptr);

  external void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSseMoi(
      dynamic ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSseMoi(
      dynamic ptr);

  external void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSync(
      dynamic ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSync(
      dynamic ptr);

  external void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncMoi(
      dynamic ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncMoi(
      dynamic ptr);

  external void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSse(
      dynamic ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSse(
      dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSseMoi(
          dynamic ptr);

  external void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinMoi(
      dynamic ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinMoi(
      dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
          dynamic ptr);

  external void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSse(
      dynamic ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSse(
      dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi(
          dynamic ptr);

  external void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinMoi(
      dynamic ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinMoi(
      dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
          dynamic ptr);

  external void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSse(
      dynamic ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSse(
      dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSseMoi(
          dynamic ptr);

  external void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSync(
      dynamic ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSync(
      dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          dynamic ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          dynamic ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          dynamic ptr);

  external void rust_arc_increment_strong_count_RustOpaque_i16(dynamic ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_i16(dynamic ptr);

  external void rust_arc_increment_strong_count_RustOpaque_i32(dynamic ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_i32(dynamic ptr);
}
