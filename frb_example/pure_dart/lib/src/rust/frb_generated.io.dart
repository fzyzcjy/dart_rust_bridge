// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.29.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/array.dart';
import 'api/async_misc.dart';
import 'api/async_spawn.dart';
import 'api/attribute.dart';
import 'api/benchmark_misc.dart';
import 'api/chrono_type.dart';
import 'api/comment.dart';
import 'api/constructor.dart';
import 'api/customization.dart';
import 'api/dart_dynamic.dart';
import 'api/dart_fn.dart';
import 'api/dart_opaque.dart';
import 'api/dart_opaque_sync.dart';
import 'api/deliberate_name_conflict.dart';
import 'api/dropping.dart';
import 'api/enumeration.dart';
import 'api/event_listener.dart';
import 'api/exception.dart';
import 'api/external_type_in_crate.dart';
import 'api/inside_macro.dart';
import 'api/map_and_set.dart';
import 'api/method.dart';
import 'api/mirror.dart';
import 'api/misc_example.dart';
import 'api/misc_no_twin_example_a.dart';
import 'api/misc_no_twin_example_b.dart';
import 'api/misc_type.dart';
import 'api/newtype_pattern.dart';
import 'api/optional.dart';
import 'api/optional_primitive_misc.dart';
import 'api/primitive_list_misc.dart';
import 'api/primitive_misc.dart';
import 'api/pseudo_manual/array_twin_rust_async.dart';
import 'api/pseudo_manual/array_twin_rust_async_sse.dart';
import 'api/pseudo_manual/array_twin_sse.dart';
import 'api/pseudo_manual/array_twin_sync.dart';
import 'api/pseudo_manual/array_twin_sync_sse.dart';
import 'api/pseudo_manual/async_misc_twin_sse.dart';
import 'api/pseudo_manual/attribute_twin_rust_async.dart';
import 'api/pseudo_manual/attribute_twin_rust_async_sse.dart';
import 'api/pseudo_manual/attribute_twin_sse.dart';
import 'api/pseudo_manual/attribute_twin_sync.dart';
import 'api/pseudo_manual/attribute_twin_sync_sse.dart';
import 'api/pseudo_manual/basic.dart';
import 'api/pseudo_manual/basic_list.dart';
import 'api/pseudo_manual/basic_list_twin_rust_async.dart';
import 'api/pseudo_manual/basic_list_twin_rust_async_sse.dart';
import 'api/pseudo_manual/basic_list_twin_sse.dart';
import 'api/pseudo_manual/basic_list_twin_sync.dart';
import 'api/pseudo_manual/basic_list_twin_sync_sse.dart';
import 'api/pseudo_manual/basic_map.dart';
import 'api/pseudo_manual/basic_map_twin_rust_async.dart';
import 'api/pseudo_manual/basic_map_twin_rust_async_sse.dart';
import 'api/pseudo_manual/basic_map_twin_sse.dart';
import 'api/pseudo_manual/basic_map_twin_sync.dart';
import 'api/pseudo_manual/basic_map_twin_sync_sse.dart';
import 'api/pseudo_manual/basic_optional.dart';
import 'api/pseudo_manual/basic_optional_twin_rust_async.dart';
import 'api/pseudo_manual/basic_optional_twin_rust_async_sse.dart';
import 'api/pseudo_manual/basic_optional_twin_sse.dart';
import 'api/pseudo_manual/basic_optional_twin_sync.dart';
import 'api/pseudo_manual/basic_optional_twin_sync_sse.dart';
import 'api/pseudo_manual/basic_twin_rust_async.dart';
import 'api/pseudo_manual/basic_twin_rust_async_sse.dart';
import 'api/pseudo_manual/basic_twin_sse.dart';
import 'api/pseudo_manual/basic_twin_sync.dart';
import 'api/pseudo_manual/basic_twin_sync_sse.dart';
import 'api/pseudo_manual/benchmark_api.dart';
import 'api/pseudo_manual/benchmark_api_twin_rust_async.dart';
import 'api/pseudo_manual/benchmark_api_twin_rust_async_sse.dart';
import 'api/pseudo_manual/benchmark_api_twin_sse.dart';
import 'api/pseudo_manual/benchmark_api_twin_sync.dart';
import 'api/pseudo_manual/benchmark_api_twin_sync_sse.dart';
import 'api/pseudo_manual/chrono_type_twin_rust_async.dart';
import 'api/pseudo_manual/chrono_type_twin_rust_async_sse.dart';
import 'api/pseudo_manual/chrono_type_twin_sse.dart';
import 'api/pseudo_manual/chrono_type_twin_sync.dart';
import 'api/pseudo_manual/chrono_type_twin_sync_sse.dart';
import 'api/pseudo_manual/comment_twin_rust_async.dart';
import 'api/pseudo_manual/comment_twin_rust_async_sse.dart';
import 'api/pseudo_manual/comment_twin_sse.dart';
import 'api/pseudo_manual/comment_twin_sync.dart';
import 'api/pseudo_manual/comment_twin_sync_sse.dart';
import 'api/pseudo_manual/dart_dynamic_twin_rust_async.dart';
import 'api/pseudo_manual/dart_dynamic_twin_sync.dart';
import 'api/pseudo_manual/dart_fn_twin_rust_async.dart';
import 'api/pseudo_manual/dart_fn_twin_rust_async_sse.dart';
import 'api/pseudo_manual/dart_fn_twin_sse.dart';
import 'api/pseudo_manual/dart_opaque_sync_twin_sse.dart';
import 'api/pseudo_manual/dart_opaque_twin_rust_async.dart';
import 'api/pseudo_manual/dart_opaque_twin_rust_async_sse.dart';
import 'api/pseudo_manual/dart_opaque_twin_sse.dart';
import 'api/pseudo_manual/dart_opaque_twin_sync.dart';
import 'api/pseudo_manual/dart_opaque_twin_sync_sse.dart';
import 'api/pseudo_manual/dropping_twin_rust_async.dart';
import 'api/pseudo_manual/dropping_twin_rust_async_sse.dart';
import 'api/pseudo_manual/dropping_twin_sse.dart';
import 'api/pseudo_manual/dropping_twin_sync.dart';
import 'api/pseudo_manual/dropping_twin_sync_sse.dart';
import 'api/pseudo_manual/enumeration_twin_rust_async.dart';
import 'api/pseudo_manual/enumeration_twin_rust_async_sse.dart';
import 'api/pseudo_manual/enumeration_twin_sse.dart';
import 'api/pseudo_manual/enumeration_twin_sync.dart';
import 'api/pseudo_manual/enumeration_twin_sync_sse.dart';
import 'api/pseudo_manual/event_listener_twin_rust_async.dart';
import 'api/pseudo_manual/event_listener_twin_rust_async_sse.dart';
import 'api/pseudo_manual/event_listener_twin_sse.dart';
import 'api/pseudo_manual/exception_twin_rust_async.dart';
import 'api/pseudo_manual/exception_twin_rust_async_sse.dart';
import 'api/pseudo_manual/exception_twin_sse.dart';
import 'api/pseudo_manual/exception_twin_sync.dart';
import 'api/pseudo_manual/exception_twin_sync_sse.dart';
import 'api/pseudo_manual/external_type_in_crate_twin_rust_async.dart';
import 'api/pseudo_manual/external_type_in_crate_twin_rust_async_sse.dart';
import 'api/pseudo_manual/external_type_in_crate_twin_sse.dart';
import 'api/pseudo_manual/external_type_in_crate_twin_sync.dart';
import 'api/pseudo_manual/external_type_in_crate_twin_sync_sse.dart';
import 'api/pseudo_manual/map_and_set_twin_rust_async.dart';
import 'api/pseudo_manual/map_and_set_twin_rust_async_sse.dart';
import 'api/pseudo_manual/map_and_set_twin_sse.dart';
import 'api/pseudo_manual/map_and_set_twin_sync.dart';
import 'api/pseudo_manual/map_and_set_twin_sync_sse.dart';
import 'api/pseudo_manual/method_twin_rust_async.dart';
import 'api/pseudo_manual/method_twin_rust_async_sse.dart';
import 'api/pseudo_manual/method_twin_sse.dart';
import 'api/pseudo_manual/method_twin_sync.dart';
import 'api/pseudo_manual/method_twin_sync_sse.dart';
import 'api/pseudo_manual/mirror_twin_rust_async.dart';
import 'api/pseudo_manual/mirror_twin_rust_async_sse.dart';
import 'api/pseudo_manual/mirror_twin_sse.dart';
import 'api/pseudo_manual/mirror_twin_sync.dart';
import 'api/pseudo_manual/mirror_twin_sync_sse.dart';
import 'api/pseudo_manual/misc_example_twin_rust_async.dart';
import 'api/pseudo_manual/misc_example_twin_rust_async_sse.dart';
import 'api/pseudo_manual/misc_example_twin_sse.dart';
import 'api/pseudo_manual/misc_example_twin_sync.dart';
import 'api/pseudo_manual/misc_example_twin_sync_sse.dart';
import 'api/pseudo_manual/misc_type_twin_rust_async.dart';
import 'api/pseudo_manual/misc_type_twin_rust_async_sse.dart';
import 'api/pseudo_manual/misc_type_twin_sse.dart';
import 'api/pseudo_manual/misc_type_twin_sync.dart';
import 'api/pseudo_manual/misc_type_twin_sync_sse.dart';
import 'api/pseudo_manual/newtype_pattern_twin_rust_async.dart';
import 'api/pseudo_manual/newtype_pattern_twin_rust_async_sse.dart';
import 'api/pseudo_manual/newtype_pattern_twin_sse.dart';
import 'api/pseudo_manual/newtype_pattern_twin_sync.dart';
import 'api/pseudo_manual/newtype_pattern_twin_sync_sse.dart';
import 'api/pseudo_manual/optional_primitive_misc_twin_rust_async.dart';
import 'api/pseudo_manual/optional_primitive_misc_twin_rust_async_sse.dart';
import 'api/pseudo_manual/optional_primitive_misc_twin_sse.dart';
import 'api/pseudo_manual/optional_primitive_misc_twin_sync.dart';
import 'api/pseudo_manual/optional_primitive_misc_twin_sync_sse.dart';
import 'api/pseudo_manual/optional_twin_rust_async.dart';
import 'api/pseudo_manual/optional_twin_rust_async_sse.dart';
import 'api/pseudo_manual/optional_twin_sse.dart';
import 'api/pseudo_manual/optional_twin_sync.dart';
import 'api/pseudo_manual/optional_twin_sync_sse.dart';
import 'api/pseudo_manual/primitive_list_misc_twin_rust_async.dart';
import 'api/pseudo_manual/primitive_list_misc_twin_rust_async_sse.dart';
import 'api/pseudo_manual/primitive_list_misc_twin_sse.dart';
import 'api/pseudo_manual/primitive_list_misc_twin_sync.dart';
import 'api/pseudo_manual/primitive_list_misc_twin_sync_sse.dart';
import 'api/pseudo_manual/primitive_misc_twin_rust_async.dart';
import 'api/pseudo_manual/primitive_misc_twin_rust_async_sse.dart';
import 'api/pseudo_manual/primitive_misc_twin_sse.dart';
import 'api/pseudo_manual/primitive_misc_twin_sync.dart';
import 'api/pseudo_manual/primitive_misc_twin_sync_sse.dart';
import 'api/pseudo_manual/raw_string_twin_rust_async.dart';
import 'api/pseudo_manual/raw_string_twin_rust_async_sse.dart';
import 'api/pseudo_manual/raw_string_twin_sse.dart';
import 'api/pseudo_manual/raw_string_twin_sync.dart';
import 'api/pseudo_manual/raw_string_twin_sync_sse.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_moi.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_rust_async.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_rust_async_moi.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_rust_async_sse.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_rust_async_sse_moi.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_sse.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_sse_moi.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_sync.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_sync_moi.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_sync_sse.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_sync_sse_moi.dart';
import 'api/pseudo_manual/rust_opaque_sync_twin_moi.dart';
import 'api/pseudo_manual/rust_opaque_sync_twin_sse.dart';
import 'api/pseudo_manual/rust_opaque_sync_twin_sse_moi.dart';
import 'api/pseudo_manual/rust_opaque_twin_moi.dart';
import 'api/pseudo_manual/rust_opaque_twin_rust_async.dart';
import 'api/pseudo_manual/rust_opaque_twin_rust_async_moi.dart';
import 'api/pseudo_manual/rust_opaque_twin_rust_async_sse.dart';
import 'api/pseudo_manual/rust_opaque_twin_rust_async_sse_moi.dart';
import 'api/pseudo_manual/rust_opaque_twin_sse.dart';
import 'api/pseudo_manual/rust_opaque_twin_sse_moi.dart';
import 'api/pseudo_manual/rust_opaque_twin_sync.dart';
import 'api/pseudo_manual/rust_opaque_twin_sync_moi.dart';
import 'api/pseudo_manual/rust_opaque_twin_sync_sse.dart';
import 'api/pseudo_manual/rust_opaque_twin_sync_sse_moi.dart';
import 'api/pseudo_manual/simple_twin_rust_async.dart';
import 'api/pseudo_manual/simple_twin_rust_async_sse.dart';
import 'api/pseudo_manual/simple_twin_sse.dart';
import 'api/pseudo_manual/simple_twin_sync.dart';
import 'api/pseudo_manual/simple_twin_sync_sse.dart';
import 'api/pseudo_manual/stream_misc_twin_sse.dart';
import 'api/pseudo_manual/stream_twin_rust_async.dart';
import 'api/pseudo_manual/stream_twin_rust_async_sse.dart';
import 'api/pseudo_manual/stream_twin_sse.dart';
import 'api/pseudo_manual/structure_twin_rust_async.dart';
import 'api/pseudo_manual/structure_twin_rust_async_sse.dart';
import 'api/pseudo_manual/structure_twin_sse.dart';
import 'api/pseudo_manual/structure_twin_sync.dart';
import 'api/pseudo_manual/structure_twin_sync_sse.dart';
import 'api/pseudo_manual/tuple_twin_rust_async.dart';
import 'api/pseudo_manual/tuple_twin_rust_async_sse.dart';
import 'api/pseudo_manual/tuple_twin_sse.dart';
import 'api/pseudo_manual/tuple_twin_sync.dart';
import 'api/pseudo_manual/tuple_twin_sync_sse.dart';
import 'api/pseudo_manual/type_alias_twin_rust_async.dart';
import 'api/pseudo_manual/type_alias_twin_rust_async_sse.dart';
import 'api/pseudo_manual/type_alias_twin_sse.dart';
import 'api/pseudo_manual/type_alias_twin_sync.dart';
import 'api/pseudo_manual/type_alias_twin_sync_sse.dart';
import 'api/pseudo_manual/uuid_type_twin_rust_async.dart';
import 'api/pseudo_manual/uuid_type_twin_rust_async_sse.dart';
import 'api/pseudo_manual/uuid_type_twin_sse.dart';
import 'api/pseudo_manual/uuid_type_twin_sync.dart';
import 'api/pseudo_manual/uuid_type_twin_sync_sse.dart';
import 'api/raw_string.dart';
import 'api/rust_auto_opaque.dart';
import 'api/rust_opaque.dart';
import 'api/rust_opaque_sync.dart';
import 'api/simple.dart';
import 'api/stream.dart';
import 'api/stream_misc.dart';
import 'api/structure.dart';
import 'api/tuple.dart';
import 'api/type_alias.dart';
import 'api/uuid_type.dart';
import 'auxiliary/new_module_system/sub_module.dart';
import 'auxiliary/old_module_system/sub_module.dart';
import 'auxiliary/sample_types.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'deliberate_name_conflict.dart';
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';
import 'package:meta/meta.dart' as meta;
import 'package:uuid/uuid.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinRustAsyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinRustAsyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinRustAsyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinRustAsyncSseMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinSyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinSyncSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinRustAsyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinRustAsyncMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinRustAsyncSsePtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinRustAsyncSseMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinSyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnTwinSyncSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueSyncReturnTwinMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueSyncReturnTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueSyncReturnTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueSyncReturnTwinSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataAnotherTwinMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataAnotherTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataAnotherTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataAnotherTwinSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_HideDataTwinMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_HideDataTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinRustAsyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinRustAsyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinRustAsyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinRustAsyncSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinSsePtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinSyncPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinSyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_HideDataTwinSyncSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinRustAsyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinRustAsyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinRustAsyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinRustAsyncSseMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinSyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataTwinSyncSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinRustAsyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinRustAsyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinRustAsyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinRustAsyncSseMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinSyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataTwinSyncSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinRustAsyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinRustAsyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinRustAsyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinRustAsyncSseMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinSyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataTwinSyncSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxFnStringStringPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinRustAsyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinRustAsyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinRustAsyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinRustAsyncSseMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinRustAsyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinRustAsyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinRustAsyncSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinRustAsyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinSyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinSyncSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_ConstructorOpaqueStructTwinNormalPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_ConstructorOpaqueSyncStructTwinNormalPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DroppableTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DroppableTwinRustAsyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DroppableTwinRustAsyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DroppableTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DroppableTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DroppableTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinNormalPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSsePtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSsePtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSseMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSyncPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSyncSsePtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinRustAsyncPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinRustAsyncMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinRustAsyncSsePtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinRustAsyncSseMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSyncSseMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinRustAsyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinRustAsyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinRustAsyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinRustAsyncSseMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinRustAsyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinRustAsyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinRustAsyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinRustAsyncSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinSyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueOneTwinSyncSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinRustAsyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinRustAsyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinRustAsyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinRustAsyncSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinSyncMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OpaqueTwoTwinSyncSseMoiPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructInMiscNoTwinExampleAPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleAPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructInMiscNoTwinExampleBPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleBPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinNormalPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSsePtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSsePtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSsePtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoiPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithImplBlockInMultiFilePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFilePtr;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_I16Ptr =>
      wire._rust_arc_decrement_strong_count_RustOpaque_i16Ptr;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_I32Ptr =>
      wire._rust_arc_decrement_strong_count_RustOpaque_i32Ptr;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  BoxFnStringString
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          dynamic raw);

  @protected
  BoxMyTraitTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          dynamic raw);

  @protected
  ConstructorOpaqueStructTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          dynamic raw);

  @protected
  ConstructorOpaqueSyncStructTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          dynamic raw);

  @protected
  DroppableTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          dynamic raw);

  @protected
  DroppableTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          dynamic raw);

  @protected
  DroppableTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          dynamic raw);

  @protected
  DroppableTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          dynamic raw);

  @protected
  DroppableTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          dynamic raw);

  @protected
  DroppableTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          dynamic raw);

  @protected
  OpaqueOneTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          dynamic raw);

  @protected
  OpaqueOneTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          dynamic raw);

  @protected
  OpaqueOneTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          dynamic raw);

  @protected
  OpaqueTwoTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          dynamic raw);

  @protected
  OpaqueTwoTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          dynamic raw);

  @protected
  OpaqueTwoTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          dynamic raw);

  @protected
  StructInMiscNoTwinExampleA
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSync
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinNormal
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsync
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSseMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSync
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          dynamic raw);

  @protected
  DroppableTwinNormal
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          dynamic raw);

  @protected
  DroppableTwinRustAsync
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          dynamic raw);

  @protected
  DroppableTwinRustAsyncSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          dynamic raw);

  @protected
  DroppableTwinSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          dynamic raw);

  @protected
  DroppableTwinSync
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          dynamic raw);

  @protected
  DroppableTwinSyncSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsync
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSseMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSync
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinNormal
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          dynamic raw);

  @protected
  ConstructorOpaqueStructTwinNormal
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          dynamic raw);

  @protected
  ConstructorOpaqueSyncStructTwinNormal
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          dynamic raw);

  @protected
  DroppableTwinNormal
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          dynamic raw);

  @protected
  DroppableTwinRustAsync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          dynamic raw);

  @protected
  DroppableTwinRustAsyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          dynamic raw);

  @protected
  DroppableTwinSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          dynamic raw);

  @protected
  DroppableTwinSync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          dynamic raw);

  @protected
  DroppableTwinSyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinNormal
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSync
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic raw);

  @protected
  StructInMiscNoTwinExampleA
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          dynamic raw);

  @protected
  StructInMiscNoTwinExampleB
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          dynamic raw);

  @protected
  StructWithImplBlockInMultiFile
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          dynamic raw);

  @protected
  String dco_decode_Backtrace(dynamic raw);

  @protected
  Duration dco_decode_Chrono_Duration(dynamic raw);

  @protected
  DateTime dco_decode_Chrono_Local(dynamic raw);

  @protected
  DateTime dco_decode_Chrono_Naive(dynamic raw);

  @protected
  DateTime dco_decode_Chrono_Utc(dynamic raw);

  @protected
  FutureOr<void> Function(Object)
      dco_decode_DartFn_Inputs_DartOpaque_Output_unit(dynamic raw);

  @protected
  FutureOr<void> Function(String) dco_decode_DartFn_Inputs_String_Output_unit(
      dynamic raw);

  @protected
  FutureOr<void> Function(String, DemoStructForRustCallDartTwinNormal)
      dco_decode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_normal_Output_unit(
          dynamic raw);

  @protected
  FutureOr<void> Function(String, DemoStructForRustCallDartTwinRustAsync)
      dco_decode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_Output_unit(
          dynamic raw);

  @protected
  FutureOr<void> Function(String, DemoStructForRustCallDartTwinRustAsyncSse)
      dco_decode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_sse_Output_unit(
          dynamic raw);

  @protected
  FutureOr<void> Function(String, DemoStructForRustCallDartTwinSse)
      dco_decode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_sse_Output_unit(
          dynamic raw);

  @protected
  FutureOr<Object> Function() dco_decode_DartFn_Inputs__Output_DartOpaque(
      dynamic raw);

  @protected
  FutureOr<String> Function() dco_decode_DartFn_Inputs__Output_String(
      dynamic raw);

  @protected
  FutureOr<void> Function() dco_decode_DartFn_Inputs__Output_unit(dynamic raw);

  @protected
  FutureOr<DemoStructForRustCallDartTwinNormal> Function(
          DemoStructForRustCallDartTwinNormal)
      dco_decode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_normal_Output_demo_struct_for_rust_call_dart_twin_normal(
          dynamic raw);

  @protected
  FutureOr<DemoStructForRustCallDartTwinRustAsync> Function(
          DemoStructForRustCallDartTwinRustAsync)
      dco_decode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_Output_demo_struct_for_rust_call_dart_twin_rust_async(
          dynamic raw);

  @protected
  FutureOr<DemoStructForRustCallDartTwinRustAsyncSse> Function(
          DemoStructForRustCallDartTwinRustAsyncSse)
      dco_decode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_sse_Output_demo_struct_for_rust_call_dart_twin_rust_async_sse(
          dynamic raw);

  @protected
  FutureOr<DemoStructForRustCallDartTwinSse> Function(
          DemoStructForRustCallDartTwinSse)
      dco_decode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_sse_Output_demo_struct_for_rust_call_dart_twin_sse(
          dynamic raw);

  @protected
  Object dco_decode_DartOpaque(dynamic raw);

  @protected
  ObjectArray1 dco_decode_DartOpaque_array_1(dynamic raw);

  @protected
  Map<String, String> dco_decode_Map_String_String(dynamic raw);

  @protected
  Map<String, EnumSimpleTwinNormal>
      dco_decode_Map_String_enum_simple_twin_normal(dynamic raw);

  @protected
  Map<String, EnumSimpleTwinRustAsync>
      dco_decode_Map_String_enum_simple_twin_rust_async(dynamic raw);

  @protected
  Map<String, EnumSimpleTwinRustAsyncSse>
      dco_decode_Map_String_enum_simple_twin_rust_async_sse(dynamic raw);

  @protected
  Map<String, EnumSimpleTwinSse> dco_decode_Map_String_enum_simple_twin_sse(
      dynamic raw);

  @protected
  Map<String, EnumSimpleTwinSync> dco_decode_Map_String_enum_simple_twin_sync(
      dynamic raw);

  @protected
  Map<String, EnumSimpleTwinSyncSse>
      dco_decode_Map_String_enum_simple_twin_sync_sse(dynamic raw);

  @protected
  Map<String, HashMapValue> dco_decode_Map_String_hash_map_value(dynamic raw);

  @protected
  Map<String, KitchenSinkTwinNormal>
      dco_decode_Map_String_kitchen_sink_twin_normal(dynamic raw);

  @protected
  Map<String, KitchenSinkTwinRustAsync>
      dco_decode_Map_String_kitchen_sink_twin_rust_async(dynamic raw);

  @protected
  Map<String, KitchenSinkTwinRustAsyncSse>
      dco_decode_Map_String_kitchen_sink_twin_rust_async_sse(dynamic raw);

  @protected
  Map<String, KitchenSinkTwinSse> dco_decode_Map_String_kitchen_sink_twin_sse(
      dynamic raw);

  @protected
  Map<String, KitchenSinkTwinSync> dco_decode_Map_String_kitchen_sink_twin_sync(
      dynamic raw);

  @protected
  Map<String, KitchenSinkTwinSyncSse>
      dco_decode_Map_String_kitchen_sink_twin_sync_sse(dynamic raw);

  @protected
  Map<String, Uint8List> dco_decode_Map_String_list_prim_u_8_strict(
      dynamic raw);

  @protected
  Map<String, MySize> dco_decode_Map_String_my_size(dynamic raw);

  @protected
  Map<int, String> dco_decode_Map_i_32_String(dynamic raw);

  @protected
  Map<int, BasicGeneralEnumTwinNormal>
      dco_decode_Map_i_32_basic_general_enum_twin_normal(dynamic raw);

  @protected
  Map<int, BasicGeneralEnumTwinRustAsync>
      dco_decode_Map_i_32_basic_general_enum_twin_rust_async(dynamic raw);

  @protected
  Map<int, BasicGeneralEnumTwinRustAsyncSse>
      dco_decode_Map_i_32_basic_general_enum_twin_rust_async_sse(dynamic raw);

  @protected
  Map<int, BasicGeneralEnumTwinSse>
      dco_decode_Map_i_32_basic_general_enum_twin_sse(dynamic raw);

  @protected
  Map<int, BasicGeneralEnumTwinSync>
      dco_decode_Map_i_32_basic_general_enum_twin_sync(dynamic raw);

  @protected
  Map<int, BasicGeneralEnumTwinSyncSse>
      dco_decode_Map_i_32_basic_general_enum_twin_sync_sse(dynamic raw);

  @protected
  Map<int, BasicPrimitiveEnumTwinNormal>
      dco_decode_Map_i_32_basic_primitive_enum_twin_normal(dynamic raw);

  @protected
  Map<int, BasicPrimitiveEnumTwinRustAsync>
      dco_decode_Map_i_32_basic_primitive_enum_twin_rust_async(dynamic raw);

  @protected
  Map<int, BasicPrimitiveEnumTwinRustAsyncSse>
      dco_decode_Map_i_32_basic_primitive_enum_twin_rust_async_sse(dynamic raw);

  @protected
  Map<int, BasicPrimitiveEnumTwinSse>
      dco_decode_Map_i_32_basic_primitive_enum_twin_sse(dynamic raw);

  @protected
  Map<int, BasicPrimitiveEnumTwinSync>
      dco_decode_Map_i_32_basic_primitive_enum_twin_sync(dynamic raw);

  @protected
  Map<int, BasicPrimitiveEnumTwinSyncSse>
      dco_decode_Map_i_32_basic_primitive_enum_twin_sync_sse(dynamic raw);

  @protected
  Map<int, BasicStructTwinNormal> dco_decode_Map_i_32_basic_struct_twin_normal(
      dynamic raw);

  @protected
  Map<int, BasicStructTwinRustAsync>
      dco_decode_Map_i_32_basic_struct_twin_rust_async(dynamic raw);

  @protected
  Map<int, BasicStructTwinRustAsyncSse>
      dco_decode_Map_i_32_basic_struct_twin_rust_async_sse(dynamic raw);

  @protected
  Map<int, BasicStructTwinSse> dco_decode_Map_i_32_basic_struct_twin_sse(
      dynamic raw);

  @protected
  Map<int, BasicStructTwinSync> dco_decode_Map_i_32_basic_struct_twin_sync(
      dynamic raw);

  @protected
  Map<int, BasicStructTwinSyncSse>
      dco_decode_Map_i_32_basic_struct_twin_sync_sse(dynamic raw);

  @protected
  Map<int, bool> dco_decode_Map_i_32_bool(dynamic raw);

  @protected
  Map<int, double> dco_decode_Map_i_32_f_32(dynamic raw);

  @protected
  Map<int, double> dco_decode_Map_i_32_f_64(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_i_16(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_i_32(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_i_64(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_i_8(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_isize(dynamic raw);

  @protected
  Map<int, Uint8List> dco_decode_Map_i_32_list_prim_u_8_strict(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_u_16(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_u_32(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_u_64(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_u_8(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_usize(dynamic raw);

  @protected
  Map<int, ApplicationMode> dco_decode_Map_u_8_application_mode(dynamic raw);

  @protected
  BoxDartDebugTwinMoi dco_decode_RustOpaque_BoxdynDartDebugTwinMoi(dynamic raw);

  @protected
  BoxDartDebugTwinNormal dco_decode_RustOpaque_BoxdynDartDebugTwinNormal(
      dynamic raw);

  @protected
  BoxDartDebugTwinRustAsync dco_decode_RustOpaque_BoxdynDartDebugTwinRustAsync(
      dynamic raw);

  @protected
  BoxDartDebugTwinRustAsyncMoi
      dco_decode_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(dynamic raw);

  @protected
  BoxDartDebugTwinRustAsyncSse
      dco_decode_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(dynamic raw);

  @protected
  BoxDartDebugTwinRustAsyncSseMoi
      dco_decode_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(dynamic raw);

  @protected
  BoxDartDebugTwinSse dco_decode_RustOpaque_BoxdynDartDebugTwinSse(dynamic raw);

  @protected
  BoxDartDebugTwinSseMoi dco_decode_RustOpaque_BoxdynDartDebugTwinSseMoi(
      dynamic raw);

  @protected
  BoxDartDebugTwinSync dco_decode_RustOpaque_BoxdynDartDebugTwinSync(
      dynamic raw);

  @protected
  BoxDartDebugTwinSyncMoi dco_decode_RustOpaque_BoxdynDartDebugTwinSyncMoi(
      dynamic raw);

  @protected
  BoxDartDebugTwinSyncSse dco_decode_RustOpaque_BoxdynDartDebugTwinSyncSse(
      dynamic raw);

  @protected
  BoxDartDebugTwinSyncSseMoi
      dco_decode_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(dynamic raw);

  @protected
  FrbOpaqueReturnTwinMoi dco_decode_RustOpaque_FrbOpaqueReturnTwinMoi(
      dynamic raw);

  @protected
  FrbOpaqueReturnTwinNormal dco_decode_RustOpaque_FrbOpaqueReturnTwinNormal(
      dynamic raw);

  @protected
  FrbOpaqueReturnTwinRustAsync
      dco_decode_RustOpaque_FrbOpaqueReturnTwinRustAsync(dynamic raw);

  @protected
  FrbOpaqueReturnTwinRustAsyncMoi
      dco_decode_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(dynamic raw);

  @protected
  FrbOpaqueReturnTwinRustAsyncSse
      dco_decode_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(dynamic raw);

  @protected
  FrbOpaqueReturnTwinRustAsyncSseMoi
      dco_decode_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(dynamic raw);

  @protected
  FrbOpaqueReturnTwinSse dco_decode_RustOpaque_FrbOpaqueReturnTwinSse(
      dynamic raw);

  @protected
  FrbOpaqueReturnTwinSseMoi dco_decode_RustOpaque_FrbOpaqueReturnTwinSseMoi(
      dynamic raw);

  @protected
  FrbOpaqueReturnTwinSync dco_decode_RustOpaque_FrbOpaqueReturnTwinSync(
      dynamic raw);

  @protected
  FrbOpaqueReturnTwinSyncMoi dco_decode_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
      dynamic raw);

  @protected
  FrbOpaqueReturnTwinSyncSse dco_decode_RustOpaque_FrbOpaqueReturnTwinSyncSse(
      dynamic raw);

  @protected
  FrbOpaqueReturnTwinSyncSseMoi
      dco_decode_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(dynamic raw);

  @protected
  FrbOpaqueSyncReturnTwinMoi dco_decode_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
      dynamic raw);

  @protected
  FrbOpaqueSyncReturnTwinNormal
      dco_decode_RustOpaque_FrbOpaqueSyncReturnTwinNormal(dynamic raw);

  @protected
  FrbOpaqueSyncReturnTwinSse dco_decode_RustOpaque_FrbOpaqueSyncReturnTwinSse(
      dynamic raw);

  @protected
  FrbOpaqueSyncReturnTwinSseMoi
      dco_decode_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(dynamic raw);

  @protected
  HideDataAnotherTwinMoi dco_decode_RustOpaque_HideDataAnotherTwinMoi(
      dynamic raw);

  @protected
  HideDataAnotherTwinNormal dco_decode_RustOpaque_HideDataAnotherTwinNormal(
      dynamic raw);

  @protected
  HideDataAnotherTwinSse dco_decode_RustOpaque_HideDataAnotherTwinSse(
      dynamic raw);

  @protected
  HideDataAnotherTwinSseMoi dco_decode_RustOpaque_HideDataAnotherTwinSseMoi(
      dynamic raw);

  @protected
  HideDataTwinMoi dco_decode_RustOpaque_HideDataTwinMoi(dynamic raw);

  @protected
  HideDataTwinMoiArray2 dco_decode_RustOpaque_HideDataTwinMoi_array_2(
      dynamic raw);

  @protected
  HideDataTwinNormal dco_decode_RustOpaque_HideDataTwinNormal(dynamic raw);

  @protected
  HideDataTwinNormalArray2 dco_decode_RustOpaque_HideDataTwinNormal_array_2(
      dynamic raw);

  @protected
  HideDataTwinRustAsync dco_decode_RustOpaque_HideDataTwinRustAsync(
      dynamic raw);

  @protected
  HideDataTwinRustAsyncMoi dco_decode_RustOpaque_HideDataTwinRustAsyncMoi(
      dynamic raw);

  @protected
  HideDataTwinRustAsyncMoiArray2
      dco_decode_RustOpaque_HideDataTwinRustAsyncMoi_array_2(dynamic raw);

  @protected
  HideDataTwinRustAsyncSse dco_decode_RustOpaque_HideDataTwinRustAsyncSse(
      dynamic raw);

  @protected
  HideDataTwinRustAsyncSseMoi dco_decode_RustOpaque_HideDataTwinRustAsyncSseMoi(
      dynamic raw);

  @protected
  HideDataTwinRustAsyncSseMoiArray2
      dco_decode_RustOpaque_HideDataTwinRustAsyncSseMoi_array_2(dynamic raw);

  @protected
  HideDataTwinRustAsyncSseArray2
      dco_decode_RustOpaque_HideDataTwinRustAsyncSse_array_2(dynamic raw);

  @protected
  HideDataTwinRustAsyncArray2
      dco_decode_RustOpaque_HideDataTwinRustAsync_array_2(dynamic raw);

  @protected
  HideDataTwinSse dco_decode_RustOpaque_HideDataTwinSse(dynamic raw);

  @protected
  HideDataTwinSseMoi dco_decode_RustOpaque_HideDataTwinSseMoi(dynamic raw);

  @protected
  HideDataTwinSseMoiArray2 dco_decode_RustOpaque_HideDataTwinSseMoi_array_2(
      dynamic raw);

  @protected
  HideDataTwinSseArray2 dco_decode_RustOpaque_HideDataTwinSse_array_2(
      dynamic raw);

  @protected
  HideDataTwinSync dco_decode_RustOpaque_HideDataTwinSync(dynamic raw);

  @protected
  HideDataTwinSyncMoi dco_decode_RustOpaque_HideDataTwinSyncMoi(dynamic raw);

  @protected
  HideDataTwinSyncMoiArray2 dco_decode_RustOpaque_HideDataTwinSyncMoi_array_2(
      dynamic raw);

  @protected
  HideDataTwinSyncSse dco_decode_RustOpaque_HideDataTwinSyncSse(dynamic raw);

  @protected
  HideDataTwinSyncSseMoi dco_decode_RustOpaque_HideDataTwinSyncSseMoi(
      dynamic raw);

  @protected
  HideDataTwinSyncSseMoiArray2
      dco_decode_RustOpaque_HideDataTwinSyncSseMoi_array_2(dynamic raw);

  @protected
  HideDataTwinSyncSseArray2 dco_decode_RustOpaque_HideDataTwinSyncSse_array_2(
      dynamic raw);

  @protected
  HideDataTwinSyncArray2 dco_decode_RustOpaque_HideDataTwinSync_array_2(
      dynamic raw);

  @protected
  MutexHideDataTwinMoi dco_decode_RustOpaque_MutexHideDataTwinMoi(dynamic raw);

  @protected
  MutexHideDataTwinNormal dco_decode_RustOpaque_MutexHideDataTwinNormal(
      dynamic raw);

  @protected
  MutexHideDataTwinRustAsync dco_decode_RustOpaque_MutexHideDataTwinRustAsync(
      dynamic raw);

  @protected
  MutexHideDataTwinRustAsyncMoi
      dco_decode_RustOpaque_MutexHideDataTwinRustAsyncMoi(dynamic raw);

  @protected
  MutexHideDataTwinRustAsyncSse
      dco_decode_RustOpaque_MutexHideDataTwinRustAsyncSse(dynamic raw);

  @protected
  MutexHideDataTwinRustAsyncSseMoi
      dco_decode_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(dynamic raw);

  @protected
  MutexHideDataTwinSse dco_decode_RustOpaque_MutexHideDataTwinSse(dynamic raw);

  @protected
  MutexHideDataTwinSseMoi dco_decode_RustOpaque_MutexHideDataTwinSseMoi(
      dynamic raw);

  @protected
  MutexHideDataTwinSync dco_decode_RustOpaque_MutexHideDataTwinSync(
      dynamic raw);

  @protected
  MutexHideDataTwinSyncMoi dco_decode_RustOpaque_MutexHideDataTwinSyncMoi(
      dynamic raw);

  @protected
  MutexHideDataTwinSyncSse dco_decode_RustOpaque_MutexHideDataTwinSyncSse(
      dynamic raw);

  @protected
  MutexHideDataTwinSyncSseMoi dco_decode_RustOpaque_MutexHideDataTwinSyncSseMoi(
      dynamic raw);

  @protected
  NonCloneDataTwinMoi dco_decode_RustOpaque_NonCloneDataTwinMoi(dynamic raw);

  @protected
  NonCloneDataTwinNormal dco_decode_RustOpaque_NonCloneDataTwinNormal(
      dynamic raw);

  @protected
  NonCloneDataTwinRustAsync dco_decode_RustOpaque_NonCloneDataTwinRustAsync(
      dynamic raw);

  @protected
  NonCloneDataTwinRustAsyncMoi
      dco_decode_RustOpaque_NonCloneDataTwinRustAsyncMoi(dynamic raw);

  @protected
  NonCloneDataTwinRustAsyncSse
      dco_decode_RustOpaque_NonCloneDataTwinRustAsyncSse(dynamic raw);

  @protected
  NonCloneDataTwinRustAsyncSseMoi
      dco_decode_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(dynamic raw);

  @protected
  NonCloneDataTwinSse dco_decode_RustOpaque_NonCloneDataTwinSse(dynamic raw);

  @protected
  NonCloneDataTwinSseMoi dco_decode_RustOpaque_NonCloneDataTwinSseMoi(
      dynamic raw);

  @protected
  NonCloneDataTwinSync dco_decode_RustOpaque_NonCloneDataTwinSync(dynamic raw);

  @protected
  NonCloneDataTwinSyncMoi dco_decode_RustOpaque_NonCloneDataTwinSyncMoi(
      dynamic raw);

  @protected
  NonCloneDataTwinSyncSse dco_decode_RustOpaque_NonCloneDataTwinSyncSse(
      dynamic raw);

  @protected
  NonCloneDataTwinSyncSseMoi dco_decode_RustOpaque_NonCloneDataTwinSyncSseMoi(
      dynamic raw);

  @protected
  RwLockHideDataTwinMoi dco_decode_RustOpaque_RwLockHideDataTwinMoi(
      dynamic raw);

  @protected
  RwLockHideDataTwinNormal dco_decode_RustOpaque_RwLockHideDataTwinNormal(
      dynamic raw);

  @protected
  RwLockHideDataTwinRustAsync dco_decode_RustOpaque_RwLockHideDataTwinRustAsync(
      dynamic raw);

  @protected
  RwLockHideDataTwinRustAsyncMoi
      dco_decode_RustOpaque_RwLockHideDataTwinRustAsyncMoi(dynamic raw);

  @protected
  RwLockHideDataTwinRustAsyncSse
      dco_decode_RustOpaque_RwLockHideDataTwinRustAsyncSse(dynamic raw);

  @protected
  RwLockHideDataTwinRustAsyncSseMoi
      dco_decode_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(dynamic raw);

  @protected
  RwLockHideDataTwinSse dco_decode_RustOpaque_RwLockHideDataTwinSse(
      dynamic raw);

  @protected
  RwLockHideDataTwinSseMoi dco_decode_RustOpaque_RwLockHideDataTwinSseMoi(
      dynamic raw);

  @protected
  RwLockHideDataTwinSync dco_decode_RustOpaque_RwLockHideDataTwinSync(
      dynamic raw);

  @protected
  RwLockHideDataTwinSyncMoi dco_decode_RustOpaque_RwLockHideDataTwinSyncMoi(
      dynamic raw);

  @protected
  RwLockHideDataTwinSyncSse dco_decode_RustOpaque_RwLockHideDataTwinSyncSse(
      dynamic raw);

  @protected
  RwLockHideDataTwinSyncSseMoi
      dco_decode_RustOpaque_RwLockHideDataTwinSyncSseMoi(dynamic raw);

  @protected
  BoxFnStringString
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          dynamic raw);

  @protected
  BoxMyTraitTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          dynamic raw);

  @protected
  ConstructorOpaqueStructTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          dynamic raw);

  @protected
  ConstructorOpaqueSyncStructTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          dynamic raw);

  @protected
  DroppableTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          dynamic raw);

  @protected
  DroppableTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          dynamic raw);

  @protected
  DroppableTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          dynamic raw);

  @protected
  DroppableTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          dynamic raw);

  @protected
  DroppableTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          dynamic raw);

  @protected
  DroppableTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleEnumTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          dynamic raw);

  @protected
  OpaqueOneTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          dynamic raw);

  @protected
  OpaqueOneTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          dynamic raw);

  @protected
  OpaqueOneTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          dynamic raw);

  @protected
  OpaqueOneTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          dynamic raw);

  @protected
  OpaqueOneTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          dynamic raw);

  @protected
  OpaqueTwoTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          dynamic raw);

  @protected
  OpaqueTwoTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          dynamic raw);

  @protected
  OpaqueTwoTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          dynamic raw);

  @protected
  OpaqueTwoTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          dynamic raw);

  @protected
  OpaqueTwoTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          dynamic raw);

  @protected
  StructInMiscNoTwinExampleA
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          dynamic raw);

  @protected
  StructInMiscNoTwinExampleB
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSync
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          dynamic raw);

  @protected
  StructWithImplBlockInMultiFile
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          dynamic raw);

  @protected
  I16 dco_decode_RustOpaque_i16(dynamic raw);

  @protected
  I32 dco_decode_RustOpaque_i32(dynamic raw);

  @protected
  Set<String> dco_decode_Set_String(dynamic raw);

  @protected
  Set<ApplicationMode> dco_decode_Set_application_mode(dynamic raw);

  @protected
  Set<int> dco_decode_Set_i_32(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  UuidValue dco_decode_Uuid(dynamic raw);

  @protected
  ATwinNormal dco_decode_a_twin_normal(dynamic raw);

  @protected
  ATwinRustAsync dco_decode_a_twin_rust_async(dynamic raw);

  @protected
  ATwinRustAsyncSse dco_decode_a_twin_rust_async_sse(dynamic raw);

  @protected
  ATwinSse dco_decode_a_twin_sse(dynamic raw);

  @protected
  ATwinSync dco_decode_a_twin_sync(dynamic raw);

  @protected
  ATwinSyncSse dco_decode_a_twin_sync_sse(dynamic raw);

  @protected
  AbcTwinNormal dco_decode_abc_twin_normal(dynamic raw);

  @protected
  AbcTwinRustAsync dco_decode_abc_twin_rust_async(dynamic raw);

  @protected
  AbcTwinRustAsyncSse dco_decode_abc_twin_rust_async_sse(dynamic raw);

  @protected
  AbcTwinSse dco_decode_abc_twin_sse(dynamic raw);

  @protected
  AbcTwinSync dco_decode_abc_twin_sync(dynamic raw);

  @protected
  AbcTwinSyncSse dco_decode_abc_twin_sync_sse(dynamic raw);

  @protected
  AnotherMacroStructTwinNormal dco_decode_another_macro_struct_twin_normal(
      dynamic raw);

  @protected
  AnotherTwinNormal dco_decode_another_twin_normal(dynamic raw);

  @protected
  AnotherTwinRustAsync dco_decode_another_twin_rust_async(dynamic raw);

  @protected
  AnotherTwinRustAsyncSse dco_decode_another_twin_rust_async_sse(dynamic raw);

  @protected
  AnotherTwinSse dco_decode_another_twin_sse(dynamic raw);

  @protected
  AnotherTwinSync dco_decode_another_twin_sync(dynamic raw);

  @protected
  AnotherTwinSyncSse dco_decode_another_twin_sync_sse(dynamic raw);

  @protected
  ApplicationEnv dco_decode_application_env(dynamic raw);

  @protected
  ApplicationEnvVar dco_decode_application_env_var(dynamic raw);

  @protected
  ApplicationMessage dco_decode_application_message(dynamic raw);

  @protected
  ApplicationMode dco_decode_application_mode(dynamic raw);

  @protected
  ApplicationModeArray2 dco_decode_application_mode_array_2(dynamic raw);

  @protected
  ApplicationSettings dco_decode_application_settings(dynamic raw);

  @protected
  AttributeTwinNormal dco_decode_attribute_twin_normal(dynamic raw);

  @protected
  AttributeTwinRustAsync dco_decode_attribute_twin_rust_async(dynamic raw);

  @protected
  AttributeTwinRustAsyncSse dco_decode_attribute_twin_rust_async_sse(
      dynamic raw);

  @protected
  AttributeTwinSse dco_decode_attribute_twin_sse(dynamic raw);

  @protected
  AttributeTwinSync dco_decode_attribute_twin_sync(dynamic raw);

  @protected
  AttributeTwinSyncSse dco_decode_attribute_twin_sync_sse(dynamic raw);

  @protected
  BTwinNormal dco_decode_b_twin_normal(dynamic raw);

  @protected
  BTwinRustAsync dco_decode_b_twin_rust_async(dynamic raw);

  @protected
  BTwinRustAsyncSse dco_decode_b_twin_rust_async_sse(dynamic raw);

  @protected
  BTwinSse dco_decode_b_twin_sse(dynamic raw);

  @protected
  BTwinSync dco_decode_b_twin_sync(dynamic raw);

  @protected
  BTwinSyncSse dco_decode_b_twin_sync_sse(dynamic raw);

  @protected
  BasicGeneralEnumTwinNormal dco_decode_basic_general_enum_twin_normal(
      dynamic raw);

  @protected
  BasicGeneralEnumTwinRustAsync dco_decode_basic_general_enum_twin_rust_async(
      dynamic raw);

  @protected
  BasicGeneralEnumTwinRustAsyncSse
      dco_decode_basic_general_enum_twin_rust_async_sse(dynamic raw);

  @protected
  BasicGeneralEnumTwinSse dco_decode_basic_general_enum_twin_sse(dynamic raw);

  @protected
  BasicGeneralEnumTwinSync dco_decode_basic_general_enum_twin_sync(dynamic raw);

  @protected
  BasicGeneralEnumTwinSyncSse dco_decode_basic_general_enum_twin_sync_sse(
      dynamic raw);

  @protected
  BasicPrimitiveEnumTwinNormal dco_decode_basic_primitive_enum_twin_normal(
      dynamic raw);

  @protected
  BasicPrimitiveEnumTwinRustAsync
      dco_decode_basic_primitive_enum_twin_rust_async(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinRustAsyncSse
      dco_decode_basic_primitive_enum_twin_rust_async_sse(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSse dco_decode_basic_primitive_enum_twin_sse(
      dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSync dco_decode_basic_primitive_enum_twin_sync(
      dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSyncSse dco_decode_basic_primitive_enum_twin_sync_sse(
      dynamic raw);

  @protected
  BasicStructTwinNormal dco_decode_basic_struct_twin_normal(dynamic raw);

  @protected
  BasicStructTwinRustAsync dco_decode_basic_struct_twin_rust_async(dynamic raw);

  @protected
  BasicStructTwinRustAsyncSse dco_decode_basic_struct_twin_rust_async_sse(
      dynamic raw);

  @protected
  BasicStructTwinSse dco_decode_basic_struct_twin_sse(dynamic raw);

  @protected
  BasicStructTwinSync dco_decode_basic_struct_twin_sync(dynamic raw);

  @protected
  BasicStructTwinSyncSse dco_decode_basic_struct_twin_sync_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinNormal dco_decode_benchmark_binary_tree_twin_normal(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      dco_decode_benchmark_binary_tree_twin_rust_async(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      dco_decode_benchmark_binary_tree_twin_rust_async_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSse dco_decode_benchmark_binary_tree_twin_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSync dco_decode_benchmark_binary_tree_twin_sync(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSyncSse dco_decode_benchmark_binary_tree_twin_sync_sse(
      dynamic raw);

  @protected
  BenchmarkBlobTwinNormal dco_decode_benchmark_blob_twin_normal(dynamic raw);

  @protected
  BenchmarkBlobTwinRustAsync dco_decode_benchmark_blob_twin_rust_async(
      dynamic raw);

  @protected
  BenchmarkBlobTwinRustAsyncSse dco_decode_benchmark_blob_twin_rust_async_sse(
      dynamic raw);

  @protected
  BenchmarkBlobTwinSse dco_decode_benchmark_blob_twin_sse(dynamic raw);

  @protected
  BenchmarkBlobTwinSync dco_decode_benchmark_blob_twin_sync(dynamic raw);

  @protected
  BenchmarkBlobTwinSyncSse dco_decode_benchmark_blob_twin_sync_sse(dynamic raw);

  @protected
  BigBuffersTwinNormal dco_decode_big_buffers_twin_normal(dynamic raw);

  @protected
  BigBuffersTwinRustAsync dco_decode_big_buffers_twin_rust_async(dynamic raw);

  @protected
  BigBuffersTwinRustAsyncSse dco_decode_big_buffers_twin_rust_async_sse(
      dynamic raw);

  @protected
  BigBuffersTwinSse dco_decode_big_buffers_twin_sse(dynamic raw);

  @protected
  BigBuffersTwinSync dco_decode_big_buffers_twin_sync(dynamic raw);

  @protected
  BigBuffersTwinSyncSse dco_decode_big_buffers_twin_sync_sse(dynamic raw);

  @protected
  BlobTwinNormal dco_decode_blob_twin_normal(dynamic raw);

  @protected
  BlobTwinRustAsync dco_decode_blob_twin_rust_async(dynamic raw);

  @protected
  BlobTwinRustAsyncSse dco_decode_blob_twin_rust_async_sse(dynamic raw);

  @protected
  BlobTwinSse dco_decode_blob_twin_sse(dynamic raw);

  @protected
  BlobTwinSync dco_decode_blob_twin_sync(dynamic raw);

  @protected
  BlobTwinSyncSse dco_decode_blob_twin_sync_sse(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  ApplicationEnv dco_decode_box_application_env(dynamic raw);

  @protected
  NonCloneSimpleTwinMoi
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsync
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSse
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSseMoi
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSync
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncMoi
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic raw);

  @protected
  Duration dco_decode_box_autoadd_Chrono_Duration(dynamic raw);

  @protected
  DateTime dco_decode_box_autoadd_Chrono_Naive(dynamic raw);

  @protected
  DateTime dco_decode_box_autoadd_Chrono_Utc(dynamic raw);

  @protected
  Object dco_decode_box_autoadd_DartOpaque(dynamic raw);

  @protected
  HideDataAnotherTwinMoi
      dco_decode_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(dynamic raw);

  @protected
  HideDataAnotherTwinNormal
      dco_decode_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(dynamic raw);

  @protected
  HideDataAnotherTwinSse
      dco_decode_box_autoadd_RustOpaque_HideDataAnotherTwinSse(dynamic raw);

  @protected
  HideDataAnotherTwinSseMoi
      dco_decode_box_autoadd_RustOpaque_HideDataAnotherTwinSseMoi(dynamic raw);

  @protected
  HideDataTwinMoi dco_decode_box_autoadd_RustOpaque_HideDataTwinMoi(
      dynamic raw);

  @protected
  HideDataTwinNormal dco_decode_box_autoadd_RustOpaque_HideDataTwinNormal(
      dynamic raw);

  @protected
  HideDataTwinRustAsync dco_decode_box_autoadd_RustOpaque_HideDataTwinRustAsync(
      dynamic raw);

  @protected
  HideDataTwinRustAsyncMoi
      dco_decode_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(dynamic raw);

  @protected
  HideDataTwinRustAsyncSse
      dco_decode_box_autoadd_RustOpaque_HideDataTwinRustAsyncSse(dynamic raw);

  @protected
  HideDataTwinRustAsyncSseMoi
      dco_decode_box_autoadd_RustOpaque_HideDataTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  HideDataTwinSse dco_decode_box_autoadd_RustOpaque_HideDataTwinSse(
      dynamic raw);

  @protected
  HideDataTwinSseMoi dco_decode_box_autoadd_RustOpaque_HideDataTwinSseMoi(
      dynamic raw);

  @protected
  HideDataTwinSync dco_decode_box_autoadd_RustOpaque_HideDataTwinSync(
      dynamic raw);

  @protected
  HideDataTwinSyncMoi dco_decode_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
      dynamic raw);

  @protected
  HideDataTwinSyncSse dco_decode_box_autoadd_RustOpaque_HideDataTwinSyncSse(
      dynamic raw);

  @protected
  HideDataTwinSyncSseMoi
      dco_decode_box_autoadd_RustOpaque_HideDataTwinSyncSseMoi(dynamic raw);

  @protected
  ATwinNormal dco_decode_box_autoadd_a_twin_normal(dynamic raw);

  @protected
  ATwinRustAsync dco_decode_box_autoadd_a_twin_rust_async(dynamic raw);

  @protected
  ATwinRustAsyncSse dco_decode_box_autoadd_a_twin_rust_async_sse(dynamic raw);

  @protected
  ATwinSse dco_decode_box_autoadd_a_twin_sse(dynamic raw);

  @protected
  ATwinSync dco_decode_box_autoadd_a_twin_sync(dynamic raw);

  @protected
  ATwinSyncSse dco_decode_box_autoadd_a_twin_sync_sse(dynamic raw);

  @protected
  AbcTwinNormal dco_decode_box_autoadd_abc_twin_normal(dynamic raw);

  @protected
  AbcTwinRustAsync dco_decode_box_autoadd_abc_twin_rust_async(dynamic raw);

  @protected
  AbcTwinRustAsyncSse dco_decode_box_autoadd_abc_twin_rust_async_sse(
      dynamic raw);

  @protected
  AbcTwinSse dco_decode_box_autoadd_abc_twin_sse(dynamic raw);

  @protected
  AbcTwinSync dco_decode_box_autoadd_abc_twin_sync(dynamic raw);

  @protected
  AbcTwinSyncSse dco_decode_box_autoadd_abc_twin_sync_sse(dynamic raw);

  @protected
  ApplicationEnv dco_decode_box_autoadd_application_env(dynamic raw);

  @protected
  ApplicationMode dco_decode_box_autoadd_application_mode(dynamic raw);

  @protected
  ApplicationSettings dco_decode_box_autoadd_application_settings(dynamic raw);

  @protected
  AttributeTwinNormal dco_decode_box_autoadd_attribute_twin_normal(dynamic raw);

  @protected
  AttributeTwinRustAsync dco_decode_box_autoadd_attribute_twin_rust_async(
      dynamic raw);

  @protected
  AttributeTwinRustAsyncSse
      dco_decode_box_autoadd_attribute_twin_rust_async_sse(dynamic raw);

  @protected
  AttributeTwinSse dco_decode_box_autoadd_attribute_twin_sse(dynamic raw);

  @protected
  AttributeTwinSync dco_decode_box_autoadd_attribute_twin_sync(dynamic raw);

  @protected
  AttributeTwinSyncSse dco_decode_box_autoadd_attribute_twin_sync_sse(
      dynamic raw);

  @protected
  BTwinNormal dco_decode_box_autoadd_b_twin_normal(dynamic raw);

  @protected
  BTwinRustAsync dco_decode_box_autoadd_b_twin_rust_async(dynamic raw);

  @protected
  BTwinRustAsyncSse dco_decode_box_autoadd_b_twin_rust_async_sse(dynamic raw);

  @protected
  BTwinSse dco_decode_box_autoadd_b_twin_sse(dynamic raw);

  @protected
  BTwinSync dco_decode_box_autoadd_b_twin_sync(dynamic raw);

  @protected
  BTwinSyncSse dco_decode_box_autoadd_b_twin_sync_sse(dynamic raw);

  @protected
  BasicGeneralEnumTwinNormal
      dco_decode_box_autoadd_basic_general_enum_twin_normal(dynamic raw);

  @protected
  BasicGeneralEnumTwinRustAsync
      dco_decode_box_autoadd_basic_general_enum_twin_rust_async(dynamic raw);

  @protected
  BasicGeneralEnumTwinRustAsyncSse
      dco_decode_box_autoadd_basic_general_enum_twin_rust_async_sse(
          dynamic raw);

  @protected
  BasicGeneralEnumTwinSse dco_decode_box_autoadd_basic_general_enum_twin_sse(
      dynamic raw);

  @protected
  BasicGeneralEnumTwinSync dco_decode_box_autoadd_basic_general_enum_twin_sync(
      dynamic raw);

  @protected
  BasicGeneralEnumTwinSyncSse
      dco_decode_box_autoadd_basic_general_enum_twin_sync_sse(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinNormal
      dco_decode_box_autoadd_basic_primitive_enum_twin_normal(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinRustAsync
      dco_decode_box_autoadd_basic_primitive_enum_twin_rust_async(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinRustAsyncSse
      dco_decode_box_autoadd_basic_primitive_enum_twin_rust_async_sse(
          dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSse
      dco_decode_box_autoadd_basic_primitive_enum_twin_sse(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSync
      dco_decode_box_autoadd_basic_primitive_enum_twin_sync(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSyncSse
      dco_decode_box_autoadd_basic_primitive_enum_twin_sync_sse(dynamic raw);

  @protected
  BasicStructTwinNormal dco_decode_box_autoadd_basic_struct_twin_normal(
      dynamic raw);

  @protected
  BasicStructTwinRustAsync dco_decode_box_autoadd_basic_struct_twin_rust_async(
      dynamic raw);

  @protected
  BasicStructTwinRustAsyncSse
      dco_decode_box_autoadd_basic_struct_twin_rust_async_sse(dynamic raw);

  @protected
  BasicStructTwinSse dco_decode_box_autoadd_basic_struct_twin_sse(dynamic raw);

  @protected
  BasicStructTwinSync dco_decode_box_autoadd_basic_struct_twin_sync(
      dynamic raw);

  @protected
  BasicStructTwinSyncSse dco_decode_box_autoadd_basic_struct_twin_sync_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinNormal
      dco_decode_box_autoadd_benchmark_binary_tree_twin_normal(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      dco_decode_box_autoadd_benchmark_binary_tree_twin_rust_async(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      dco_decode_box_autoadd_benchmark_binary_tree_twin_rust_async_sse(
          dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSse
      dco_decode_box_autoadd_benchmark_binary_tree_twin_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSync
      dco_decode_box_autoadd_benchmark_binary_tree_twin_sync(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSyncSse
      dco_decode_box_autoadd_benchmark_binary_tree_twin_sync_sse(dynamic raw);

  @protected
  BenchmarkBlobTwinNormal dco_decode_box_autoadd_benchmark_blob_twin_normal(
      dynamic raw);

  @protected
  BenchmarkBlobTwinRustAsync
      dco_decode_box_autoadd_benchmark_blob_twin_rust_async(dynamic raw);

  @protected
  BenchmarkBlobTwinRustAsyncSse
      dco_decode_box_autoadd_benchmark_blob_twin_rust_async_sse(dynamic raw);

  @protected
  BenchmarkBlobTwinSse dco_decode_box_autoadd_benchmark_blob_twin_sse(
      dynamic raw);

  @protected
  BenchmarkBlobTwinSync dco_decode_box_autoadd_benchmark_blob_twin_sync(
      dynamic raw);

  @protected
  BenchmarkBlobTwinSyncSse dco_decode_box_autoadd_benchmark_blob_twin_sync_sse(
      dynamic raw);

  @protected
  bool dco_decode_box_autoadd_bool(dynamic raw);

  @protected
  CTwinNormal dco_decode_box_autoadd_c_twin_normal(dynamic raw);

  @protected
  CTwinRustAsync dco_decode_box_autoadd_c_twin_rust_async(dynamic raw);

  @protected
  CTwinRustAsyncSse dco_decode_box_autoadd_c_twin_rust_async_sse(dynamic raw);

  @protected
  CTwinSse dco_decode_box_autoadd_c_twin_sse(dynamic raw);

  @protected
  CTwinSync dco_decode_box_autoadd_c_twin_sync(dynamic raw);

  @protected
  CTwinSyncSse dco_decode_box_autoadd_c_twin_sync_sse(dynamic raw);

  @protected
  ConcatenateWithTwinNormal dco_decode_box_autoadd_concatenate_with_twin_normal(
      dynamic raw);

  @protected
  ConcatenateWithTwinRustAsync
      dco_decode_box_autoadd_concatenate_with_twin_rust_async(dynamic raw);

  @protected
  ConcatenateWithTwinRustAsyncSse
      dco_decode_box_autoadd_concatenate_with_twin_rust_async_sse(dynamic raw);

  @protected
  ConcatenateWithTwinSse dco_decode_box_autoadd_concatenate_with_twin_sse(
      dynamic raw);

  @protected
  ConcatenateWithTwinSync dco_decode_box_autoadd_concatenate_with_twin_sync(
      dynamic raw);

  @protected
  ConcatenateWithTwinSyncSse
      dco_decode_box_autoadd_concatenate_with_twin_sync_sse(dynamic raw);

  @protected
  CustomNestedError2TwinNormal
      dco_decode_box_autoadd_custom_nested_error_2_twin_normal(dynamic raw);

  @protected
  CustomNestedError2TwinRustAsync
      dco_decode_box_autoadd_custom_nested_error_2_twin_rust_async(dynamic raw);

  @protected
  CustomNestedError2TwinRustAsyncSse
      dco_decode_box_autoadd_custom_nested_error_2_twin_rust_async_sse(
          dynamic raw);

  @protected
  CustomNestedError2TwinSse
      dco_decode_box_autoadd_custom_nested_error_2_twin_sse(dynamic raw);

  @protected
  CustomNestedError2TwinSync
      dco_decode_box_autoadd_custom_nested_error_2_twin_sync(dynamic raw);

  @protected
  CustomNestedError2TwinSyncSse
      dco_decode_box_autoadd_custom_nested_error_2_twin_sync_sse(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinNormal
      dco_decode_box_autoadd_custom_nested_error_inner_twin_normal(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinRustAsync
      dco_decode_box_autoadd_custom_nested_error_inner_twin_rust_async(
          dynamic raw);

  @protected
  CustomNestedErrorInnerTwinRustAsyncSse
      dco_decode_box_autoadd_custom_nested_error_inner_twin_rust_async_sse(
          dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSse
      dco_decode_box_autoadd_custom_nested_error_inner_twin_sse(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSync
      dco_decode_box_autoadd_custom_nested_error_inner_twin_sync(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSyncSse
      dco_decode_box_autoadd_custom_nested_error_inner_twin_sync_sse(
          dynamic raw);

  @protected
  CustomNestedErrorOuterTwinNormal
      dco_decode_box_autoadd_custom_nested_error_outer_twin_normal(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinRustAsync
      dco_decode_box_autoadd_custom_nested_error_outer_twin_rust_async(
          dynamic raw);

  @protected
  CustomNestedErrorOuterTwinRustAsyncSse
      dco_decode_box_autoadd_custom_nested_error_outer_twin_rust_async_sse(
          dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSse
      dco_decode_box_autoadd_custom_nested_error_outer_twin_sse(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSync
      dco_decode_box_autoadd_custom_nested_error_outer_twin_sync(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSyncSse
      dco_decode_box_autoadd_custom_nested_error_outer_twin_sync_sse(
          dynamic raw);

  @protected
  CustomStructErrorTwinNormal
      dco_decode_box_autoadd_custom_struct_error_twin_normal(dynamic raw);

  @protected
  CustomStructErrorTwinRustAsync
      dco_decode_box_autoadd_custom_struct_error_twin_rust_async(dynamic raw);

  @protected
  CustomStructErrorTwinRustAsyncSse
      dco_decode_box_autoadd_custom_struct_error_twin_rust_async_sse(
          dynamic raw);

  @protected
  CustomStructErrorTwinSse dco_decode_box_autoadd_custom_struct_error_twin_sse(
      dynamic raw);

  @protected
  CustomStructErrorTwinSync
      dco_decode_box_autoadd_custom_struct_error_twin_sync(dynamic raw);

  @protected
  CustomStructErrorTwinSyncSse
      dco_decode_box_autoadd_custom_struct_error_twin_sync_sse(dynamic raw);

  @protected
  CustomStructTwinNormal dco_decode_box_autoadd_custom_struct_twin_normal(
      dynamic raw);

  @protected
  CustomStructTwinRustAsync
      dco_decode_box_autoadd_custom_struct_twin_rust_async(dynamic raw);

  @protected
  CustomStructTwinRustAsyncSse
      dco_decode_box_autoadd_custom_struct_twin_rust_async_sse(dynamic raw);

  @protected
  CustomStructTwinSse dco_decode_box_autoadd_custom_struct_twin_sse(
      dynamic raw);

  @protected
  CustomStructTwinSync dco_decode_box_autoadd_custom_struct_twin_sync(
      dynamic raw);

  @protected
  CustomStructTwinSyncSse dco_decode_box_autoadd_custom_struct_twin_sync_sse(
      dynamic raw);

  @protected
  CustomizedTwinNormal dco_decode_box_autoadd_customized_twin_normal(
      dynamic raw);

  @protected
  CustomizedTwinRustAsync dco_decode_box_autoadd_customized_twin_rust_async(
      dynamic raw);

  @protected
  CustomizedTwinRustAsyncSse
      dco_decode_box_autoadd_customized_twin_rust_async_sse(dynamic raw);

  @protected
  CustomizedTwinSse dco_decode_box_autoadd_customized_twin_sse(dynamic raw);

  @protected
  CustomizedTwinSync dco_decode_box_autoadd_customized_twin_sync(dynamic raw);

  @protected
  CustomizedTwinSyncSse dco_decode_box_autoadd_customized_twin_sync_sse(
      dynamic raw);

  @protected
  DartOpaqueNestedTwinNormal
      dco_decode_box_autoadd_dart_opaque_nested_twin_normal(dynamic raw);

  @protected
  DartOpaqueNestedTwinRustAsync
      dco_decode_box_autoadd_dart_opaque_nested_twin_rust_async(dynamic raw);

  @protected
  DartOpaqueNestedTwinRustAsyncSse
      dco_decode_box_autoadd_dart_opaque_nested_twin_rust_async_sse(
          dynamic raw);

  @protected
  DartOpaqueNestedTwinSse dco_decode_box_autoadd_dart_opaque_nested_twin_sse(
      dynamic raw);

  @protected
  DartOpaqueNestedTwinSync dco_decode_box_autoadd_dart_opaque_nested_twin_sync(
      dynamic raw);

  @protected
  DartOpaqueNestedTwinSyncSse
      dco_decode_box_autoadd_dart_opaque_nested_twin_sync_sse(dynamic raw);

  @protected
  ElementTwinNormal dco_decode_box_autoadd_element_twin_normal(dynamic raw);

  @protected
  ElementTwinRustAsync dco_decode_box_autoadd_element_twin_rust_async(
      dynamic raw);

  @protected
  ElementTwinRustAsyncSse dco_decode_box_autoadd_element_twin_rust_async_sse(
      dynamic raw);

  @protected
  ElementTwinSse dco_decode_box_autoadd_element_twin_sse(dynamic raw);

  @protected
  ElementTwinSync dco_decode_box_autoadd_element_twin_sync(dynamic raw);

  @protected
  ElementTwinSyncSse dco_decode_box_autoadd_element_twin_sync_sse(dynamic raw);

  @protected
  EmptyTwinNormal dco_decode_box_autoadd_empty_twin_normal(dynamic raw);

  @protected
  EmptyTwinRustAsync dco_decode_box_autoadd_empty_twin_rust_async(dynamic raw);

  @protected
  EmptyTwinRustAsyncSse dco_decode_box_autoadd_empty_twin_rust_async_sse(
      dynamic raw);

  @protected
  EmptyTwinSse dco_decode_box_autoadd_empty_twin_sse(dynamic raw);

  @protected
  EmptyTwinSync dco_decode_box_autoadd_empty_twin_sync(dynamic raw);

  @protected
  EmptyTwinSyncSse dco_decode_box_autoadd_empty_twin_sync_sse(dynamic raw);

  @protected
  EnumDartOpaqueTwinNormal dco_decode_box_autoadd_enum_dart_opaque_twin_normal(
      dynamic raw);

  @protected
  EnumDartOpaqueTwinRustAsync
      dco_decode_box_autoadd_enum_dart_opaque_twin_rust_async(dynamic raw);

  @protected
  EnumDartOpaqueTwinRustAsyncSse
      dco_decode_box_autoadd_enum_dart_opaque_twin_rust_async_sse(dynamic raw);

  @protected
  EnumDartOpaqueTwinSse dco_decode_box_autoadd_enum_dart_opaque_twin_sse(
      dynamic raw);

  @protected
  EnumDartOpaqueTwinSync dco_decode_box_autoadd_enum_dart_opaque_twin_sync(
      dynamic raw);

  @protected
  EnumDartOpaqueTwinSyncSse
      dco_decode_box_autoadd_enum_dart_opaque_twin_sync_sse(dynamic raw);

  @protected
  EnumOpaqueTwinMoi dco_decode_box_autoadd_enum_opaque_twin_moi(dynamic raw);

  @protected
  EnumOpaqueTwinNormal dco_decode_box_autoadd_enum_opaque_twin_normal(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsync dco_decode_box_autoadd_enum_opaque_twin_rust_async(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncMoi
      dco_decode_box_autoadd_enum_opaque_twin_rust_async_moi(dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncSse
      dco_decode_box_autoadd_enum_opaque_twin_rust_async_sse(dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncSseMoi
      dco_decode_box_autoadd_enum_opaque_twin_rust_async_sse_moi(dynamic raw);

  @protected
  EnumOpaqueTwinSse dco_decode_box_autoadd_enum_opaque_twin_sse(dynamic raw);

  @protected
  EnumOpaqueTwinSseMoi dco_decode_box_autoadd_enum_opaque_twin_sse_moi(
      dynamic raw);

  @protected
  EnumOpaqueTwinSync dco_decode_box_autoadd_enum_opaque_twin_sync(dynamic raw);

  @protected
  EnumOpaqueTwinSyncMoi dco_decode_box_autoadd_enum_opaque_twin_sync_moi(
      dynamic raw);

  @protected
  EnumOpaqueTwinSyncSse dco_decode_box_autoadd_enum_opaque_twin_sync_sse(
      dynamic raw);

  @protected
  EnumOpaqueTwinSyncSseMoi dco_decode_box_autoadd_enum_opaque_twin_sync_sse_moi(
      dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinMoi
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_moi(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinNormal
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_normal(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsync
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncMoi
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSse
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_sse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSseMoi
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_sse_moi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSse
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_sse(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSseMoi
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_sse_moi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSync
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_sync(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSyncMoi
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_sync_moi(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSse
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_sync_sse(
          dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSseMoi
      dco_decode_box_autoadd_enum_with_good_and_opaque_twin_sync_sse_moi(
          dynamic raw);

  @protected
  EnumWithItemMixedTwinNormal
      dco_decode_box_autoadd_enum_with_item_mixed_twin_normal(dynamic raw);

  @protected
  EnumWithItemMixedTwinRustAsync
      dco_decode_box_autoadd_enum_with_item_mixed_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemMixedTwinRustAsyncSse
      dco_decode_box_autoadd_enum_with_item_mixed_twin_rust_async_sse(
          dynamic raw);

  @protected
  EnumWithItemMixedTwinSse dco_decode_box_autoadd_enum_with_item_mixed_twin_sse(
      dynamic raw);

  @protected
  EnumWithItemMixedTwinSync
      dco_decode_box_autoadd_enum_with_item_mixed_twin_sync(dynamic raw);

  @protected
  EnumWithItemMixedTwinSyncSse
      dco_decode_box_autoadd_enum_with_item_mixed_twin_sync_sse(dynamic raw);

  @protected
  EnumWithItemStructTwinNormal
      dco_decode_box_autoadd_enum_with_item_struct_twin_normal(dynamic raw);

  @protected
  EnumWithItemStructTwinRustAsync
      dco_decode_box_autoadd_enum_with_item_struct_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemStructTwinRustAsyncSse
      dco_decode_box_autoadd_enum_with_item_struct_twin_rust_async_sse(
          dynamic raw);

  @protected
  EnumWithItemStructTwinSse
      dco_decode_box_autoadd_enum_with_item_struct_twin_sse(dynamic raw);

  @protected
  EnumWithItemStructTwinSync
      dco_decode_box_autoadd_enum_with_item_struct_twin_sync(dynamic raw);

  @protected
  EnumWithItemStructTwinSyncSse
      dco_decode_box_autoadd_enum_with_item_struct_twin_sync_sse(dynamic raw);

  @protected
  EnumWithItemTupleTwinNormal
      dco_decode_box_autoadd_enum_with_item_tuple_twin_normal(dynamic raw);

  @protected
  EnumWithItemTupleTwinRustAsync
      dco_decode_box_autoadd_enum_with_item_tuple_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemTupleTwinRustAsyncSse
      dco_decode_box_autoadd_enum_with_item_tuple_twin_rust_async_sse(
          dynamic raw);

  @protected
  EnumWithItemTupleTwinSse dco_decode_box_autoadd_enum_with_item_tuple_twin_sse(
      dynamic raw);

  @protected
  EnumWithItemTupleTwinSync
      dco_decode_box_autoadd_enum_with_item_tuple_twin_sync(dynamic raw);

  @protected
  EnumWithItemTupleTwinSyncSse
      dco_decode_box_autoadd_enum_with_item_tuple_twin_sync_sse(dynamic raw);

  @protected
  EventTwinNormal dco_decode_box_autoadd_event_twin_normal(dynamic raw);

  @protected
  EventTwinRustAsync dco_decode_box_autoadd_event_twin_rust_async(dynamic raw);

  @protected
  EventTwinRustAsyncSse dco_decode_box_autoadd_event_twin_rust_async_sse(
      dynamic raw);

  @protected
  EventTwinSse dco_decode_box_autoadd_event_twin_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinNormal dco_decode_box_autoadd_exotic_optionals_twin_normal(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsync
      dco_decode_box_autoadd_exotic_optionals_twin_rust_async(dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      dco_decode_box_autoadd_exotic_optionals_twin_rust_async_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSse dco_decode_box_autoadd_exotic_optionals_twin_sse(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSync dco_decode_box_autoadd_exotic_optionals_twin_sync(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSyncSse
      dco_decode_box_autoadd_exotic_optionals_twin_sync_sse(dynamic raw);

  @protected
  double dco_decode_box_autoadd_f_32(dynamic raw);

  @protected
  double dco_decode_box_autoadd_f_64(dynamic raw);

  @protected
  FeatureChronoTwinNormal dco_decode_box_autoadd_feature_chrono_twin_normal(
      dynamic raw);

  @protected
  FeatureChronoTwinRustAsync
      dco_decode_box_autoadd_feature_chrono_twin_rust_async(dynamic raw);

  @protected
  FeatureChronoTwinRustAsyncSse
      dco_decode_box_autoadd_feature_chrono_twin_rust_async_sse(dynamic raw);

  @protected
  FeatureChronoTwinSse dco_decode_box_autoadd_feature_chrono_twin_sse(
      dynamic raw);

  @protected
  FeatureChronoTwinSync dco_decode_box_autoadd_feature_chrono_twin_sync(
      dynamic raw);

  @protected
  FeatureChronoTwinSyncSse dco_decode_box_autoadd_feature_chrono_twin_sync_sse(
      dynamic raw);

  @protected
  FeatureUuidTwinNormal dco_decode_box_autoadd_feature_uuid_twin_normal(
      dynamic raw);

  @protected
  FeatureUuidTwinRustAsync dco_decode_box_autoadd_feature_uuid_twin_rust_async(
      dynamic raw);

  @protected
  FeatureUuidTwinRustAsyncSse
      dco_decode_box_autoadd_feature_uuid_twin_rust_async_sse(dynamic raw);

  @protected
  FeatureUuidTwinSse dco_decode_box_autoadd_feature_uuid_twin_sse(dynamic raw);

  @protected
  FeatureUuidTwinSync dco_decode_box_autoadd_feature_uuid_twin_sync(
      dynamic raw);

  @protected
  FeatureUuidTwinSyncSse dco_decode_box_autoadd_feature_uuid_twin_sync_sse(
      dynamic raw);

  @protected
  FeedIdTwinNormal dco_decode_box_autoadd_feed_id_twin_normal(dynamic raw);

  @protected
  FeedIdTwinRustAsync dco_decode_box_autoadd_feed_id_twin_rust_async(
      dynamic raw);

  @protected
  FeedIdTwinRustAsyncSse dco_decode_box_autoadd_feed_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  FeedIdTwinSse dco_decode_box_autoadd_feed_id_twin_sse(dynamic raw);

  @protected
  FeedIdTwinSync dco_decode_box_autoadd_feed_id_twin_sync(dynamic raw);

  @protected
  FeedIdTwinSyncSse dco_decode_box_autoadd_feed_id_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_16(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_32(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_64(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_8(dynamic raw);

  @protected
  int dco_decode_box_autoadd_isize(dynamic raw);

  @protected
  KitchenSinkTwinNormal dco_decode_box_autoadd_kitchen_sink_twin_normal(
      dynamic raw);

  @protected
  KitchenSinkTwinRustAsync dco_decode_box_autoadd_kitchen_sink_twin_rust_async(
      dynamic raw);

  @protected
  KitchenSinkTwinRustAsyncSse
      dco_decode_box_autoadd_kitchen_sink_twin_rust_async_sse(dynamic raw);

  @protected
  KitchenSinkTwinSse dco_decode_box_autoadd_kitchen_sink_twin_sse(dynamic raw);

  @protected
  KitchenSinkTwinSync dco_decode_box_autoadd_kitchen_sink_twin_sync(
      dynamic raw);

  @protected
  KitchenSinkTwinSyncSse dco_decode_box_autoadd_kitchen_sink_twin_sync_sse(
      dynamic raw);

  @protected
  ListOfNestedRawStringMirrored
      dco_decode_box_autoadd_list_of_nested_raw_string_mirrored(dynamic raw);

  @protected
  MacroStruct dco_decode_box_autoadd_macro_struct(dynamic raw);

  @protected
  MeasureTwinNormal dco_decode_box_autoadd_measure_twin_normal(dynamic raw);

  @protected
  MeasureTwinRustAsync dco_decode_box_autoadd_measure_twin_rust_async(
      dynamic raw);

  @protected
  MeasureTwinRustAsyncSse dco_decode_box_autoadd_measure_twin_rust_async_sse(
      dynamic raw);

  @protected
  MeasureTwinSse dco_decode_box_autoadd_measure_twin_sse(dynamic raw);

  @protected
  MeasureTwinSync dco_decode_box_autoadd_measure_twin_sync(dynamic raw);

  @protected
  MeasureTwinSyncSse dco_decode_box_autoadd_measure_twin_sync_sse(dynamic raw);

  @protected
  MessageIdTwinNormal dco_decode_box_autoadd_message_id_twin_normal(
      dynamic raw);

  @protected
  MessageIdTwinRustAsync dco_decode_box_autoadd_message_id_twin_rust_async(
      dynamic raw);

  @protected
  MessageIdTwinRustAsyncSse
      dco_decode_box_autoadd_message_id_twin_rust_async_sse(dynamic raw);

  @protected
  MessageIdTwinSse dco_decode_box_autoadd_message_id_twin_sse(dynamic raw);

  @protected
  MessageIdTwinSync dco_decode_box_autoadd_message_id_twin_sync(dynamic raw);

  @protected
  MessageIdTwinSyncSse dco_decode_box_autoadd_message_id_twin_sync_sse(
      dynamic raw);

  @protected
  MyCallableTwinNormal dco_decode_box_autoadd_my_callable_twin_normal(
      dynamic raw);

  @protected
  MyCallableTwinRustAsync dco_decode_box_autoadd_my_callable_twin_rust_async(
      dynamic raw);

  @protected
  MyCallableTwinRustAsyncSse
      dco_decode_box_autoadd_my_callable_twin_rust_async_sse(dynamic raw);

  @protected
  MyCallableTwinSse dco_decode_box_autoadd_my_callable_twin_sse(dynamic raw);

  @protected
  MyCallableTwinSync dco_decode_box_autoadd_my_callable_twin_sync(dynamic raw);

  @protected
  MyCallableTwinSyncSse dco_decode_box_autoadd_my_callable_twin_sync_sse(
      dynamic raw);

  @protected
  MyNestedStructTwinNormal dco_decode_box_autoadd_my_nested_struct_twin_normal(
      dynamic raw);

  @protected
  MyNestedStructTwinRustAsync
      dco_decode_box_autoadd_my_nested_struct_twin_rust_async(dynamic raw);

  @protected
  MyNestedStructTwinRustAsyncSse
      dco_decode_box_autoadd_my_nested_struct_twin_rust_async_sse(dynamic raw);

  @protected
  MyNestedStructTwinSse dco_decode_box_autoadd_my_nested_struct_twin_sse(
      dynamic raw);

  @protected
  MyNestedStructTwinSync dco_decode_box_autoadd_my_nested_struct_twin_sync(
      dynamic raw);

  @protected
  MyNestedStructTwinSyncSse
      dco_decode_box_autoadd_my_nested_struct_twin_sync_sse(dynamic raw);

  @protected
  MySize dco_decode_box_autoadd_my_size(dynamic raw);

  @protected
  MyStruct dco_decode_box_autoadd_my_struct(dynamic raw);

  @protected
  MyTreeNodeTwinNormal dco_decode_box_autoadd_my_tree_node_twin_normal(
      dynamic raw);

  @protected
  MyTreeNodeTwinRustAsync dco_decode_box_autoadd_my_tree_node_twin_rust_async(
      dynamic raw);

  @protected
  MyTreeNodeTwinRustAsyncSse
      dco_decode_box_autoadd_my_tree_node_twin_rust_async_sse(dynamic raw);

  @protected
  MyTreeNodeTwinSse dco_decode_box_autoadd_my_tree_node_twin_sse(dynamic raw);

  @protected
  MyTreeNodeTwinSync dco_decode_box_autoadd_my_tree_node_twin_sync(dynamic raw);

  @protected
  MyTreeNodeTwinSyncSse dco_decode_box_autoadd_my_tree_node_twin_sync_sse(
      dynamic raw);

  @protected
  NestedRawStringMirrored dco_decode_box_autoadd_nested_raw_string_mirrored(
      dynamic raw);

  @protected
  NewTypeIntTwinNormal dco_decode_box_autoadd_new_type_int_twin_normal(
      dynamic raw);

  @protected
  NewTypeIntTwinRustAsync dco_decode_box_autoadd_new_type_int_twin_rust_async(
      dynamic raw);

  @protected
  NewTypeIntTwinRustAsyncSse
      dco_decode_box_autoadd_new_type_int_twin_rust_async_sse(dynamic raw);

  @protected
  NewTypeIntTwinSse dco_decode_box_autoadd_new_type_int_twin_sse(dynamic raw);

  @protected
  NewTypeIntTwinSync dco_decode_box_autoadd_new_type_int_twin_sync(dynamic raw);

  @protected
  NewTypeIntTwinSyncSse dco_decode_box_autoadd_new_type_int_twin_sync_sse(
      dynamic raw);

  @protected
  NoteTwinNormal dco_decode_box_autoadd_note_twin_normal(dynamic raw);

  @protected
  NoteTwinRustAsync dco_decode_box_autoadd_note_twin_rust_async(dynamic raw);

  @protected
  NoteTwinRustAsyncSse dco_decode_box_autoadd_note_twin_rust_async_sse(
      dynamic raw);

  @protected
  NoteTwinSse dco_decode_box_autoadd_note_twin_sse(dynamic raw);

  @protected
  NoteTwinSync dco_decode_box_autoadd_note_twin_sync(dynamic raw);

  @protected
  NoteTwinSyncSse dco_decode_box_autoadd_note_twin_sync_sse(dynamic raw);

  @protected
  Numbers dco_decode_box_autoadd_numbers(dynamic raw);

  @protected
  OpaqueNestedTwinMoi dco_decode_box_autoadd_opaque_nested_twin_moi(
      dynamic raw);

  @protected
  OpaqueNestedTwinNormal dco_decode_box_autoadd_opaque_nested_twin_normal(
      dynamic raw);

  @protected
  OpaqueNestedTwinRustAsync
      dco_decode_box_autoadd_opaque_nested_twin_rust_async(dynamic raw);

  @protected
  OpaqueNestedTwinRustAsyncMoi
      dco_decode_box_autoadd_opaque_nested_twin_rust_async_moi(dynamic raw);

  @protected
  OpaqueNestedTwinRustAsyncSse
      dco_decode_box_autoadd_opaque_nested_twin_rust_async_sse(dynamic raw);

  @protected
  OpaqueNestedTwinRustAsyncSseMoi
      dco_decode_box_autoadd_opaque_nested_twin_rust_async_sse_moi(dynamic raw);

  @protected
  OpaqueNestedTwinSse dco_decode_box_autoadd_opaque_nested_twin_sse(
      dynamic raw);

  @protected
  OpaqueNestedTwinSseMoi dco_decode_box_autoadd_opaque_nested_twin_sse_moi(
      dynamic raw);

  @protected
  OpaqueNestedTwinSync dco_decode_box_autoadd_opaque_nested_twin_sync(
      dynamic raw);

  @protected
  OpaqueNestedTwinSyncMoi dco_decode_box_autoadd_opaque_nested_twin_sync_moi(
      dynamic raw);

  @protected
  OpaqueNestedTwinSyncSse dco_decode_box_autoadd_opaque_nested_twin_sync_sse(
      dynamic raw);

  @protected
  OpaqueNestedTwinSyncSseMoi
      dco_decode_box_autoadd_opaque_nested_twin_sync_sse_moi(dynamic raw);

  @protected
  OptVecsTwinNormal dco_decode_box_autoadd_opt_vecs_twin_normal(dynamic raw);

  @protected
  OptVecsTwinRustAsync dco_decode_box_autoadd_opt_vecs_twin_rust_async(
      dynamic raw);

  @protected
  OptVecsTwinRustAsyncSse dco_decode_box_autoadd_opt_vecs_twin_rust_async_sse(
      dynamic raw);

  @protected
  OptVecsTwinSse dco_decode_box_autoadd_opt_vecs_twin_sse(dynamic raw);

  @protected
  OptVecsTwinSync dco_decode_box_autoadd_opt_vecs_twin_sync(dynamic raw);

  @protected
  OptVecsTwinSyncSse dco_decode_box_autoadd_opt_vecs_twin_sync_sse(dynamic raw);

  @protected
  RawStringMirrored dco_decode_box_autoadd_raw_string_mirrored(dynamic raw);

  @protected
  (String, int) dco_decode_box_autoadd_record_string_i_32(dynamic raw);

  @protected
  Sequences dco_decode_box_autoadd_sequences(dynamic raw);

  @protected
  SimpleStructTwinNormal dco_decode_box_autoadd_simple_struct_twin_normal(
      dynamic raw);

  @protected
  SimpleStructTwinRustAsync
      dco_decode_box_autoadd_simple_struct_twin_rust_async(dynamic raw);

  @protected
  SimpleStructTwinRustAsyncSse
      dco_decode_box_autoadd_simple_struct_twin_rust_async_sse(dynamic raw);

  @protected
  SimpleStructTwinSse dco_decode_box_autoadd_simple_struct_twin_sse(
      dynamic raw);

  @protected
  SimpleStructTwinSync dco_decode_box_autoadd_simple_struct_twin_sync(
      dynamic raw);

  @protected
  SimpleStructTwinSyncSse dco_decode_box_autoadd_simple_struct_twin_sync_sse(
      dynamic raw);

  @protected
  SomeStructTwinNormal dco_decode_box_autoadd_some_struct_twin_normal(
      dynamic raw);

  @protected
  SomeStructTwinRustAsync dco_decode_box_autoadd_some_struct_twin_rust_async(
      dynamic raw);

  @protected
  SomeStructTwinRustAsyncSse
      dco_decode_box_autoadd_some_struct_twin_rust_async_sse(dynamic raw);

  @protected
  SomeStructTwinSse dco_decode_box_autoadd_some_struct_twin_sse(dynamic raw);

  @protected
  SomeStructTwinSync dco_decode_box_autoadd_some_struct_twin_sync(dynamic raw);

  @protected
  SomeStructTwinSyncSse dco_decode_box_autoadd_some_struct_twin_sync_sse(
      dynamic raw);

  @protected
  StructInLowerLevel dco_decode_box_autoadd_struct_in_lower_level(dynamic raw);

  @protected
  StructWithCommentsTwinNormal
      dco_decode_box_autoadd_struct_with_comments_twin_normal(dynamic raw);

  @protected
  StructWithCommentsTwinRustAsync
      dco_decode_box_autoadd_struct_with_comments_twin_rust_async(dynamic raw);

  @protected
  StructWithCommentsTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_comments_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithCommentsTwinSse
      dco_decode_box_autoadd_struct_with_comments_twin_sse(dynamic raw);

  @protected
  StructWithCommentsTwinSync
      dco_decode_box_autoadd_struct_with_comments_twin_sync(dynamic raw);

  @protected
  StructWithCommentsTwinSyncSse
      dco_decode_box_autoadd_struct_with_comments_twin_sync_sse(dynamic raw);

  @protected
  StructWithEnumTwinNormal dco_decode_box_autoadd_struct_with_enum_twin_normal(
      dynamic raw);

  @protected
  StructWithEnumTwinRustAsync
      dco_decode_box_autoadd_struct_with_enum_twin_rust_async(dynamic raw);

  @protected
  StructWithEnumTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_enum_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithEnumTwinSse dco_decode_box_autoadd_struct_with_enum_twin_sse(
      dynamic raw);

  @protected
  StructWithEnumTwinSync dco_decode_box_autoadd_struct_with_enum_twin_sync(
      dynamic raw);

  @protected
  StructWithEnumTwinSyncSse
      dco_decode_box_autoadd_struct_with_enum_twin_sync_sse(dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinMoi
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinNormal
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normal(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsync
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSseMoi
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_sse_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSse
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sse(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSseMoi
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sse_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSync
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncMoi
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSse
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_sse(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSseMoi
      dco_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_sse_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinMoi
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_normal(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsync
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncMoi
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSseMoi
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_sse_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSseMoi
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sse_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncMoi
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_sse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSseMoi
      dco_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_sse_moi(
          dynamic raw);

  @protected
  StructWithOneFieldTwinNormal
      dco_decode_box_autoadd_struct_with_one_field_twin_normal(dynamic raw);

  @protected
  StructWithOneFieldTwinRustAsync
      dco_decode_box_autoadd_struct_with_one_field_twin_rust_async(dynamic raw);

  @protected
  StructWithOneFieldTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_one_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithOneFieldTwinSse
      dco_decode_box_autoadd_struct_with_one_field_twin_sse(dynamic raw);

  @protected
  StructWithOneFieldTwinSync
      dco_decode_box_autoadd_struct_with_one_field_twin_sync(dynamic raw);

  @protected
  StructWithOneFieldTwinSyncSse
      dco_decode_box_autoadd_struct_with_one_field_twin_sync_sse(dynamic raw);

  @protected
  StructWithTwoFieldTwinNormal
      dco_decode_box_autoadd_struct_with_two_field_twin_normal(dynamic raw);

  @protected
  StructWithTwoFieldTwinRustAsync
      dco_decode_box_autoadd_struct_with_two_field_twin_rust_async(dynamic raw);

  @protected
  StructWithTwoFieldTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_two_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithTwoFieldTwinSse
      dco_decode_box_autoadd_struct_with_two_field_twin_sse(dynamic raw);

  @protected
  StructWithTwoFieldTwinSync
      dco_decode_box_autoadd_struct_with_two_field_twin_sync(dynamic raw);

  @protected
  StructWithTwoFieldTwinSyncSse
      dco_decode_box_autoadd_struct_with_two_field_twin_sync_sse(dynamic raw);

  @protected
  StructWithZeroFieldTwinNormal
      dco_decode_box_autoadd_struct_with_zero_field_twin_normal(dynamic raw);

  @protected
  StructWithZeroFieldTwinRustAsync
      dco_decode_box_autoadd_struct_with_zero_field_twin_rust_async(
          dynamic raw);

  @protected
  StructWithZeroFieldTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_zero_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithZeroFieldTwinSse
      dco_decode_box_autoadd_struct_with_zero_field_twin_sse(dynamic raw);

  @protected
  StructWithZeroFieldTwinSync
      dco_decode_box_autoadd_struct_with_zero_field_twin_sync(dynamic raw);

  @protected
  StructWithZeroFieldTwinSyncSse
      dco_decode_box_autoadd_struct_with_zero_field_twin_sync_sse(dynamic raw);

  @protected
  SumWithTwinNormal dco_decode_box_autoadd_sum_with_twin_normal(dynamic raw);

  @protected
  SumWithTwinRustAsync dco_decode_box_autoadd_sum_with_twin_rust_async(
      dynamic raw);

  @protected
  SumWithTwinRustAsyncSse dco_decode_box_autoadd_sum_with_twin_rust_async_sse(
      dynamic raw);

  @protected
  SumWithTwinSse dco_decode_box_autoadd_sum_with_twin_sse(dynamic raw);

  @protected
  SumWithTwinSync dco_decode_box_autoadd_sum_with_twin_sync(dynamic raw);

  @protected
  SumWithTwinSyncSse dco_decode_box_autoadd_sum_with_twin_sync_sse(dynamic raw);

  @protected
  TestIdTwinNormal dco_decode_box_autoadd_test_id_twin_normal(dynamic raw);

  @protected
  TestIdTwinRustAsync dco_decode_box_autoadd_test_id_twin_rust_async(
      dynamic raw);

  @protected
  TestIdTwinRustAsyncSse dco_decode_box_autoadd_test_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  TestIdTwinSse dco_decode_box_autoadd_test_id_twin_sse(dynamic raw);

  @protected
  TestIdTwinSync dco_decode_box_autoadd_test_id_twin_sync(dynamic raw);

  @protected
  TestIdTwinSyncSse dco_decode_box_autoadd_test_id_twin_sync_sse(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinNormal
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_normal(
          dynamic raw);

  @protected
  TupleStructWithOneFieldTwinRustAsync
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_rust_async(
          dynamic raw);

  @protected
  TupleStructWithOneFieldTwinRustAsyncSse
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSse
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_sse(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSync
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_sync(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSyncSse
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_sync_sse(
          dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinNormal
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_normal(
          dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinRustAsync
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_rust_async(
          dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinRustAsyncSse
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSse
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_sse(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSync
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_sync(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSyncSse
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_sync_sse(
          dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_16(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_32(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_64(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_8(dynamic raw);

  @protected
  UserIdTwinNormal dco_decode_box_autoadd_user_id_twin_normal(dynamic raw);

  @protected
  UserIdTwinRustAsync dco_decode_box_autoadd_user_id_twin_rust_async(
      dynamic raw);

  @protected
  UserIdTwinRustAsyncSse dco_decode_box_autoadd_user_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  UserIdTwinSse dco_decode_box_autoadd_user_id_twin_sse(dynamic raw);

  @protected
  UserIdTwinSync dco_decode_box_autoadd_user_id_twin_sync(dynamic raw);

  @protected
  UserIdTwinSyncSse dco_decode_box_autoadd_user_id_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_box_autoadd_usize(dynamic raw);

  @protected
  WeekdaysTwinNormal dco_decode_box_autoadd_weekdays_twin_normal(dynamic raw);

  @protected
  WeekdaysTwinRustAsync dco_decode_box_autoadd_weekdays_twin_rust_async(
      dynamic raw);

  @protected
  WeekdaysTwinRustAsyncSse dco_decode_box_autoadd_weekdays_twin_rust_async_sse(
      dynamic raw);

  @protected
  WeekdaysTwinSse dco_decode_box_autoadd_weekdays_twin_sse(dynamic raw);

  @protected
  WeekdaysTwinSync dco_decode_box_autoadd_weekdays_twin_sync(dynamic raw);

  @protected
  WeekdaysTwinSyncSse dco_decode_box_autoadd_weekdays_twin_sync_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinNormal
      dco_decode_box_benchmark_binary_tree_twin_normal(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      dco_decode_box_benchmark_binary_tree_twin_rust_async(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      dco_decode_box_benchmark_binary_tree_twin_rust_async_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSse dco_decode_box_benchmark_binary_tree_twin_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSync dco_decode_box_benchmark_binary_tree_twin_sync(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSyncSse
      dco_decode_box_benchmark_binary_tree_twin_sync_sse(dynamic raw);

  @protected
  BlobTwinNormal dco_decode_box_blob_twin_normal(dynamic raw);

  @protected
  BlobTwinRustAsync dco_decode_box_blob_twin_rust_async(dynamic raw);

  @protected
  BlobTwinRustAsyncSse dco_decode_box_blob_twin_rust_async_sse(dynamic raw);

  @protected
  BlobTwinSse dco_decode_box_blob_twin_sse(dynamic raw);

  @protected
  BlobTwinSync dco_decode_box_blob_twin_sync(dynamic raw);

  @protected
  BlobTwinSyncSse dco_decode_box_blob_twin_sync_sse(dynamic raw);

  @protected
  bool dco_decode_box_bool(dynamic raw);

  @protected
  DistanceTwinNormal dco_decode_box_distance_twin_normal(dynamic raw);

  @protected
  DistanceTwinRustAsync dco_decode_box_distance_twin_rust_async(dynamic raw);

  @protected
  DistanceTwinRustAsyncSse dco_decode_box_distance_twin_rust_async_sse(
      dynamic raw);

  @protected
  DistanceTwinSse dco_decode_box_distance_twin_sse(dynamic raw);

  @protected
  DistanceTwinSync dco_decode_box_distance_twin_sync(dynamic raw);

  @protected
  DistanceTwinSyncSse dco_decode_box_distance_twin_sync_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinNormal dco_decode_box_exotic_optionals_twin_normal(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsync dco_decode_box_exotic_optionals_twin_rust_async(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      dco_decode_box_exotic_optionals_twin_rust_async_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSse dco_decode_box_exotic_optionals_twin_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSync dco_decode_box_exotic_optionals_twin_sync(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSyncSse dco_decode_box_exotic_optionals_twin_sync_sse(
      dynamic raw);

  @protected
  double dco_decode_box_f_64(dynamic raw);

  @protected
  FeedIdTwinNormal dco_decode_box_feed_id_twin_normal(dynamic raw);

  @protected
  FeedIdTwinRustAsync dco_decode_box_feed_id_twin_rust_async(dynamic raw);

  @protected
  FeedIdTwinRustAsyncSse dco_decode_box_feed_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  FeedIdTwinSse dco_decode_box_feed_id_twin_sse(dynamic raw);

  @protected
  FeedIdTwinSync dco_decode_box_feed_id_twin_sync(dynamic raw);

  @protected
  FeedIdTwinSyncSse dco_decode_box_feed_id_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_box_i_32(dynamic raw);

  @protected
  int dco_decode_box_i_64(dynamic raw);

  @protected
  int dco_decode_box_i_8(dynamic raw);

  @protected
  KitchenSinkTwinNormal dco_decode_box_kitchen_sink_twin_normal(dynamic raw);

  @protected
  KitchenSinkTwinRustAsync dco_decode_box_kitchen_sink_twin_rust_async(
      dynamic raw);

  @protected
  KitchenSinkTwinRustAsyncSse dco_decode_box_kitchen_sink_twin_rust_async_sse(
      dynamic raw);

  @protected
  KitchenSinkTwinSse dco_decode_box_kitchen_sink_twin_sse(dynamic raw);

  @protected
  KitchenSinkTwinSync dco_decode_box_kitchen_sink_twin_sync(dynamic raw);

  @protected
  KitchenSinkTwinSyncSse dco_decode_box_kitchen_sink_twin_sync_sse(dynamic raw);

  @protected
  MySize dco_decode_box_my_size(dynamic raw);

  @protected
  SpeedTwinNormal dco_decode_box_speed_twin_normal(dynamic raw);

  @protected
  SpeedTwinRustAsync dco_decode_box_speed_twin_rust_async(dynamic raw);

  @protected
  SpeedTwinRustAsyncSse dco_decode_box_speed_twin_rust_async_sse(dynamic raw);

  @protected
  SpeedTwinSse dco_decode_box_speed_twin_sse(dynamic raw);

  @protected
  SpeedTwinSync dco_decode_box_speed_twin_sync(dynamic raw);

  @protected
  SpeedTwinSyncSse dco_decode_box_speed_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_box_u_8(dynamic raw);

  @protected
  U8Array1600 dco_decode_box_u_8_array_1600(dynamic raw);

  @protected
  U8Array8 dco_decode_box_u_8_array_8(dynamic raw);

  @protected
  WeekdaysTwinNormal dco_decode_box_weekdays_twin_normal(dynamic raw);

  @protected
  WeekdaysTwinRustAsync dco_decode_box_weekdays_twin_rust_async(dynamic raw);

  @protected
  WeekdaysTwinRustAsyncSse dco_decode_box_weekdays_twin_rust_async_sse(
      dynamic raw);

  @protected
  WeekdaysTwinSse dco_decode_box_weekdays_twin_sse(dynamic raw);

  @protected
  WeekdaysTwinSync dco_decode_box_weekdays_twin_sync(dynamic raw);

  @protected
  WeekdaysTwinSyncSse dco_decode_box_weekdays_twin_sync_sse(dynamic raw);

  @protected
  CTwinNormal dco_decode_c_twin_normal(dynamic raw);

  @protected
  CTwinRustAsync dco_decode_c_twin_rust_async(dynamic raw);

  @protected
  CTwinRustAsyncSse dco_decode_c_twin_rust_async_sse(dynamic raw);

  @protected
  CTwinSse dco_decode_c_twin_sse(dynamic raw);

  @protected
  CTwinSync dco_decode_c_twin_sync(dynamic raw);

  @protected
  CTwinSyncSse dco_decode_c_twin_sync_sse(dynamic raw);

  @protected
  ConcatenateWithTwinNormal dco_decode_concatenate_with_twin_normal(
      dynamic raw);

  @protected
  ConcatenateWithTwinRustAsync dco_decode_concatenate_with_twin_rust_async(
      dynamic raw);

  @protected
  ConcatenateWithTwinRustAsyncSse
      dco_decode_concatenate_with_twin_rust_async_sse(dynamic raw);

  @protected
  ConcatenateWithTwinSse dco_decode_concatenate_with_twin_sse(dynamic raw);

  @protected
  ConcatenateWithTwinSync dco_decode_concatenate_with_twin_sync(dynamic raw);

  @protected
  ConcatenateWithTwinSyncSse dco_decode_concatenate_with_twin_sync_sse(
      dynamic raw);

  @protected
  ConstructorTranslatableStructTwinNormal
      dco_decode_constructor_translatable_struct_twin_normal(dynamic raw);

  @protected
  ConstructorTranslatableSyncStructTwinNormal
      dco_decode_constructor_translatable_sync_struct_twin_normal(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinNormal
      dco_decode_contains_mirrored_sub_struct_twin_normal(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinRustAsync
      dco_decode_contains_mirrored_sub_struct_twin_rust_async(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinRustAsyncSse
      dco_decode_contains_mirrored_sub_struct_twin_rust_async_sse(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinSse
      dco_decode_contains_mirrored_sub_struct_twin_sse(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinSync
      dco_decode_contains_mirrored_sub_struct_twin_sync(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinSyncSse
      dco_decode_contains_mirrored_sub_struct_twin_sync_sse(dynamic raw);

  @protected
  CustomEnumErrorTwinNormal dco_decode_custom_enum_error_twin_normal(
      dynamic raw);

  @protected
  CustomEnumErrorTwinRustAsync dco_decode_custom_enum_error_twin_rust_async(
      dynamic raw);

  @protected
  CustomEnumErrorTwinRustAsyncSse
      dco_decode_custom_enum_error_twin_rust_async_sse(dynamic raw);

  @protected
  CustomEnumErrorTwinSse dco_decode_custom_enum_error_twin_sse(dynamic raw);

  @protected
  CustomEnumErrorTwinSync dco_decode_custom_enum_error_twin_sync(dynamic raw);

  @protected
  CustomEnumErrorTwinSyncSse dco_decode_custom_enum_error_twin_sync_sse(
      dynamic raw);

  @protected
  CustomErrorTwinNormal dco_decode_custom_error_twin_normal(dynamic raw);

  @protected
  CustomErrorTwinRustAsync dco_decode_custom_error_twin_rust_async(dynamic raw);

  @protected
  CustomErrorTwinRustAsyncSse dco_decode_custom_error_twin_rust_async_sse(
      dynamic raw);

  @protected
  CustomErrorTwinSse dco_decode_custom_error_twin_sse(dynamic raw);

  @protected
  CustomErrorTwinSync dco_decode_custom_error_twin_sync(dynamic raw);

  @protected
  CustomErrorTwinSyncSse dco_decode_custom_error_twin_sync_sse(dynamic raw);

  @protected
  CustomNestedError1TwinNormal dco_decode_custom_nested_error_1_twin_normal(
      dynamic raw);

  @protected
  CustomNestedError1TwinRustAsync
      dco_decode_custom_nested_error_1_twin_rust_async(dynamic raw);

  @protected
  CustomNestedError1TwinRustAsyncSse
      dco_decode_custom_nested_error_1_twin_rust_async_sse(dynamic raw);

  @protected
  CustomNestedError1TwinSse dco_decode_custom_nested_error_1_twin_sse(
      dynamic raw);

  @protected
  CustomNestedError1TwinSync dco_decode_custom_nested_error_1_twin_sync(
      dynamic raw);

  @protected
  CustomNestedError1TwinSyncSse dco_decode_custom_nested_error_1_twin_sync_sse(
      dynamic raw);

  @protected
  CustomNestedError2TwinNormal dco_decode_custom_nested_error_2_twin_normal(
      dynamic raw);

  @protected
  CustomNestedError2TwinRustAsync
      dco_decode_custom_nested_error_2_twin_rust_async(dynamic raw);

  @protected
  CustomNestedError2TwinRustAsyncSse
      dco_decode_custom_nested_error_2_twin_rust_async_sse(dynamic raw);

  @protected
  CustomNestedError2TwinSse dco_decode_custom_nested_error_2_twin_sse(
      dynamic raw);

  @protected
  CustomNestedError2TwinSync dco_decode_custom_nested_error_2_twin_sync(
      dynamic raw);

  @protected
  CustomNestedError2TwinSyncSse dco_decode_custom_nested_error_2_twin_sync_sse(
      dynamic raw);

  @protected
  CustomNestedErrorInnerTwinNormal
      dco_decode_custom_nested_error_inner_twin_normal(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinRustAsync
      dco_decode_custom_nested_error_inner_twin_rust_async(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinRustAsyncSse
      dco_decode_custom_nested_error_inner_twin_rust_async_sse(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSse dco_decode_custom_nested_error_inner_twin_sse(
      dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSync dco_decode_custom_nested_error_inner_twin_sync(
      dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSyncSse
      dco_decode_custom_nested_error_inner_twin_sync_sse(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinNormal
      dco_decode_custom_nested_error_outer_twin_normal(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinRustAsync
      dco_decode_custom_nested_error_outer_twin_rust_async(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinRustAsyncSse
      dco_decode_custom_nested_error_outer_twin_rust_async_sse(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSse dco_decode_custom_nested_error_outer_twin_sse(
      dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSync dco_decode_custom_nested_error_outer_twin_sync(
      dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSyncSse
      dco_decode_custom_nested_error_outer_twin_sync_sse(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinNormal
      dco_decode_custom_struct_error_another_twin_normal(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinRustAsync
      dco_decode_custom_struct_error_another_twin_rust_async(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinRustAsyncSse
      dco_decode_custom_struct_error_another_twin_rust_async_sse(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinSse
      dco_decode_custom_struct_error_another_twin_sse(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinSync
      dco_decode_custom_struct_error_another_twin_sync(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinSyncSse
      dco_decode_custom_struct_error_another_twin_sync_sse(dynamic raw);

  @protected
  CustomStructErrorTwinNormal dco_decode_custom_struct_error_twin_normal(
      dynamic raw);

  @protected
  CustomStructErrorTwinRustAsync dco_decode_custom_struct_error_twin_rust_async(
      dynamic raw);

  @protected
  CustomStructErrorTwinRustAsyncSse
      dco_decode_custom_struct_error_twin_rust_async_sse(dynamic raw);

  @protected
  CustomStructErrorTwinSse dco_decode_custom_struct_error_twin_sse(dynamic raw);

  @protected
  CustomStructErrorTwinSync dco_decode_custom_struct_error_twin_sync(
      dynamic raw);

  @protected
  CustomStructErrorTwinSyncSse dco_decode_custom_struct_error_twin_sync_sse(
      dynamic raw);

  @protected
  CustomStructTwinNormal dco_decode_custom_struct_twin_normal(dynamic raw);

  @protected
  CustomStructTwinRustAsync dco_decode_custom_struct_twin_rust_async(
      dynamic raw);

  @protected
  CustomStructTwinRustAsyncSse dco_decode_custom_struct_twin_rust_async_sse(
      dynamic raw);

  @protected
  CustomStructTwinSse dco_decode_custom_struct_twin_sse(dynamic raw);

  @protected
  CustomStructTwinSync dco_decode_custom_struct_twin_sync(dynamic raw);

  @protected
  CustomStructTwinSyncSse dco_decode_custom_struct_twin_sync_sse(dynamic raw);

  @protected
  CustomizedTwinNormal dco_decode_customized_twin_normal(dynamic raw);

  @protected
  CustomizedTwinRustAsync dco_decode_customized_twin_rust_async(dynamic raw);

  @protected
  CustomizedTwinRustAsyncSse dco_decode_customized_twin_rust_async_sse(
      dynamic raw);

  @protected
  CustomizedTwinSse dco_decode_customized_twin_sse(dynamic raw);

  @protected
  CustomizedTwinSync dco_decode_customized_twin_sync(dynamic raw);

  @protected
  CustomizedTwinSyncSse dco_decode_customized_twin_sync_sse(dynamic raw);

  @protected
  DartOpaqueNestedTwinNormal dco_decode_dart_opaque_nested_twin_normal(
      dynamic raw);

  @protected
  DartOpaqueNestedTwinRustAsync dco_decode_dart_opaque_nested_twin_rust_async(
      dynamic raw);

  @protected
  DartOpaqueNestedTwinRustAsyncSse
      dco_decode_dart_opaque_nested_twin_rust_async_sse(dynamic raw);

  @protected
  DartOpaqueNestedTwinSse dco_decode_dart_opaque_nested_twin_sse(dynamic raw);

  @protected
  DartOpaqueNestedTwinSync dco_decode_dart_opaque_nested_twin_sync(dynamic raw);

  @protected
  DartOpaqueNestedTwinSyncSse dco_decode_dart_opaque_nested_twin_sync_sse(
      dynamic raw);

  @protected
  dynamic dco_decode_dartabi(dynamic raw);

  @protected
  DemoStructForRustCallDartTwinNormal
      dco_decode_demo_struct_for_rust_call_dart_twin_normal(dynamic raw);

  @protected
  DemoStructForRustCallDartTwinRustAsync
      dco_decode_demo_struct_for_rust_call_dart_twin_rust_async(dynamic raw);

  @protected
  DemoStructForRustCallDartTwinRustAsyncSse
      dco_decode_demo_struct_for_rust_call_dart_twin_rust_async_sse(
          dynamic raw);

  @protected
  DemoStructForRustCallDartTwinSse
      dco_decode_demo_struct_for_rust_call_dart_twin_sse(dynamic raw);

  @protected
  DistanceTwinNormal dco_decode_distance_twin_normal(dynamic raw);

  @protected
  DistanceTwinRustAsync dco_decode_distance_twin_rust_async(dynamic raw);

  @protected
  DistanceTwinRustAsyncSse dco_decode_distance_twin_rust_async_sse(dynamic raw);

  @protected
  DistanceTwinSse dco_decode_distance_twin_sse(dynamic raw);

  @protected
  DistanceTwinSync dco_decode_distance_twin_sync(dynamic raw);

  @protected
  DistanceTwinSyncSse dco_decode_distance_twin_sync_sse(dynamic raw);

  @protected
  ElementTwinNormal dco_decode_element_twin_normal(dynamic raw);

  @protected
  ElementTwinRustAsync dco_decode_element_twin_rust_async(dynamic raw);

  @protected
  ElementTwinRustAsyncSse dco_decode_element_twin_rust_async_sse(dynamic raw);

  @protected
  ElementTwinSse dco_decode_element_twin_sse(dynamic raw);

  @protected
  ElementTwinSync dco_decode_element_twin_sync(dynamic raw);

  @protected
  ElementTwinSyncSse dco_decode_element_twin_sync_sse(dynamic raw);

  @protected
  EmptyTwinNormal dco_decode_empty_twin_normal(dynamic raw);

  @protected
  EmptyTwinRustAsync dco_decode_empty_twin_rust_async(dynamic raw);

  @protected
  EmptyTwinRustAsyncSse dco_decode_empty_twin_rust_async_sse(dynamic raw);

  @protected
  EmptyTwinSse dco_decode_empty_twin_sse(dynamic raw);

  @protected
  EmptyTwinSync dco_decode_empty_twin_sync(dynamic raw);

  @protected
  EmptyTwinSyncSse dco_decode_empty_twin_sync_sse(dynamic raw);

  @protected
  EnumDartOpaqueTwinNormal dco_decode_enum_dart_opaque_twin_normal(dynamic raw);

  @protected
  EnumDartOpaqueTwinRustAsync dco_decode_enum_dart_opaque_twin_rust_async(
      dynamic raw);

  @protected
  EnumDartOpaqueTwinRustAsyncSse
      dco_decode_enum_dart_opaque_twin_rust_async_sse(dynamic raw);

  @protected
  EnumDartOpaqueTwinSse dco_decode_enum_dart_opaque_twin_sse(dynamic raw);

  @protected
  EnumDartOpaqueTwinSync dco_decode_enum_dart_opaque_twin_sync(dynamic raw);

  @protected
  EnumDartOpaqueTwinSyncSse dco_decode_enum_dart_opaque_twin_sync_sse(
      dynamic raw);

  @protected
  EnumOpaqueTwinMoi dco_decode_enum_opaque_twin_moi(dynamic raw);

  @protected
  EnumOpaqueTwinMoiArray5 dco_decode_enum_opaque_twin_moi_array_5(dynamic raw);

  @protected
  EnumOpaqueTwinNormal dco_decode_enum_opaque_twin_normal(dynamic raw);

  @protected
  EnumOpaqueTwinNormalArray5 dco_decode_enum_opaque_twin_normal_array_5(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsync dco_decode_enum_opaque_twin_rust_async(dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncArray5 dco_decode_enum_opaque_twin_rust_async_array_5(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncMoi dco_decode_enum_opaque_twin_rust_async_moi(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncMoiArray5
      dco_decode_enum_opaque_twin_rust_async_moi_array_5(dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncSse dco_decode_enum_opaque_twin_rust_async_sse(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncSseArray5
      dco_decode_enum_opaque_twin_rust_async_sse_array_5(dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncSseMoi dco_decode_enum_opaque_twin_rust_async_sse_moi(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncSseMoiArray5
      dco_decode_enum_opaque_twin_rust_async_sse_moi_array_5(dynamic raw);

  @protected
  EnumOpaqueTwinSse dco_decode_enum_opaque_twin_sse(dynamic raw);

  @protected
  EnumOpaqueTwinSseArray5 dco_decode_enum_opaque_twin_sse_array_5(dynamic raw);

  @protected
  EnumOpaqueTwinSseMoi dco_decode_enum_opaque_twin_sse_moi(dynamic raw);

  @protected
  EnumOpaqueTwinSseMoiArray5 dco_decode_enum_opaque_twin_sse_moi_array_5(
      dynamic raw);

  @protected
  EnumOpaqueTwinSync dco_decode_enum_opaque_twin_sync(dynamic raw);

  @protected
  EnumOpaqueTwinSyncArray5 dco_decode_enum_opaque_twin_sync_array_5(
      dynamic raw);

  @protected
  EnumOpaqueTwinSyncMoi dco_decode_enum_opaque_twin_sync_moi(dynamic raw);

  @protected
  EnumOpaqueTwinSyncMoiArray5 dco_decode_enum_opaque_twin_sync_moi_array_5(
      dynamic raw);

  @protected
  EnumOpaqueTwinSyncSse dco_decode_enum_opaque_twin_sync_sse(dynamic raw);

  @protected
  EnumOpaqueTwinSyncSseArray5 dco_decode_enum_opaque_twin_sync_sse_array_5(
      dynamic raw);

  @protected
  EnumOpaqueTwinSyncSseMoi dco_decode_enum_opaque_twin_sync_sse_moi(
      dynamic raw);

  @protected
  EnumOpaqueTwinSyncSseMoiArray5
      dco_decode_enum_opaque_twin_sync_sse_moi_array_5(dynamic raw);

  @protected
  EnumSimpleTwinNormal dco_decode_enum_simple_twin_normal(dynamic raw);

  @protected
  EnumSimpleTwinRustAsync dco_decode_enum_simple_twin_rust_async(dynamic raw);

  @protected
  EnumSimpleTwinRustAsyncSse dco_decode_enum_simple_twin_rust_async_sse(
      dynamic raw);

  @protected
  EnumSimpleTwinSse dco_decode_enum_simple_twin_sse(dynamic raw);

  @protected
  EnumSimpleTwinSync dco_decode_enum_simple_twin_sync(dynamic raw);

  @protected
  EnumSimpleTwinSyncSse dco_decode_enum_simple_twin_sync_sse(dynamic raw);

  @protected
  EnumWithDiscriminantTwinNormal dco_decode_enum_with_discriminant_twin_normal(
      dynamic raw);

  @protected
  EnumWithDiscriminantTwinRustAsync
      dco_decode_enum_with_discriminant_twin_rust_async(dynamic raw);

  @protected
  EnumWithDiscriminantTwinRustAsyncSse
      dco_decode_enum_with_discriminant_twin_rust_async_sse(dynamic raw);

  @protected
  EnumWithDiscriminantTwinSse dco_decode_enum_with_discriminant_twin_sse(
      dynamic raw);

  @protected
  EnumWithDiscriminantTwinSync dco_decode_enum_with_discriminant_twin_sync(
      dynamic raw);

  @protected
  EnumWithDiscriminantTwinSyncSse
      dco_decode_enum_with_discriminant_twin_sync_sse(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinMoi dco_decode_enum_with_good_and_opaque_twin_moi(
      dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinNormal
      dco_decode_enum_with_good_and_opaque_twin_normal(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsync
      dco_decode_enum_with_good_and_opaque_twin_rust_async(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncMoi
      dco_decode_enum_with_good_and_opaque_twin_rust_async_moi(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSse
      dco_decode_enum_with_good_and_opaque_twin_rust_async_sse(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSseMoi
      dco_decode_enum_with_good_and_opaque_twin_rust_async_sse_moi(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSse dco_decode_enum_with_good_and_opaque_twin_sse(
      dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSseMoi
      dco_decode_enum_with_good_and_opaque_twin_sse_moi(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSync dco_decode_enum_with_good_and_opaque_twin_sync(
      dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSyncMoi
      dco_decode_enum_with_good_and_opaque_twin_sync_moi(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSse
      dco_decode_enum_with_good_and_opaque_twin_sync_sse(dynamic raw);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSseMoi
      dco_decode_enum_with_good_and_opaque_twin_sync_sse_moi(dynamic raw);

  @protected
  EnumWithItemMixedTwinNormal dco_decode_enum_with_item_mixed_twin_normal(
      dynamic raw);

  @protected
  EnumWithItemMixedTwinRustAsync
      dco_decode_enum_with_item_mixed_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemMixedTwinRustAsyncSse
      dco_decode_enum_with_item_mixed_twin_rust_async_sse(dynamic raw);

  @protected
  EnumWithItemMixedTwinSse dco_decode_enum_with_item_mixed_twin_sse(
      dynamic raw);

  @protected
  EnumWithItemMixedTwinSync dco_decode_enum_with_item_mixed_twin_sync(
      dynamic raw);

  @protected
  EnumWithItemMixedTwinSyncSse dco_decode_enum_with_item_mixed_twin_sync_sse(
      dynamic raw);

  @protected
  EnumWithItemStructTwinNormal dco_decode_enum_with_item_struct_twin_normal(
      dynamic raw);

  @protected
  EnumWithItemStructTwinRustAsync
      dco_decode_enum_with_item_struct_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemStructTwinRustAsyncSse
      dco_decode_enum_with_item_struct_twin_rust_async_sse(dynamic raw);

  @protected
  EnumWithItemStructTwinSse dco_decode_enum_with_item_struct_twin_sse(
      dynamic raw);

  @protected
  EnumWithItemStructTwinSync dco_decode_enum_with_item_struct_twin_sync(
      dynamic raw);

  @protected
  EnumWithItemStructTwinSyncSse dco_decode_enum_with_item_struct_twin_sync_sse(
      dynamic raw);

  @protected
  EnumWithItemTupleTwinNormal dco_decode_enum_with_item_tuple_twin_normal(
      dynamic raw);

  @protected
  EnumWithItemTupleTwinRustAsync
      dco_decode_enum_with_item_tuple_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemTupleTwinRustAsyncSse
      dco_decode_enum_with_item_tuple_twin_rust_async_sse(dynamic raw);

  @protected
  EnumWithItemTupleTwinSse dco_decode_enum_with_item_tuple_twin_sse(
      dynamic raw);

  @protected
  EnumWithItemTupleTwinSync dco_decode_enum_with_item_tuple_twin_sync(
      dynamic raw);

  @protected
  EnumWithItemTupleTwinSyncSse dco_decode_enum_with_item_tuple_twin_sync_sse(
      dynamic raw);

  @protected
  EventTwinNormal dco_decode_event_twin_normal(dynamic raw);

  @protected
  EventTwinRustAsync dco_decode_event_twin_rust_async(dynamic raw);

  @protected
  EventTwinRustAsyncSse dco_decode_event_twin_rust_async_sse(dynamic raw);

  @protected
  EventTwinSse dco_decode_event_twin_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinNormal dco_decode_exotic_optionals_twin_normal(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsync dco_decode_exotic_optionals_twin_rust_async(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      dco_decode_exotic_optionals_twin_rust_async_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSse dco_decode_exotic_optionals_twin_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSync dco_decode_exotic_optionals_twin_sync(dynamic raw);

  @protected
  ExoticOptionalsTwinSyncSse dco_decode_exotic_optionals_twin_sync_sse(
      dynamic raw);

  @protected
  double dco_decode_f_32(dynamic raw);

  @protected
  double dco_decode_f_64(dynamic raw);

  @protected
  F64Array16 dco_decode_f_64_array_16(dynamic raw);

  @protected
  FeatureChronoTwinNormal dco_decode_feature_chrono_twin_normal(dynamic raw);

  @protected
  FeatureChronoTwinRustAsync dco_decode_feature_chrono_twin_rust_async(
      dynamic raw);

  @protected
  FeatureChronoTwinRustAsyncSse dco_decode_feature_chrono_twin_rust_async_sse(
      dynamic raw);

  @protected
  FeatureChronoTwinSse dco_decode_feature_chrono_twin_sse(dynamic raw);

  @protected
  FeatureChronoTwinSync dco_decode_feature_chrono_twin_sync(dynamic raw);

  @protected
  FeatureChronoTwinSyncSse dco_decode_feature_chrono_twin_sync_sse(dynamic raw);

  @protected
  FeatureUuidTwinNormal dco_decode_feature_uuid_twin_normal(dynamic raw);

  @protected
  FeatureUuidTwinRustAsync dco_decode_feature_uuid_twin_rust_async(dynamic raw);

  @protected
  FeatureUuidTwinRustAsyncSse dco_decode_feature_uuid_twin_rust_async_sse(
      dynamic raw);

  @protected
  FeatureUuidTwinSse dco_decode_feature_uuid_twin_sse(dynamic raw);

  @protected
  FeatureUuidTwinSync dco_decode_feature_uuid_twin_sync(dynamic raw);

  @protected
  FeatureUuidTwinSyncSse dco_decode_feature_uuid_twin_sync_sse(dynamic raw);

  @protected
  FeedIdTwinNormal dco_decode_feed_id_twin_normal(dynamic raw);

  @protected
  FeedIdTwinRustAsync dco_decode_feed_id_twin_rust_async(dynamic raw);

  @protected
  FeedIdTwinRustAsyncSse dco_decode_feed_id_twin_rust_async_sse(dynamic raw);

  @protected
  FeedIdTwinSse dco_decode_feed_id_twin_sse(dynamic raw);

  @protected
  FeedIdTwinSync dco_decode_feed_id_twin_sync(dynamic raw);

  @protected
  FeedIdTwinSyncSse dco_decode_feed_id_twin_sync_sse(dynamic raw);

  @protected
  HashMapValue dco_decode_hash_map_value(dynamic raw);

  @protected
  int dco_decode_i_16(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  I32Array2 dco_decode_i_32_array_2(dynamic raw);

  @protected
  int dco_decode_i_64(dynamic raw);

  @protected
  int dco_decode_i_8(dynamic raw);

  @protected
  int dco_decode_isize(dynamic raw);

  @protected
  KitchenSinkTwinNormal dco_decode_kitchen_sink_twin_normal(dynamic raw);

  @protected
  KitchenSinkTwinRustAsync dco_decode_kitchen_sink_twin_rust_async(dynamic raw);

  @protected
  KitchenSinkTwinRustAsyncSse dco_decode_kitchen_sink_twin_rust_async_sse(
      dynamic raw);

  @protected
  KitchenSinkTwinSse dco_decode_kitchen_sink_twin_sse(dynamic raw);

  @protected
  KitchenSinkTwinSync dco_decode_kitchen_sink_twin_sync(dynamic raw);

  @protected
  KitchenSinkTwinSyncSse dco_decode_kitchen_sink_twin_sync_sse(dynamic raw);

  @protected
  List<NonCloneSimpleTwinMoi>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinNormal>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinRustAsync>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinRustAsyncMoi>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinRustAsyncSse>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinRustAsyncSseMoi>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinSse>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinSseMoi>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinSync>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinSyncMoi>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinSyncSse>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  List<NonCloneSimpleTwinSyncSseMoi>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic raw);

  @protected
  List<Duration> dco_decode_list_Chrono_Duration(dynamic raw);

  @protected
  List<DateTime> dco_decode_list_Chrono_Local(dynamic raw);

  @protected
  List<DateTime> dco_decode_list_Chrono_Naive(dynamic raw);

  @protected
  List<Object> dco_decode_list_DartOpaque(dynamic raw);

  @protected
  List<HideDataTwinMoi> dco_decode_list_RustOpaque_HideDataTwinMoi(dynamic raw);

  @protected
  List<HideDataTwinNormal> dco_decode_list_RustOpaque_HideDataTwinNormal(
      dynamic raw);

  @protected
  List<HideDataTwinRustAsync> dco_decode_list_RustOpaque_HideDataTwinRustAsync(
      dynamic raw);

  @protected
  List<HideDataTwinRustAsyncMoi>
      dco_decode_list_RustOpaque_HideDataTwinRustAsyncMoi(dynamic raw);

  @protected
  List<HideDataTwinRustAsyncSse>
      dco_decode_list_RustOpaque_HideDataTwinRustAsyncSse(dynamic raw);

  @protected
  List<HideDataTwinRustAsyncSseMoi>
      dco_decode_list_RustOpaque_HideDataTwinRustAsyncSseMoi(dynamic raw);

  @protected
  List<HideDataTwinSse> dco_decode_list_RustOpaque_HideDataTwinSse(dynamic raw);

  @protected
  List<HideDataTwinSseMoi> dco_decode_list_RustOpaque_HideDataTwinSseMoi(
      dynamic raw);

  @protected
  List<HideDataTwinSync> dco_decode_list_RustOpaque_HideDataTwinSync(
      dynamic raw);

  @protected
  List<HideDataTwinSyncMoi> dco_decode_list_RustOpaque_HideDataTwinSyncMoi(
      dynamic raw);

  @protected
  List<HideDataTwinSyncSse> dco_decode_list_RustOpaque_HideDataTwinSyncSse(
      dynamic raw);

  @protected
  List<HideDataTwinSyncSseMoi>
      dco_decode_list_RustOpaque_HideDataTwinSyncSseMoi(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<UuidValue> dco_decode_list_Uuid(dynamic raw);

  @protected
  List<ApplicationEnvVar> dco_decode_list_application_env_var(dynamic raw);

  @protected
  List<ApplicationMode> dco_decode_list_application_mode(dynamic raw);

  @protected
  List<ApplicationSettings> dco_decode_list_application_settings(dynamic raw);

  @protected
  List<AttributeTwinNormal> dco_decode_list_attribute_twin_normal(dynamic raw);

  @protected
  List<AttributeTwinRustAsync> dco_decode_list_attribute_twin_rust_async(
      dynamic raw);

  @protected
  List<AttributeTwinRustAsyncSse> dco_decode_list_attribute_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<AttributeTwinSse> dco_decode_list_attribute_twin_sse(dynamic raw);

  @protected
  List<AttributeTwinSync> dco_decode_list_attribute_twin_sync(dynamic raw);

  @protected
  List<AttributeTwinSyncSse> dco_decode_list_attribute_twin_sync_sse(
      dynamic raw);

  @protected
  List<BasicGeneralEnumTwinNormal>
      dco_decode_list_basic_general_enum_twin_normal(dynamic raw);

  @protected
  List<BasicGeneralEnumTwinRustAsync>
      dco_decode_list_basic_general_enum_twin_rust_async(dynamic raw);

  @protected
  List<BasicGeneralEnumTwinRustAsyncSse>
      dco_decode_list_basic_general_enum_twin_rust_async_sse(dynamic raw);

  @protected
  List<BasicGeneralEnumTwinSse> dco_decode_list_basic_general_enum_twin_sse(
      dynamic raw);

  @protected
  List<BasicGeneralEnumTwinSync> dco_decode_list_basic_general_enum_twin_sync(
      dynamic raw);

  @protected
  List<BasicGeneralEnumTwinSyncSse>
      dco_decode_list_basic_general_enum_twin_sync_sse(dynamic raw);

  @protected
  List<BasicPrimitiveEnumTwinNormal>
      dco_decode_list_basic_primitive_enum_twin_normal(dynamic raw);

  @protected
  List<BasicPrimitiveEnumTwinRustAsync>
      dco_decode_list_basic_primitive_enum_twin_rust_async(dynamic raw);

  @protected
  List<BasicPrimitiveEnumTwinRustAsyncSse>
      dco_decode_list_basic_primitive_enum_twin_rust_async_sse(dynamic raw);

  @protected
  List<BasicPrimitiveEnumTwinSse> dco_decode_list_basic_primitive_enum_twin_sse(
      dynamic raw);

  @protected
  List<BasicPrimitiveEnumTwinSync>
      dco_decode_list_basic_primitive_enum_twin_sync(dynamic raw);

  @protected
  List<BasicPrimitiveEnumTwinSyncSse>
      dco_decode_list_basic_primitive_enum_twin_sync_sse(dynamic raw);

  @protected
  List<BasicStructTwinNormal> dco_decode_list_basic_struct_twin_normal(
      dynamic raw);

  @protected
  List<BasicStructTwinRustAsync> dco_decode_list_basic_struct_twin_rust_async(
      dynamic raw);

  @protected
  List<BasicStructTwinRustAsyncSse>
      dco_decode_list_basic_struct_twin_rust_async_sse(dynamic raw);

  @protected
  List<BasicStructTwinSse> dco_decode_list_basic_struct_twin_sse(dynamic raw);

  @protected
  List<BasicStructTwinSync> dco_decode_list_basic_struct_twin_sync(dynamic raw);

  @protected
  List<BasicStructTwinSyncSse> dco_decode_list_basic_struct_twin_sync_sse(
      dynamic raw);

  @protected
  List<bool> dco_decode_list_bool(dynamic raw);

  @protected
  List<ElementTwinNormal> dco_decode_list_element_twin_normal(dynamic raw);

  @protected
  List<ElementTwinRustAsync> dco_decode_list_element_twin_rust_async(
      dynamic raw);

  @protected
  List<ElementTwinRustAsyncSse> dco_decode_list_element_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<ElementTwinSse> dco_decode_list_element_twin_sse(dynamic raw);

  @protected
  List<ElementTwinSync> dco_decode_list_element_twin_sync(dynamic raw);

  @protected
  List<ElementTwinSyncSse> dco_decode_list_element_twin_sync_sse(dynamic raw);

  @protected
  List<EnumOpaqueTwinMoi> dco_decode_list_enum_opaque_twin_moi(dynamic raw);

  @protected
  List<EnumOpaqueTwinNormal> dco_decode_list_enum_opaque_twin_normal(
      dynamic raw);

  @protected
  List<EnumOpaqueTwinRustAsync> dco_decode_list_enum_opaque_twin_rust_async(
      dynamic raw);

  @protected
  List<EnumOpaqueTwinRustAsyncMoi>
      dco_decode_list_enum_opaque_twin_rust_async_moi(dynamic raw);

  @protected
  List<EnumOpaqueTwinRustAsyncSse>
      dco_decode_list_enum_opaque_twin_rust_async_sse(dynamic raw);

  @protected
  List<EnumOpaqueTwinRustAsyncSseMoi>
      dco_decode_list_enum_opaque_twin_rust_async_sse_moi(dynamic raw);

  @protected
  List<EnumOpaqueTwinSse> dco_decode_list_enum_opaque_twin_sse(dynamic raw);

  @protected
  List<EnumOpaqueTwinSseMoi> dco_decode_list_enum_opaque_twin_sse_moi(
      dynamic raw);

  @protected
  List<EnumOpaqueTwinSync> dco_decode_list_enum_opaque_twin_sync(dynamic raw);

  @protected
  List<EnumOpaqueTwinSyncMoi> dco_decode_list_enum_opaque_twin_sync_moi(
      dynamic raw);

  @protected
  List<EnumOpaqueTwinSyncSse> dco_decode_list_enum_opaque_twin_sync_sse(
      dynamic raw);

  @protected
  List<EnumOpaqueTwinSyncSseMoi> dco_decode_list_enum_opaque_twin_sync_sse_moi(
      dynamic raw);

  @protected
  List<Uint8List> dco_decode_list_list_prim_u_8_strict(dynamic raw);

  @protected
  List<MyEnum> dco_decode_list_my_enum(dynamic raw);

  @protected
  List<MySize> dco_decode_list_my_size(dynamic raw);

  @protected
  List<MyTreeNodeTwinNormal> dco_decode_list_my_tree_node_twin_normal(
      dynamic raw);

  @protected
  List<MyTreeNodeTwinRustAsync> dco_decode_list_my_tree_node_twin_rust_async(
      dynamic raw);

  @protected
  List<MyTreeNodeTwinRustAsyncSse>
      dco_decode_list_my_tree_node_twin_rust_async_sse(dynamic raw);

  @protected
  List<MyTreeNodeTwinSse> dco_decode_list_my_tree_node_twin_sse(dynamic raw);

  @protected
  List<MyTreeNodeTwinSync> dco_decode_list_my_tree_node_twin_sync(dynamic raw);

  @protected
  List<MyTreeNodeTwinSyncSse> dco_decode_list_my_tree_node_twin_sync_sse(
      dynamic raw);

  @protected
  List<NestedRawStringMirrored> dco_decode_list_nested_raw_string_mirrored(
      dynamic raw);

  @protected
  ListOfNestedRawStringMirrored dco_decode_list_of_nested_raw_string_mirrored(
      dynamic raw);

  @protected
  List<String?> dco_decode_list_opt_String(dynamic raw);

  @protected
  List<AttributeTwinNormal?>
      dco_decode_list_opt_box_autoadd_attribute_twin_normal(dynamic raw);

  @protected
  List<AttributeTwinRustAsync?>
      dco_decode_list_opt_box_autoadd_attribute_twin_rust_async(dynamic raw);

  @protected
  List<AttributeTwinRustAsyncSse?>
      dco_decode_list_opt_box_autoadd_attribute_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<AttributeTwinSse?> dco_decode_list_opt_box_autoadd_attribute_twin_sse(
      dynamic raw);

  @protected
  List<AttributeTwinSync?> dco_decode_list_opt_box_autoadd_attribute_twin_sync(
      dynamic raw);

  @protected
  List<AttributeTwinSyncSse?>
      dco_decode_list_opt_box_autoadd_attribute_twin_sync_sse(dynamic raw);

  @protected
  List<int?> dco_decode_list_opt_box_autoadd_i_32(dynamic raw);

  @protected
  List<WeekdaysTwinNormal?>
      dco_decode_list_opt_box_autoadd_weekdays_twin_normal(dynamic raw);

  @protected
  List<WeekdaysTwinRustAsync?>
      dco_decode_list_opt_box_autoadd_weekdays_twin_rust_async(dynamic raw);

  @protected
  List<WeekdaysTwinRustAsyncSse?>
      dco_decode_list_opt_box_autoadd_weekdays_twin_rust_async_sse(dynamic raw);

  @protected
  List<WeekdaysTwinSse?> dco_decode_list_opt_box_autoadd_weekdays_twin_sse(
      dynamic raw);

  @protected
  List<WeekdaysTwinSync?> dco_decode_list_opt_box_autoadd_weekdays_twin_sync(
      dynamic raw);

  @protected
  List<WeekdaysTwinSyncSse?>
      dco_decode_list_opt_box_autoadd_weekdays_twin_sync_sse(dynamic raw);

  @protected
  List<Int32List?> dco_decode_list_opt_list_prim_i_32_strict(dynamic raw);

  @protected
  List<PointTwinNormal> dco_decode_list_point_twin_normal(dynamic raw);

  @protected
  List<PointTwinRustAsync> dco_decode_list_point_twin_rust_async(dynamic raw);

  @protected
  List<PointTwinRustAsyncSse> dco_decode_list_point_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<PointTwinSse> dco_decode_list_point_twin_sse(dynamic raw);

  @protected
  List<PointTwinSync> dco_decode_list_point_twin_sync(dynamic raw);

  @protected
  List<PointTwinSyncSse> dco_decode_list_point_twin_sync_sse(dynamic raw);

  @protected
  List<double> dco_decode_list_prim_f_32_loose(dynamic raw);

  @protected
  Float32List dco_decode_list_prim_f_32_strict(dynamic raw);

  @protected
  List<double> dco_decode_list_prim_f_64_loose(dynamic raw);

  @protected
  Float64List dco_decode_list_prim_f_64_strict(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_i_16_loose(dynamic raw);

  @protected
  Int16List dco_decode_list_prim_i_16_strict(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_i_32_loose(dynamic raw);

  @protected
  Int32List dco_decode_list_prim_i_32_strict(dynamic raw);

  @protected
  Int64List dco_decode_list_prim_i_64_strict(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_i_8_loose(dynamic raw);

  @protected
  Int8List dco_decode_list_prim_i_8_strict(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_16_loose(dynamic raw);

  @protected
  Uint16List dco_decode_list_prim_u_16_strict(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_32_loose(dynamic raw);

  @protected
  Uint32List dco_decode_list_prim_u_32_strict(dynamic raw);

  @protected
  Uint64List dco_decode_list_prim_u_64_strict(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_8_loose(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<RawStringEnumMirrored> dco_decode_list_raw_string_enum_mirrored(
      dynamic raw);

  @protected
  List<RawStringMirrored> dco_decode_list_raw_string_mirrored(dynamic raw);

  @protected
  List<(int, BasicGeneralEnumTwinNormal)>
      dco_decode_list_record_i_32_basic_general_enum_twin_normal(dynamic raw);

  @protected
  List<(int, BasicGeneralEnumTwinRustAsync)>
      dco_decode_list_record_i_32_basic_general_enum_twin_rust_async(
          dynamic raw);

  @protected
  List<(int, BasicGeneralEnumTwinRustAsyncSse)>
      dco_decode_list_record_i_32_basic_general_enum_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<(int, BasicGeneralEnumTwinSse)>
      dco_decode_list_record_i_32_basic_general_enum_twin_sse(dynamic raw);

  @protected
  List<(int, BasicGeneralEnumTwinSync)>
      dco_decode_list_record_i_32_basic_general_enum_twin_sync(dynamic raw);

  @protected
  List<(int, BasicGeneralEnumTwinSyncSse)>
      dco_decode_list_record_i_32_basic_general_enum_twin_sync_sse(dynamic raw);

  @protected
  List<(int, BasicPrimitiveEnumTwinNormal)>
      dco_decode_list_record_i_32_basic_primitive_enum_twin_normal(dynamic raw);

  @protected
  List<(int, BasicPrimitiveEnumTwinRustAsync)>
      dco_decode_list_record_i_32_basic_primitive_enum_twin_rust_async(
          dynamic raw);

  @protected
  List<(int, BasicPrimitiveEnumTwinRustAsyncSse)>
      dco_decode_list_record_i_32_basic_primitive_enum_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<(int, BasicPrimitiveEnumTwinSse)>
      dco_decode_list_record_i_32_basic_primitive_enum_twin_sse(dynamic raw);

  @protected
  List<(int, BasicPrimitiveEnumTwinSync)>
      dco_decode_list_record_i_32_basic_primitive_enum_twin_sync(dynamic raw);

  @protected
  List<(int, BasicPrimitiveEnumTwinSyncSse)>
      dco_decode_list_record_i_32_basic_primitive_enum_twin_sync_sse(
          dynamic raw);

  @protected
  List<(int, BasicStructTwinNormal)>
      dco_decode_list_record_i_32_basic_struct_twin_normal(dynamic raw);

  @protected
  List<(int, BasicStructTwinRustAsync)>
      dco_decode_list_record_i_32_basic_struct_twin_rust_async(dynamic raw);

  @protected
  List<(int, BasicStructTwinRustAsyncSse)>
      dco_decode_list_record_i_32_basic_struct_twin_rust_async_sse(dynamic raw);

  @protected
  List<(int, BasicStructTwinSse)>
      dco_decode_list_record_i_32_basic_struct_twin_sse(dynamic raw);

  @protected
  List<(int, BasicStructTwinSync)>
      dco_decode_list_record_i_32_basic_struct_twin_sync(dynamic raw);

  @protected
  List<(int, BasicStructTwinSyncSse)>
      dco_decode_list_record_i_32_basic_struct_twin_sync_sse(dynamic raw);

  @protected
  List<(int, bool)> dco_decode_list_record_i_32_bool(dynamic raw);

  @protected
  List<(int, double)> dco_decode_list_record_i_32_f_32(dynamic raw);

  @protected
  List<(int, double)> dco_decode_list_record_i_32_f_64(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_i_16(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_i_32(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_i_64(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_i_8(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_isize(dynamic raw);

  @protected
  List<(int, Uint8List)> dco_decode_list_record_i_32_list_prim_u_8_strict(
      dynamic raw);

  @protected
  List<(int, String)> dco_decode_list_record_i_32_string(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_u_16(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_u_32(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_u_64(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_u_8(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_usize(dynamic raw);

  @protected
  List<(String, EnumSimpleTwinNormal)>
      dco_decode_list_record_string_enum_simple_twin_normal(dynamic raw);

  @protected
  List<(String, EnumSimpleTwinRustAsync)>
      dco_decode_list_record_string_enum_simple_twin_rust_async(dynamic raw);

  @protected
  List<(String, EnumSimpleTwinRustAsyncSse)>
      dco_decode_list_record_string_enum_simple_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<(String, EnumSimpleTwinSse)>
      dco_decode_list_record_string_enum_simple_twin_sse(dynamic raw);

  @protected
  List<(String, EnumSimpleTwinSync)>
      dco_decode_list_record_string_enum_simple_twin_sync(dynamic raw);

  @protected
  List<(String, EnumSimpleTwinSyncSse)>
      dco_decode_list_record_string_enum_simple_twin_sync_sse(dynamic raw);

  @protected
  List<(String, HashMapValue)> dco_decode_list_record_string_hash_map_value(
      dynamic raw);

  @protected
  List<(String, int)> dco_decode_list_record_string_i_32(dynamic raw);

  @protected
  List<(String, KitchenSinkTwinNormal)>
      dco_decode_list_record_string_kitchen_sink_twin_normal(dynamic raw);

  @protected
  List<(String, KitchenSinkTwinRustAsync)>
      dco_decode_list_record_string_kitchen_sink_twin_rust_async(dynamic raw);

  @protected
  List<(String, KitchenSinkTwinRustAsyncSse)>
      dco_decode_list_record_string_kitchen_sink_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<(String, KitchenSinkTwinSse)>
      dco_decode_list_record_string_kitchen_sink_twin_sse(dynamic raw);

  @protected
  List<(String, KitchenSinkTwinSync)>
      dco_decode_list_record_string_kitchen_sink_twin_sync(dynamic raw);

  @protected
  List<(String, KitchenSinkTwinSyncSse)>
      dco_decode_list_record_string_kitchen_sink_twin_sync_sse(dynamic raw);

  @protected
  List<(String, Uint8List)> dco_decode_list_record_string_list_prim_u_8_strict(
      dynamic raw);

  @protected
  List<(String, MySize)> dco_decode_list_record_string_my_size(dynamic raw);

  @protected
  List<(String, String)> dco_decode_list_record_string_string(dynamic raw);

  @protected
  List<(int, ApplicationMode)> dco_decode_list_record_u_8_application_mode(
      dynamic raw);

  @protected
  List<SimpleStructTwinNormal> dco_decode_list_simple_struct_twin_normal(
      dynamic raw);

  @protected
  List<SimpleStructTwinRustAsync> dco_decode_list_simple_struct_twin_rust_async(
      dynamic raw);

  @protected
  List<SimpleStructTwinRustAsyncSse>
      dco_decode_list_simple_struct_twin_rust_async_sse(dynamic raw);

  @protected
  List<SimpleStructTwinSse> dco_decode_list_simple_struct_twin_sse(dynamic raw);

  @protected
  List<SimpleStructTwinSync> dco_decode_list_simple_struct_twin_sync(
      dynamic raw);

  @protected
  List<SimpleStructTwinSyncSse> dco_decode_list_simple_struct_twin_sync_sse(
      dynamic raw);

  @protected
  List<SumWithTwinNormal> dco_decode_list_sum_with_twin_normal(dynamic raw);

  @protected
  List<SumWithTwinRustAsync> dco_decode_list_sum_with_twin_rust_async(
      dynamic raw);

  @protected
  List<SumWithTwinRustAsyncSse> dco_decode_list_sum_with_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<SumWithTwinSse> dco_decode_list_sum_with_twin_sse(dynamic raw);

  @protected
  List<SumWithTwinSync> dco_decode_list_sum_with_twin_sync(dynamic raw);

  @protected
  List<SumWithTwinSyncSse> dco_decode_list_sum_with_twin_sync_sse(dynamic raw);

  @protected
  List<TestIdTwinNormal> dco_decode_list_test_id_twin_normal(dynamic raw);

  @protected
  List<TestIdTwinRustAsync> dco_decode_list_test_id_twin_rust_async(
      dynamic raw);

  @protected
  List<TestIdTwinRustAsyncSse> dco_decode_list_test_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<TestIdTwinSse> dco_decode_list_test_id_twin_sse(dynamic raw);

  @protected
  List<TestIdTwinSync> dco_decode_list_test_id_twin_sync(dynamic raw);

  @protected
  List<TestIdTwinSyncSse> dco_decode_list_test_id_twin_sync_sse(dynamic raw);

  @protected
  List<WeekdaysTwinNormal> dco_decode_list_weekdays_twin_normal(dynamic raw);

  @protected
  List<WeekdaysTwinRustAsync> dco_decode_list_weekdays_twin_rust_async(
      dynamic raw);

  @protected
  List<WeekdaysTwinRustAsyncSse> dco_decode_list_weekdays_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<WeekdaysTwinSse> dco_decode_list_weekdays_twin_sse(dynamic raw);

  @protected
  List<WeekdaysTwinSync> dco_decode_list_weekdays_twin_sync(dynamic raw);

  @protected
  List<WeekdaysTwinSyncSse> dco_decode_list_weekdays_twin_sync_sse(dynamic raw);

  @protected
  Log2TwinNormal dco_decode_log_2_twin_normal(dynamic raw);

  @protected
  Log2TwinRustAsync dco_decode_log_2_twin_rust_async(dynamic raw);

  @protected
  Log2TwinRustAsyncSse dco_decode_log_2_twin_rust_async_sse(dynamic raw);

  @protected
  Log2TwinSse dco_decode_log_2_twin_sse(dynamic raw);

  @protected
  Log2TwinSync dco_decode_log_2_twin_sync(dynamic raw);

  @protected
  Log2TwinSyncSse dco_decode_log_2_twin_sync_sse(dynamic raw);

  @protected
  LogTwinNormal dco_decode_log_twin_normal(dynamic raw);

  @protected
  LogTwinRustAsync dco_decode_log_twin_rust_async(dynamic raw);

  @protected
  LogTwinRustAsyncSse dco_decode_log_twin_rust_async_sse(dynamic raw);

  @protected
  LogTwinSse dco_decode_log_twin_sse(dynamic raw);

  @protected
  MacroStruct dco_decode_macro_struct(dynamic raw);

  @protected
  MeasureTwinNormal dco_decode_measure_twin_normal(dynamic raw);

  @protected
  MeasureTwinRustAsync dco_decode_measure_twin_rust_async(dynamic raw);

  @protected
  MeasureTwinRustAsyncSse dco_decode_measure_twin_rust_async_sse(dynamic raw);

  @protected
  MeasureTwinSse dco_decode_measure_twin_sse(dynamic raw);

  @protected
  MeasureTwinSync dco_decode_measure_twin_sync(dynamic raw);

  @protected
  MeasureTwinSyncSse dco_decode_measure_twin_sync_sse(dynamic raw);

  @protected
  MessageIdTwinNormal dco_decode_message_id_twin_normal(dynamic raw);

  @protected
  MessageIdTwinRustAsync dco_decode_message_id_twin_rust_async(dynamic raw);

  @protected
  MessageIdTwinRustAsyncSse dco_decode_message_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  MessageIdTwinSse dco_decode_message_id_twin_sse(dynamic raw);

  @protected
  MessageIdTwinSync dco_decode_message_id_twin_sync(dynamic raw);

  @protected
  MessageIdTwinSyncSse dco_decode_message_id_twin_sync_sse(dynamic raw);

  @protected
  MirrorStructTwinNormal dco_decode_mirror_struct_twin_normal(dynamic raw);

  @protected
  MirrorStructTwinRustAsync dco_decode_mirror_struct_twin_rust_async(
      dynamic raw);

  @protected
  MirrorStructTwinRustAsyncSse dco_decode_mirror_struct_twin_rust_async_sse(
      dynamic raw);

  @protected
  MirrorStructTwinSse dco_decode_mirror_struct_twin_sse(dynamic raw);

  @protected
  MirrorStructTwinSync dco_decode_mirror_struct_twin_sync(dynamic raw);

  @protected
  MirrorStructTwinSyncSse dco_decode_mirror_struct_twin_sync_sse(dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinNormal
      dco_decode_more_than_just_one_raw_string_struct_twin_normal(dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinRustAsync
      dco_decode_more_than_just_one_raw_string_struct_twin_rust_async(
          dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinRustAsyncSse
      dco_decode_more_than_just_one_raw_string_struct_twin_rust_async_sse(
          dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinSse
      dco_decode_more_than_just_one_raw_string_struct_twin_sse(dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinSync
      dco_decode_more_than_just_one_raw_string_struct_twin_sync(dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinSyncSse
      dco_decode_more_than_just_one_raw_string_struct_twin_sync_sse(
          dynamic raw);

  @protected
  MyCallableTwinNormal dco_decode_my_callable_twin_normal(dynamic raw);

  @protected
  MyCallableTwinRustAsync dco_decode_my_callable_twin_rust_async(dynamic raw);

  @protected
  MyCallableTwinRustAsyncSse dco_decode_my_callable_twin_rust_async_sse(
      dynamic raw);

  @protected
  MyCallableTwinSse dco_decode_my_callable_twin_sse(dynamic raw);

  @protected
  MyCallableTwinSync dco_decode_my_callable_twin_sync(dynamic raw);

  @protected
  MyCallableTwinSyncSse dco_decode_my_callable_twin_sync_sse(dynamic raw);

  @protected
  MyEnum dco_decode_my_enum(dynamic raw);

  @protected
  MyNestedStructTwinNormal dco_decode_my_nested_struct_twin_normal(dynamic raw);

  @protected
  MyNestedStructTwinRustAsync dco_decode_my_nested_struct_twin_rust_async(
      dynamic raw);

  @protected
  MyNestedStructTwinRustAsyncSse
      dco_decode_my_nested_struct_twin_rust_async_sse(dynamic raw);

  @protected
  MyNestedStructTwinSse dco_decode_my_nested_struct_twin_sse(dynamic raw);

  @protected
  MyNestedStructTwinSync dco_decode_my_nested_struct_twin_sync(dynamic raw);

  @protected
  MyNestedStructTwinSyncSse dco_decode_my_nested_struct_twin_sync_sse(
      dynamic raw);

  @protected
  MySize dco_decode_my_size(dynamic raw);

  @protected
  MyStreamEntryTwinNormal dco_decode_my_stream_entry_twin_normal(dynamic raw);

  @protected
  MyStreamEntryTwinRustAsync dco_decode_my_stream_entry_twin_rust_async(
      dynamic raw);

  @protected
  MyStreamEntryTwinRustAsyncSse dco_decode_my_stream_entry_twin_rust_async_sse(
      dynamic raw);

  @protected
  MyStreamEntryTwinSse dco_decode_my_stream_entry_twin_sse(dynamic raw);

  @protected
  MyStruct dco_decode_my_struct(dynamic raw);

  @protected
  MyTreeNodeTwinNormal dco_decode_my_tree_node_twin_normal(dynamic raw);

  @protected
  MyTreeNodeTwinRustAsync dco_decode_my_tree_node_twin_rust_async(dynamic raw);

  @protected
  MyTreeNodeTwinRustAsyncSse dco_decode_my_tree_node_twin_rust_async_sse(
      dynamic raw);

  @protected
  MyTreeNodeTwinSse dco_decode_my_tree_node_twin_sse(dynamic raw);

  @protected
  MyTreeNodeTwinSync dco_decode_my_tree_node_twin_sync(dynamic raw);

  @protected
  MyTreeNodeTwinSyncSse dco_decode_my_tree_node_twin_sync_sse(dynamic raw);

  @protected
  NestedRawStringMirrored dco_decode_nested_raw_string_mirrored(dynamic raw);

  @protected
  NewSimpleStruct dco_decode_new_simple_struct(dynamic raw);

  @protected
  NewTypeIntTwinNormal dco_decode_new_type_int_twin_normal(dynamic raw);

  @protected
  NewTypeIntTwinRustAsync dco_decode_new_type_int_twin_rust_async(dynamic raw);

  @protected
  NewTypeIntTwinRustAsyncSse dco_decode_new_type_int_twin_rust_async_sse(
      dynamic raw);

  @protected
  NewTypeIntTwinSse dco_decode_new_type_int_twin_sse(dynamic raw);

  @protected
  NewTypeIntTwinSync dco_decode_new_type_int_twin_sync(dynamic raw);

  @protected
  NewTypeIntTwinSyncSse dco_decode_new_type_int_twin_sync_sse(dynamic raw);

  @protected
  NoteTwinNormal dco_decode_note_twin_normal(dynamic raw);

  @protected
  NoteTwinRustAsync dco_decode_note_twin_rust_async(dynamic raw);

  @protected
  NoteTwinRustAsyncSse dco_decode_note_twin_rust_async_sse(dynamic raw);

  @protected
  NoteTwinSse dco_decode_note_twin_sse(dynamic raw);

  @protected
  NoteTwinSync dco_decode_note_twin_sync(dynamic raw);

  @protected
  NoteTwinSyncSse dco_decode_note_twin_sync_sse(dynamic raw);

  @protected
  Numbers dco_decode_numbers(dynamic raw);

  @protected
  OldSimpleStruct dco_decode_old_simple_struct(dynamic raw);

  @protected
  OpaqueNestedTwinMoi dco_decode_opaque_nested_twin_moi(dynamic raw);

  @protected
  OpaqueNestedTwinNormal dco_decode_opaque_nested_twin_normal(dynamic raw);

  @protected
  OpaqueNestedTwinRustAsync dco_decode_opaque_nested_twin_rust_async(
      dynamic raw);

  @protected
  OpaqueNestedTwinRustAsyncMoi dco_decode_opaque_nested_twin_rust_async_moi(
      dynamic raw);

  @protected
  OpaqueNestedTwinRustAsyncSse dco_decode_opaque_nested_twin_rust_async_sse(
      dynamic raw);

  @protected
  OpaqueNestedTwinRustAsyncSseMoi
      dco_decode_opaque_nested_twin_rust_async_sse_moi(dynamic raw);

  @protected
  OpaqueNestedTwinSse dco_decode_opaque_nested_twin_sse(dynamic raw);

  @protected
  OpaqueNestedTwinSseMoi dco_decode_opaque_nested_twin_sse_moi(dynamic raw);

  @protected
  OpaqueNestedTwinSync dco_decode_opaque_nested_twin_sync(dynamic raw);

  @protected
  OpaqueNestedTwinSyncMoi dco_decode_opaque_nested_twin_sync_moi(dynamic raw);

  @protected
  OpaqueNestedTwinSyncSse dco_decode_opaque_nested_twin_sync_sse(dynamic raw);

  @protected
  OpaqueNestedTwinSyncSseMoi dco_decode_opaque_nested_twin_sync_sse_moi(
      dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  NonCloneSimpleTwinMoi?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsync?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncMoi?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSse?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSseMoi?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSync?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncMoi?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSseMoi?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          dynamic raw);

  @protected
  Duration? dco_decode_opt_box_autoadd_Chrono_Duration(dynamic raw);

  @protected
  DateTime? dco_decode_opt_box_autoadd_Chrono_Naive(dynamic raw);

  @protected
  DateTime? dco_decode_opt_box_autoadd_Chrono_Utc(dynamic raw);

  @protected
  Object? dco_decode_opt_box_autoadd_DartOpaque(dynamic raw);

  @protected
  HideDataAnotherTwinMoi?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(dynamic raw);

  @protected
  HideDataAnotherTwinNormal?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
          dynamic raw);

  @protected
  HideDataAnotherTwinSse?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinSse(dynamic raw);

  @protected
  HideDataAnotherTwinSseMoi?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinSseMoi(
          dynamic raw);

  @protected
  HideDataTwinMoi? dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinMoi(
      dynamic raw);

  @protected
  HideDataTwinNormal? dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinNormal(
      dynamic raw);

  @protected
  HideDataTwinRustAsync?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsync(dynamic raw);

  @protected
  HideDataTwinRustAsyncMoi?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
          dynamic raw);

  @protected
  HideDataTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncSse(
          dynamic raw);

  @protected
  HideDataTwinRustAsyncSseMoi?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncSseMoi(
          dynamic raw);

  @protected
  HideDataTwinSse? dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinSse(
      dynamic raw);

  @protected
  HideDataTwinSseMoi? dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinSseMoi(
      dynamic raw);

  @protected
  HideDataTwinSync? dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinSync(
      dynamic raw);

  @protected
  HideDataTwinSyncMoi?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinSyncMoi(dynamic raw);

  @protected
  HideDataTwinSyncSse?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinSyncSse(dynamic raw);

  @protected
  HideDataTwinSyncSseMoi?
      dco_decode_opt_box_autoadd_RustOpaque_HideDataTwinSyncSseMoi(dynamic raw);

  @protected
  ApplicationEnv? dco_decode_opt_box_autoadd_application_env(dynamic raw);

  @protected
  ApplicationMode? dco_decode_opt_box_autoadd_application_mode(dynamic raw);

  @protected
  AttributeTwinNormal? dco_decode_opt_box_autoadd_attribute_twin_normal(
      dynamic raw);

  @protected
  AttributeTwinRustAsync? dco_decode_opt_box_autoadd_attribute_twin_rust_async(
      dynamic raw);

  @protected
  AttributeTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_attribute_twin_rust_async_sse(dynamic raw);

  @protected
  AttributeTwinSse? dco_decode_opt_box_autoadd_attribute_twin_sse(dynamic raw);

  @protected
  AttributeTwinSync? dco_decode_opt_box_autoadd_attribute_twin_sync(
      dynamic raw);

  @protected
  AttributeTwinSyncSse? dco_decode_opt_box_autoadd_attribute_twin_sync_sse(
      dynamic raw);

  @protected
  BasicGeneralEnumTwinNormal?
      dco_decode_opt_box_autoadd_basic_general_enum_twin_normal(dynamic raw);

  @protected
  BasicGeneralEnumTwinRustAsync?
      dco_decode_opt_box_autoadd_basic_general_enum_twin_rust_async(
          dynamic raw);

  @protected
  BasicGeneralEnumTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_basic_general_enum_twin_rust_async_sse(
          dynamic raw);

  @protected
  BasicGeneralEnumTwinSse?
      dco_decode_opt_box_autoadd_basic_general_enum_twin_sse(dynamic raw);

  @protected
  BasicGeneralEnumTwinSync?
      dco_decode_opt_box_autoadd_basic_general_enum_twin_sync(dynamic raw);

  @protected
  BasicGeneralEnumTwinSyncSse?
      dco_decode_opt_box_autoadd_basic_general_enum_twin_sync_sse(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinNormal?
      dco_decode_opt_box_autoadd_basic_primitive_enum_twin_normal(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinRustAsync?
      dco_decode_opt_box_autoadd_basic_primitive_enum_twin_rust_async(
          dynamic raw);

  @protected
  BasicPrimitiveEnumTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_basic_primitive_enum_twin_rust_async_sse(
          dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSse?
      dco_decode_opt_box_autoadd_basic_primitive_enum_twin_sse(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSync?
      dco_decode_opt_box_autoadd_basic_primitive_enum_twin_sync(dynamic raw);

  @protected
  BasicPrimitiveEnumTwinSyncSse?
      dco_decode_opt_box_autoadd_basic_primitive_enum_twin_sync_sse(
          dynamic raw);

  @protected
  BasicStructTwinNormal? dco_decode_opt_box_autoadd_basic_struct_twin_normal(
      dynamic raw);

  @protected
  BasicStructTwinRustAsync?
      dco_decode_opt_box_autoadd_basic_struct_twin_rust_async(dynamic raw);

  @protected
  BasicStructTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_basic_struct_twin_rust_async_sse(dynamic raw);

  @protected
  BasicStructTwinSse? dco_decode_opt_box_autoadd_basic_struct_twin_sse(
      dynamic raw);

  @protected
  BasicStructTwinSync? dco_decode_opt_box_autoadd_basic_struct_twin_sync(
      dynamic raw);

  @protected
  BasicStructTwinSyncSse? dco_decode_opt_box_autoadd_basic_struct_twin_sync_sse(
      dynamic raw);

  @protected
  bool? dco_decode_opt_box_autoadd_bool(dynamic raw);

  @protected
  ElementTwinNormal? dco_decode_opt_box_autoadd_element_twin_normal(
      dynamic raw);

  @protected
  ElementTwinRustAsync? dco_decode_opt_box_autoadd_element_twin_rust_async(
      dynamic raw);

  @protected
  ElementTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_element_twin_rust_async_sse(dynamic raw);

  @protected
  ElementTwinSse? dco_decode_opt_box_autoadd_element_twin_sse(dynamic raw);

  @protected
  ElementTwinSync? dco_decode_opt_box_autoadd_element_twin_sync(dynamic raw);

  @protected
  ElementTwinSyncSse? dco_decode_opt_box_autoadd_element_twin_sync_sse(
      dynamic raw);

  @protected
  ExoticOptionalsTwinNormal?
      dco_decode_opt_box_autoadd_exotic_optionals_twin_normal(dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsync?
      dco_decode_opt_box_autoadd_exotic_optionals_twin_rust_async(dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_exotic_optionals_twin_rust_async_sse(
          dynamic raw);

  @protected
  ExoticOptionalsTwinSse? dco_decode_opt_box_autoadd_exotic_optionals_twin_sse(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSync?
      dco_decode_opt_box_autoadd_exotic_optionals_twin_sync(dynamic raw);

  @protected
  ExoticOptionalsTwinSyncSse?
      dco_decode_opt_box_autoadd_exotic_optionals_twin_sync_sse(dynamic raw);

  @protected
  double? dco_decode_opt_box_autoadd_f_32(dynamic raw);

  @protected
  double? dco_decode_opt_box_autoadd_f_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_16(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_8(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_isize(dynamic raw);

  @protected
  MeasureTwinNormal? dco_decode_opt_box_autoadd_measure_twin_normal(
      dynamic raw);

  @protected
  MeasureTwinRustAsync? dco_decode_opt_box_autoadd_measure_twin_rust_async(
      dynamic raw);

  @protected
  MeasureTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_measure_twin_rust_async_sse(dynamic raw);

  @protected
  MeasureTwinSse? dco_decode_opt_box_autoadd_measure_twin_sse(dynamic raw);

  @protected
  MeasureTwinSync? dco_decode_opt_box_autoadd_measure_twin_sync(dynamic raw);

  @protected
  MeasureTwinSyncSse? dco_decode_opt_box_autoadd_measure_twin_sync_sse(
      dynamic raw);

  @protected
  NewTypeIntTwinNormal? dco_decode_opt_box_autoadd_new_type_int_twin_normal(
      dynamic raw);

  @protected
  NewTypeIntTwinRustAsync?
      dco_decode_opt_box_autoadd_new_type_int_twin_rust_async(dynamic raw);

  @protected
  NewTypeIntTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_new_type_int_twin_rust_async_sse(dynamic raw);

  @protected
  NewTypeIntTwinSse? dco_decode_opt_box_autoadd_new_type_int_twin_sse(
      dynamic raw);

  @protected
  NewTypeIntTwinSync? dco_decode_opt_box_autoadd_new_type_int_twin_sync(
      dynamic raw);

  @protected
  NewTypeIntTwinSyncSse? dco_decode_opt_box_autoadd_new_type_int_twin_sync_sse(
      dynamic raw);

  @protected
  (String, int)? dco_decode_opt_box_autoadd_record_string_i_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_16(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_8(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_usize(dynamic raw);

  @protected
  WeekdaysTwinNormal? dco_decode_opt_box_autoadd_weekdays_twin_normal(
      dynamic raw);

  @protected
  WeekdaysTwinRustAsync? dco_decode_opt_box_autoadd_weekdays_twin_rust_async(
      dynamic raw);

  @protected
  WeekdaysTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_weekdays_twin_rust_async_sse(dynamic raw);

  @protected
  WeekdaysTwinSse? dco_decode_opt_box_autoadd_weekdays_twin_sse(dynamic raw);

  @protected
  WeekdaysTwinSync? dco_decode_opt_box_autoadd_weekdays_twin_sync(dynamic raw);

  @protected
  WeekdaysTwinSyncSse? dco_decode_opt_box_autoadd_weekdays_twin_sync_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinNormal?
      dco_decode_opt_box_benchmark_binary_tree_twin_normal(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsync?
      dco_decode_opt_box_benchmark_binary_tree_twin_rust_async(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse?
      dco_decode_opt_box_benchmark_binary_tree_twin_rust_async_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSse? dco_decode_opt_box_benchmark_binary_tree_twin_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSync?
      dco_decode_opt_box_benchmark_binary_tree_twin_sync(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSyncSse?
      dco_decode_opt_box_benchmark_binary_tree_twin_sync_sse(dynamic raw);

  @protected
  bool? dco_decode_opt_box_bool(dynamic raw);

  @protected
  ExoticOptionalsTwinNormal? dco_decode_opt_box_exotic_optionals_twin_normal(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsync?
      dco_decode_opt_box_exotic_optionals_twin_rust_async(dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsyncSse?
      dco_decode_opt_box_exotic_optionals_twin_rust_async_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSse? dco_decode_opt_box_exotic_optionals_twin_sse(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSync? dco_decode_opt_box_exotic_optionals_twin_sync(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSyncSse? dco_decode_opt_box_exotic_optionals_twin_sync_sse(
      dynamic raw);

  @protected
  double? dco_decode_opt_box_f_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_i_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_i_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_i_8(dynamic raw);

  @protected
  int? dco_decode_opt_box_u_8(dynamic raw);

  @protected
  List<AttributeTwinNormal>? dco_decode_opt_list_attribute_twin_normal(
      dynamic raw);

  @protected
  List<AttributeTwinRustAsync>? dco_decode_opt_list_attribute_twin_rust_async(
      dynamic raw);

  @protected
  List<AttributeTwinRustAsyncSse>?
      dco_decode_opt_list_attribute_twin_rust_async_sse(dynamic raw);

  @protected
  List<AttributeTwinSse>? dco_decode_opt_list_attribute_twin_sse(dynamic raw);

  @protected
  List<AttributeTwinSync>? dco_decode_opt_list_attribute_twin_sync(dynamic raw);

  @protected
  List<AttributeTwinSyncSse>? dco_decode_opt_list_attribute_twin_sync_sse(
      dynamic raw);

  @protected
  List<ElementTwinNormal>? dco_decode_opt_list_element_twin_normal(dynamic raw);

  @protected
  List<ElementTwinRustAsync>? dco_decode_opt_list_element_twin_rust_async(
      dynamic raw);

  @protected
  List<ElementTwinRustAsyncSse>?
      dco_decode_opt_list_element_twin_rust_async_sse(dynamic raw);

  @protected
  List<ElementTwinSse>? dco_decode_opt_list_element_twin_sse(dynamic raw);

  @protected
  List<ElementTwinSync>? dco_decode_opt_list_element_twin_sync(dynamic raw);

  @protected
  List<ElementTwinSyncSse>? dco_decode_opt_list_element_twin_sync_sse(
      dynamic raw);

  @protected
  List<AttributeTwinNormal?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_normal(dynamic raw);

  @protected
  List<AttributeTwinRustAsync?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_rust_async(
          dynamic raw);

  @protected
  List<AttributeTwinRustAsyncSse?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<AttributeTwinSse?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_sse(dynamic raw);

  @protected
  List<AttributeTwinSync?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_sync(dynamic raw);

  @protected
  List<AttributeTwinSyncSse?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_sync_sse(dynamic raw);

  @protected
  Float32List? dco_decode_opt_list_prim_f_32_strict(dynamic raw);

  @protected
  Float64List? dco_decode_opt_list_prim_f_64_strict(dynamic raw);

  @protected
  Int32List? dco_decode_opt_list_prim_i_32_strict(dynamic raw);

  @protected
  Int8List? dco_decode_opt_list_prim_i_8_strict(dynamic raw);

  @protected
  Uint8List? dco_decode_opt_list_prim_u_8_strict(dynamic raw);

  @protected
  OptVecsTwinNormal dco_decode_opt_vecs_twin_normal(dynamic raw);

  @protected
  OptVecsTwinRustAsync dco_decode_opt_vecs_twin_rust_async(dynamic raw);

  @protected
  OptVecsTwinRustAsyncSse dco_decode_opt_vecs_twin_rust_async_sse(dynamic raw);

  @protected
  OptVecsTwinSse dco_decode_opt_vecs_twin_sse(dynamic raw);

  @protected
  OptVecsTwinSync dco_decode_opt_vecs_twin_sync(dynamic raw);

  @protected
  OptVecsTwinSyncSse dco_decode_opt_vecs_twin_sync_sse(dynamic raw);

  @protected
  PointTwinNormal dco_decode_point_twin_normal(dynamic raw);

  @protected
  PointTwinNormalArray2 dco_decode_point_twin_normal_array_2(dynamic raw);

  @protected
  PointTwinRustAsync dco_decode_point_twin_rust_async(dynamic raw);

  @protected
  PointTwinRustAsyncArray2 dco_decode_point_twin_rust_async_array_2(
      dynamic raw);

  @protected
  PointTwinRustAsyncSse dco_decode_point_twin_rust_async_sse(dynamic raw);

  @protected
  PointTwinRustAsyncSseArray2 dco_decode_point_twin_rust_async_sse_array_2(
      dynamic raw);

  @protected
  PointTwinSse dco_decode_point_twin_sse(dynamic raw);

  @protected
  PointTwinSseArray2 dco_decode_point_twin_sse_array_2(dynamic raw);

  @protected
  PointTwinSync dco_decode_point_twin_sync(dynamic raw);

  @protected
  PointTwinSyncArray2 dco_decode_point_twin_sync_array_2(dynamic raw);

  @protected
  PointTwinSyncSse dco_decode_point_twin_sync_sse(dynamic raw);

  @protected
  PointTwinSyncSseArray2 dco_decode_point_twin_sync_sse_array_2(dynamic raw);

  @protected
  RawStringEnumMirrored dco_decode_raw_string_enum_mirrored(dynamic raw);

  @protected
  RawStringItemStructTwinNormal dco_decode_raw_string_item_struct_twin_normal(
      dynamic raw);

  @protected
  RawStringItemStructTwinRustAsync
      dco_decode_raw_string_item_struct_twin_rust_async(dynamic raw);

  @protected
  RawStringItemStructTwinRustAsyncSse
      dco_decode_raw_string_item_struct_twin_rust_async_sse(dynamic raw);

  @protected
  RawStringItemStructTwinSse dco_decode_raw_string_item_struct_twin_sse(
      dynamic raw);

  @protected
  RawStringItemStructTwinSync dco_decode_raw_string_item_struct_twin_sync(
      dynamic raw);

  @protected
  RawStringItemStructTwinSyncSse
      dco_decode_raw_string_item_struct_twin_sync_sse(dynamic raw);

  @protected
  RawStringMirrored dco_decode_raw_string_mirrored(dynamic raw);

  @protected
  (ApplicationSettings, RawStringEnumMirrored)
      dco_decode_record_application_settings_raw_string_enum_mirrored(
          dynamic raw);

  @protected
  (
    OpaqueOneTwinMoi,
    OpaqueTwoTwinMoi
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_moi(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinNormal,
    OpaqueTwoTwinNormal
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_normal_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_normal(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinRustAsync,
    OpaqueTwoTwinRustAsync
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinRustAsyncMoi,
    OpaqueTwoTwinRustAsyncMoi
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_moi(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinRustAsyncSse,
    OpaqueTwoTwinRustAsyncSse
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_sse(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinRustAsyncSseMoi,
    OpaqueTwoTwinRustAsyncSseMoi
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_sse_moi(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinSse,
    OpaqueTwoTwinSse
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sse(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinSseMoi,
    OpaqueTwoTwinSseMoi
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sse_moi(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinSync,
    OpaqueTwoTwinSync
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinSyncMoi,
    OpaqueTwoTwinSyncMoi
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_moi(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinSyncSse,
    OpaqueTwoTwinSyncSse
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_sse(
      dynamic raw);

  @protected
  (
    OpaqueOneTwinSyncSseMoi,
    OpaqueTwoTwinSyncSseMoi
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_sse_moi(
      dynamic raw);

  @protected
  (int, BasicGeneralEnumTwinNormal)
      dco_decode_record_i_32_basic_general_enum_twin_normal(dynamic raw);

  @protected
  (int, BasicGeneralEnumTwinRustAsync)
      dco_decode_record_i_32_basic_general_enum_twin_rust_async(dynamic raw);

  @protected
  (
    int,
    BasicGeneralEnumTwinRustAsyncSse
  ) dco_decode_record_i_32_basic_general_enum_twin_rust_async_sse(dynamic raw);

  @protected
  (int, BasicGeneralEnumTwinSse)
      dco_decode_record_i_32_basic_general_enum_twin_sse(dynamic raw);

  @protected
  (int, BasicGeneralEnumTwinSync)
      dco_decode_record_i_32_basic_general_enum_twin_sync(dynamic raw);

  @protected
  (int, BasicGeneralEnumTwinSyncSse)
      dco_decode_record_i_32_basic_general_enum_twin_sync_sse(dynamic raw);

  @protected
  (int, BasicPrimitiveEnumTwinNormal)
      dco_decode_record_i_32_basic_primitive_enum_twin_normal(dynamic raw);

  @protected
  (int, BasicPrimitiveEnumTwinRustAsync)
      dco_decode_record_i_32_basic_primitive_enum_twin_rust_async(dynamic raw);

  @protected
  (int, BasicPrimitiveEnumTwinRustAsyncSse)
      dco_decode_record_i_32_basic_primitive_enum_twin_rust_async_sse(
          dynamic raw);

  @protected
  (int, BasicPrimitiveEnumTwinSse)
      dco_decode_record_i_32_basic_primitive_enum_twin_sse(dynamic raw);

  @protected
  (int, BasicPrimitiveEnumTwinSync)
      dco_decode_record_i_32_basic_primitive_enum_twin_sync(dynamic raw);

  @protected
  (int, BasicPrimitiveEnumTwinSyncSse)
      dco_decode_record_i_32_basic_primitive_enum_twin_sync_sse(dynamic raw);

  @protected
  (int, BasicStructTwinNormal) dco_decode_record_i_32_basic_struct_twin_normal(
      dynamic raw);

  @protected
  (int, BasicStructTwinRustAsync)
      dco_decode_record_i_32_basic_struct_twin_rust_async(dynamic raw);

  @protected
  (int, BasicStructTwinRustAsyncSse)
      dco_decode_record_i_32_basic_struct_twin_rust_async_sse(dynamic raw);

  @protected
  (int, BasicStructTwinSse) dco_decode_record_i_32_basic_struct_twin_sse(
      dynamic raw);

  @protected
  (int, BasicStructTwinSync) dco_decode_record_i_32_basic_struct_twin_sync(
      dynamic raw);

  @protected
  (int, BasicStructTwinSyncSse)
      dco_decode_record_i_32_basic_struct_twin_sync_sse(dynamic raw);

  @protected
  (int, bool) dco_decode_record_i_32_bool(dynamic raw);

  @protected
  (int, double) dco_decode_record_i_32_f_32(dynamic raw);

  @protected
  (int, double) dco_decode_record_i_32_f_64(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_i_16(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_i_32(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_i_64(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_i_8(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_isize(dynamic raw);

  @protected
  (int, Uint8List) dco_decode_record_i_32_list_prim_u_8_strict(dynamic raw);

  @protected
  (int, String) dco_decode_record_i_32_string(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_u_16(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_u_32(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_u_64(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_u_8(dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_usize(dynamic raw);

  @protected
  (String, EnumSimpleTwinNormal)
      dco_decode_record_string_enum_simple_twin_normal(dynamic raw);

  @protected
  (String, EnumSimpleTwinRustAsync)
      dco_decode_record_string_enum_simple_twin_rust_async(dynamic raw);

  @protected
  (String, EnumSimpleTwinRustAsyncSse)
      dco_decode_record_string_enum_simple_twin_rust_async_sse(dynamic raw);

  @protected
  (String, EnumSimpleTwinSse) dco_decode_record_string_enum_simple_twin_sse(
      dynamic raw);

  @protected
  (String, EnumSimpleTwinSync) dco_decode_record_string_enum_simple_twin_sync(
      dynamic raw);

  @protected
  (String, EnumSimpleTwinSyncSse)
      dco_decode_record_string_enum_simple_twin_sync_sse(dynamic raw);

  @protected
  (String, HashMapValue) dco_decode_record_string_hash_map_value(dynamic raw);

  @protected
  (String, int) dco_decode_record_string_i_32(dynamic raw);

  @protected
  (String, KitchenSinkTwinNormal)
      dco_decode_record_string_kitchen_sink_twin_normal(dynamic raw);

  @protected
  (String, KitchenSinkTwinRustAsync)
      dco_decode_record_string_kitchen_sink_twin_rust_async(dynamic raw);

  @protected
  (String, KitchenSinkTwinRustAsyncSse)
      dco_decode_record_string_kitchen_sink_twin_rust_async_sse(dynamic raw);

  @protected
  (String, KitchenSinkTwinSse) dco_decode_record_string_kitchen_sink_twin_sse(
      dynamic raw);

  @protected
  (String, KitchenSinkTwinSync) dco_decode_record_string_kitchen_sink_twin_sync(
      dynamic raw);

  @protected
  (String, KitchenSinkTwinSyncSse)
      dco_decode_record_string_kitchen_sink_twin_sync_sse(dynamic raw);

  @protected
  (String, Uint8List) dco_decode_record_string_list_prim_u_8_strict(
      dynamic raw);

  @protected
  (String, MySize) dco_decode_record_string_my_size(dynamic raw);

  @protected
  (String, String) dco_decode_record_string_string(dynamic raw);

  @protected
  (int, ApplicationMode) dco_decode_record_u_8_application_mode(dynamic raw);

  @protected
  Sequences dco_decode_sequences(dynamic raw);

  @protected
  SimpleStructTwinNormal dco_decode_simple_struct_twin_normal(dynamic raw);

  @protected
  SimpleStructTwinRustAsync dco_decode_simple_struct_twin_rust_async(
      dynamic raw);

  @protected
  SimpleStructTwinRustAsyncSse dco_decode_simple_struct_twin_rust_async_sse(
      dynamic raw);

  @protected
  SimpleStructTwinSse dco_decode_simple_struct_twin_sse(dynamic raw);

  @protected
  SimpleStructTwinSync dco_decode_simple_struct_twin_sync(dynamic raw);

  @protected
  SimpleStructTwinSyncSse dco_decode_simple_struct_twin_sync_sse(dynamic raw);

  @protected
  SomeStructTwinNormal dco_decode_some_struct_twin_normal(dynamic raw);

  @protected
  SomeStructTwinRustAsync dco_decode_some_struct_twin_rust_async(dynamic raw);

  @protected
  SomeStructTwinRustAsyncSse dco_decode_some_struct_twin_rust_async_sse(
      dynamic raw);

  @protected
  SomeStructTwinSse dco_decode_some_struct_twin_sse(dynamic raw);

  @protected
  SomeStructTwinSync dco_decode_some_struct_twin_sync(dynamic raw);

  @protected
  SomeStructTwinSyncSse dco_decode_some_struct_twin_sync_sse(dynamic raw);

  @protected
  SpeedTwinNormal dco_decode_speed_twin_normal(dynamic raw);

  @protected
  SpeedTwinRustAsync dco_decode_speed_twin_rust_async(dynamic raw);

  @protected
  SpeedTwinRustAsyncSse dco_decode_speed_twin_rust_async_sse(dynamic raw);

  @protected
  SpeedTwinSse dco_decode_speed_twin_sse(dynamic raw);

  @protected
  SpeedTwinSync dco_decode_speed_twin_sync(dynamic raw);

  @protected
  SpeedTwinSyncSse dco_decode_speed_twin_sync_sse(dynamic raw);

  @protected
  StructInLowerLevel dco_decode_struct_in_lower_level(dynamic raw);

  @protected
  StructInUpperLevel dco_decode_struct_in_upper_level(dynamic raw);

  @protected
  StructWithCommentsTwinNormal dco_decode_struct_with_comments_twin_normal(
      dynamic raw);

  @protected
  StructWithCommentsTwinRustAsync
      dco_decode_struct_with_comments_twin_rust_async(dynamic raw);

  @protected
  StructWithCommentsTwinRustAsyncSse
      dco_decode_struct_with_comments_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithCommentsTwinSse dco_decode_struct_with_comments_twin_sse(
      dynamic raw);

  @protected
  StructWithCommentsTwinSync dco_decode_struct_with_comments_twin_sync(
      dynamic raw);

  @protected
  StructWithCommentsTwinSyncSse dco_decode_struct_with_comments_twin_sync_sse(
      dynamic raw);

  @protected
  StructWithEnumTwinNormal dco_decode_struct_with_enum_twin_normal(dynamic raw);

  @protected
  StructWithEnumTwinRustAsync dco_decode_struct_with_enum_twin_rust_async(
      dynamic raw);

  @protected
  StructWithEnumTwinRustAsyncSse
      dco_decode_struct_with_enum_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithEnumTwinSse dco_decode_struct_with_enum_twin_sse(dynamic raw);

  @protected
  StructWithEnumTwinSync dco_decode_struct_with_enum_twin_sync(dynamic raw);

  @protected
  StructWithEnumTwinSyncSse dco_decode_struct_with_enum_twin_sync_sse(
      dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinMoi
      dco_decode_struct_with_explicit_auto_opaque_field_twin_moi(dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinNormal
      dco_decode_struct_with_explicit_auto_opaque_field_twin_normal(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsync
      dco_decode_struct_with_explicit_auto_opaque_field_twin_rust_async(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi
      dco_decode_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSse
      dco_decode_struct_with_explicit_auto_opaque_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSseMoi
      dco_decode_struct_with_explicit_auto_opaque_field_twin_rust_async_sse_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSse
      dco_decode_struct_with_explicit_auto_opaque_field_twin_sse(dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSseMoi
      dco_decode_struct_with_explicit_auto_opaque_field_twin_sse_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSync
      dco_decode_struct_with_explicit_auto_opaque_field_twin_sync(dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncMoi
      dco_decode_struct_with_explicit_auto_opaque_field_twin_sync_moi(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSse
      dco_decode_struct_with_explicit_auto_opaque_field_twin_sync_sse(
          dynamic raw);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSseMoi
      dco_decode_struct_with_explicit_auto_opaque_field_twin_sync_sse_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinMoi
      dco_decode_struct_with_good_and_opaque_field_twin_moi(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      dco_decode_struct_with_good_and_opaque_field_twin_normal(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsync
      dco_decode_struct_with_good_and_opaque_field_twin_rust_async(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncMoi
      dco_decode_struct_with_good_and_opaque_field_twin_rust_async_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSse
      dco_decode_struct_with_good_and_opaque_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSseMoi
      dco_decode_struct_with_good_and_opaque_field_twin_rust_async_sse_moi(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      dco_decode_struct_with_good_and_opaque_field_twin_sse(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSseMoi
      dco_decode_struct_with_good_and_opaque_field_twin_sse_moi(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      dco_decode_struct_with_good_and_opaque_field_twin_sync(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncMoi
      dco_decode_struct_with_good_and_opaque_field_twin_sync_moi(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      dco_decode_struct_with_good_and_opaque_field_twin_sync_sse(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSseMoi
      dco_decode_struct_with_good_and_opaque_field_twin_sync_sse_moi(
          dynamic raw);

  @protected
  StructWithHashMap dco_decode_struct_with_hash_map(dynamic raw);

  @protected
  StructWithOneFieldTwinNormal dco_decode_struct_with_one_field_twin_normal(
      dynamic raw);

  @protected
  StructWithOneFieldTwinRustAsync
      dco_decode_struct_with_one_field_twin_rust_async(dynamic raw);

  @protected
  StructWithOneFieldTwinRustAsyncSse
      dco_decode_struct_with_one_field_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithOneFieldTwinSse dco_decode_struct_with_one_field_twin_sse(
      dynamic raw);

  @protected
  StructWithOneFieldTwinSync dco_decode_struct_with_one_field_twin_sync(
      dynamic raw);

  @protected
  StructWithOneFieldTwinSyncSse dco_decode_struct_with_one_field_twin_sync_sse(
      dynamic raw);

  @protected
  StructWithTwoFieldTwinNormal dco_decode_struct_with_two_field_twin_normal(
      dynamic raw);

  @protected
  StructWithTwoFieldTwinRustAsync
      dco_decode_struct_with_two_field_twin_rust_async(dynamic raw);

  @protected
  StructWithTwoFieldTwinRustAsyncSse
      dco_decode_struct_with_two_field_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithTwoFieldTwinSse dco_decode_struct_with_two_field_twin_sse(
      dynamic raw);

  @protected
  StructWithTwoFieldTwinSync dco_decode_struct_with_two_field_twin_sync(
      dynamic raw);

  @protected
  StructWithTwoFieldTwinSyncSse dco_decode_struct_with_two_field_twin_sync_sse(
      dynamic raw);

  @protected
  StructWithZeroFieldTwinNormal dco_decode_struct_with_zero_field_twin_normal(
      dynamic raw);

  @protected
  StructWithZeroFieldTwinRustAsync
      dco_decode_struct_with_zero_field_twin_rust_async(dynamic raw);

  @protected
  StructWithZeroFieldTwinRustAsyncSse
      dco_decode_struct_with_zero_field_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithZeroFieldTwinSse dco_decode_struct_with_zero_field_twin_sse(
      dynamic raw);

  @protected
  StructWithZeroFieldTwinSync dco_decode_struct_with_zero_field_twin_sync(
      dynamic raw);

  @protected
  StructWithZeroFieldTwinSyncSse
      dco_decode_struct_with_zero_field_twin_sync_sse(dynamic raw);

  @protected
  SumWithTwinNormal dco_decode_sum_with_twin_normal(dynamic raw);

  @protected
  SumWithTwinNormalArray3 dco_decode_sum_with_twin_normal_array_3(dynamic raw);

  @protected
  SumWithTwinRustAsync dco_decode_sum_with_twin_rust_async(dynamic raw);

  @protected
  SumWithTwinRustAsyncArray3 dco_decode_sum_with_twin_rust_async_array_3(
      dynamic raw);

  @protected
  SumWithTwinRustAsyncSse dco_decode_sum_with_twin_rust_async_sse(dynamic raw);

  @protected
  SumWithTwinRustAsyncSseArray3 dco_decode_sum_with_twin_rust_async_sse_array_3(
      dynamic raw);

  @protected
  SumWithTwinSse dco_decode_sum_with_twin_sse(dynamic raw);

  @protected
  SumWithTwinSseArray3 dco_decode_sum_with_twin_sse_array_3(dynamic raw);

  @protected
  SumWithTwinSync dco_decode_sum_with_twin_sync(dynamic raw);

  @protected
  SumWithTwinSyncArray3 dco_decode_sum_with_twin_sync_array_3(dynamic raw);

  @protected
  SumWithTwinSyncSse dco_decode_sum_with_twin_sync_sse(dynamic raw);

  @protected
  SumWithTwinSyncSseArray3 dco_decode_sum_with_twin_sync_sse_array_3(
      dynamic raw);

  @protected
  TestChronoTwinNormal dco_decode_test_chrono_twin_normal(dynamic raw);

  @protected
  TestChronoTwinRustAsync dco_decode_test_chrono_twin_rust_async(dynamic raw);

  @protected
  TestChronoTwinRustAsyncSse dco_decode_test_chrono_twin_rust_async_sse(
      dynamic raw);

  @protected
  TestChronoTwinSse dco_decode_test_chrono_twin_sse(dynamic raw);

  @protected
  TestChronoTwinSync dco_decode_test_chrono_twin_sync(dynamic raw);

  @protected
  TestChronoTwinSyncSse dco_decode_test_chrono_twin_sync_sse(dynamic raw);

  @protected
  TestIdTwinNormal dco_decode_test_id_twin_normal(dynamic raw);

  @protected
  TestIdTwinNormalArray2 dco_decode_test_id_twin_normal_array_2(dynamic raw);

  @protected
  TestIdTwinNormalArray4 dco_decode_test_id_twin_normal_array_4(dynamic raw);

  @protected
  TestIdTwinRustAsync dco_decode_test_id_twin_rust_async(dynamic raw);

  @protected
  TestIdTwinRustAsyncArray2 dco_decode_test_id_twin_rust_async_array_2(
      dynamic raw);

  @protected
  TestIdTwinRustAsyncArray4 dco_decode_test_id_twin_rust_async_array_4(
      dynamic raw);

  @protected
  TestIdTwinRustAsyncSse dco_decode_test_id_twin_rust_async_sse(dynamic raw);

  @protected
  TestIdTwinRustAsyncSseArray2 dco_decode_test_id_twin_rust_async_sse_array_2(
      dynamic raw);

  @protected
  TestIdTwinRustAsyncSseArray4 dco_decode_test_id_twin_rust_async_sse_array_4(
      dynamic raw);

  @protected
  TestIdTwinSse dco_decode_test_id_twin_sse(dynamic raw);

  @protected
  TestIdTwinSseArray2 dco_decode_test_id_twin_sse_array_2(dynamic raw);

  @protected
  TestIdTwinSseArray4 dco_decode_test_id_twin_sse_array_4(dynamic raw);

  @protected
  TestIdTwinSync dco_decode_test_id_twin_sync(dynamic raw);

  @protected
  TestIdTwinSyncArray2 dco_decode_test_id_twin_sync_array_2(dynamic raw);

  @protected
  TestIdTwinSyncArray4 dco_decode_test_id_twin_sync_array_4(dynamic raw);

  @protected
  TestIdTwinSyncSse dco_decode_test_id_twin_sync_sse(dynamic raw);

  @protected
  TestIdTwinSyncSseArray2 dco_decode_test_id_twin_sync_sse_array_2(dynamic raw);

  @protected
  TestIdTwinSyncSseArray4 dco_decode_test_id_twin_sync_sse_array_4(dynamic raw);

  @protected
  TestModelTwinNormal dco_decode_test_model_twin_normal(dynamic raw);

  @protected
  TestModelTwinRustAsync dco_decode_test_model_twin_rust_async(dynamic raw);

  @protected
  TestModelTwinRustAsyncSse dco_decode_test_model_twin_rust_async_sse(
      dynamic raw);

  @protected
  TestModelTwinSse dco_decode_test_model_twin_sse(dynamic raw);

  @protected
  TestModelTwinSync dco_decode_test_model_twin_sync(dynamic raw);

  @protected
  TestModelTwinSyncSse dco_decode_test_model_twin_sync_sse(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinNormal
      dco_decode_tuple_struct_with_one_field_twin_normal(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinRustAsync
      dco_decode_tuple_struct_with_one_field_twin_rust_async(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinRustAsyncSse
      dco_decode_tuple_struct_with_one_field_twin_rust_async_sse(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSse
      dco_decode_tuple_struct_with_one_field_twin_sse(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSync
      dco_decode_tuple_struct_with_one_field_twin_sync(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSyncSse
      dco_decode_tuple_struct_with_one_field_twin_sync_sse(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinNormal
      dco_decode_tuple_struct_with_two_field_twin_normal(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinRustAsync
      dco_decode_tuple_struct_with_two_field_twin_rust_async(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinRustAsyncSse
      dco_decode_tuple_struct_with_two_field_twin_rust_async_sse(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSse
      dco_decode_tuple_struct_with_two_field_twin_sse(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSync
      dco_decode_tuple_struct_with_two_field_twin_sync(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSyncSse
      dco_decode_tuple_struct_with_two_field_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  int dco_decode_u_64(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  U8Array1600 dco_decode_u_8_array_1600(dynamic raw);

  @protected
  U8Array2 dco_decode_u_8_array_2(dynamic raw);

  @protected
  U8Array32 dco_decode_u_8_array_32(dynamic raw);

  @protected
  U8Array5 dco_decode_u_8_array_5(dynamic raw);

  @protected
  U8Array8 dco_decode_u_8_array_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  UserIdTwinNormal dco_decode_user_id_twin_normal(dynamic raw);

  @protected
  UserIdTwinRustAsync dco_decode_user_id_twin_rust_async(dynamic raw);

  @protected
  UserIdTwinRustAsyncSse dco_decode_user_id_twin_rust_async_sse(dynamic raw);

  @protected
  UserIdTwinSse dco_decode_user_id_twin_sse(dynamic raw);

  @protected
  UserIdTwinSync dco_decode_user_id_twin_sync(dynamic raw);

  @protected
  UserIdTwinSyncSse dco_decode_user_id_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_usize(dynamic raw);

  @protected
  VecOfPrimitivePackTwinNormal dco_decode_vec_of_primitive_pack_twin_normal(
      dynamic raw);

  @protected
  VecOfPrimitivePackTwinRustAsync
      dco_decode_vec_of_primitive_pack_twin_rust_async(dynamic raw);

  @protected
  VecOfPrimitivePackTwinRustAsyncSse
      dco_decode_vec_of_primitive_pack_twin_rust_async_sse(dynamic raw);

  @protected
  VecOfPrimitivePackTwinSse dco_decode_vec_of_primitive_pack_twin_sse(
      dynamic raw);

  @protected
  VecOfPrimitivePackTwinSync dco_decode_vec_of_primitive_pack_twin_sync(
      dynamic raw);

  @protected
  VecOfPrimitivePackTwinSyncSse dco_decode_vec_of_primitive_pack_twin_sync_sse(
      dynamic raw);

  @protected
  WeekdaysTwinNormal dco_decode_weekdays_twin_normal(dynamic raw);

  @protected
  WeekdaysTwinRustAsync dco_decode_weekdays_twin_rust_async(dynamic raw);

  @protected
  WeekdaysTwinRustAsyncSse dco_decode_weekdays_twin_rust_async_sse(dynamic raw);

  @protected
  WeekdaysTwinSse dco_decode_weekdays_twin_sse(dynamic raw);

  @protected
  WeekdaysTwinSync dco_decode_weekdays_twin_sync(dynamic raw);

  @protected
  WeekdaysTwinSyncSse dco_decode_weekdays_twin_sync_sse(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  BoxFnStringString
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          SseDeserializer deserializer);

  @protected
  ConstructorOpaqueStructTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          SseDeserializer deserializer);

  @protected
  ConstructorOpaqueSyncStructTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          SseDeserializer deserializer);

  @protected
  DroppableTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  StructInMiscNoTwinExampleA
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSync
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinNormal
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsync
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSseMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSync
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  DroppableTwinNormal
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsync
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsyncSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSync
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSyncSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsync
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSseMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinNormal
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  ConstructorOpaqueStructTwinNormal
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          SseDeserializer deserializer);

  @protected
  ConstructorOpaqueSyncStructTwinNormal
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          SseDeserializer deserializer);

  @protected
  DroppableTwinNormal
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinNormal
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  StructInMiscNoTwinExampleA
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          SseDeserializer deserializer);

  @protected
  StructInMiscNoTwinExampleB
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          SseDeserializer deserializer);

  @protected
  StructWithImplBlockInMultiFile
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          SseDeserializer deserializer);

  @protected
  String sse_decode_Backtrace(SseDeserializer deserializer);

  @protected
  Duration sse_decode_Chrono_Duration(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_Chrono_Local(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_Chrono_Naive(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_Chrono_Utc(SseDeserializer deserializer);

  @protected
  Object sse_decode_DartOpaque(SseDeserializer deserializer);

  @protected
  ObjectArray1 sse_decode_DartOpaque_array_1(SseDeserializer deserializer);

  @protected
  Map<String, String> sse_decode_Map_String_String(
      SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinNormal>
      sse_decode_Map_String_enum_simple_twin_normal(
          SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinRustAsync>
      sse_decode_Map_String_enum_simple_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinRustAsyncSse>
      sse_decode_Map_String_enum_simple_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinSse> sse_decode_Map_String_enum_simple_twin_sse(
      SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinSync> sse_decode_Map_String_enum_simple_twin_sync(
      SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinSyncSse>
      sse_decode_Map_String_enum_simple_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  Map<String, HashMapValue> sse_decode_Map_String_hash_map_value(
      SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinNormal>
      sse_decode_Map_String_kitchen_sink_twin_normal(
          SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinRustAsync>
      sse_decode_Map_String_kitchen_sink_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinRustAsyncSse>
      sse_decode_Map_String_kitchen_sink_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinSse> sse_decode_Map_String_kitchen_sink_twin_sse(
      SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinSync> sse_decode_Map_String_kitchen_sink_twin_sync(
      SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinSyncSse>
      sse_decode_Map_String_kitchen_sink_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  Map<String, Uint8List> sse_decode_Map_String_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  Map<String, MySize> sse_decode_Map_String_my_size(
      SseDeserializer deserializer);

  @protected
  Map<int, String> sse_decode_Map_i_32_String(SseDeserializer deserializer);

  @protected
  Map<int, BasicGeneralEnumTwinNormal>
      sse_decode_Map_i_32_basic_general_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicGeneralEnumTwinRustAsync>
      sse_decode_Map_i_32_basic_general_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicGeneralEnumTwinRustAsyncSse>
      sse_decode_Map_i_32_basic_general_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicGeneralEnumTwinSse>
      sse_decode_Map_i_32_basic_general_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicGeneralEnumTwinSync>
      sse_decode_Map_i_32_basic_general_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicGeneralEnumTwinSyncSse>
      sse_decode_Map_i_32_basic_general_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicPrimitiveEnumTwinNormal>
      sse_decode_Map_i_32_basic_primitive_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicPrimitiveEnumTwinRustAsync>
      sse_decode_Map_i_32_basic_primitive_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicPrimitiveEnumTwinRustAsyncSse>
      sse_decode_Map_i_32_basic_primitive_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicPrimitiveEnumTwinSse>
      sse_decode_Map_i_32_basic_primitive_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicPrimitiveEnumTwinSync>
      sse_decode_Map_i_32_basic_primitive_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicPrimitiveEnumTwinSyncSse>
      sse_decode_Map_i_32_basic_primitive_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicStructTwinNormal> sse_decode_Map_i_32_basic_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  Map<int, BasicStructTwinRustAsync>
      sse_decode_Map_i_32_basic_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicStructTwinRustAsyncSse>
      sse_decode_Map_i_32_basic_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, BasicStructTwinSse> sse_decode_Map_i_32_basic_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  Map<int, BasicStructTwinSync> sse_decode_Map_i_32_basic_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  Map<int, BasicStructTwinSyncSse>
      sse_decode_Map_i_32_basic_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  Map<int, bool> sse_decode_Map_i_32_bool(SseDeserializer deserializer);

  @protected
  Map<int, double> sse_decode_Map_i_32_f_32(SseDeserializer deserializer);

  @protected
  Map<int, double> sse_decode_Map_i_32_f_64(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_i_16(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_i_32(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_i_64(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_i_8(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_isize(SseDeserializer deserializer);

  @protected
  Map<int, Uint8List> sse_decode_Map_i_32_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_u_16(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_u_32(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_u_64(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_u_8(SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_usize(SseDeserializer deserializer);

  @protected
  Map<int, ApplicationMode> sse_decode_Map_u_8_application_mode(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinMoi sse_decode_RustOpaque_BoxdynDartDebugTwinMoi(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinNormal sse_decode_RustOpaque_BoxdynDartDebugTwinNormal(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinRustAsync sse_decode_RustOpaque_BoxdynDartDebugTwinRustAsync(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinRustAsyncMoi
      sse_decode_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinRustAsyncSse
      sse_decode_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinRustAsyncSseMoi
      sse_decode_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinSse sse_decode_RustOpaque_BoxdynDartDebugTwinSse(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinSseMoi sse_decode_RustOpaque_BoxdynDartDebugTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinSync sse_decode_RustOpaque_BoxdynDartDebugTwinSync(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinSyncMoi sse_decode_RustOpaque_BoxdynDartDebugTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinSyncSse sse_decode_RustOpaque_BoxdynDartDebugTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinSyncSseMoi
      sse_decode_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinMoi sse_decode_RustOpaque_FrbOpaqueReturnTwinMoi(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinNormal sse_decode_RustOpaque_FrbOpaqueReturnTwinNormal(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinRustAsync
      sse_decode_RustOpaque_FrbOpaqueReturnTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinRustAsyncMoi
      sse_decode_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinRustAsyncSse
      sse_decode_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinRustAsyncSseMoi
      sse_decode_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinSse sse_decode_RustOpaque_FrbOpaqueReturnTwinSse(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinSseMoi sse_decode_RustOpaque_FrbOpaqueReturnTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinSync sse_decode_RustOpaque_FrbOpaqueReturnTwinSync(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinSyncMoi sse_decode_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinSyncSse sse_decode_RustOpaque_FrbOpaqueReturnTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueReturnTwinSyncSseMoi
      sse_decode_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  FrbOpaqueSyncReturnTwinMoi sse_decode_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueSyncReturnTwinNormal
      sse_decode_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
          SseDeserializer deserializer);

  @protected
  FrbOpaqueSyncReturnTwinSse sse_decode_RustOpaque_FrbOpaqueSyncReturnTwinSse(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueSyncReturnTwinSseMoi
      sse_decode_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinMoi sse_decode_RustOpaque_HideDataAnotherTwinMoi(
      SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinNormal sse_decode_RustOpaque_HideDataAnotherTwinNormal(
      SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinSse sse_decode_RustOpaque_HideDataAnotherTwinSse(
      SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinSseMoi sse_decode_RustOpaque_HideDataAnotherTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinMoi sse_decode_RustOpaque_HideDataTwinMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinMoiArray2 sse_decode_RustOpaque_HideDataTwinMoi_array_2(
      SseDeserializer deserializer);

  @protected
  HideDataTwinNormal sse_decode_RustOpaque_HideDataTwinNormal(
      SseDeserializer deserializer);

  @protected
  HideDataTwinNormalArray2 sse_decode_RustOpaque_HideDataTwinNormal_array_2(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsync sse_decode_RustOpaque_HideDataTwinRustAsync(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncMoi sse_decode_RustOpaque_HideDataTwinRustAsyncMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncMoiArray2
      sse_decode_RustOpaque_HideDataTwinRustAsyncMoi_array_2(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSse sse_decode_RustOpaque_HideDataTwinRustAsyncSse(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSseMoi sse_decode_RustOpaque_HideDataTwinRustAsyncSseMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSseMoiArray2
      sse_decode_RustOpaque_HideDataTwinRustAsyncSseMoi_array_2(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSseArray2
      sse_decode_RustOpaque_HideDataTwinRustAsyncSse_array_2(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncArray2
      sse_decode_RustOpaque_HideDataTwinRustAsync_array_2(
          SseDeserializer deserializer);

  @protected
  HideDataTwinSse sse_decode_RustOpaque_HideDataTwinSse(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSseMoi sse_decode_RustOpaque_HideDataTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSseMoiArray2 sse_decode_RustOpaque_HideDataTwinSseMoi_array_2(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSseArray2 sse_decode_RustOpaque_HideDataTwinSse_array_2(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSync sse_decode_RustOpaque_HideDataTwinSync(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncMoi sse_decode_RustOpaque_HideDataTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncMoiArray2 sse_decode_RustOpaque_HideDataTwinSyncMoi_array_2(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSse sse_decode_RustOpaque_HideDataTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSseMoi sse_decode_RustOpaque_HideDataTwinSyncSseMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSseMoiArray2
      sse_decode_RustOpaque_HideDataTwinSyncSseMoi_array_2(
          SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSseArray2 sse_decode_RustOpaque_HideDataTwinSyncSse_array_2(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncArray2 sse_decode_RustOpaque_HideDataTwinSync_array_2(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinMoi sse_decode_RustOpaque_MutexHideDataTwinMoi(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinNormal sse_decode_RustOpaque_MutexHideDataTwinNormal(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinRustAsync sse_decode_RustOpaque_MutexHideDataTwinRustAsync(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinRustAsyncMoi
      sse_decode_RustOpaque_MutexHideDataTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  MutexHideDataTwinRustAsyncSse
      sse_decode_RustOpaque_MutexHideDataTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  MutexHideDataTwinRustAsyncSseMoi
      sse_decode_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  MutexHideDataTwinSse sse_decode_RustOpaque_MutexHideDataTwinSse(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinSseMoi sse_decode_RustOpaque_MutexHideDataTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinSync sse_decode_RustOpaque_MutexHideDataTwinSync(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinSyncMoi sse_decode_RustOpaque_MutexHideDataTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinSyncSse sse_decode_RustOpaque_MutexHideDataTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  MutexHideDataTwinSyncSseMoi sse_decode_RustOpaque_MutexHideDataTwinSyncSseMoi(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinMoi sse_decode_RustOpaque_NonCloneDataTwinMoi(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinNormal sse_decode_RustOpaque_NonCloneDataTwinNormal(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinRustAsync sse_decode_RustOpaque_NonCloneDataTwinRustAsync(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinRustAsyncMoi
      sse_decode_RustOpaque_NonCloneDataTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneDataTwinRustAsyncSse
      sse_decode_RustOpaque_NonCloneDataTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneDataTwinRustAsyncSseMoi
      sse_decode_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneDataTwinSse sse_decode_RustOpaque_NonCloneDataTwinSse(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinSseMoi sse_decode_RustOpaque_NonCloneDataTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinSync sse_decode_RustOpaque_NonCloneDataTwinSync(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinSyncMoi sse_decode_RustOpaque_NonCloneDataTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinSyncSse sse_decode_RustOpaque_NonCloneDataTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  NonCloneDataTwinSyncSseMoi sse_decode_RustOpaque_NonCloneDataTwinSyncSseMoi(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinMoi sse_decode_RustOpaque_RwLockHideDataTwinMoi(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinNormal sse_decode_RustOpaque_RwLockHideDataTwinNormal(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinRustAsync sse_decode_RustOpaque_RwLockHideDataTwinRustAsync(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinRustAsyncMoi
      sse_decode_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinRustAsyncSse
      sse_decode_RustOpaque_RwLockHideDataTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinRustAsyncSseMoi
      sse_decode_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinSse sse_decode_RustOpaque_RwLockHideDataTwinSse(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinSseMoi sse_decode_RustOpaque_RwLockHideDataTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinSync sse_decode_RustOpaque_RwLockHideDataTwinSync(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinSyncMoi sse_decode_RustOpaque_RwLockHideDataTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinSyncSse sse_decode_RustOpaque_RwLockHideDataTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  RwLockHideDataTwinSyncSseMoi
      sse_decode_RustOpaque_RwLockHideDataTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxFnStringString
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          SseDeserializer deserializer);

  @protected
  ConstructorOpaqueStructTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          SseDeserializer deserializer);

  @protected
  ConstructorOpaqueSyncStructTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          SseDeserializer deserializer);

  @protected
  DroppableTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          SseDeserializer deserializer);

  @protected
  DroppableTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleEnumTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueOneTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  OpaqueTwoTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  StructInMiscNoTwinExampleA
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          SseDeserializer deserializer);

  @protected
  StructInMiscNoTwinExampleB
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSync
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  StructWithImplBlockInMultiFile
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          SseDeserializer deserializer);

  @protected
  I16 sse_decode_RustOpaque_i16(SseDeserializer deserializer);

  @protected
  I32 sse_decode_RustOpaque_i32(SseDeserializer deserializer);

  @protected
  Set<String> sse_decode_Set_String(SseDeserializer deserializer);

  @protected
  Set<ApplicationMode> sse_decode_Set_application_mode(
      SseDeserializer deserializer);

  @protected
  Set<int> sse_decode_Set_i_32(SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  UuidValue sse_decode_Uuid(SseDeserializer deserializer);

  @protected
  ATwinNormal sse_decode_a_twin_normal(SseDeserializer deserializer);

  @protected
  ATwinRustAsync sse_decode_a_twin_rust_async(SseDeserializer deserializer);

  @protected
  ATwinRustAsyncSse sse_decode_a_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  ATwinSse sse_decode_a_twin_sse(SseDeserializer deserializer);

  @protected
  ATwinSync sse_decode_a_twin_sync(SseDeserializer deserializer);

  @protected
  ATwinSyncSse sse_decode_a_twin_sync_sse(SseDeserializer deserializer);

  @protected
  AbcTwinNormal sse_decode_abc_twin_normal(SseDeserializer deserializer);

  @protected
  AbcTwinRustAsync sse_decode_abc_twin_rust_async(SseDeserializer deserializer);

  @protected
  AbcTwinRustAsyncSse sse_decode_abc_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  AbcTwinSse sse_decode_abc_twin_sse(SseDeserializer deserializer);

  @protected
  AbcTwinSync sse_decode_abc_twin_sync(SseDeserializer deserializer);

  @protected
  AbcTwinSyncSse sse_decode_abc_twin_sync_sse(SseDeserializer deserializer);

  @protected
  AnotherMacroStructTwinNormal sse_decode_another_macro_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  AnotherTwinNormal sse_decode_another_twin_normal(
      SseDeserializer deserializer);

  @protected
  AnotherTwinRustAsync sse_decode_another_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  AnotherTwinRustAsyncSse sse_decode_another_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  AnotherTwinSse sse_decode_another_twin_sse(SseDeserializer deserializer);

  @protected
  AnotherTwinSync sse_decode_another_twin_sync(SseDeserializer deserializer);

  @protected
  AnotherTwinSyncSse sse_decode_another_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ApplicationEnv sse_decode_application_env(SseDeserializer deserializer);

  @protected
  ApplicationEnvVar sse_decode_application_env_var(
      SseDeserializer deserializer);

  @protected
  ApplicationMessage sse_decode_application_message(
      SseDeserializer deserializer);

  @protected
  ApplicationMode sse_decode_application_mode(SseDeserializer deserializer);

  @protected
  ApplicationModeArray2 sse_decode_application_mode_array_2(
      SseDeserializer deserializer);

  @protected
  ApplicationSettings sse_decode_application_settings(
      SseDeserializer deserializer);

  @protected
  AttributeTwinNormal sse_decode_attribute_twin_normal(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsync sse_decode_attribute_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsyncSse sse_decode_attribute_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSse sse_decode_attribute_twin_sse(SseDeserializer deserializer);

  @protected
  AttributeTwinSync sse_decode_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSyncSse sse_decode_attribute_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BTwinNormal sse_decode_b_twin_normal(SseDeserializer deserializer);

  @protected
  BTwinRustAsync sse_decode_b_twin_rust_async(SseDeserializer deserializer);

  @protected
  BTwinRustAsyncSse sse_decode_b_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BTwinSse sse_decode_b_twin_sse(SseDeserializer deserializer);

  @protected
  BTwinSync sse_decode_b_twin_sync(SseDeserializer deserializer);

  @protected
  BTwinSyncSse sse_decode_b_twin_sync_sse(SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinNormal sse_decode_basic_general_enum_twin_normal(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinRustAsync sse_decode_basic_general_enum_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinRustAsyncSse
      sse_decode_basic_general_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSse sse_decode_basic_general_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSync sse_decode_basic_general_enum_twin_sync(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSyncSse sse_decode_basic_general_enum_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinNormal sse_decode_basic_primitive_enum_twin_normal(
      SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinRustAsync
      sse_decode_basic_primitive_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinRustAsyncSse
      sse_decode_basic_primitive_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSse sse_decode_basic_primitive_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSync sse_decode_basic_primitive_enum_twin_sync(
      SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSyncSse sse_decode_basic_primitive_enum_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinNormal sse_decode_basic_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinRustAsync sse_decode_basic_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinRustAsyncSse sse_decode_basic_struct_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinSse sse_decode_basic_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinSync sse_decode_basic_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinSyncSse sse_decode_basic_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinNormal sse_decode_benchmark_binary_tree_twin_normal(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      sse_decode_benchmark_binary_tree_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      sse_decode_benchmark_binary_tree_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSse sse_decode_benchmark_binary_tree_twin_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSync sse_decode_benchmark_binary_tree_twin_sync(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSyncSse sse_decode_benchmark_binary_tree_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinNormal sse_decode_benchmark_blob_twin_normal(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinRustAsync sse_decode_benchmark_blob_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinRustAsyncSse sse_decode_benchmark_blob_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSse sse_decode_benchmark_blob_twin_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSync sse_decode_benchmark_blob_twin_sync(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSyncSse sse_decode_benchmark_blob_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinNormal sse_decode_big_buffers_twin_normal(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinRustAsync sse_decode_big_buffers_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinRustAsyncSse sse_decode_big_buffers_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinSse sse_decode_big_buffers_twin_sse(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinSync sse_decode_big_buffers_twin_sync(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinSyncSse sse_decode_big_buffers_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BlobTwinNormal sse_decode_blob_twin_normal(SseDeserializer deserializer);

  @protected
  BlobTwinRustAsync sse_decode_blob_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BlobTwinRustAsyncSse sse_decode_blob_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BlobTwinSse sse_decode_blob_twin_sse(SseDeserializer deserializer);

  @protected
  BlobTwinSync sse_decode_blob_twin_sync(SseDeserializer deserializer);

  @protected
  BlobTwinSyncSse sse_decode_blob_twin_sync_sse(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  ApplicationEnv sse_decode_box_application_env(SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinMoi
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsync
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncMoi
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSse
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSseMoi
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncMoi
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSseMoi
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  Duration sse_decode_box_autoadd_Chrono_Duration(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_box_autoadd_Chrono_Naive(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_box_autoadd_Chrono_Utc(SseDeserializer deserializer);

  @protected
  Object sse_decode_box_autoadd_DartOpaque(SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinMoi
      sse_decode_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(
          SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinNormal
      sse_decode_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
          SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinSse
      sse_decode_box_autoadd_RustOpaque_HideDataAnotherTwinSse(
          SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinSseMoi
      sse_decode_box_autoadd_RustOpaque_HideDataAnotherTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  HideDataTwinMoi sse_decode_box_autoadd_RustOpaque_HideDataTwinMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinNormal sse_decode_box_autoadd_RustOpaque_HideDataTwinNormal(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsync sse_decode_box_autoadd_RustOpaque_HideDataTwinRustAsync(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncMoi
      sse_decode_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSse
      sse_decode_box_autoadd_RustOpaque_HideDataTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSseMoi
      sse_decode_box_autoadd_RustOpaque_HideDataTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  HideDataTwinSse sse_decode_box_autoadd_RustOpaque_HideDataTwinSse(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSseMoi sse_decode_box_autoadd_RustOpaque_HideDataTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSync sse_decode_box_autoadd_RustOpaque_HideDataTwinSync(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncMoi sse_decode_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSse sse_decode_box_autoadd_RustOpaque_HideDataTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSseMoi
      sse_decode_box_autoadd_RustOpaque_HideDataTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  ATwinNormal sse_decode_box_autoadd_a_twin_normal(
      SseDeserializer deserializer);

  @protected
  ATwinRustAsync sse_decode_box_autoadd_a_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ATwinRustAsyncSse sse_decode_box_autoadd_a_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  ATwinSse sse_decode_box_autoadd_a_twin_sse(SseDeserializer deserializer);

  @protected
  ATwinSync sse_decode_box_autoadd_a_twin_sync(SseDeserializer deserializer);

  @protected
  ATwinSyncSse sse_decode_box_autoadd_a_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  AbcTwinNormal sse_decode_box_autoadd_abc_twin_normal(
      SseDeserializer deserializer);

  @protected
  AbcTwinRustAsync sse_decode_box_autoadd_abc_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  AbcTwinRustAsyncSse sse_decode_box_autoadd_abc_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  AbcTwinSse sse_decode_box_autoadd_abc_twin_sse(SseDeserializer deserializer);

  @protected
  AbcTwinSync sse_decode_box_autoadd_abc_twin_sync(
      SseDeserializer deserializer);

  @protected
  AbcTwinSyncSse sse_decode_box_autoadd_abc_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ApplicationEnv sse_decode_box_autoadd_application_env(
      SseDeserializer deserializer);

  @protected
  ApplicationMode sse_decode_box_autoadd_application_mode(
      SseDeserializer deserializer);

  @protected
  ApplicationSettings sse_decode_box_autoadd_application_settings(
      SseDeserializer deserializer);

  @protected
  AttributeTwinNormal sse_decode_box_autoadd_attribute_twin_normal(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsync sse_decode_box_autoadd_attribute_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsyncSse
      sse_decode_box_autoadd_attribute_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  AttributeTwinSse sse_decode_box_autoadd_attribute_twin_sse(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSync sse_decode_box_autoadd_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSyncSse sse_decode_box_autoadd_attribute_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BTwinNormal sse_decode_box_autoadd_b_twin_normal(
      SseDeserializer deserializer);

  @protected
  BTwinRustAsync sse_decode_box_autoadd_b_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BTwinRustAsyncSse sse_decode_box_autoadd_b_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BTwinSse sse_decode_box_autoadd_b_twin_sse(SseDeserializer deserializer);

  @protected
  BTwinSync sse_decode_box_autoadd_b_twin_sync(SseDeserializer deserializer);

  @protected
  BTwinSyncSse sse_decode_box_autoadd_b_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinNormal
      sse_decode_box_autoadd_basic_general_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinRustAsync
      sse_decode_box_autoadd_basic_general_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinRustAsyncSse
      sse_decode_box_autoadd_basic_general_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSse sse_decode_box_autoadd_basic_general_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSync sse_decode_box_autoadd_basic_general_enum_twin_sync(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSyncSse
      sse_decode_box_autoadd_basic_general_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinNormal
      sse_decode_box_autoadd_basic_primitive_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinRustAsync
      sse_decode_box_autoadd_basic_primitive_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinRustAsyncSse
      sse_decode_box_autoadd_basic_primitive_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSse
      sse_decode_box_autoadd_basic_primitive_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSync
      sse_decode_box_autoadd_basic_primitive_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSyncSse
      sse_decode_box_autoadd_basic_primitive_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  BasicStructTwinNormal sse_decode_box_autoadd_basic_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinRustAsync sse_decode_box_autoadd_basic_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinRustAsyncSse
      sse_decode_box_autoadd_basic_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicStructTwinSse sse_decode_box_autoadd_basic_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinSync sse_decode_box_autoadd_basic_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinSyncSse sse_decode_box_autoadd_basic_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinNormal
      sse_decode_box_autoadd_benchmark_binary_tree_twin_normal(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      sse_decode_box_autoadd_benchmark_binary_tree_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      sse_decode_box_autoadd_benchmark_binary_tree_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSse
      sse_decode_box_autoadd_benchmark_binary_tree_twin_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSync
      sse_decode_box_autoadd_benchmark_binary_tree_twin_sync(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSyncSse
      sse_decode_box_autoadd_benchmark_binary_tree_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinNormal sse_decode_box_autoadd_benchmark_blob_twin_normal(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinRustAsync
      sse_decode_box_autoadd_benchmark_blob_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinRustAsyncSse
      sse_decode_box_autoadd_benchmark_blob_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSse sse_decode_box_autoadd_benchmark_blob_twin_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSync sse_decode_box_autoadd_benchmark_blob_twin_sync(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSyncSse sse_decode_box_autoadd_benchmark_blob_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  bool sse_decode_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  CTwinNormal sse_decode_box_autoadd_c_twin_normal(
      SseDeserializer deserializer);

  @protected
  CTwinRustAsync sse_decode_box_autoadd_c_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CTwinRustAsyncSse sse_decode_box_autoadd_c_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  CTwinSse sse_decode_box_autoadd_c_twin_sse(SseDeserializer deserializer);

  @protected
  CTwinSync sse_decode_box_autoadd_c_twin_sync(SseDeserializer deserializer);

  @protected
  CTwinSyncSse sse_decode_box_autoadd_c_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinNormal sse_decode_box_autoadd_concatenate_with_twin_normal(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinRustAsync
      sse_decode_box_autoadd_concatenate_with_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinRustAsyncSse
      sse_decode_box_autoadd_concatenate_with_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSse sse_decode_box_autoadd_concatenate_with_twin_sse(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSync sse_decode_box_autoadd_concatenate_with_twin_sync(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSyncSse
      sse_decode_box_autoadd_concatenate_with_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinNormal
      sse_decode_box_autoadd_custom_nested_error_2_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinRustAsync
      sse_decode_box_autoadd_custom_nested_error_2_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinRustAsyncSse
      sse_decode_box_autoadd_custom_nested_error_2_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSse
      sse_decode_box_autoadd_custom_nested_error_2_twin_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSync
      sse_decode_box_autoadd_custom_nested_error_2_twin_sync(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSyncSse
      sse_decode_box_autoadd_custom_nested_error_2_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinNormal
      sse_decode_box_autoadd_custom_nested_error_inner_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinRustAsync
      sse_decode_box_autoadd_custom_nested_error_inner_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinRustAsyncSse
      sse_decode_box_autoadd_custom_nested_error_inner_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSse
      sse_decode_box_autoadd_custom_nested_error_inner_twin_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSync
      sse_decode_box_autoadd_custom_nested_error_inner_twin_sync(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSyncSse
      sse_decode_box_autoadd_custom_nested_error_inner_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinNormal
      sse_decode_box_autoadd_custom_nested_error_outer_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinRustAsync
      sse_decode_box_autoadd_custom_nested_error_outer_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinRustAsyncSse
      sse_decode_box_autoadd_custom_nested_error_outer_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSse
      sse_decode_box_autoadd_custom_nested_error_outer_twin_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSync
      sse_decode_box_autoadd_custom_nested_error_outer_twin_sync(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSyncSse
      sse_decode_box_autoadd_custom_nested_error_outer_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinNormal
      sse_decode_box_autoadd_custom_struct_error_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinRustAsync
      sse_decode_box_autoadd_custom_struct_error_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinRustAsyncSse
      sse_decode_box_autoadd_custom_struct_error_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSse sse_decode_box_autoadd_custom_struct_error_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSync
      sse_decode_box_autoadd_custom_struct_error_twin_sync(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSyncSse
      sse_decode_box_autoadd_custom_struct_error_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructTwinNormal sse_decode_box_autoadd_custom_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinRustAsync
      sse_decode_box_autoadd_custom_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomStructTwinRustAsyncSse
      sse_decode_box_autoadd_custom_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructTwinSse sse_decode_box_autoadd_custom_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinSync sse_decode_box_autoadd_custom_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinSyncSse sse_decode_box_autoadd_custom_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinNormal sse_decode_box_autoadd_customized_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinRustAsync sse_decode_box_autoadd_customized_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinRustAsyncSse
      sse_decode_box_autoadd_customized_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomizedTwinSse sse_decode_box_autoadd_customized_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinSync sse_decode_box_autoadd_customized_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinSyncSse sse_decode_box_autoadd_customized_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinNormal
      sse_decode_box_autoadd_dart_opaque_nested_twin_normal(
          SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinRustAsync
      sse_decode_box_autoadd_dart_opaque_nested_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinRustAsyncSse
      sse_decode_box_autoadd_dart_opaque_nested_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSse sse_decode_box_autoadd_dart_opaque_nested_twin_sse(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSync sse_decode_box_autoadd_dart_opaque_nested_twin_sync(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSyncSse
      sse_decode_box_autoadd_dart_opaque_nested_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  ElementTwinNormal sse_decode_box_autoadd_element_twin_normal(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsync sse_decode_box_autoadd_element_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsyncSse sse_decode_box_autoadd_element_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  ElementTwinSse sse_decode_box_autoadd_element_twin_sse(
      SseDeserializer deserializer);

  @protected
  ElementTwinSync sse_decode_box_autoadd_element_twin_sync(
      SseDeserializer deserializer);

  @protected
  ElementTwinSyncSse sse_decode_box_autoadd_element_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EmptyTwinNormal sse_decode_box_autoadd_empty_twin_normal(
      SseDeserializer deserializer);

  @protected
  EmptyTwinRustAsync sse_decode_box_autoadd_empty_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EmptyTwinRustAsyncSse sse_decode_box_autoadd_empty_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EmptyTwinSse sse_decode_box_autoadd_empty_twin_sse(
      SseDeserializer deserializer);

  @protected
  EmptyTwinSync sse_decode_box_autoadd_empty_twin_sync(
      SseDeserializer deserializer);

  @protected
  EmptyTwinSyncSse sse_decode_box_autoadd_empty_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinNormal sse_decode_box_autoadd_enum_dart_opaque_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinRustAsync
      sse_decode_box_autoadd_enum_dart_opaque_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinRustAsyncSse
      sse_decode_box_autoadd_enum_dart_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSse sse_decode_box_autoadd_enum_dart_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSync sse_decode_box_autoadd_enum_dart_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSyncSse
      sse_decode_box_autoadd_enum_dart_opaque_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinMoi sse_decode_box_autoadd_enum_opaque_twin_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinNormal sse_decode_box_autoadd_enum_opaque_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsync sse_decode_box_autoadd_enum_opaque_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncMoi
      sse_decode_box_autoadd_enum_opaque_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncSse
      sse_decode_box_autoadd_enum_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncSseMoi
      sse_decode_box_autoadd_enum_opaque_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSse sse_decode_box_autoadd_enum_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSseMoi sse_decode_box_autoadd_enum_opaque_twin_sse_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSync sse_decode_box_autoadd_enum_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncMoi sse_decode_box_autoadd_enum_opaque_twin_sync_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncSse sse_decode_box_autoadd_enum_opaque_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncSseMoi sse_decode_box_autoadd_enum_opaque_twin_sync_sse_moi(
      SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinMoi
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinNormal
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_normal(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsync
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncMoi
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSse
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSseMoi
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSse
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSseMoi
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_sse_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSync
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_sync(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSyncMoi
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_sync_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSse
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSseMoi
      sse_decode_box_autoadd_enum_with_good_and_opaque_twin_sync_sse_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinNormal
      sse_decode_box_autoadd_enum_with_item_mixed_twin_normal(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinRustAsync
      sse_decode_box_autoadd_enum_with_item_mixed_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinRustAsyncSse
      sse_decode_box_autoadd_enum_with_item_mixed_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSse sse_decode_box_autoadd_enum_with_item_mixed_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSync
      sse_decode_box_autoadd_enum_with_item_mixed_twin_sync(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSyncSse
      sse_decode_box_autoadd_enum_with_item_mixed_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinNormal
      sse_decode_box_autoadd_enum_with_item_struct_twin_normal(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinRustAsync
      sse_decode_box_autoadd_enum_with_item_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinRustAsyncSse
      sse_decode_box_autoadd_enum_with_item_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSse
      sse_decode_box_autoadd_enum_with_item_struct_twin_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSync
      sse_decode_box_autoadd_enum_with_item_struct_twin_sync(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSyncSse
      sse_decode_box_autoadd_enum_with_item_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinNormal
      sse_decode_box_autoadd_enum_with_item_tuple_twin_normal(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinRustAsync
      sse_decode_box_autoadd_enum_with_item_tuple_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinRustAsyncSse
      sse_decode_box_autoadd_enum_with_item_tuple_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSse sse_decode_box_autoadd_enum_with_item_tuple_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSync
      sse_decode_box_autoadd_enum_with_item_tuple_twin_sync(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSyncSse
      sse_decode_box_autoadd_enum_with_item_tuple_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EventTwinNormal sse_decode_box_autoadd_event_twin_normal(
      SseDeserializer deserializer);

  @protected
  EventTwinRustAsync sse_decode_box_autoadd_event_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EventTwinRustAsyncSse sse_decode_box_autoadd_event_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EventTwinSse sse_decode_box_autoadd_event_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinNormal sse_decode_box_autoadd_exotic_optionals_twin_normal(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsync
      sse_decode_box_autoadd_exotic_optionals_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      sse_decode_box_autoadd_exotic_optionals_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSse sse_decode_box_autoadd_exotic_optionals_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSync sse_decode_box_autoadd_exotic_optionals_twin_sync(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSyncSse
      sse_decode_box_autoadd_exotic_optionals_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  double sse_decode_box_autoadd_f_32(SseDeserializer deserializer);

  @protected
  double sse_decode_box_autoadd_f_64(SseDeserializer deserializer);

  @protected
  FeatureChronoTwinNormal sse_decode_box_autoadd_feature_chrono_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinRustAsync
      sse_decode_box_autoadd_feature_chrono_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  FeatureChronoTwinRustAsyncSse
      sse_decode_box_autoadd_feature_chrono_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  FeatureChronoTwinSse sse_decode_box_autoadd_feature_chrono_twin_sse(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinSync sse_decode_box_autoadd_feature_chrono_twin_sync(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinSyncSse sse_decode_box_autoadd_feature_chrono_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinNormal sse_decode_box_autoadd_feature_uuid_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinRustAsync sse_decode_box_autoadd_feature_uuid_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinRustAsyncSse
      sse_decode_box_autoadd_feature_uuid_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  FeatureUuidTwinSse sse_decode_box_autoadd_feature_uuid_twin_sse(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinSync sse_decode_box_autoadd_feature_uuid_twin_sync(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinSyncSse sse_decode_box_autoadd_feature_uuid_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinNormal sse_decode_box_autoadd_feed_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsync sse_decode_box_autoadd_feed_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsyncSse sse_decode_box_autoadd_feed_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinSse sse_decode_box_autoadd_feed_id_twin_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinSync sse_decode_box_autoadd_feed_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinSyncSse sse_decode_box_autoadd_feed_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_16(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_32(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_64(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_8(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_isize(SseDeserializer deserializer);

  @protected
  KitchenSinkTwinNormal sse_decode_box_autoadd_kitchen_sink_twin_normal(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsync sse_decode_box_autoadd_kitchen_sink_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsyncSse
      sse_decode_box_autoadd_kitchen_sink_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSse sse_decode_box_autoadd_kitchen_sink_twin_sse(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSync sse_decode_box_autoadd_kitchen_sink_twin_sync(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSyncSse sse_decode_box_autoadd_kitchen_sink_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ListOfNestedRawStringMirrored
      sse_decode_box_autoadd_list_of_nested_raw_string_mirrored(
          SseDeserializer deserializer);

  @protected
  MacroStruct sse_decode_box_autoadd_macro_struct(SseDeserializer deserializer);

  @protected
  MeasureTwinNormal sse_decode_box_autoadd_measure_twin_normal(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsync sse_decode_box_autoadd_measure_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsyncSse sse_decode_box_autoadd_measure_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSse sse_decode_box_autoadd_measure_twin_sse(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSync sse_decode_box_autoadd_measure_twin_sync(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSyncSse sse_decode_box_autoadd_measure_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinNormal sse_decode_box_autoadd_message_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinRustAsync sse_decode_box_autoadd_message_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinRustAsyncSse
      sse_decode_box_autoadd_message_id_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MessageIdTwinSse sse_decode_box_autoadd_message_id_twin_sse(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinSync sse_decode_box_autoadd_message_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinSyncSse sse_decode_box_autoadd_message_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinNormal sse_decode_box_autoadd_my_callable_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinRustAsync sse_decode_box_autoadd_my_callable_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinRustAsyncSse
      sse_decode_box_autoadd_my_callable_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MyCallableTwinSse sse_decode_box_autoadd_my_callable_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinSync sse_decode_box_autoadd_my_callable_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinSyncSse sse_decode_box_autoadd_my_callable_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinNormal sse_decode_box_autoadd_my_nested_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinRustAsync
      sse_decode_box_autoadd_my_nested_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  MyNestedStructTwinRustAsyncSse
      sse_decode_box_autoadd_my_nested_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSse sse_decode_box_autoadd_my_nested_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSync sse_decode_box_autoadd_my_nested_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSyncSse
      sse_decode_box_autoadd_my_nested_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  MySize sse_decode_box_autoadd_my_size(SseDeserializer deserializer);

  @protected
  MyStruct sse_decode_box_autoadd_my_struct(SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinNormal sse_decode_box_autoadd_my_tree_node_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinRustAsync sse_decode_box_autoadd_my_tree_node_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinRustAsyncSse
      sse_decode_box_autoadd_my_tree_node_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSse sse_decode_box_autoadd_my_tree_node_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSync sse_decode_box_autoadd_my_tree_node_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSyncSse sse_decode_box_autoadd_my_tree_node_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  NestedRawStringMirrored sse_decode_box_autoadd_nested_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinNormal sse_decode_box_autoadd_new_type_int_twin_normal(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsync sse_decode_box_autoadd_new_type_int_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsyncSse
      sse_decode_box_autoadd_new_type_int_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSse sse_decode_box_autoadd_new_type_int_twin_sse(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSync sse_decode_box_autoadd_new_type_int_twin_sync(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSyncSse sse_decode_box_autoadd_new_type_int_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  NoteTwinNormal sse_decode_box_autoadd_note_twin_normal(
      SseDeserializer deserializer);

  @protected
  NoteTwinRustAsync sse_decode_box_autoadd_note_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  NoteTwinRustAsyncSse sse_decode_box_autoadd_note_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  NoteTwinSse sse_decode_box_autoadd_note_twin_sse(
      SseDeserializer deserializer);

  @protected
  NoteTwinSync sse_decode_box_autoadd_note_twin_sync(
      SseDeserializer deserializer);

  @protected
  NoteTwinSyncSse sse_decode_box_autoadd_note_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  Numbers sse_decode_box_autoadd_numbers(SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinMoi sse_decode_box_autoadd_opaque_nested_twin_moi(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinNormal sse_decode_box_autoadd_opaque_nested_twin_normal(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsync
      sse_decode_box_autoadd_opaque_nested_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsyncMoi
      sse_decode_box_autoadd_opaque_nested_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsyncSse
      sse_decode_box_autoadd_opaque_nested_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsyncSseMoi
      sse_decode_box_autoadd_opaque_nested_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSse sse_decode_box_autoadd_opaque_nested_twin_sse(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSseMoi sse_decode_box_autoadd_opaque_nested_twin_sse_moi(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSync sse_decode_box_autoadd_opaque_nested_twin_sync(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSyncMoi sse_decode_box_autoadd_opaque_nested_twin_sync_moi(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSyncSse sse_decode_box_autoadd_opaque_nested_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSyncSseMoi
      sse_decode_box_autoadd_opaque_nested_twin_sync_sse_moi(
          SseDeserializer deserializer);

  @protected
  OptVecsTwinNormal sse_decode_box_autoadd_opt_vecs_twin_normal(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinRustAsync sse_decode_box_autoadd_opt_vecs_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinRustAsyncSse sse_decode_box_autoadd_opt_vecs_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinSse sse_decode_box_autoadd_opt_vecs_twin_sse(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinSync sse_decode_box_autoadd_opt_vecs_twin_sync(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinSyncSse sse_decode_box_autoadd_opt_vecs_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  RawStringMirrored sse_decode_box_autoadd_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  (String, int) sse_decode_box_autoadd_record_string_i_32(
      SseDeserializer deserializer);

  @protected
  Sequences sse_decode_box_autoadd_sequences(SseDeserializer deserializer);

  @protected
  SimpleStructTwinNormal sse_decode_box_autoadd_simple_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinRustAsync
      sse_decode_box_autoadd_simple_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  SimpleStructTwinRustAsyncSse
      sse_decode_box_autoadd_simple_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  SimpleStructTwinSse sse_decode_box_autoadd_simple_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinSync sse_decode_box_autoadd_simple_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinSyncSse sse_decode_box_autoadd_simple_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinNormal sse_decode_box_autoadd_some_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinRustAsync sse_decode_box_autoadd_some_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinRustAsyncSse
      sse_decode_box_autoadd_some_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  SomeStructTwinSse sse_decode_box_autoadd_some_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinSync sse_decode_box_autoadd_some_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinSyncSse sse_decode_box_autoadd_some_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  StructInLowerLevel sse_decode_box_autoadd_struct_in_lower_level(
      SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinNormal
      sse_decode_box_autoadd_struct_with_comments_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinRustAsync
      sse_decode_box_autoadd_struct_with_comments_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_comments_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSse
      sse_decode_box_autoadd_struct_with_comments_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSync
      sse_decode_box_autoadd_struct_with_comments_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSyncSse
      sse_decode_box_autoadd_struct_with_comments_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithEnumTwinNormal sse_decode_box_autoadd_struct_with_enum_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinRustAsync
      sse_decode_box_autoadd_struct_with_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithEnumTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSse sse_decode_box_autoadd_struct_with_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSync sse_decode_box_autoadd_struct_with_enum_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSyncSse
      sse_decode_box_autoadd_struct_with_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinMoi
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinNormal
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsync
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSseMoi
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSse
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSseMoi
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSync
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncMoi
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSse
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSseMoi
      sse_decode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinMoi
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsync
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncMoi
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSseMoi
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSseMoi
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncMoi
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSseMoi
      sse_decode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinNormal
      sse_decode_box_autoadd_struct_with_one_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinRustAsync
      sse_decode_box_autoadd_struct_with_one_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_one_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSse
      sse_decode_box_autoadd_struct_with_one_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSync
      sse_decode_box_autoadd_struct_with_one_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSyncSse
      sse_decode_box_autoadd_struct_with_one_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinNormal
      sse_decode_box_autoadd_struct_with_two_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinRustAsync
      sse_decode_box_autoadd_struct_with_two_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_two_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSse
      sse_decode_box_autoadd_struct_with_two_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSync
      sse_decode_box_autoadd_struct_with_two_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSyncSse
      sse_decode_box_autoadd_struct_with_two_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinNormal
      sse_decode_box_autoadd_struct_with_zero_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinRustAsync
      sse_decode_box_autoadd_struct_with_zero_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_zero_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSse
      sse_decode_box_autoadd_struct_with_zero_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSync
      sse_decode_box_autoadd_struct_with_zero_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSyncSse
      sse_decode_box_autoadd_struct_with_zero_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  SumWithTwinNormal sse_decode_box_autoadd_sum_with_twin_normal(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsync sse_decode_box_autoadd_sum_with_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsyncSse sse_decode_box_autoadd_sum_with_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSse sse_decode_box_autoadd_sum_with_twin_sse(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSync sse_decode_box_autoadd_sum_with_twin_sync(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSyncSse sse_decode_box_autoadd_sum_with_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinNormal sse_decode_box_autoadd_test_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsync sse_decode_box_autoadd_test_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncSse sse_decode_box_autoadd_test_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSse sse_decode_box_autoadd_test_id_twin_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSync sse_decode_box_autoadd_test_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSyncSse sse_decode_box_autoadd_test_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinNormal
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinRustAsync
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinRustAsyncSse
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSse
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSync
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSyncSse
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinNormal
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinRustAsync
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinRustAsyncSse
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSse
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSync
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSyncSse
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_8(SseDeserializer deserializer);

  @protected
  UserIdTwinNormal sse_decode_box_autoadd_user_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  UserIdTwinRustAsync sse_decode_box_autoadd_user_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  UserIdTwinRustAsyncSse sse_decode_box_autoadd_user_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  UserIdTwinSse sse_decode_box_autoadd_user_id_twin_sse(
      SseDeserializer deserializer);

  @protected
  UserIdTwinSync sse_decode_box_autoadd_user_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  UserIdTwinSyncSse sse_decode_box_autoadd_user_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_usize(SseDeserializer deserializer);

  @protected
  WeekdaysTwinNormal sse_decode_box_autoadd_weekdays_twin_normal(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsync sse_decode_box_autoadd_weekdays_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsyncSse sse_decode_box_autoadd_weekdays_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSse sse_decode_box_autoadd_weekdays_twin_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSync sse_decode_box_autoadd_weekdays_twin_sync(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSyncSse sse_decode_box_autoadd_weekdays_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinNormal
      sse_decode_box_benchmark_binary_tree_twin_normal(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      sse_decode_box_benchmark_binary_tree_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      sse_decode_box_benchmark_binary_tree_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSse sse_decode_box_benchmark_binary_tree_twin_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSync sse_decode_box_benchmark_binary_tree_twin_sync(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSyncSse
      sse_decode_box_benchmark_binary_tree_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  BlobTwinNormal sse_decode_box_blob_twin_normal(SseDeserializer deserializer);

  @protected
  BlobTwinRustAsync sse_decode_box_blob_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BlobTwinRustAsyncSse sse_decode_box_blob_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BlobTwinSse sse_decode_box_blob_twin_sse(SseDeserializer deserializer);

  @protected
  BlobTwinSync sse_decode_box_blob_twin_sync(SseDeserializer deserializer);

  @protected
  BlobTwinSyncSse sse_decode_box_blob_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  bool sse_decode_box_bool(SseDeserializer deserializer);

  @protected
  DistanceTwinNormal sse_decode_box_distance_twin_normal(
      SseDeserializer deserializer);

  @protected
  DistanceTwinRustAsync sse_decode_box_distance_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  DistanceTwinRustAsyncSse sse_decode_box_distance_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  DistanceTwinSse sse_decode_box_distance_twin_sse(
      SseDeserializer deserializer);

  @protected
  DistanceTwinSync sse_decode_box_distance_twin_sync(
      SseDeserializer deserializer);

  @protected
  DistanceTwinSyncSse sse_decode_box_distance_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinNormal sse_decode_box_exotic_optionals_twin_normal(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsync sse_decode_box_exotic_optionals_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      sse_decode_box_exotic_optionals_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSse sse_decode_box_exotic_optionals_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSync sse_decode_box_exotic_optionals_twin_sync(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSyncSse sse_decode_box_exotic_optionals_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  double sse_decode_box_f_64(SseDeserializer deserializer);

  @protected
  FeedIdTwinNormal sse_decode_box_feed_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsync sse_decode_box_feed_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsyncSse sse_decode_box_feed_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinSse sse_decode_box_feed_id_twin_sse(SseDeserializer deserializer);

  @protected
  FeedIdTwinSync sse_decode_box_feed_id_twin_sync(SseDeserializer deserializer);

  @protected
  FeedIdTwinSyncSse sse_decode_box_feed_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_i_32(SseDeserializer deserializer);

  @protected
  int sse_decode_box_i_64(SseDeserializer deserializer);

  @protected
  int sse_decode_box_i_8(SseDeserializer deserializer);

  @protected
  KitchenSinkTwinNormal sse_decode_box_kitchen_sink_twin_normal(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsync sse_decode_box_kitchen_sink_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsyncSse sse_decode_box_kitchen_sink_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSse sse_decode_box_kitchen_sink_twin_sse(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSync sse_decode_box_kitchen_sink_twin_sync(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSyncSse sse_decode_box_kitchen_sink_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MySize sse_decode_box_my_size(SseDeserializer deserializer);

  @protected
  SpeedTwinNormal sse_decode_box_speed_twin_normal(
      SseDeserializer deserializer);

  @protected
  SpeedTwinRustAsync sse_decode_box_speed_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SpeedTwinRustAsyncSse sse_decode_box_speed_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SpeedTwinSse sse_decode_box_speed_twin_sse(SseDeserializer deserializer);

  @protected
  SpeedTwinSync sse_decode_box_speed_twin_sync(SseDeserializer deserializer);

  @protected
  SpeedTwinSyncSse sse_decode_box_speed_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_u_8(SseDeserializer deserializer);

  @protected
  U8Array1600 sse_decode_box_u_8_array_1600(SseDeserializer deserializer);

  @protected
  U8Array8 sse_decode_box_u_8_array_8(SseDeserializer deserializer);

  @protected
  WeekdaysTwinNormal sse_decode_box_weekdays_twin_normal(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsync sse_decode_box_weekdays_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsyncSse sse_decode_box_weekdays_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSse sse_decode_box_weekdays_twin_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSync sse_decode_box_weekdays_twin_sync(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSyncSse sse_decode_box_weekdays_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CTwinNormal sse_decode_c_twin_normal(SseDeserializer deserializer);

  @protected
  CTwinRustAsync sse_decode_c_twin_rust_async(SseDeserializer deserializer);

  @protected
  CTwinRustAsyncSse sse_decode_c_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  CTwinSse sse_decode_c_twin_sse(SseDeserializer deserializer);

  @protected
  CTwinSync sse_decode_c_twin_sync(SseDeserializer deserializer);

  @protected
  CTwinSyncSse sse_decode_c_twin_sync_sse(SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinNormal sse_decode_concatenate_with_twin_normal(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinRustAsync sse_decode_concatenate_with_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinRustAsyncSse
      sse_decode_concatenate_with_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSse sse_decode_concatenate_with_twin_sse(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSync sse_decode_concatenate_with_twin_sync(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSyncSse sse_decode_concatenate_with_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ConstructorTranslatableStructTwinNormal
      sse_decode_constructor_translatable_struct_twin_normal(
          SseDeserializer deserializer);

  @protected
  ConstructorTranslatableSyncStructTwinNormal
      sse_decode_constructor_translatable_sync_struct_twin_normal(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinNormal
      sse_decode_contains_mirrored_sub_struct_twin_normal(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinRustAsync
      sse_decode_contains_mirrored_sub_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinRustAsyncSse
      sse_decode_contains_mirrored_sub_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinSse
      sse_decode_contains_mirrored_sub_struct_twin_sse(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinSync
      sse_decode_contains_mirrored_sub_struct_twin_sync(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinSyncSse
      sse_decode_contains_mirrored_sub_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinNormal sse_decode_custom_enum_error_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinRustAsync sse_decode_custom_enum_error_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinRustAsyncSse
      sse_decode_custom_enum_error_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinSse sse_decode_custom_enum_error_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinSync sse_decode_custom_enum_error_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinSyncSse sse_decode_custom_enum_error_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinNormal sse_decode_custom_error_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinRustAsync sse_decode_custom_error_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinRustAsyncSse sse_decode_custom_error_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinSse sse_decode_custom_error_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinSync sse_decode_custom_error_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinSyncSse sse_decode_custom_error_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinNormal sse_decode_custom_nested_error_1_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinRustAsync
      sse_decode_custom_nested_error_1_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinRustAsyncSse
      sse_decode_custom_nested_error_1_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinSse sse_decode_custom_nested_error_1_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinSync sse_decode_custom_nested_error_1_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinSyncSse sse_decode_custom_nested_error_1_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinNormal sse_decode_custom_nested_error_2_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinRustAsync
      sse_decode_custom_nested_error_2_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinRustAsyncSse
      sse_decode_custom_nested_error_2_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSse sse_decode_custom_nested_error_2_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSync sse_decode_custom_nested_error_2_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSyncSse sse_decode_custom_nested_error_2_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinNormal
      sse_decode_custom_nested_error_inner_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinRustAsync
      sse_decode_custom_nested_error_inner_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinRustAsyncSse
      sse_decode_custom_nested_error_inner_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSse sse_decode_custom_nested_error_inner_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSync sse_decode_custom_nested_error_inner_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSyncSse
      sse_decode_custom_nested_error_inner_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinNormal
      sse_decode_custom_nested_error_outer_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinRustAsync
      sse_decode_custom_nested_error_outer_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinRustAsyncSse
      sse_decode_custom_nested_error_outer_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSse sse_decode_custom_nested_error_outer_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSync sse_decode_custom_nested_error_outer_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSyncSse
      sse_decode_custom_nested_error_outer_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinNormal
      sse_decode_custom_struct_error_another_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinRustAsync
      sse_decode_custom_struct_error_another_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinRustAsyncSse
      sse_decode_custom_struct_error_another_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinSse
      sse_decode_custom_struct_error_another_twin_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinSync
      sse_decode_custom_struct_error_another_twin_sync(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinSyncSse
      sse_decode_custom_struct_error_another_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinNormal sse_decode_custom_struct_error_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinRustAsync sse_decode_custom_struct_error_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinRustAsyncSse
      sse_decode_custom_struct_error_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSse sse_decode_custom_struct_error_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSync sse_decode_custom_struct_error_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSyncSse sse_decode_custom_struct_error_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinNormal sse_decode_custom_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinRustAsync sse_decode_custom_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinRustAsyncSse sse_decode_custom_struct_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinSse sse_decode_custom_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinSync sse_decode_custom_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinSyncSse sse_decode_custom_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinNormal sse_decode_customized_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinRustAsync sse_decode_customized_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinRustAsyncSse sse_decode_customized_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinSse sse_decode_customized_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinSync sse_decode_customized_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinSyncSse sse_decode_customized_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinNormal sse_decode_dart_opaque_nested_twin_normal(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinRustAsync sse_decode_dart_opaque_nested_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinRustAsyncSse
      sse_decode_dart_opaque_nested_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSse sse_decode_dart_opaque_nested_twin_sse(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSync sse_decode_dart_opaque_nested_twin_sync(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSyncSse sse_decode_dart_opaque_nested_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  dynamic sse_decode_dartabi(SseDeserializer deserializer);

  @protected
  DemoStructForRustCallDartTwinNormal
      sse_decode_demo_struct_for_rust_call_dart_twin_normal(
          SseDeserializer deserializer);

  @protected
  DemoStructForRustCallDartTwinRustAsync
      sse_decode_demo_struct_for_rust_call_dart_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  DemoStructForRustCallDartTwinRustAsyncSse
      sse_decode_demo_struct_for_rust_call_dart_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  DemoStructForRustCallDartTwinSse
      sse_decode_demo_struct_for_rust_call_dart_twin_sse(
          SseDeserializer deserializer);

  @protected
  DistanceTwinNormal sse_decode_distance_twin_normal(
      SseDeserializer deserializer);

  @protected
  DistanceTwinRustAsync sse_decode_distance_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  DistanceTwinRustAsyncSse sse_decode_distance_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  DistanceTwinSse sse_decode_distance_twin_sse(SseDeserializer deserializer);

  @protected
  DistanceTwinSync sse_decode_distance_twin_sync(SseDeserializer deserializer);

  @protected
  DistanceTwinSyncSse sse_decode_distance_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ElementTwinNormal sse_decode_element_twin_normal(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsync sse_decode_element_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsyncSse sse_decode_element_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  ElementTwinSse sse_decode_element_twin_sse(SseDeserializer deserializer);

  @protected
  ElementTwinSync sse_decode_element_twin_sync(SseDeserializer deserializer);

  @protected
  ElementTwinSyncSse sse_decode_element_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EmptyTwinNormal sse_decode_empty_twin_normal(SseDeserializer deserializer);

  @protected
  EmptyTwinRustAsync sse_decode_empty_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EmptyTwinRustAsyncSse sse_decode_empty_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EmptyTwinSse sse_decode_empty_twin_sse(SseDeserializer deserializer);

  @protected
  EmptyTwinSync sse_decode_empty_twin_sync(SseDeserializer deserializer);

  @protected
  EmptyTwinSyncSse sse_decode_empty_twin_sync_sse(SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinNormal sse_decode_enum_dart_opaque_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinRustAsync sse_decode_enum_dart_opaque_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinRustAsyncSse
      sse_decode_enum_dart_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSse sse_decode_enum_dart_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSync sse_decode_enum_dart_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSyncSse sse_decode_enum_dart_opaque_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinMoi sse_decode_enum_opaque_twin_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinMoiArray5 sse_decode_enum_opaque_twin_moi_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinNormal sse_decode_enum_opaque_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinNormalArray5 sse_decode_enum_opaque_twin_normal_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsync sse_decode_enum_opaque_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncArray5 sse_decode_enum_opaque_twin_rust_async_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncMoi sse_decode_enum_opaque_twin_rust_async_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncMoiArray5
      sse_decode_enum_opaque_twin_rust_async_moi_array_5(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncSse sse_decode_enum_opaque_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncSseArray5
      sse_decode_enum_opaque_twin_rust_async_sse_array_5(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncSseMoi sse_decode_enum_opaque_twin_rust_async_sse_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncSseMoiArray5
      sse_decode_enum_opaque_twin_rust_async_sse_moi_array_5(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSse sse_decode_enum_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSseArray5 sse_decode_enum_opaque_twin_sse_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSseMoi sse_decode_enum_opaque_twin_sse_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSseMoiArray5 sse_decode_enum_opaque_twin_sse_moi_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSync sse_decode_enum_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncArray5 sse_decode_enum_opaque_twin_sync_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncMoi sse_decode_enum_opaque_twin_sync_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncMoiArray5 sse_decode_enum_opaque_twin_sync_moi_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncSse sse_decode_enum_opaque_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncSseArray5 sse_decode_enum_opaque_twin_sync_sse_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncSseMoi sse_decode_enum_opaque_twin_sync_sse_moi(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncSseMoiArray5
      sse_decode_enum_opaque_twin_sync_sse_moi_array_5(
          SseDeserializer deserializer);

  @protected
  EnumSimpleTwinNormal sse_decode_enum_simple_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinRustAsync sse_decode_enum_simple_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinRustAsyncSse sse_decode_enum_simple_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinSse sse_decode_enum_simple_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinSync sse_decode_enum_simple_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinSyncSse sse_decode_enum_simple_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithDiscriminantTwinNormal sse_decode_enum_with_discriminant_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumWithDiscriminantTwinRustAsync
      sse_decode_enum_with_discriminant_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithDiscriminantTwinRustAsyncSse
      sse_decode_enum_with_discriminant_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithDiscriminantTwinSse sse_decode_enum_with_discriminant_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithDiscriminantTwinSync sse_decode_enum_with_discriminant_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumWithDiscriminantTwinSyncSse
      sse_decode_enum_with_discriminant_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinMoi sse_decode_enum_with_good_and_opaque_twin_moi(
      SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinNormal
      sse_decode_enum_with_good_and_opaque_twin_normal(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsync
      sse_decode_enum_with_good_and_opaque_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncMoi
      sse_decode_enum_with_good_and_opaque_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSse
      sse_decode_enum_with_good_and_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinRustAsyncSseMoi
      sse_decode_enum_with_good_and_opaque_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSse sse_decode_enum_with_good_and_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSseMoi
      sse_decode_enum_with_good_and_opaque_twin_sse_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSync sse_decode_enum_with_good_and_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSyncMoi
      sse_decode_enum_with_good_and_opaque_twin_sync_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSse
      sse_decode_enum_with_good_and_opaque_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithGoodAndOpaqueTwinSyncSseMoi
      sse_decode_enum_with_good_and_opaque_twin_sync_sse_moi(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinNormal sse_decode_enum_with_item_mixed_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinRustAsync
      sse_decode_enum_with_item_mixed_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinRustAsyncSse
      sse_decode_enum_with_item_mixed_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSse sse_decode_enum_with_item_mixed_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSync sse_decode_enum_with_item_mixed_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSyncSse sse_decode_enum_with_item_mixed_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinNormal sse_decode_enum_with_item_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinRustAsync
      sse_decode_enum_with_item_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinRustAsyncSse
      sse_decode_enum_with_item_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSse sse_decode_enum_with_item_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSync sse_decode_enum_with_item_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSyncSse sse_decode_enum_with_item_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinNormal sse_decode_enum_with_item_tuple_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinRustAsync
      sse_decode_enum_with_item_tuple_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinRustAsyncSse
      sse_decode_enum_with_item_tuple_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSse sse_decode_enum_with_item_tuple_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSync sse_decode_enum_with_item_tuple_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSyncSse sse_decode_enum_with_item_tuple_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EventTwinNormal sse_decode_event_twin_normal(SseDeserializer deserializer);

  @protected
  EventTwinRustAsync sse_decode_event_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EventTwinRustAsyncSse sse_decode_event_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EventTwinSse sse_decode_event_twin_sse(SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinNormal sse_decode_exotic_optionals_twin_normal(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsync sse_decode_exotic_optionals_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      sse_decode_exotic_optionals_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSse sse_decode_exotic_optionals_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSync sse_decode_exotic_optionals_twin_sync(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSyncSse sse_decode_exotic_optionals_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  double sse_decode_f_32(SseDeserializer deserializer);

  @protected
  double sse_decode_f_64(SseDeserializer deserializer);

  @protected
  F64Array16 sse_decode_f_64_array_16(SseDeserializer deserializer);

  @protected
  FeatureChronoTwinNormal sse_decode_feature_chrono_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinRustAsync sse_decode_feature_chrono_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinRustAsyncSse sse_decode_feature_chrono_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinSse sse_decode_feature_chrono_twin_sse(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinSync sse_decode_feature_chrono_twin_sync(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinSyncSse sse_decode_feature_chrono_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinNormal sse_decode_feature_uuid_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinRustAsync sse_decode_feature_uuid_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinRustAsyncSse sse_decode_feature_uuid_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinSse sse_decode_feature_uuid_twin_sse(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinSync sse_decode_feature_uuid_twin_sync(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinSyncSse sse_decode_feature_uuid_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinNormal sse_decode_feed_id_twin_normal(SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsync sse_decode_feed_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsyncSse sse_decode_feed_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinSse sse_decode_feed_id_twin_sse(SseDeserializer deserializer);

  @protected
  FeedIdTwinSync sse_decode_feed_id_twin_sync(SseDeserializer deserializer);

  @protected
  FeedIdTwinSyncSse sse_decode_feed_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  HashMapValue sse_decode_hash_map_value(SseDeserializer deserializer);

  @protected
  int sse_decode_i_16(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  I32Array2 sse_decode_i_32_array_2(SseDeserializer deserializer);

  @protected
  int sse_decode_i_64(SseDeserializer deserializer);

  @protected
  int sse_decode_i_8(SseDeserializer deserializer);

  @protected
  int sse_decode_isize(SseDeserializer deserializer);

  @protected
  KitchenSinkTwinNormal sse_decode_kitchen_sink_twin_normal(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsync sse_decode_kitchen_sink_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsyncSse sse_decode_kitchen_sink_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSse sse_decode_kitchen_sink_twin_sse(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSync sse_decode_kitchen_sink_twin_sync(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSyncSse sse_decode_kitchen_sink_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinMoi>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinNormal>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinRustAsync>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinRustAsyncMoi>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinRustAsyncSse>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinRustAsyncSseMoi>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinSse>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinSseMoi>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinSync>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinSyncMoi>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinSyncSse>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  List<NonCloneSimpleTwinSyncSseMoi>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  List<Duration> sse_decode_list_Chrono_Duration(SseDeserializer deserializer);

  @protected
  List<DateTime> sse_decode_list_Chrono_Local(SseDeserializer deserializer);

  @protected
  List<DateTime> sse_decode_list_Chrono_Naive(SseDeserializer deserializer);

  @protected
  List<Object> sse_decode_list_DartOpaque(SseDeserializer deserializer);

  @protected
  List<HideDataTwinMoi> sse_decode_list_RustOpaque_HideDataTwinMoi(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinNormal> sse_decode_list_RustOpaque_HideDataTwinNormal(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinRustAsync> sse_decode_list_RustOpaque_HideDataTwinRustAsync(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinRustAsyncMoi>
      sse_decode_list_RustOpaque_HideDataTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  List<HideDataTwinRustAsyncSse>
      sse_decode_list_RustOpaque_HideDataTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  List<HideDataTwinRustAsyncSseMoi>
      sse_decode_list_RustOpaque_HideDataTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  List<HideDataTwinSse> sse_decode_list_RustOpaque_HideDataTwinSse(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinSseMoi> sse_decode_list_RustOpaque_HideDataTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinSync> sse_decode_list_RustOpaque_HideDataTwinSync(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinSyncMoi> sse_decode_list_RustOpaque_HideDataTwinSyncMoi(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinSyncSse> sse_decode_list_RustOpaque_HideDataTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  List<HideDataTwinSyncSseMoi>
      sse_decode_list_RustOpaque_HideDataTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<UuidValue> sse_decode_list_Uuid(SseDeserializer deserializer);

  @protected
  List<ApplicationEnvVar> sse_decode_list_application_env_var(
      SseDeserializer deserializer);

  @protected
  List<ApplicationMode> sse_decode_list_application_mode(
      SseDeserializer deserializer);

  @protected
  List<ApplicationSettings> sse_decode_list_application_settings(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinNormal> sse_decode_list_attribute_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsync> sse_decode_list_attribute_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsyncSse> sse_decode_list_attribute_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSse> sse_decode_list_attribute_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSync> sse_decode_list_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSyncSse> sse_decode_list_attribute_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<BasicGeneralEnumTwinNormal>
      sse_decode_list_basic_general_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<BasicGeneralEnumTwinRustAsync>
      sse_decode_list_basic_general_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<BasicGeneralEnumTwinRustAsyncSse>
      sse_decode_list_basic_general_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<BasicGeneralEnumTwinSse> sse_decode_list_basic_general_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<BasicGeneralEnumTwinSync> sse_decode_list_basic_general_enum_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<BasicGeneralEnumTwinSyncSse>
      sse_decode_list_basic_general_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<BasicPrimitiveEnumTwinNormal>
      sse_decode_list_basic_primitive_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<BasicPrimitiveEnumTwinRustAsync>
      sse_decode_list_basic_primitive_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<BasicPrimitiveEnumTwinRustAsyncSse>
      sse_decode_list_basic_primitive_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<BasicPrimitiveEnumTwinSse> sse_decode_list_basic_primitive_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<BasicPrimitiveEnumTwinSync>
      sse_decode_list_basic_primitive_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<BasicPrimitiveEnumTwinSyncSse>
      sse_decode_list_basic_primitive_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<BasicStructTwinNormal> sse_decode_list_basic_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<BasicStructTwinRustAsync> sse_decode_list_basic_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<BasicStructTwinRustAsyncSse>
      sse_decode_list_basic_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<BasicStructTwinSse> sse_decode_list_basic_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<BasicStructTwinSync> sse_decode_list_basic_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<BasicStructTwinSyncSse> sse_decode_list_basic_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<bool> sse_decode_list_bool(SseDeserializer deserializer);

  @protected
  List<ElementTwinNormal> sse_decode_list_element_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinRustAsync> sse_decode_list_element_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinRustAsyncSse> sse_decode_list_element_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinSse> sse_decode_list_element_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinSync> sse_decode_list_element_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinSyncSse> sse_decode_list_element_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinMoi> sse_decode_list_enum_opaque_twin_moi(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinNormal> sse_decode_list_enum_opaque_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinRustAsync> sse_decode_list_enum_opaque_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinRustAsyncMoi>
      sse_decode_list_enum_opaque_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinRustAsyncSse>
      sse_decode_list_enum_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinRustAsyncSseMoi>
      sse_decode_list_enum_opaque_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinSse> sse_decode_list_enum_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinSseMoi> sse_decode_list_enum_opaque_twin_sse_moi(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinSync> sse_decode_list_enum_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinSyncMoi> sse_decode_list_enum_opaque_twin_sync_moi(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinSyncSse> sse_decode_list_enum_opaque_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinSyncSseMoi> sse_decode_list_enum_opaque_twin_sync_sse_moi(
      SseDeserializer deserializer);

  @protected
  List<Uint8List> sse_decode_list_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  List<MyEnum> sse_decode_list_my_enum(SseDeserializer deserializer);

  @protected
  List<MySize> sse_decode_list_my_size(SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinNormal> sse_decode_list_my_tree_node_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinRustAsync> sse_decode_list_my_tree_node_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinRustAsyncSse>
      sse_decode_list_my_tree_node_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinSse> sse_decode_list_my_tree_node_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinSync> sse_decode_list_my_tree_node_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinSyncSse> sse_decode_list_my_tree_node_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<NestedRawStringMirrored> sse_decode_list_nested_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  ListOfNestedRawStringMirrored sse_decode_list_of_nested_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  List<String?> sse_decode_list_opt_String(SseDeserializer deserializer);

  @protected
  List<AttributeTwinNormal?>
      sse_decode_list_opt_box_autoadd_attribute_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsync?>
      sse_decode_list_opt_box_autoadd_attribute_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsyncSse?>
      sse_decode_list_opt_box_autoadd_attribute_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinSse?> sse_decode_list_opt_box_autoadd_attribute_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSync?> sse_decode_list_opt_box_autoadd_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSyncSse?>
      sse_decode_list_opt_box_autoadd_attribute_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<int?> sse_decode_list_opt_box_autoadd_i_32(SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinNormal?>
      sse_decode_list_opt_box_autoadd_weekdays_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinRustAsync?>
      sse_decode_list_opt_box_autoadd_weekdays_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinRustAsyncSse?>
      sse_decode_list_opt_box_autoadd_weekdays_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSse?> sse_decode_list_opt_box_autoadd_weekdays_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSync?> sse_decode_list_opt_box_autoadd_weekdays_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSyncSse?>
      sse_decode_list_opt_box_autoadd_weekdays_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<Int32List?> sse_decode_list_opt_list_prim_i_32_strict(
      SseDeserializer deserializer);

  @protected
  List<PointTwinNormal> sse_decode_list_point_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<PointTwinRustAsync> sse_decode_list_point_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<PointTwinRustAsyncSse> sse_decode_list_point_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<PointTwinSse> sse_decode_list_point_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<PointTwinSync> sse_decode_list_point_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<PointTwinSyncSse> sse_decode_list_point_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<double> sse_decode_list_prim_f_32_loose(SseDeserializer deserializer);

  @protected
  Float32List sse_decode_list_prim_f_32_strict(SseDeserializer deserializer);

  @protected
  List<double> sse_decode_list_prim_f_64_loose(SseDeserializer deserializer);

  @protected
  Float64List sse_decode_list_prim_f_64_strict(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_i_16_loose(SseDeserializer deserializer);

  @protected
  Int16List sse_decode_list_prim_i_16_strict(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_i_32_loose(SseDeserializer deserializer);

  @protected
  Int32List sse_decode_list_prim_i_32_strict(SseDeserializer deserializer);

  @protected
  Int64List sse_decode_list_prim_i_64_strict(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_i_8_loose(SseDeserializer deserializer);

  @protected
  Int8List sse_decode_list_prim_i_8_strict(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_16_loose(SseDeserializer deserializer);

  @protected
  Uint16List sse_decode_list_prim_u_16_strict(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_32_loose(SseDeserializer deserializer);

  @protected
  Uint32List sse_decode_list_prim_u_32_strict(SseDeserializer deserializer);

  @protected
  Uint64List sse_decode_list_prim_u_64_strict(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_8_loose(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<RawStringEnumMirrored> sse_decode_list_raw_string_enum_mirrored(
      SseDeserializer deserializer);

  @protected
  List<RawStringMirrored> sse_decode_list_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  List<(int, BasicGeneralEnumTwinNormal)>
      sse_decode_list_record_i_32_basic_general_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicGeneralEnumTwinRustAsync)>
      sse_decode_list_record_i_32_basic_general_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicGeneralEnumTwinRustAsyncSse)>
      sse_decode_list_record_i_32_basic_general_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicGeneralEnumTwinSse)>
      sse_decode_list_record_i_32_basic_general_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicGeneralEnumTwinSync)>
      sse_decode_list_record_i_32_basic_general_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicGeneralEnumTwinSyncSse)>
      sse_decode_list_record_i_32_basic_general_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicPrimitiveEnumTwinNormal)>
      sse_decode_list_record_i_32_basic_primitive_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicPrimitiveEnumTwinRustAsync)>
      sse_decode_list_record_i_32_basic_primitive_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicPrimitiveEnumTwinRustAsyncSse)>
      sse_decode_list_record_i_32_basic_primitive_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicPrimitiveEnumTwinSse)>
      sse_decode_list_record_i_32_basic_primitive_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicPrimitiveEnumTwinSync)>
      sse_decode_list_record_i_32_basic_primitive_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicPrimitiveEnumTwinSyncSse)>
      sse_decode_list_record_i_32_basic_primitive_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicStructTwinNormal)>
      sse_decode_list_record_i_32_basic_struct_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicStructTwinRustAsync)>
      sse_decode_list_record_i_32_basic_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicStructTwinRustAsyncSse)>
      sse_decode_list_record_i_32_basic_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicStructTwinSse)>
      sse_decode_list_record_i_32_basic_struct_twin_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicStructTwinSync)>
      sse_decode_list_record_i_32_basic_struct_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<(int, BasicStructTwinSyncSse)>
      sse_decode_list_record_i_32_basic_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<(int, bool)> sse_decode_list_record_i_32_bool(
      SseDeserializer deserializer);

  @protected
  List<(int, double)> sse_decode_list_record_i_32_f_32(
      SseDeserializer deserializer);

  @protected
  List<(int, double)> sse_decode_list_record_i_32_f_64(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_i_16(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_i_32(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_i_64(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_i_8(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_isize(
      SseDeserializer deserializer);

  @protected
  List<(int, Uint8List)> sse_decode_list_record_i_32_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  List<(int, String)> sse_decode_list_record_i_32_string(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_u_16(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_u_32(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_u_64(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_u_8(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_usize(
      SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinNormal)>
      sse_decode_list_record_string_enum_simple_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinRustAsync)>
      sse_decode_list_record_string_enum_simple_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinRustAsyncSse)>
      sse_decode_list_record_string_enum_simple_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinSse)>
      sse_decode_list_record_string_enum_simple_twin_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinSync)>
      sse_decode_list_record_string_enum_simple_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinSyncSse)>
      sse_decode_list_record_string_enum_simple_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, HashMapValue)> sse_decode_list_record_string_hash_map_value(
      SseDeserializer deserializer);

  @protected
  List<(String, int)> sse_decode_list_record_string_i_32(
      SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinNormal)>
      sse_decode_list_record_string_kitchen_sink_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinRustAsync)>
      sse_decode_list_record_string_kitchen_sink_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinRustAsyncSse)>
      sse_decode_list_record_string_kitchen_sink_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinSse)>
      sse_decode_list_record_string_kitchen_sink_twin_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinSync)>
      sse_decode_list_record_string_kitchen_sink_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinSyncSse)>
      sse_decode_list_record_string_kitchen_sink_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, Uint8List)> sse_decode_list_record_string_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  List<(String, MySize)> sse_decode_list_record_string_my_size(
      SseDeserializer deserializer);

  @protected
  List<(String, String)> sse_decode_list_record_string_string(
      SseDeserializer deserializer);

  @protected
  List<(int, ApplicationMode)> sse_decode_list_record_u_8_application_mode(
      SseDeserializer deserializer);

  @protected
  List<SimpleStructTwinNormal> sse_decode_list_simple_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<SimpleStructTwinRustAsync> sse_decode_list_simple_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<SimpleStructTwinRustAsyncSse>
      sse_decode_list_simple_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<SimpleStructTwinSse> sse_decode_list_simple_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<SimpleStructTwinSync> sse_decode_list_simple_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<SimpleStructTwinSyncSse> sse_decode_list_simple_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinNormal> sse_decode_list_sum_with_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinRustAsync> sse_decode_list_sum_with_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinRustAsyncSse> sse_decode_list_sum_with_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinSse> sse_decode_list_sum_with_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinSync> sse_decode_list_sum_with_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinSyncSse> sse_decode_list_sum_with_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinNormal> sse_decode_list_test_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinRustAsync> sse_decode_list_test_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinRustAsyncSse> sse_decode_list_test_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinSse> sse_decode_list_test_id_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinSync> sse_decode_list_test_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinSyncSse> sse_decode_list_test_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinNormal> sse_decode_list_weekdays_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinRustAsync> sse_decode_list_weekdays_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinRustAsyncSse> sse_decode_list_weekdays_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSse> sse_decode_list_weekdays_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSync> sse_decode_list_weekdays_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSyncSse> sse_decode_list_weekdays_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  Log2TwinNormal sse_decode_log_2_twin_normal(SseDeserializer deserializer);

  @protected
  Log2TwinRustAsync sse_decode_log_2_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  Log2TwinRustAsyncSse sse_decode_log_2_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  Log2TwinSse sse_decode_log_2_twin_sse(SseDeserializer deserializer);

  @protected
  Log2TwinSync sse_decode_log_2_twin_sync(SseDeserializer deserializer);

  @protected
  Log2TwinSyncSse sse_decode_log_2_twin_sync_sse(SseDeserializer deserializer);

  @protected
  LogTwinNormal sse_decode_log_twin_normal(SseDeserializer deserializer);

  @protected
  LogTwinRustAsync sse_decode_log_twin_rust_async(SseDeserializer deserializer);

  @protected
  LogTwinRustAsyncSse sse_decode_log_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  LogTwinSse sse_decode_log_twin_sse(SseDeserializer deserializer);

  @protected
  MacroStruct sse_decode_macro_struct(SseDeserializer deserializer);

  @protected
  MeasureTwinNormal sse_decode_measure_twin_normal(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsync sse_decode_measure_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsyncSse sse_decode_measure_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSse sse_decode_measure_twin_sse(SseDeserializer deserializer);

  @protected
  MeasureTwinSync sse_decode_measure_twin_sync(SseDeserializer deserializer);

  @protected
  MeasureTwinSyncSse sse_decode_measure_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinNormal sse_decode_message_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinRustAsync sse_decode_message_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinRustAsyncSse sse_decode_message_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinSse sse_decode_message_id_twin_sse(SseDeserializer deserializer);

  @protected
  MessageIdTwinSync sse_decode_message_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinSyncSse sse_decode_message_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinNormal sse_decode_mirror_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinRustAsync sse_decode_mirror_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinRustAsyncSse sse_decode_mirror_struct_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinSse sse_decode_mirror_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinSync sse_decode_mirror_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinSyncSse sse_decode_mirror_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinNormal
      sse_decode_more_than_just_one_raw_string_struct_twin_normal(
          SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinRustAsync
      sse_decode_more_than_just_one_raw_string_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinRustAsyncSse
      sse_decode_more_than_just_one_raw_string_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinSse
      sse_decode_more_than_just_one_raw_string_struct_twin_sse(
          SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinSync
      sse_decode_more_than_just_one_raw_string_struct_twin_sync(
          SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinSyncSse
      sse_decode_more_than_just_one_raw_string_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  MyCallableTwinNormal sse_decode_my_callable_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinRustAsync sse_decode_my_callable_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinRustAsyncSse sse_decode_my_callable_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinSse sse_decode_my_callable_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinSync sse_decode_my_callable_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyCallableTwinSyncSse sse_decode_my_callable_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MyEnum sse_decode_my_enum(SseDeserializer deserializer);

  @protected
  MyNestedStructTwinNormal sse_decode_my_nested_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinRustAsync sse_decode_my_nested_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinRustAsyncSse
      sse_decode_my_nested_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSse sse_decode_my_nested_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSync sse_decode_my_nested_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSyncSse sse_decode_my_nested_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MySize sse_decode_my_size(SseDeserializer deserializer);

  @protected
  MyStreamEntryTwinNormal sse_decode_my_stream_entry_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyStreamEntryTwinRustAsync sse_decode_my_stream_entry_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyStreamEntryTwinRustAsyncSse sse_decode_my_stream_entry_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MyStreamEntryTwinSse sse_decode_my_stream_entry_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyStruct sse_decode_my_struct(SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinNormal sse_decode_my_tree_node_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinRustAsync sse_decode_my_tree_node_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinRustAsyncSse sse_decode_my_tree_node_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSse sse_decode_my_tree_node_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSync sse_decode_my_tree_node_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSyncSse sse_decode_my_tree_node_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  NestedRawStringMirrored sse_decode_nested_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  NewSimpleStruct sse_decode_new_simple_struct(SseDeserializer deserializer);

  @protected
  NewTypeIntTwinNormal sse_decode_new_type_int_twin_normal(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsync sse_decode_new_type_int_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsyncSse sse_decode_new_type_int_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSse sse_decode_new_type_int_twin_sse(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSync sse_decode_new_type_int_twin_sync(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSyncSse sse_decode_new_type_int_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  NoteTwinNormal sse_decode_note_twin_normal(SseDeserializer deserializer);

  @protected
  NoteTwinRustAsync sse_decode_note_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  NoteTwinRustAsyncSse sse_decode_note_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  NoteTwinSse sse_decode_note_twin_sse(SseDeserializer deserializer);

  @protected
  NoteTwinSync sse_decode_note_twin_sync(SseDeserializer deserializer);

  @protected
  NoteTwinSyncSse sse_decode_note_twin_sync_sse(SseDeserializer deserializer);

  @protected
  Numbers sse_decode_numbers(SseDeserializer deserializer);

  @protected
  OldSimpleStruct sse_decode_old_simple_struct(SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinMoi sse_decode_opaque_nested_twin_moi(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinNormal sse_decode_opaque_nested_twin_normal(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsync sse_decode_opaque_nested_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsyncMoi sse_decode_opaque_nested_twin_rust_async_moi(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsyncSse sse_decode_opaque_nested_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsyncSseMoi
      sse_decode_opaque_nested_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSse sse_decode_opaque_nested_twin_sse(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSseMoi sse_decode_opaque_nested_twin_sse_moi(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSync sse_decode_opaque_nested_twin_sync(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSyncMoi sse_decode_opaque_nested_twin_sync_moi(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSyncSse sse_decode_opaque_nested_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSyncSseMoi sse_decode_opaque_nested_twin_sync_sse_moi(
      SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinMoi?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsync?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncMoi?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinRustAsyncSseMoi?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSseMoi?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncMoi?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSseMoi?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  Duration? sse_decode_opt_box_autoadd_Chrono_Duration(
      SseDeserializer deserializer);

  @protected
  DateTime? sse_decode_opt_box_autoadd_Chrono_Naive(
      SseDeserializer deserializer);

  @protected
  DateTime? sse_decode_opt_box_autoadd_Chrono_Utc(SseDeserializer deserializer);

  @protected
  Object? sse_decode_opt_box_autoadd_DartOpaque(SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinMoi?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(
          SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinNormal?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
          SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinSse?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinSse(
          SseDeserializer deserializer);

  @protected
  HideDataAnotherTwinSseMoi?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinSseMoi(
          SseDeserializer deserializer);

  @protected
  HideDataTwinMoi? sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinNormal? sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinNormal(
      SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsync?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsync(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncMoi?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  HideDataTwinRustAsyncSseMoi?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncSseMoi(
          SseDeserializer deserializer);

  @protected
  HideDataTwinSse? sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinSse(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSseMoi? sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinSseMoi(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSync? sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinSync(
      SseDeserializer deserializer);

  @protected
  HideDataTwinSyncMoi?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
          SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSse?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  HideDataTwinSyncSseMoi?
      sse_decode_opt_box_autoadd_RustOpaque_HideDataTwinSyncSseMoi(
          SseDeserializer deserializer);

  @protected
  ApplicationEnv? sse_decode_opt_box_autoadd_application_env(
      SseDeserializer deserializer);

  @protected
  ApplicationMode? sse_decode_opt_box_autoadd_application_mode(
      SseDeserializer deserializer);

  @protected
  AttributeTwinNormal? sse_decode_opt_box_autoadd_attribute_twin_normal(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsync? sse_decode_opt_box_autoadd_attribute_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_attribute_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  AttributeTwinSse? sse_decode_opt_box_autoadd_attribute_twin_sse(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSync? sse_decode_opt_box_autoadd_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSyncSse? sse_decode_opt_box_autoadd_attribute_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinNormal?
      sse_decode_opt_box_autoadd_basic_general_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinRustAsync?
      sse_decode_opt_box_autoadd_basic_general_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_basic_general_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSse?
      sse_decode_opt_box_autoadd_basic_general_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSync?
      sse_decode_opt_box_autoadd_basic_general_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  BasicGeneralEnumTwinSyncSse?
      sse_decode_opt_box_autoadd_basic_general_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinNormal?
      sse_decode_opt_box_autoadd_basic_primitive_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinRustAsync?
      sse_decode_opt_box_autoadd_basic_primitive_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_basic_primitive_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSse?
      sse_decode_opt_box_autoadd_basic_primitive_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSync?
      sse_decode_opt_box_autoadd_basic_primitive_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  BasicPrimitiveEnumTwinSyncSse?
      sse_decode_opt_box_autoadd_basic_primitive_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  BasicStructTwinNormal? sse_decode_opt_box_autoadd_basic_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinRustAsync?
      sse_decode_opt_box_autoadd_basic_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BasicStructTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_basic_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BasicStructTwinSse? sse_decode_opt_box_autoadd_basic_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinSync? sse_decode_opt_box_autoadd_basic_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  BasicStructTwinSyncSse? sse_decode_opt_box_autoadd_basic_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  bool? sse_decode_opt_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  ElementTwinNormal? sse_decode_opt_box_autoadd_element_twin_normal(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsync? sse_decode_opt_box_autoadd_element_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_element_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ElementTwinSse? sse_decode_opt_box_autoadd_element_twin_sse(
      SseDeserializer deserializer);

  @protected
  ElementTwinSync? sse_decode_opt_box_autoadd_element_twin_sync(
      SseDeserializer deserializer);

  @protected
  ElementTwinSyncSse? sse_decode_opt_box_autoadd_element_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinNormal?
      sse_decode_opt_box_autoadd_exotic_optionals_twin_normal(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsync?
      sse_decode_opt_box_autoadd_exotic_optionals_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_exotic_optionals_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSse? sse_decode_opt_box_autoadd_exotic_optionals_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSync?
      sse_decode_opt_box_autoadd_exotic_optionals_twin_sync(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSyncSse?
      sse_decode_opt_box_autoadd_exotic_optionals_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  double? sse_decode_opt_box_autoadd_f_32(SseDeserializer deserializer);

  @protected
  double? sse_decode_opt_box_autoadd_f_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_16(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_32(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_8(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_isize(SseDeserializer deserializer);

  @protected
  MeasureTwinNormal? sse_decode_opt_box_autoadd_measure_twin_normal(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsync? sse_decode_opt_box_autoadd_measure_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_measure_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MeasureTwinSse? sse_decode_opt_box_autoadd_measure_twin_sse(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSync? sse_decode_opt_box_autoadd_measure_twin_sync(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSyncSse? sse_decode_opt_box_autoadd_measure_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinNormal? sse_decode_opt_box_autoadd_new_type_int_twin_normal(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsync?
      sse_decode_opt_box_autoadd_new_type_int_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_new_type_int_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSse? sse_decode_opt_box_autoadd_new_type_int_twin_sse(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSync? sse_decode_opt_box_autoadd_new_type_int_twin_sync(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSyncSse? sse_decode_opt_box_autoadd_new_type_int_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  (String, int)? sse_decode_opt_box_autoadd_record_string_i_32(
      SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_16(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_8(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_usize(SseDeserializer deserializer);

  @protected
  WeekdaysTwinNormal? sse_decode_opt_box_autoadd_weekdays_twin_normal(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsync? sse_decode_opt_box_autoadd_weekdays_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_weekdays_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  WeekdaysTwinSse? sse_decode_opt_box_autoadd_weekdays_twin_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSync? sse_decode_opt_box_autoadd_weekdays_twin_sync(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSyncSse? sse_decode_opt_box_autoadd_weekdays_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinNormal?
      sse_decode_opt_box_benchmark_binary_tree_twin_normal(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsync?
      sse_decode_opt_box_benchmark_binary_tree_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse?
      sse_decode_opt_box_benchmark_binary_tree_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSse? sse_decode_opt_box_benchmark_binary_tree_twin_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSync?
      sse_decode_opt_box_benchmark_binary_tree_twin_sync(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSyncSse?
      sse_decode_opt_box_benchmark_binary_tree_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  bool? sse_decode_opt_box_bool(SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinNormal? sse_decode_opt_box_exotic_optionals_twin_normal(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsync?
      sse_decode_opt_box_exotic_optionals_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsyncSse?
      sse_decode_opt_box_exotic_optionals_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSse? sse_decode_opt_box_exotic_optionals_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSync? sse_decode_opt_box_exotic_optionals_twin_sync(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSyncSse? sse_decode_opt_box_exotic_optionals_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  double? sse_decode_opt_box_f_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_i_32(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_i_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_i_8(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_u_8(SseDeserializer deserializer);

  @protected
  List<AttributeTwinNormal>? sse_decode_opt_list_attribute_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsync>? sse_decode_opt_list_attribute_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsyncSse>?
      sse_decode_opt_list_attribute_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinSse>? sse_decode_opt_list_attribute_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSync>? sse_decode_opt_list_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSyncSse>? sse_decode_opt_list_attribute_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinNormal>? sse_decode_opt_list_element_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinRustAsync>? sse_decode_opt_list_element_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinRustAsyncSse>?
      sse_decode_opt_list_element_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<ElementTwinSse>? sse_decode_opt_list_element_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinSync>? sse_decode_opt_list_element_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinSyncSse>? sse_decode_opt_list_element_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinNormal?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsync?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsyncSse?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinSse?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_sse(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinSync?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinSyncSse?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  Float32List? sse_decode_opt_list_prim_f_32_strict(
      SseDeserializer deserializer);

  @protected
  Float64List? sse_decode_opt_list_prim_f_64_strict(
      SseDeserializer deserializer);

  @protected
  Int32List? sse_decode_opt_list_prim_i_32_strict(SseDeserializer deserializer);

  @protected
  Int8List? sse_decode_opt_list_prim_i_8_strict(SseDeserializer deserializer);

  @protected
  Uint8List? sse_decode_opt_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  OptVecsTwinNormal sse_decode_opt_vecs_twin_normal(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinRustAsync sse_decode_opt_vecs_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinRustAsyncSse sse_decode_opt_vecs_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinSse sse_decode_opt_vecs_twin_sse(SseDeserializer deserializer);

  @protected
  OptVecsTwinSync sse_decode_opt_vecs_twin_sync(SseDeserializer deserializer);

  @protected
  OptVecsTwinSyncSse sse_decode_opt_vecs_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  PointTwinNormal sse_decode_point_twin_normal(SseDeserializer deserializer);

  @protected
  PointTwinNormalArray2 sse_decode_point_twin_normal_array_2(
      SseDeserializer deserializer);

  @protected
  PointTwinRustAsync sse_decode_point_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  PointTwinRustAsyncArray2 sse_decode_point_twin_rust_async_array_2(
      SseDeserializer deserializer);

  @protected
  PointTwinRustAsyncSse sse_decode_point_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  PointTwinRustAsyncSseArray2 sse_decode_point_twin_rust_async_sse_array_2(
      SseDeserializer deserializer);

  @protected
  PointTwinSse sse_decode_point_twin_sse(SseDeserializer deserializer);

  @protected
  PointTwinSseArray2 sse_decode_point_twin_sse_array_2(
      SseDeserializer deserializer);

  @protected
  PointTwinSync sse_decode_point_twin_sync(SseDeserializer deserializer);

  @protected
  PointTwinSyncArray2 sse_decode_point_twin_sync_array_2(
      SseDeserializer deserializer);

  @protected
  PointTwinSyncSse sse_decode_point_twin_sync_sse(SseDeserializer deserializer);

  @protected
  PointTwinSyncSseArray2 sse_decode_point_twin_sync_sse_array_2(
      SseDeserializer deserializer);

  @protected
  RawStringEnumMirrored sse_decode_raw_string_enum_mirrored(
      SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinNormal sse_decode_raw_string_item_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinRustAsync
      sse_decode_raw_string_item_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinRustAsyncSse
      sse_decode_raw_string_item_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinSse sse_decode_raw_string_item_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinSync sse_decode_raw_string_item_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinSyncSse
      sse_decode_raw_string_item_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  RawStringMirrored sse_decode_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  (ApplicationSettings, RawStringEnumMirrored)
      sse_decode_record_application_settings_raw_string_enum_mirrored(
          SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinMoi,
    OpaqueTwoTwinMoi
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_moi(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinNormal,
    OpaqueTwoTwinNormal
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_normal_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_normal(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinRustAsync,
    OpaqueTwoTwinRustAsync
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinRustAsyncMoi,
    OpaqueTwoTwinRustAsyncMoi
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_moi(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinRustAsyncSse,
    OpaqueTwoTwinRustAsyncSse
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinRustAsyncSseMoi,
    OpaqueTwoTwinRustAsyncSseMoi
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_sse_moi(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinSse,
    OpaqueTwoTwinSse
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sse(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinSseMoi,
    OpaqueTwoTwinSseMoi
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sse_moi(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinSync,
    OpaqueTwoTwinSync
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinSyncMoi,
    OpaqueTwoTwinSyncMoi
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_moi(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinSyncSse,
    OpaqueTwoTwinSyncSse
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  (
    OpaqueOneTwinSyncSseMoi,
    OpaqueTwoTwinSyncSseMoi
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_sse_moi(
      SseDeserializer deserializer);

  @protected
  (int, BasicGeneralEnumTwinNormal)
      sse_decode_record_i_32_basic_general_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  (int, BasicGeneralEnumTwinRustAsync)
      sse_decode_record_i_32_basic_general_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  (int, BasicGeneralEnumTwinRustAsyncSse)
      sse_decode_record_i_32_basic_general_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  (int, BasicGeneralEnumTwinSse)
      sse_decode_record_i_32_basic_general_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  (int, BasicGeneralEnumTwinSync)
      sse_decode_record_i_32_basic_general_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  (int, BasicGeneralEnumTwinSyncSse)
      sse_decode_record_i_32_basic_general_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  (int, BasicPrimitiveEnumTwinNormal)
      sse_decode_record_i_32_basic_primitive_enum_twin_normal(
          SseDeserializer deserializer);

  @protected
  (int, BasicPrimitiveEnumTwinRustAsync)
      sse_decode_record_i_32_basic_primitive_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  (int, BasicPrimitiveEnumTwinRustAsyncSse)
      sse_decode_record_i_32_basic_primitive_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  (int, BasicPrimitiveEnumTwinSse)
      sse_decode_record_i_32_basic_primitive_enum_twin_sse(
          SseDeserializer deserializer);

  @protected
  (int, BasicPrimitiveEnumTwinSync)
      sse_decode_record_i_32_basic_primitive_enum_twin_sync(
          SseDeserializer deserializer);

  @protected
  (int, BasicPrimitiveEnumTwinSyncSse)
      sse_decode_record_i_32_basic_primitive_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  (int, BasicStructTwinNormal) sse_decode_record_i_32_basic_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  (int, BasicStructTwinRustAsync)
      sse_decode_record_i_32_basic_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  (int, BasicStructTwinRustAsyncSse)
      sse_decode_record_i_32_basic_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  (int, BasicStructTwinSse) sse_decode_record_i_32_basic_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  (int, BasicStructTwinSync) sse_decode_record_i_32_basic_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  (int, BasicStructTwinSyncSse)
      sse_decode_record_i_32_basic_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  (int, bool) sse_decode_record_i_32_bool(SseDeserializer deserializer);

  @protected
  (int, double) sse_decode_record_i_32_f_32(SseDeserializer deserializer);

  @protected
  (int, double) sse_decode_record_i_32_f_64(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_i_16(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_i_32(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_i_64(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_i_8(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_isize(SseDeserializer deserializer);

  @protected
  (int, Uint8List) sse_decode_record_i_32_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  (int, String) sse_decode_record_i_32_string(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_u_16(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_u_32(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_u_64(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_u_8(SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_usize(SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinNormal)
      sse_decode_record_string_enum_simple_twin_normal(
          SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinRustAsync)
      sse_decode_record_string_enum_simple_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinRustAsyncSse)
      sse_decode_record_string_enum_simple_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinSse) sse_decode_record_string_enum_simple_twin_sse(
      SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinSync) sse_decode_record_string_enum_simple_twin_sync(
      SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinSyncSse)
      sse_decode_record_string_enum_simple_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  (String, HashMapValue) sse_decode_record_string_hash_map_value(
      SseDeserializer deserializer);

  @protected
  (String, int) sse_decode_record_string_i_32(SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinNormal)
      sse_decode_record_string_kitchen_sink_twin_normal(
          SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinRustAsync)
      sse_decode_record_string_kitchen_sink_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinRustAsyncSse)
      sse_decode_record_string_kitchen_sink_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinSse) sse_decode_record_string_kitchen_sink_twin_sse(
      SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinSync) sse_decode_record_string_kitchen_sink_twin_sync(
      SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinSyncSse)
      sse_decode_record_string_kitchen_sink_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  (String, Uint8List) sse_decode_record_string_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  (String, MySize) sse_decode_record_string_my_size(
      SseDeserializer deserializer);

  @protected
  (String, String) sse_decode_record_string_string(
      SseDeserializer deserializer);

  @protected
  (int, ApplicationMode) sse_decode_record_u_8_application_mode(
      SseDeserializer deserializer);

  @protected
  Sequences sse_decode_sequences(SseDeserializer deserializer);

  @protected
  SimpleStructTwinNormal sse_decode_simple_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinRustAsync sse_decode_simple_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinRustAsyncSse sse_decode_simple_struct_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinSse sse_decode_simple_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinSync sse_decode_simple_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  SimpleStructTwinSyncSse sse_decode_simple_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinNormal sse_decode_some_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinRustAsync sse_decode_some_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinRustAsyncSse sse_decode_some_struct_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinSse sse_decode_some_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinSync sse_decode_some_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinSyncSse sse_decode_some_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  SpeedTwinNormal sse_decode_speed_twin_normal(SseDeserializer deserializer);

  @protected
  SpeedTwinRustAsync sse_decode_speed_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SpeedTwinRustAsyncSse sse_decode_speed_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SpeedTwinSse sse_decode_speed_twin_sse(SseDeserializer deserializer);

  @protected
  SpeedTwinSync sse_decode_speed_twin_sync(SseDeserializer deserializer);

  @protected
  SpeedTwinSyncSse sse_decode_speed_twin_sync_sse(SseDeserializer deserializer);

  @protected
  StructInLowerLevel sse_decode_struct_in_lower_level(
      SseDeserializer deserializer);

  @protected
  StructInUpperLevel sse_decode_struct_in_upper_level(
      SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinNormal sse_decode_struct_with_comments_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinRustAsync
      sse_decode_struct_with_comments_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinRustAsyncSse
      sse_decode_struct_with_comments_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSse sse_decode_struct_with_comments_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSync sse_decode_struct_with_comments_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSyncSse sse_decode_struct_with_comments_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinNormal sse_decode_struct_with_enum_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinRustAsync sse_decode_struct_with_enum_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinRustAsyncSse
      sse_decode_struct_with_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSse sse_decode_struct_with_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSync sse_decode_struct_with_enum_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSyncSse sse_decode_struct_with_enum_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinMoi
      sse_decode_struct_with_explicit_auto_opaque_field_twin_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinNormal
      sse_decode_struct_with_explicit_auto_opaque_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsync
      sse_decode_struct_with_explicit_auto_opaque_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi
      sse_decode_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSse
      sse_decode_struct_with_explicit_auto_opaque_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinRustAsyncSseMoi
      sse_decode_struct_with_explicit_auto_opaque_field_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSse
      sse_decode_struct_with_explicit_auto_opaque_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSseMoi
      sse_decode_struct_with_explicit_auto_opaque_field_twin_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSync
      sse_decode_struct_with_explicit_auto_opaque_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncMoi
      sse_decode_struct_with_explicit_auto_opaque_field_twin_sync_moi(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSse
      sse_decode_struct_with_explicit_auto_opaque_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithExplicitAutoOpaqueFieldTwinSyncSseMoi
      sse_decode_struct_with_explicit_auto_opaque_field_twin_sync_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinMoi
      sse_decode_struct_with_good_and_opaque_field_twin_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      sse_decode_struct_with_good_and_opaque_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsync
      sse_decode_struct_with_good_and_opaque_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncMoi
      sse_decode_struct_with_good_and_opaque_field_twin_rust_async_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSse
      sse_decode_struct_with_good_and_opaque_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinRustAsyncSseMoi
      sse_decode_struct_with_good_and_opaque_field_twin_rust_async_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      sse_decode_struct_with_good_and_opaque_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSseMoi
      sse_decode_struct_with_good_and_opaque_field_twin_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      sse_decode_struct_with_good_and_opaque_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncMoi
      sse_decode_struct_with_good_and_opaque_field_twin_sync_moi(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      sse_decode_struct_with_good_and_opaque_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSseMoi
      sse_decode_struct_with_good_and_opaque_field_twin_sync_sse_moi(
          SseDeserializer deserializer);

  @protected
  StructWithHashMap sse_decode_struct_with_hash_map(
      SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinNormal sse_decode_struct_with_one_field_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinRustAsync
      sse_decode_struct_with_one_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinRustAsyncSse
      sse_decode_struct_with_one_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSse sse_decode_struct_with_one_field_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSync sse_decode_struct_with_one_field_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSyncSse sse_decode_struct_with_one_field_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinNormal sse_decode_struct_with_two_field_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinRustAsync
      sse_decode_struct_with_two_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinRustAsyncSse
      sse_decode_struct_with_two_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSse sse_decode_struct_with_two_field_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSync sse_decode_struct_with_two_field_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSyncSse sse_decode_struct_with_two_field_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinNormal sse_decode_struct_with_zero_field_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinRustAsync
      sse_decode_struct_with_zero_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinRustAsyncSse
      sse_decode_struct_with_zero_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSse sse_decode_struct_with_zero_field_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSync sse_decode_struct_with_zero_field_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSyncSse
      sse_decode_struct_with_zero_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  SumWithTwinNormal sse_decode_sum_with_twin_normal(
      SseDeserializer deserializer);

  @protected
  SumWithTwinNormalArray3 sse_decode_sum_with_twin_normal_array_3(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsync sse_decode_sum_with_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsyncArray3 sse_decode_sum_with_twin_rust_async_array_3(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsyncSse sse_decode_sum_with_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsyncSseArray3 sse_decode_sum_with_twin_rust_async_sse_array_3(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSse sse_decode_sum_with_twin_sse(SseDeserializer deserializer);

  @protected
  SumWithTwinSseArray3 sse_decode_sum_with_twin_sse_array_3(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSync sse_decode_sum_with_twin_sync(SseDeserializer deserializer);

  @protected
  SumWithTwinSyncArray3 sse_decode_sum_with_twin_sync_array_3(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSyncSse sse_decode_sum_with_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSyncSseArray3 sse_decode_sum_with_twin_sync_sse_array_3(
      SseDeserializer deserializer);

  @protected
  TestChronoTwinNormal sse_decode_test_chrono_twin_normal(
      SseDeserializer deserializer);

  @protected
  TestChronoTwinRustAsync sse_decode_test_chrono_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  TestChronoTwinRustAsyncSse sse_decode_test_chrono_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  TestChronoTwinSse sse_decode_test_chrono_twin_sse(
      SseDeserializer deserializer);

  @protected
  TestChronoTwinSync sse_decode_test_chrono_twin_sync(
      SseDeserializer deserializer);

  @protected
  TestChronoTwinSyncSse sse_decode_test_chrono_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinNormal sse_decode_test_id_twin_normal(SseDeserializer deserializer);

  @protected
  TestIdTwinNormalArray2 sse_decode_test_id_twin_normal_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinNormalArray4 sse_decode_test_id_twin_normal_array_4(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsync sse_decode_test_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncArray2 sse_decode_test_id_twin_rust_async_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncArray4 sse_decode_test_id_twin_rust_async_array_4(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncSse sse_decode_test_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncSseArray2 sse_decode_test_id_twin_rust_async_sse_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncSseArray4 sse_decode_test_id_twin_rust_async_sse_array_4(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSse sse_decode_test_id_twin_sse(SseDeserializer deserializer);

  @protected
  TestIdTwinSseArray2 sse_decode_test_id_twin_sse_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSseArray4 sse_decode_test_id_twin_sse_array_4(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSync sse_decode_test_id_twin_sync(SseDeserializer deserializer);

  @protected
  TestIdTwinSyncArray2 sse_decode_test_id_twin_sync_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSyncArray4 sse_decode_test_id_twin_sync_array_4(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSyncSse sse_decode_test_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSyncSseArray2 sse_decode_test_id_twin_sync_sse_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSyncSseArray4 sse_decode_test_id_twin_sync_sse_array_4(
      SseDeserializer deserializer);

  @protected
  TestModelTwinNormal sse_decode_test_model_twin_normal(
      SseDeserializer deserializer);

  @protected
  TestModelTwinRustAsync sse_decode_test_model_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  TestModelTwinRustAsyncSse sse_decode_test_model_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  TestModelTwinSse sse_decode_test_model_twin_sse(SseDeserializer deserializer);

  @protected
  TestModelTwinSync sse_decode_test_model_twin_sync(
      SseDeserializer deserializer);

  @protected
  TestModelTwinSyncSse sse_decode_test_model_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinNormal
      sse_decode_tuple_struct_with_one_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinRustAsync
      sse_decode_tuple_struct_with_one_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinRustAsyncSse
      sse_decode_tuple_struct_with_one_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSse
      sse_decode_tuple_struct_with_one_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSync
      sse_decode_tuple_struct_with_one_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSyncSse
      sse_decode_tuple_struct_with_one_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinNormal
      sse_decode_tuple_struct_with_two_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinRustAsync
      sse_decode_tuple_struct_with_two_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinRustAsyncSse
      sse_decode_tuple_struct_with_two_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSse
      sse_decode_tuple_struct_with_two_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSync
      sse_decode_tuple_struct_with_two_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSyncSse
      sse_decode_tuple_struct_with_two_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  U8Array1600 sse_decode_u_8_array_1600(SseDeserializer deserializer);

  @protected
  U8Array2 sse_decode_u_8_array_2(SseDeserializer deserializer);

  @protected
  U8Array32 sse_decode_u_8_array_32(SseDeserializer deserializer);

  @protected
  U8Array5 sse_decode_u_8_array_5(SseDeserializer deserializer);

  @protected
  U8Array8 sse_decode_u_8_array_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  UserIdTwinNormal sse_decode_user_id_twin_normal(SseDeserializer deserializer);

  @protected
  UserIdTwinRustAsync sse_decode_user_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  UserIdTwinRustAsyncSse sse_decode_user_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  UserIdTwinSse sse_decode_user_id_twin_sse(SseDeserializer deserializer);

  @protected
  UserIdTwinSync sse_decode_user_id_twin_sync(SseDeserializer deserializer);

  @protected
  UserIdTwinSyncSse sse_decode_user_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  int sse_decode_usize(SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinNormal sse_decode_vec_of_primitive_pack_twin_normal(
      SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinRustAsync
      sse_decode_vec_of_primitive_pack_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinRustAsyncSse
      sse_decode_vec_of_primitive_pack_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinSse sse_decode_vec_of_primitive_pack_twin_sse(
      SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinSync sse_decode_vec_of_primitive_pack_twin_sync(
      SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinSyncSse sse_decode_vec_of_primitive_pack_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinNormal sse_decode_weekdays_twin_normal(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsync sse_decode_weekdays_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsyncSse sse_decode_weekdays_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSse sse_decode_weekdays_twin_sse(SseDeserializer deserializer);

  @protected
  WeekdaysTwinSync sse_decode_weekdays_twin_sync(SseDeserializer deserializer);

  @protected
  WeekdaysTwinSyncSse sse_decode_weekdays_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_AnyhowException(
      AnyhowException raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_Backtrace(String raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  int cst_encode_Chrono_Duration(Duration raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_64(raw.inMicroseconds);
  }

  @protected
  int cst_encode_Chrono_Local(DateTime raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_64(raw.microsecondsSinceEpoch);
  }

  @protected
  int cst_encode_Chrono_Naive(DateTime raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_64(raw.microsecondsSinceEpoch);
  }

  @protected
  int cst_encode_Chrono_Utc(DateTime raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_64(raw.microsecondsSinceEpoch);
  }

  @protected
  ffi.Pointer<wire_cst_list_DartOpaque> cst_encode_DartOpaque_array_1(
      ObjectArray1 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_DartOpaque(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_string> cst_encode_Map_String_String(
      Map<String, String> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_string(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_normal>
      cst_encode_Map_String_enum_simple_twin_normal(
          Map<String, EnumSimpleTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_enum_simple_twin_normal(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_rust_async>
      cst_encode_Map_String_enum_simple_twin_rust_async(
          Map<String, EnumSimpleTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_enum_simple_twin_rust_async(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync>
      cst_encode_Map_String_enum_simple_twin_sync(
          Map<String, EnumSimpleTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_enum_simple_twin_sync(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_hash_map_value>
      cst_encode_Map_String_hash_map_value(Map<String, HashMapValue> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_hash_map_value(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_normal>
      cst_encode_Map_String_kitchen_sink_twin_normal(
          Map<String, KitchenSinkTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_kitchen_sink_twin_normal(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_rust_async>
      cst_encode_Map_String_kitchen_sink_twin_rust_async(
          Map<String, KitchenSinkTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_kitchen_sink_twin_rust_async(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync>
      cst_encode_Map_String_kitchen_sink_twin_sync(
          Map<String, KitchenSinkTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_kitchen_sink_twin_sync(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_list_prim_u_8_strict>
      cst_encode_Map_String_list_prim_u_8_strict(Map<String, Uint8List> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_list_prim_u_8_strict(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_my_size>
      cst_encode_Map_String_my_size(Map<String, MySize> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_string_my_size(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_string> cst_encode_Map_i_32_String(
      Map<int, String> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_string(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_general_enum_twin_normal>
      cst_encode_Map_i_32_basic_general_enum_twin_normal(
          Map<int, BasicGeneralEnumTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_general_enum_twin_normal(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_general_enum_twin_rust_async>
      cst_encode_Map_i_32_basic_general_enum_twin_rust_async(
          Map<int, BasicGeneralEnumTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_general_enum_twin_rust_async(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_general_enum_twin_sync>
      cst_encode_Map_i_32_basic_general_enum_twin_sync(
          Map<int, BasicGeneralEnumTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_general_enum_twin_sync(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_primitive_enum_twin_normal>
      cst_encode_Map_i_32_basic_primitive_enum_twin_normal(
          Map<int, BasicPrimitiveEnumTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_primitive_enum_twin_normal(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_primitive_enum_twin_rust_async>
      cst_encode_Map_i_32_basic_primitive_enum_twin_rust_async(
          Map<int, BasicPrimitiveEnumTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_primitive_enum_twin_rust_async(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_primitive_enum_twin_sync>
      cst_encode_Map_i_32_basic_primitive_enum_twin_sync(
          Map<int, BasicPrimitiveEnumTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_primitive_enum_twin_sync(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_normal>
      cst_encode_Map_i_32_basic_struct_twin_normal(
          Map<int, BasicStructTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_struct_twin_normal(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_rust_async>
      cst_encode_Map_i_32_basic_struct_twin_rust_async(
          Map<int, BasicStructTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_struct_twin_rust_async(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_sync>
      cst_encode_Map_i_32_basic_struct_twin_sync(
          Map<int, BasicStructTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_basic_struct_twin_sync(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_bool> cst_encode_Map_i_32_bool(
      Map<int, bool> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_bool(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_f_32> cst_encode_Map_i_32_f_32(
      Map<int, double> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_f_32(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_f_64> cst_encode_Map_i_32_f_64(
      Map<int, double> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_f_64(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_i_16> cst_encode_Map_i_32_i_16(
      Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_i_16(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_i_32> cst_encode_Map_i_32_i_32(
      Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_i_32(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_i_64> cst_encode_Map_i_32_i_64(
      Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_i_64(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_i_8> cst_encode_Map_i_32_i_8(
      Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_i_8(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_isize> cst_encode_Map_i_32_isize(
      Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_isize(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_list_prim_u_8_strict>
      cst_encode_Map_i_32_list_prim_u_8_strict(Map<int, Uint8List> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_list_prim_u_8_strict(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_u_16> cst_encode_Map_i_32_u_16(
      Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_u_16(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_u_32> cst_encode_Map_i_32_u_32(
      Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_u_32(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_u_64> cst_encode_Map_i_32_u_64(
      Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_u_64(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_u_8> cst_encode_Map_i_32_u_8(
      Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_u_8(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_usize> cst_encode_Map_i_32_usize(
      Map<int, int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_i_32_usize(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_u_8_application_mode>
      cst_encode_Map_u_8_application_mode(Map<int, ApplicationMode> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_u_8_application_mode(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinMoi>
      cst_encode_RustOpaque_HideDataTwinMoi_array_2(HideDataTwinMoiArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_RustOpaque_HideDataTwinMoi(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinNormal>
      cst_encode_RustOpaque_HideDataTwinNormal_array_2(
          HideDataTwinNormalArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_RustOpaque_HideDataTwinNormal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsyncMoi>
      cst_encode_RustOpaque_HideDataTwinRustAsyncMoi_array_2(
          HideDataTwinRustAsyncMoiArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_RustOpaque_HideDataTwinRustAsyncMoi(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsync>
      cst_encode_RustOpaque_HideDataTwinRustAsync_array_2(
          HideDataTwinRustAsyncArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_RustOpaque_HideDataTwinRustAsync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSyncMoi>
      cst_encode_RustOpaque_HideDataTwinSyncMoi_array_2(
          HideDataTwinSyncMoiArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_RustOpaque_HideDataTwinSyncMoi(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSync>
      cst_encode_RustOpaque_HideDataTwinSync_array_2(
          HideDataTwinSyncArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_RustOpaque_HideDataTwinSync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_String> cst_encode_Set_String(Set<String> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_String(raw.toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_application_mode> cst_encode_Set_application_mode(
      Set<ApplicationMode> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_application_mode(raw.toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_32_strict> cst_encode_Set_i_32(
      Set<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_prim_i_32_strict(Int32List.fromList(raw.toList()));
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_String(String raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_prim_u_8_strict(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_Uuid(UuidValue raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_prim_u_8_strict(raw.toBytes());
  }

  @protected
  ffi.Pointer<wire_cst_list_application_mode>
      cst_encode_application_mode_array_2(ApplicationModeArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_application_mode(raw);
  }

  @protected
  ffi.Pointer<wire_cst_application_env> cst_encode_box_application_env(
      ApplicationEnv raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_application_env();
    cst_api_fill_to_wire_application_env(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire
        .cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
            cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
                raw));
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire
        .cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
            cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
                raw));
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire
        .cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
            cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
                raw));
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire
        .cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
            cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
                raw));
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire
        .cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
            cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
                raw));
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire
        .cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
            cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
                raw));
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_box_autoadd_Chrono_Duration(Duration raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire
        .cst_new_box_autoadd_Chrono_Duration(cst_encode_Chrono_Duration(raw));
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_box_autoadd_Chrono_Naive(DateTime raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_Chrono_Naive(cst_encode_Chrono_Naive(raw));
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_box_autoadd_Chrono_Utc(DateTime raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_Chrono_Utc(cst_encode_Chrono_Utc(raw));
  }

  @protected
  ffi.Pointer<PlatformPointer> cst_encode_box_autoadd_DartOpaque(Object raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_DartOpaque(cst_encode_DartOpaque(raw));
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(
          HideDataAnotherTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(
        cst_encode_RustOpaque_HideDataAnotherTwinMoi(raw));
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
          HideDataAnotherTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
        cst_encode_RustOpaque_HideDataAnotherTwinNormal(raw));
  }

  @protected
  ffi.Pointer<ffi.UintPtr> cst_encode_box_autoadd_RustOpaque_HideDataTwinMoi(
      HideDataTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_RustOpaque_HideDataTwinMoi(
        cst_encode_RustOpaque_HideDataTwinMoi(raw));
  }

  @protected
  ffi.Pointer<ffi.UintPtr> cst_encode_box_autoadd_RustOpaque_HideDataTwinNormal(
      HideDataTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_RustOpaque_HideDataTwinNormal(
        cst_encode_RustOpaque_HideDataTwinNormal(raw));
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_box_autoadd_RustOpaque_HideDataTwinRustAsync(
          HideDataTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_RustOpaque_HideDataTwinRustAsync(
        cst_encode_RustOpaque_HideDataTwinRustAsync(raw));
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
          HideDataTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
        cst_encode_RustOpaque_HideDataTwinRustAsyncMoi(raw));
  }

  @protected
  ffi.Pointer<ffi.UintPtr> cst_encode_box_autoadd_RustOpaque_HideDataTwinSync(
      HideDataTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_RustOpaque_HideDataTwinSync(
        cst_encode_RustOpaque_HideDataTwinSync(raw));
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
          HideDataTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
        cst_encode_RustOpaque_HideDataTwinSyncMoi(raw));
  }

  @protected
  ffi.Pointer<wire_cst_a_twin_normal> cst_encode_box_autoadd_a_twin_normal(
      ATwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_a_twin_normal();
    cst_api_fill_to_wire_a_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_a_twin_rust_async>
      cst_encode_box_autoadd_a_twin_rust_async(ATwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_a_twin_rust_async();
    cst_api_fill_to_wire_a_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_a_twin_sync> cst_encode_box_autoadd_a_twin_sync(
      ATwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_a_twin_sync();
    cst_api_fill_to_wire_a_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_abc_twin_normal> cst_encode_box_autoadd_abc_twin_normal(
      AbcTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_abc_twin_normal();
    cst_api_fill_to_wire_abc_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_abc_twin_rust_async>
      cst_encode_box_autoadd_abc_twin_rust_async(AbcTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_abc_twin_rust_async();
    cst_api_fill_to_wire_abc_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_abc_twin_sync> cst_encode_box_autoadd_abc_twin_sync(
      AbcTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_abc_twin_sync();
    cst_api_fill_to_wire_abc_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_application_env> cst_encode_box_autoadd_application_env(
      ApplicationEnv raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_application_env();
    cst_api_fill_to_wire_application_env(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_application_mode(
      ApplicationMode raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire
        .cst_new_box_autoadd_application_mode(cst_encode_application_mode(raw));
  }

  @protected
  ffi.Pointer<wire_cst_application_settings>
      cst_encode_box_autoadd_application_settings(ApplicationSettings raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_application_settings();
    cst_api_fill_to_wire_application_settings(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_normal>
      cst_encode_box_autoadd_attribute_twin_normal(AttributeTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_attribute_twin_normal();
    cst_api_fill_to_wire_attribute_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_rust_async>
      cst_encode_box_autoadd_attribute_twin_rust_async(
          AttributeTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_attribute_twin_rust_async();
    cst_api_fill_to_wire_attribute_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_sync>
      cst_encode_box_autoadd_attribute_twin_sync(AttributeTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_attribute_twin_sync();
    cst_api_fill_to_wire_attribute_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_b_twin_normal> cst_encode_box_autoadd_b_twin_normal(
      BTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_b_twin_normal();
    cst_api_fill_to_wire_b_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_b_twin_rust_async>
      cst_encode_box_autoadd_b_twin_rust_async(BTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_b_twin_rust_async();
    cst_api_fill_to_wire_b_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_b_twin_sync> cst_encode_box_autoadd_b_twin_sync(
      BTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_b_twin_sync();
    cst_api_fill_to_wire_b_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_basic_general_enum_twin_normal>
      cst_encode_box_autoadd_basic_general_enum_twin_normal(
          BasicGeneralEnumTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_basic_general_enum_twin_normal();
    cst_api_fill_to_wire_basic_general_enum_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_basic_general_enum_twin_rust_async>
      cst_encode_box_autoadd_basic_general_enum_twin_rust_async(
          BasicGeneralEnumTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_basic_general_enum_twin_rust_async();
    cst_api_fill_to_wire_basic_general_enum_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_basic_general_enum_twin_sync>
      cst_encode_box_autoadd_basic_general_enum_twin_sync(
          BasicGeneralEnumTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_basic_general_enum_twin_sync();
    cst_api_fill_to_wire_basic_general_enum_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Int32>
      cst_encode_box_autoadd_basic_primitive_enum_twin_normal(
          BasicPrimitiveEnumTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_basic_primitive_enum_twin_normal(
        cst_encode_basic_primitive_enum_twin_normal(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32>
      cst_encode_box_autoadd_basic_primitive_enum_twin_rust_async(
          BasicPrimitiveEnumTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_basic_primitive_enum_twin_rust_async(
        cst_encode_basic_primitive_enum_twin_rust_async(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_basic_primitive_enum_twin_sync(
      BasicPrimitiveEnumTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_basic_primitive_enum_twin_sync(
        cst_encode_basic_primitive_enum_twin_sync(raw));
  }

  @protected
  ffi.Pointer<wire_cst_basic_struct_twin_normal>
      cst_encode_box_autoadd_basic_struct_twin_normal(
          BasicStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_basic_struct_twin_normal();
    cst_api_fill_to_wire_basic_struct_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_basic_struct_twin_rust_async>
      cst_encode_box_autoadd_basic_struct_twin_rust_async(
          BasicStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_basic_struct_twin_rust_async();
    cst_api_fill_to_wire_basic_struct_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_basic_struct_twin_sync>
      cst_encode_box_autoadd_basic_struct_twin_sync(BasicStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_basic_struct_twin_sync();
    cst_api_fill_to_wire_basic_struct_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>
      cst_encode_box_autoadd_benchmark_binary_tree_twin_normal(
          BenchmarkBinaryTreeTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_benchmark_binary_tree_twin_normal();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
      cst_encode_box_autoadd_benchmark_binary_tree_twin_rust_async(
          BenchmarkBinaryTreeTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>
      cst_encode_box_autoadd_benchmark_binary_tree_twin_sync(
          BenchmarkBinaryTreeTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_benchmark_binary_tree_twin_sync();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_blob_twin_normal>
      cst_encode_box_autoadd_benchmark_blob_twin_normal(
          BenchmarkBlobTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_benchmark_blob_twin_normal();
    cst_api_fill_to_wire_benchmark_blob_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async>
      cst_encode_box_autoadd_benchmark_blob_twin_rust_async(
          BenchmarkBlobTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_benchmark_blob_twin_rust_async();
    cst_api_fill_to_wire_benchmark_blob_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_blob_twin_sync>
      cst_encode_box_autoadd_benchmark_blob_twin_sync(
          BenchmarkBlobTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_benchmark_blob_twin_sync();
    cst_api_fill_to_wire_benchmark_blob_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Bool> cst_encode_box_autoadd_bool(bool raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_bool(cst_encode_bool(raw));
  }

  @protected
  ffi.Pointer<wire_cst_c_twin_normal> cst_encode_box_autoadd_c_twin_normal(
      CTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_c_twin_normal();
    cst_api_fill_to_wire_c_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_c_twin_rust_async>
      cst_encode_box_autoadd_c_twin_rust_async(CTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_c_twin_rust_async();
    cst_api_fill_to_wire_c_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_c_twin_sync> cst_encode_box_autoadd_c_twin_sync(
      CTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_c_twin_sync();
    cst_api_fill_to_wire_c_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_concatenate_with_twin_normal>
      cst_encode_box_autoadd_concatenate_with_twin_normal(
          ConcatenateWithTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_concatenate_with_twin_normal();
    cst_api_fill_to_wire_concatenate_with_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>
      cst_encode_box_autoadd_concatenate_with_twin_rust_async(
          ConcatenateWithTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_concatenate_with_twin_rust_async();
    cst_api_fill_to_wire_concatenate_with_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_concatenate_with_twin_sync>
      cst_encode_box_autoadd_concatenate_with_twin_sync(
          ConcatenateWithTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_concatenate_with_twin_sync();
    cst_api_fill_to_wire_concatenate_with_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_2_twin_normal>
      cst_encode_box_autoadd_custom_nested_error_2_twin_normal(
          CustomNestedError2TwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_custom_nested_error_2_twin_normal();
    cst_api_fill_to_wire_custom_nested_error_2_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async>
      cst_encode_box_autoadd_custom_nested_error_2_twin_rust_async(
          CustomNestedError2TwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_custom_nested_error_2_twin_rust_async();
    cst_api_fill_to_wire_custom_nested_error_2_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync>
      cst_encode_box_autoadd_custom_nested_error_2_twin_sync(
          CustomNestedError2TwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_custom_nested_error_2_twin_sync();
    cst_api_fill_to_wire_custom_nested_error_2_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_normal>
      cst_encode_box_autoadd_custom_nested_error_inner_twin_normal(
          CustomNestedErrorInnerTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_custom_nested_error_inner_twin_normal();
    cst_api_fill_to_wire_custom_nested_error_inner_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_rust_async>
      cst_encode_box_autoadd_custom_nested_error_inner_twin_rust_async(
          CustomNestedErrorInnerTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async();
    cst_api_fill_to_wire_custom_nested_error_inner_twin_rust_async(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync>
      cst_encode_box_autoadd_custom_nested_error_inner_twin_sync(
          CustomNestedErrorInnerTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_custom_nested_error_inner_twin_sync();
    cst_api_fill_to_wire_custom_nested_error_inner_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_normal>
      cst_encode_box_autoadd_custom_nested_error_outer_twin_normal(
          CustomNestedErrorOuterTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_custom_nested_error_outer_twin_normal();
    cst_api_fill_to_wire_custom_nested_error_outer_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_rust_async>
      cst_encode_box_autoadd_custom_nested_error_outer_twin_rust_async(
          CustomNestedErrorOuterTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async();
    cst_api_fill_to_wire_custom_nested_error_outer_twin_rust_async(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync>
      cst_encode_box_autoadd_custom_nested_error_outer_twin_sync(
          CustomNestedErrorOuterTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_custom_nested_error_outer_twin_sync();
    cst_api_fill_to_wire_custom_nested_error_outer_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_error_twin_normal>
      cst_encode_box_autoadd_custom_struct_error_twin_normal(
          CustomStructErrorTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_custom_struct_error_twin_normal();
    cst_api_fill_to_wire_custom_struct_error_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async>
      cst_encode_box_autoadd_custom_struct_error_twin_rust_async(
          CustomStructErrorTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_custom_struct_error_twin_rust_async();
    cst_api_fill_to_wire_custom_struct_error_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_error_twin_sync>
      cst_encode_box_autoadd_custom_struct_error_twin_sync(
          CustomStructErrorTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_custom_struct_error_twin_sync();
    cst_api_fill_to_wire_custom_struct_error_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_twin_normal>
      cst_encode_box_autoadd_custom_struct_twin_normal(
          CustomStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_custom_struct_twin_normal();
    cst_api_fill_to_wire_custom_struct_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_twin_rust_async>
      cst_encode_box_autoadd_custom_struct_twin_rust_async(
          CustomStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_custom_struct_twin_rust_async();
    cst_api_fill_to_wire_custom_struct_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_twin_sync>
      cst_encode_box_autoadd_custom_struct_twin_sync(CustomStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_custom_struct_twin_sync();
    cst_api_fill_to_wire_custom_struct_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_customized_twin_normal>
      cst_encode_box_autoadd_customized_twin_normal(CustomizedTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_customized_twin_normal();
    cst_api_fill_to_wire_customized_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_customized_twin_rust_async>
      cst_encode_box_autoadd_customized_twin_rust_async(
          CustomizedTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_customized_twin_rust_async();
    cst_api_fill_to_wire_customized_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_customized_twin_sync>
      cst_encode_box_autoadd_customized_twin_sync(CustomizedTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_customized_twin_sync();
    cst_api_fill_to_wire_customized_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal>
      cst_encode_box_autoadd_dart_opaque_nested_twin_normal(
          DartOpaqueNestedTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_dart_opaque_nested_twin_normal();
    cst_api_fill_to_wire_dart_opaque_nested_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async>
      cst_encode_box_autoadd_dart_opaque_nested_twin_rust_async(
          DartOpaqueNestedTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_dart_opaque_nested_twin_rust_async();
    cst_api_fill_to_wire_dart_opaque_nested_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync>
      cst_encode_box_autoadd_dart_opaque_nested_twin_sync(
          DartOpaqueNestedTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_dart_opaque_nested_twin_sync();
    cst_api_fill_to_wire_dart_opaque_nested_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_normal>
      cst_encode_box_autoadd_element_twin_normal(ElementTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_element_twin_normal();
    cst_api_fill_to_wire_element_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_rust_async>
      cst_encode_box_autoadd_element_twin_rust_async(ElementTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_element_twin_rust_async();
    cst_api_fill_to_wire_element_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_sync>
      cst_encode_box_autoadd_element_twin_sync(ElementTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_element_twin_sync();
    cst_api_fill_to_wire_element_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_empty_twin_normal>
      cst_encode_box_autoadd_empty_twin_normal(EmptyTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_empty_twin_normal();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_empty_twin_rust_async>
      cst_encode_box_autoadd_empty_twin_rust_async(EmptyTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_empty_twin_rust_async();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_empty_twin_sync> cst_encode_box_autoadd_empty_twin_sync(
      EmptyTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_empty_twin_sync();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal>
      cst_encode_box_autoadd_enum_dart_opaque_twin_normal(
          EnumDartOpaqueTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_dart_opaque_twin_normal();
    cst_api_fill_to_wire_enum_dart_opaque_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async>
      cst_encode_box_autoadd_enum_dart_opaque_twin_rust_async(
          EnumDartOpaqueTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_dart_opaque_twin_rust_async();
    cst_api_fill_to_wire_enum_dart_opaque_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync>
      cst_encode_box_autoadd_enum_dart_opaque_twin_sync(
          EnumDartOpaqueTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_dart_opaque_twin_sync();
    cst_api_fill_to_wire_enum_dart_opaque_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_opaque_twin_moi>
      cst_encode_box_autoadd_enum_opaque_twin_moi(EnumOpaqueTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_opaque_twin_moi();
    cst_api_fill_to_wire_enum_opaque_twin_moi(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_opaque_twin_normal>
      cst_encode_box_autoadd_enum_opaque_twin_normal(EnumOpaqueTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_opaque_twin_normal();
    cst_api_fill_to_wire_enum_opaque_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_opaque_twin_rust_async>
      cst_encode_box_autoadd_enum_opaque_twin_rust_async(
          EnumOpaqueTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_opaque_twin_rust_async();
    cst_api_fill_to_wire_enum_opaque_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_opaque_twin_rust_async_moi>
      cst_encode_box_autoadd_enum_opaque_twin_rust_async_moi(
          EnumOpaqueTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_opaque_twin_rust_async_moi();
    cst_api_fill_to_wire_enum_opaque_twin_rust_async_moi(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_opaque_twin_sync>
      cst_encode_box_autoadd_enum_opaque_twin_sync(EnumOpaqueTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_opaque_twin_sync();
    cst_api_fill_to_wire_enum_opaque_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_opaque_twin_sync_moi>
      cst_encode_box_autoadd_enum_opaque_twin_sync_moi(
          EnumOpaqueTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_opaque_twin_sync_moi();
    cst_api_fill_to_wire_enum_opaque_twin_sync_moi(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_moi>
      cst_encode_box_autoadd_enum_with_good_and_opaque_twin_moi(
          EnumWithGoodAndOpaqueTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_with_good_and_opaque_twin_moi();
    cst_api_fill_to_wire_enum_with_good_and_opaque_twin_moi(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_normal>
      cst_encode_box_autoadd_enum_with_good_and_opaque_twin_normal(
          EnumWithGoodAndOpaqueTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_enum_with_good_and_opaque_twin_normal();
    cst_api_fill_to_wire_enum_with_good_and_opaque_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_rust_async>
      cst_encode_box_autoadd_enum_with_good_and_opaque_twin_rust_async(
          EnumWithGoodAndOpaqueTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_enum_with_good_and_opaque_twin_rust_async();
    cst_api_fill_to_wire_enum_with_good_and_opaque_twin_rust_async(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_rust_async_moi>
      cst_encode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moi(
          EnumWithGoodAndOpaqueTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire
        .cst_new_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moi();
    cst_api_fill_to_wire_enum_with_good_and_opaque_twin_rust_async_moi(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_sync>
      cst_encode_box_autoadd_enum_with_good_and_opaque_twin_sync(
          EnumWithGoodAndOpaqueTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_with_good_and_opaque_twin_sync();
    cst_api_fill_to_wire_enum_with_good_and_opaque_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_sync_moi>
      cst_encode_box_autoadd_enum_with_good_and_opaque_twin_sync_moi(
          EnumWithGoodAndOpaqueTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_enum_with_good_and_opaque_twin_sync_moi();
    cst_api_fill_to_wire_enum_with_good_and_opaque_twin_sync_moi(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal>
      cst_encode_box_autoadd_enum_with_item_mixed_twin_normal(
          EnumWithItemMixedTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_with_item_mixed_twin_normal();
    cst_api_fill_to_wire_enum_with_item_mixed_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async>
      cst_encode_box_autoadd_enum_with_item_mixed_twin_rust_async(
          EnumWithItemMixedTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async();
    cst_api_fill_to_wire_enum_with_item_mixed_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync>
      cst_encode_box_autoadd_enum_with_item_mixed_twin_sync(
          EnumWithItemMixedTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_with_item_mixed_twin_sync();
    cst_api_fill_to_wire_enum_with_item_mixed_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal>
      cst_encode_box_autoadd_enum_with_item_struct_twin_normal(
          EnumWithItemStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_with_item_struct_twin_normal();
    cst_api_fill_to_wire_enum_with_item_struct_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async>
      cst_encode_box_autoadd_enum_with_item_struct_twin_rust_async(
          EnumWithItemStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_enum_with_item_struct_twin_rust_async();
    cst_api_fill_to_wire_enum_with_item_struct_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync>
      cst_encode_box_autoadd_enum_with_item_struct_twin_sync(
          EnumWithItemStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_with_item_struct_twin_sync();
    cst_api_fill_to_wire_enum_with_item_struct_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal>
      cst_encode_box_autoadd_enum_with_item_tuple_twin_normal(
          EnumWithItemTupleTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_with_item_tuple_twin_normal();
    cst_api_fill_to_wire_enum_with_item_tuple_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async>
      cst_encode_box_autoadd_enum_with_item_tuple_twin_rust_async(
          EnumWithItemTupleTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async();
    cst_api_fill_to_wire_enum_with_item_tuple_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync>
      cst_encode_box_autoadd_enum_with_item_tuple_twin_sync(
          EnumWithItemTupleTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_enum_with_item_tuple_twin_sync();
    cst_api_fill_to_wire_enum_with_item_tuple_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_event_twin_normal>
      cst_encode_box_autoadd_event_twin_normal(EventTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_event_twin_normal();
    cst_api_fill_to_wire_event_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_event_twin_rust_async>
      cst_encode_box_autoadd_event_twin_rust_async(EventTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_event_twin_rust_async();
    cst_api_fill_to_wire_event_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>
      cst_encode_box_autoadd_exotic_optionals_twin_normal(
          ExoticOptionalsTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_exotic_optionals_twin_normal();
    cst_api_fill_to_wire_exotic_optionals_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
      cst_encode_box_autoadd_exotic_optionals_twin_rust_async(
          ExoticOptionalsTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_exotic_optionals_twin_rust_async();
    cst_api_fill_to_wire_exotic_optionals_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>
      cst_encode_box_autoadd_exotic_optionals_twin_sync(
          ExoticOptionalsTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_exotic_optionals_twin_sync();
    cst_api_fill_to_wire_exotic_optionals_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Float> cst_encode_box_autoadd_f_32(double raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_f_32(cst_encode_f_32(raw));
  }

  @protected
  ffi.Pointer<ffi.Double> cst_encode_box_autoadd_f_64(double raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_f_64(cst_encode_f_64(raw));
  }

  @protected
  ffi.Pointer<wire_cst_feature_chrono_twin_normal>
      cst_encode_box_autoadd_feature_chrono_twin_normal(
          FeatureChronoTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_feature_chrono_twin_normal();
    cst_api_fill_to_wire_feature_chrono_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feature_chrono_twin_rust_async>
      cst_encode_box_autoadd_feature_chrono_twin_rust_async(
          FeatureChronoTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_feature_chrono_twin_rust_async();
    cst_api_fill_to_wire_feature_chrono_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feature_chrono_twin_sync>
      cst_encode_box_autoadd_feature_chrono_twin_sync(
          FeatureChronoTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_feature_chrono_twin_sync();
    cst_api_fill_to_wire_feature_chrono_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feature_uuid_twin_normal>
      cst_encode_box_autoadd_feature_uuid_twin_normal(
          FeatureUuidTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_feature_uuid_twin_normal();
    cst_api_fill_to_wire_feature_uuid_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feature_uuid_twin_rust_async>
      cst_encode_box_autoadd_feature_uuid_twin_rust_async(
          FeatureUuidTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_feature_uuid_twin_rust_async();
    cst_api_fill_to_wire_feature_uuid_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feature_uuid_twin_sync>
      cst_encode_box_autoadd_feature_uuid_twin_sync(FeatureUuidTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_feature_uuid_twin_sync();
    cst_api_fill_to_wire_feature_uuid_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_normal>
      cst_encode_box_autoadd_feed_id_twin_normal(FeedIdTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_feed_id_twin_normal();
    cst_api_fill_to_wire_feed_id_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_rust_async>
      cst_encode_box_autoadd_feed_id_twin_rust_async(FeedIdTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_feed_id_twin_rust_async();
    cst_api_fill_to_wire_feed_id_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_sync>
      cst_encode_box_autoadd_feed_id_twin_sync(FeedIdTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_feed_id_twin_sync();
    cst_api_fill_to_wire_feed_id_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Int16> cst_encode_box_autoadd_i_16(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_i_16(cst_encode_i_16(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_i_32(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_i_32(cst_encode_i_32(raw));
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_box_autoadd_i_64(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_i_64(cst_encode_i_64(raw));
  }

  @protected
  ffi.Pointer<ffi.Int8> cst_encode_box_autoadd_i_8(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_i_8(cst_encode_i_8(raw));
  }

  @protected
  ffi.Pointer<ffi.IntPtr> cst_encode_box_autoadd_isize(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_isize(cst_encode_isize(raw));
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_normal>
      cst_encode_box_autoadd_kitchen_sink_twin_normal(
          KitchenSinkTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_kitchen_sink_twin_normal();
    cst_api_fill_to_wire_kitchen_sink_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async>
      cst_encode_box_autoadd_kitchen_sink_twin_rust_async(
          KitchenSinkTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_kitchen_sink_twin_rust_async();
    cst_api_fill_to_wire_kitchen_sink_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_sync>
      cst_encode_box_autoadd_kitchen_sink_twin_sync(KitchenSinkTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_kitchen_sink_twin_sync();
    cst_api_fill_to_wire_kitchen_sink_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_list_of_nested_raw_string_mirrored>
      cst_encode_box_autoadd_list_of_nested_raw_string_mirrored(
          ListOfNestedRawStringMirrored raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_list_of_nested_raw_string_mirrored();
    cst_api_fill_to_wire_list_of_nested_raw_string_mirrored(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_macro_struct> cst_encode_box_autoadd_macro_struct(
      MacroStruct raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_macro_struct();
    cst_api_fill_to_wire_macro_struct(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_normal>
      cst_encode_box_autoadd_measure_twin_normal(MeasureTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_measure_twin_normal();
    cst_api_fill_to_wire_measure_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_rust_async>
      cst_encode_box_autoadd_measure_twin_rust_async(MeasureTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_measure_twin_rust_async();
    cst_api_fill_to_wire_measure_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_sync>
      cst_encode_box_autoadd_measure_twin_sync(MeasureTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_measure_twin_sync();
    cst_api_fill_to_wire_measure_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_message_id_twin_normal>
      cst_encode_box_autoadd_message_id_twin_normal(MessageIdTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_message_id_twin_normal();
    cst_api_fill_to_wire_message_id_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_message_id_twin_rust_async>
      cst_encode_box_autoadd_message_id_twin_rust_async(
          MessageIdTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_message_id_twin_rust_async();
    cst_api_fill_to_wire_message_id_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_message_id_twin_sync>
      cst_encode_box_autoadd_message_id_twin_sync(MessageIdTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_message_id_twin_sync();
    cst_api_fill_to_wire_message_id_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_callable_twin_normal>
      cst_encode_box_autoadd_my_callable_twin_normal(MyCallableTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_my_callable_twin_normal();
    cst_api_fill_to_wire_my_callable_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_callable_twin_rust_async>
      cst_encode_box_autoadd_my_callable_twin_rust_async(
          MyCallableTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_my_callable_twin_rust_async();
    cst_api_fill_to_wire_my_callable_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_callable_twin_sync>
      cst_encode_box_autoadd_my_callable_twin_sync(MyCallableTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_my_callable_twin_sync();
    cst_api_fill_to_wire_my_callable_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_nested_struct_twin_normal>
      cst_encode_box_autoadd_my_nested_struct_twin_normal(
          MyNestedStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_my_nested_struct_twin_normal();
    cst_api_fill_to_wire_my_nested_struct_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async>
      cst_encode_box_autoadd_my_nested_struct_twin_rust_async(
          MyNestedStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_my_nested_struct_twin_rust_async();
    cst_api_fill_to_wire_my_nested_struct_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_nested_struct_twin_sync>
      cst_encode_box_autoadd_my_nested_struct_twin_sync(
          MyNestedStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_my_nested_struct_twin_sync();
    cst_api_fill_to_wire_my_nested_struct_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_size> cst_encode_box_autoadd_my_size(MySize raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_my_size();
    cst_api_fill_to_wire_my_size(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_struct> cst_encode_box_autoadd_my_struct(
      MyStruct raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_my_struct();
    cst_api_fill_to_wire_my_struct(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_tree_node_twin_normal>
      cst_encode_box_autoadd_my_tree_node_twin_normal(
          MyTreeNodeTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_my_tree_node_twin_normal();
    cst_api_fill_to_wire_my_tree_node_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_tree_node_twin_rust_async>
      cst_encode_box_autoadd_my_tree_node_twin_rust_async(
          MyTreeNodeTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_my_tree_node_twin_rust_async();
    cst_api_fill_to_wire_my_tree_node_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_tree_node_twin_sync>
      cst_encode_box_autoadd_my_tree_node_twin_sync(MyTreeNodeTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_my_tree_node_twin_sync();
    cst_api_fill_to_wire_my_tree_node_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_nested_raw_string_mirrored>
      cst_encode_box_autoadd_nested_raw_string_mirrored(
          NestedRawStringMirrored raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_nested_raw_string_mirrored();
    cst_api_fill_to_wire_nested_raw_string_mirrored(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_normal>
      cst_encode_box_autoadd_new_type_int_twin_normal(
          NewTypeIntTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_new_type_int_twin_normal();
    cst_api_fill_to_wire_new_type_int_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_rust_async>
      cst_encode_box_autoadd_new_type_int_twin_rust_async(
          NewTypeIntTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_new_type_int_twin_rust_async();
    cst_api_fill_to_wire_new_type_int_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_sync>
      cst_encode_box_autoadd_new_type_int_twin_sync(NewTypeIntTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_new_type_int_twin_sync();
    cst_api_fill_to_wire_new_type_int_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_note_twin_normal>
      cst_encode_box_autoadd_note_twin_normal(NoteTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_note_twin_normal();
    cst_api_fill_to_wire_note_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_note_twin_rust_async>
      cst_encode_box_autoadd_note_twin_rust_async(NoteTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_note_twin_rust_async();
    cst_api_fill_to_wire_note_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_note_twin_sync> cst_encode_box_autoadd_note_twin_sync(
      NoteTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_note_twin_sync();
    cst_api_fill_to_wire_note_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_numbers> cst_encode_box_autoadd_numbers(Numbers raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_numbers();
    cst_api_fill_to_wire_numbers(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opaque_nested_twin_moi>
      cst_encode_box_autoadd_opaque_nested_twin_moi(OpaqueNestedTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_opaque_nested_twin_moi();
    cst_api_fill_to_wire_opaque_nested_twin_moi(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opaque_nested_twin_normal>
      cst_encode_box_autoadd_opaque_nested_twin_normal(
          OpaqueNestedTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_opaque_nested_twin_normal();
    cst_api_fill_to_wire_opaque_nested_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opaque_nested_twin_rust_async>
      cst_encode_box_autoadd_opaque_nested_twin_rust_async(
          OpaqueNestedTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_opaque_nested_twin_rust_async();
    cst_api_fill_to_wire_opaque_nested_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opaque_nested_twin_rust_async_moi>
      cst_encode_box_autoadd_opaque_nested_twin_rust_async_moi(
          OpaqueNestedTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_opaque_nested_twin_rust_async_moi();
    cst_api_fill_to_wire_opaque_nested_twin_rust_async_moi(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opaque_nested_twin_sync>
      cst_encode_box_autoadd_opaque_nested_twin_sync(OpaqueNestedTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_opaque_nested_twin_sync();
    cst_api_fill_to_wire_opaque_nested_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opaque_nested_twin_sync_moi>
      cst_encode_box_autoadd_opaque_nested_twin_sync_moi(
          OpaqueNestedTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_opaque_nested_twin_sync_moi();
    cst_api_fill_to_wire_opaque_nested_twin_sync_moi(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opt_vecs_twin_normal>
      cst_encode_box_autoadd_opt_vecs_twin_normal(OptVecsTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_opt_vecs_twin_normal();
    cst_api_fill_to_wire_opt_vecs_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opt_vecs_twin_rust_async>
      cst_encode_box_autoadd_opt_vecs_twin_rust_async(
          OptVecsTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_opt_vecs_twin_rust_async();
    cst_api_fill_to_wire_opt_vecs_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opt_vecs_twin_sync>
      cst_encode_box_autoadd_opt_vecs_twin_sync(OptVecsTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_opt_vecs_twin_sync();
    cst_api_fill_to_wire_opt_vecs_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_raw_string_mirrored>
      cst_encode_box_autoadd_raw_string_mirrored(RawStringMirrored raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_raw_string_mirrored();
    cst_api_fill_to_wire_raw_string_mirrored(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_record_string_i_32>
      cst_encode_box_autoadd_record_string_i_32((String, int) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_record_string_i_32();
    cst_api_fill_to_wire_record_string_i_32(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_sequences> cst_encode_box_autoadd_sequences(
      Sequences raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_sequences();
    cst_api_fill_to_wire_sequences(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_simple_struct_twin_normal>
      cst_encode_box_autoadd_simple_struct_twin_normal(
          SimpleStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_simple_struct_twin_normal();
    cst_api_fill_to_wire_simple_struct_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_simple_struct_twin_rust_async>
      cst_encode_box_autoadd_simple_struct_twin_rust_async(
          SimpleStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_simple_struct_twin_rust_async();
    cst_api_fill_to_wire_simple_struct_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_simple_struct_twin_sync>
      cst_encode_box_autoadd_simple_struct_twin_sync(SimpleStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_simple_struct_twin_sync();
    cst_api_fill_to_wire_simple_struct_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_some_struct_twin_normal>
      cst_encode_box_autoadd_some_struct_twin_normal(SomeStructTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_some_struct_twin_normal();
    cst_api_fill_to_wire_some_struct_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_some_struct_twin_rust_async>
      cst_encode_box_autoadd_some_struct_twin_rust_async(
          SomeStructTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_some_struct_twin_rust_async();
    cst_api_fill_to_wire_some_struct_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_some_struct_twin_sync>
      cst_encode_box_autoadd_some_struct_twin_sync(SomeStructTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_some_struct_twin_sync();
    cst_api_fill_to_wire_some_struct_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_in_lower_level>
      cst_encode_box_autoadd_struct_in_lower_level(StructInLowerLevel raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_struct_in_lower_level();
    cst_api_fill_to_wire_struct_in_lower_level(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_comments_twin_normal>
      cst_encode_box_autoadd_struct_with_comments_twin_normal(
          StructWithCommentsTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_struct_with_comments_twin_normal();
    cst_api_fill_to_wire_struct_with_comments_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async>
      cst_encode_box_autoadd_struct_with_comments_twin_rust_async(
          StructWithCommentsTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_struct_with_comments_twin_rust_async();
    cst_api_fill_to_wire_struct_with_comments_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_comments_twin_sync>
      cst_encode_box_autoadd_struct_with_comments_twin_sync(
          StructWithCommentsTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_struct_with_comments_twin_sync();
    cst_api_fill_to_wire_struct_with_comments_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_enum_twin_normal>
      cst_encode_box_autoadd_struct_with_enum_twin_normal(
          StructWithEnumTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_struct_with_enum_twin_normal();
    cst_api_fill_to_wire_struct_with_enum_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async>
      cst_encode_box_autoadd_struct_with_enum_twin_rust_async(
          StructWithEnumTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_struct_with_enum_twin_rust_async();
    cst_api_fill_to_wire_struct_with_enum_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_enum_twin_sync>
      cst_encode_box_autoadd_struct_with_enum_twin_sync(
          StructWithEnumTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_struct_with_enum_twin_sync();
    cst_api_fill_to_wire_struct_with_enum_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_moi>
      cst_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moi(
          StructWithExplicitAutoOpaqueFieldTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire
        .cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moi();
    cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_moi(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_normal>
      cst_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normal(
          StructWithExplicitAutoOpaqueFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire
        .cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normal();
    cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_normal(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async>
      cst_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async(
          StructWithExplicitAutoOpaqueFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire
        .cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async();
    cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_rust_async(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<
          wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async_moi>
      cst_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
          StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire
        .cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moi();
    cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_sync>
      cst_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync(
          StructWithExplicitAutoOpaqueFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire
        .cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync();
    cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_sync(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_sync_moi>
      cst_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moi(
          StructWithExplicitAutoOpaqueFieldTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire
        .cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moi();
    cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_sync_moi(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_moi>
      cst_encode_box_autoadd_struct_with_good_and_opaque_field_twin_moi(
          StructWithGoodAndOpaqueFieldTwinMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_moi();
    cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_moi(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_normal>
      cst_encode_box_autoadd_struct_with_good_and_opaque_field_twin_normal(
          StructWithGoodAndOpaqueFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire
        .cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_normal();
    cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_normal(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_rust_async>
      cst_encode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async(
          StructWithGoodAndOpaqueFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire
        .cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async();
    cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_rust_async(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_rust_async_moi>
      cst_encode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moi(
          StructWithGoodAndOpaqueFieldTwinRustAsyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire
        .cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moi();
    cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_rust_async_moi(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_sync>
      cst_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sync(
          StructWithGoodAndOpaqueFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_sync();
    cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_sync(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_sync_moi>
      cst_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moi(
          StructWithGoodAndOpaqueFieldTwinSyncMoi raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire
        .cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moi();
    cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_sync_moi(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_one_field_twin_normal>
      cst_encode_box_autoadd_struct_with_one_field_twin_normal(
          StructWithOneFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_struct_with_one_field_twin_normal();
    cst_api_fill_to_wire_struct_with_one_field_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async>
      cst_encode_box_autoadd_struct_with_one_field_twin_rust_async(
          StructWithOneFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_struct_with_one_field_twin_rust_async();
    cst_api_fill_to_wire_struct_with_one_field_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_one_field_twin_sync>
      cst_encode_box_autoadd_struct_with_one_field_twin_sync(
          StructWithOneFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_struct_with_one_field_twin_sync();
    cst_api_fill_to_wire_struct_with_one_field_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_two_field_twin_normal>
      cst_encode_box_autoadd_struct_with_two_field_twin_normal(
          StructWithTwoFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_struct_with_two_field_twin_normal();
    cst_api_fill_to_wire_struct_with_two_field_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async>
      cst_encode_box_autoadd_struct_with_two_field_twin_rust_async(
          StructWithTwoFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_struct_with_two_field_twin_rust_async();
    cst_api_fill_to_wire_struct_with_two_field_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_two_field_twin_sync>
      cst_encode_box_autoadd_struct_with_two_field_twin_sync(
          StructWithTwoFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_struct_with_two_field_twin_sync();
    cst_api_fill_to_wire_struct_with_two_field_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_zero_field_twin_normal>
      cst_encode_box_autoadd_struct_with_zero_field_twin_normal(
          StructWithZeroFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_struct_with_zero_field_twin_normal();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_zero_field_twin_rust_async>
      cst_encode_box_autoadd_struct_with_zero_field_twin_rust_async(
          StructWithZeroFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_struct_with_zero_field_twin_rust_async();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync>
      cst_encode_box_autoadd_struct_with_zero_field_twin_sync(
          StructWithZeroFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_struct_with_zero_field_twin_sync();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_sum_with_twin_normal>
      cst_encode_box_autoadd_sum_with_twin_normal(SumWithTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_sum_with_twin_normal();
    cst_api_fill_to_wire_sum_with_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_sum_with_twin_rust_async>
      cst_encode_box_autoadd_sum_with_twin_rust_async(
          SumWithTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_sum_with_twin_rust_async();
    cst_api_fill_to_wire_sum_with_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_sum_with_twin_sync>
      cst_encode_box_autoadd_sum_with_twin_sync(SumWithTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_sum_with_twin_sync();
    cst_api_fill_to_wire_sum_with_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_test_id_twin_normal>
      cst_encode_box_autoadd_test_id_twin_normal(TestIdTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_test_id_twin_normal();
    cst_api_fill_to_wire_test_id_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_test_id_twin_rust_async>
      cst_encode_box_autoadd_test_id_twin_rust_async(TestIdTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_test_id_twin_rust_async();
    cst_api_fill_to_wire_test_id_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_test_id_twin_sync>
      cst_encode_box_autoadd_test_id_twin_sync(TestIdTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_test_id_twin_sync();
    cst_api_fill_to_wire_test_id_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_normal>
      cst_encode_box_autoadd_tuple_struct_with_one_field_twin_normal(
          TupleStructWithOneFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_tuple_struct_with_one_field_twin_normal();
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_rust_async>
      cst_encode_box_autoadd_tuple_struct_with_one_field_twin_rust_async(
          TupleStructWithOneFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async();
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_rust_async(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync>
      cst_encode_box_autoadd_tuple_struct_with_one_field_twin_sync(
          TupleStructWithOneFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync();
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_normal>
      cst_encode_box_autoadd_tuple_struct_with_two_field_twin_normal(
          TupleStructWithTwoFieldTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_tuple_struct_with_two_field_twin_normal();
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_rust_async>
      cst_encode_box_autoadd_tuple_struct_with_two_field_twin_rust_async(
          TupleStructWithTwoFieldTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async();
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_rust_async(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync>
      cst_encode_box_autoadd_tuple_struct_with_two_field_twin_sync(
          TupleStructWithTwoFieldTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr =
        wire.cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync();
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Uint16> cst_encode_box_autoadd_u_16(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_u_16(cst_encode_u_16(raw));
  }

  @protected
  ffi.Pointer<ffi.Uint32> cst_encode_box_autoadd_u_32(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_u_32(cst_encode_u_32(raw));
  }

  @protected
  ffi.Pointer<ffi.Uint64> cst_encode_box_autoadd_u_64(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_u_64(cst_encode_u_64(raw));
  }

  @protected
  ffi.Pointer<ffi.Uint8> cst_encode_box_autoadd_u_8(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_u_8(cst_encode_u_8(raw));
  }

  @protected
  ffi.Pointer<wire_cst_user_id_twin_normal>
      cst_encode_box_autoadd_user_id_twin_normal(UserIdTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_user_id_twin_normal();
    cst_api_fill_to_wire_user_id_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_user_id_twin_rust_async>
      cst_encode_box_autoadd_user_id_twin_rust_async(UserIdTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_user_id_twin_rust_async();
    cst_api_fill_to_wire_user_id_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_user_id_twin_sync>
      cst_encode_box_autoadd_user_id_twin_sync(UserIdTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_user_id_twin_sync();
    cst_api_fill_to_wire_user_id_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.UintPtr> cst_encode_box_autoadd_usize(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_usize(cst_encode_usize(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_weekdays_twin_normal(
      WeekdaysTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_weekdays_twin_normal(
        cst_encode_weekdays_twin_normal(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_weekdays_twin_rust_async(
        cst_encode_weekdays_twin_rust_async(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_weekdays_twin_sync(
      WeekdaysTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_weekdays_twin_sync(
        cst_encode_weekdays_twin_sync(raw));
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>
      cst_encode_box_benchmark_binary_tree_twin_normal(
          BenchmarkBinaryTreeTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_benchmark_binary_tree_twin_normal();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
      cst_encode_box_benchmark_binary_tree_twin_rust_async(
          BenchmarkBinaryTreeTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_benchmark_binary_tree_twin_rust_async();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>
      cst_encode_box_benchmark_binary_tree_twin_sync(
          BenchmarkBinaryTreeTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_benchmark_binary_tree_twin_sync();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_blob_twin_normal> cst_encode_box_blob_twin_normal(
      BlobTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_blob_twin_normal();
    cst_api_fill_to_wire_blob_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_blob_twin_rust_async>
      cst_encode_box_blob_twin_rust_async(BlobTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_blob_twin_rust_async();
    cst_api_fill_to_wire_blob_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_blob_twin_sync> cst_encode_box_blob_twin_sync(
      BlobTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_blob_twin_sync();
    cst_api_fill_to_wire_blob_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Bool> cst_encode_box_bool(bool raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_bool(cst_encode_bool(raw));
  }

  @protected
  ffi.Pointer<wire_cst_distance_twin_normal>
      cst_encode_box_distance_twin_normal(DistanceTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_distance_twin_normal();
    cst_api_fill_to_wire_distance_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_distance_twin_rust_async>
      cst_encode_box_distance_twin_rust_async(DistanceTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_distance_twin_rust_async();
    cst_api_fill_to_wire_distance_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_distance_twin_sync> cst_encode_box_distance_twin_sync(
      DistanceTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_distance_twin_sync();
    cst_api_fill_to_wire_distance_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>
      cst_encode_box_exotic_optionals_twin_normal(
          ExoticOptionalsTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_exotic_optionals_twin_normal();
    cst_api_fill_to_wire_exotic_optionals_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
      cst_encode_box_exotic_optionals_twin_rust_async(
          ExoticOptionalsTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_exotic_optionals_twin_rust_async();
    cst_api_fill_to_wire_exotic_optionals_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>
      cst_encode_box_exotic_optionals_twin_sync(ExoticOptionalsTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_exotic_optionals_twin_sync();
    cst_api_fill_to_wire_exotic_optionals_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Double> cst_encode_box_f_64(double raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_f_64(cst_encode_f_64(raw));
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_normal> cst_encode_box_feed_id_twin_normal(
      FeedIdTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_feed_id_twin_normal();
    cst_api_fill_to_wire_feed_id_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_rust_async>
      cst_encode_box_feed_id_twin_rust_async(FeedIdTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_feed_id_twin_rust_async();
    cst_api_fill_to_wire_feed_id_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_sync> cst_encode_box_feed_id_twin_sync(
      FeedIdTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_feed_id_twin_sync();
    cst_api_fill_to_wire_feed_id_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_i_32(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_i_32(cst_encode_i_32(raw));
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_box_i_64(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_i_64(cst_encode_i_64(raw));
  }

  @protected
  ffi.Pointer<ffi.Int8> cst_encode_box_i_8(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_i_8(cst_encode_i_8(raw));
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_normal>
      cst_encode_box_kitchen_sink_twin_normal(KitchenSinkTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_kitchen_sink_twin_normal();
    cst_api_fill_to_wire_kitchen_sink_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async>
      cst_encode_box_kitchen_sink_twin_rust_async(
          KitchenSinkTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_kitchen_sink_twin_rust_async();
    cst_api_fill_to_wire_kitchen_sink_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_sync>
      cst_encode_box_kitchen_sink_twin_sync(KitchenSinkTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_kitchen_sink_twin_sync();
    cst_api_fill_to_wire_kitchen_sink_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_size> cst_encode_box_my_size(MySize raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_my_size();
    cst_api_fill_to_wire_my_size(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_speed_twin_normal> cst_encode_box_speed_twin_normal(
      SpeedTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_speed_twin_normal();
    cst_api_fill_to_wire_speed_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_speed_twin_rust_async>
      cst_encode_box_speed_twin_rust_async(SpeedTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_speed_twin_rust_async();
    cst_api_fill_to_wire_speed_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_speed_twin_sync> cst_encode_box_speed_twin_sync(
      SpeedTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_speed_twin_sync();
    cst_api_fill_to_wire_speed_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Uint8> cst_encode_box_u_8(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_u_8(cst_encode_u_8(raw));
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_box_u_8_array_1600(
      U8Array1600 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_u_8_array_1600(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_box_u_8_array_8(
      U8Array8 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_u_8_array_8(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_weekdays_twin_normal(
      WeekdaysTwinNormal raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire
        .cst_new_box_weekdays_twin_normal(cst_encode_weekdays_twin_normal(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_weekdays_twin_rust_async(
        cst_encode_weekdays_twin_rust_async(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_weekdays_twin_sync(
      WeekdaysTwinSync raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire
        .cst_new_box_weekdays_twin_sync(cst_encode_weekdays_twin_sync(raw));
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_moi>
      cst_encode_enum_opaque_twin_moi_array_5(EnumOpaqueTwinMoiArray5 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_enum_opaque_twin_moi(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_normal>
      cst_encode_enum_opaque_twin_normal_array_5(
          EnumOpaqueTwinNormalArray5 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_enum_opaque_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async>
      cst_encode_enum_opaque_twin_rust_async_array_5(
          EnumOpaqueTwinRustAsyncArray5 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_enum_opaque_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async_moi>
      cst_encode_enum_opaque_twin_rust_async_moi_array_5(
          EnumOpaqueTwinRustAsyncMoiArray5 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_enum_opaque_twin_rust_async_moi(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_sync>
      cst_encode_enum_opaque_twin_sync_array_5(EnumOpaqueTwinSyncArray5 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_enum_opaque_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_sync_moi>
      cst_encode_enum_opaque_twin_sync_moi_array_5(
          EnumOpaqueTwinSyncMoiArray5 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_enum_opaque_twin_sync_moi(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_f_64_strict> cst_encode_f_64_array_16(
      F64Array16 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_f_64_strict(16);
    ans.ref.ptr.asTypedList(16).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_32_strict> cst_encode_i_32_array_2(
      I32Array2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_i_32_strict(2);
    ans.ref.ptr.asTypedList(2).setAll(0, raw);
    return ans;
  }

  @protected
  int cst_encode_i_64(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.toInt();
  }

  @protected
  ffi.Pointer<
          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi>
      cst_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          List<NonCloneSimpleTwinMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire
        .cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
            raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] =
          cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
              raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<
          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal>
      cst_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          List<NonCloneSimpleTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire
        .cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
            raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] =
          cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
              raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<
          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync>
      cst_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          List<NonCloneSimpleTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire
        .cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
            raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] =
          cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
              raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<
          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi>
      cst_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          List<NonCloneSimpleTwinRustAsyncMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire
        .cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
            raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] =
          cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
              raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<
          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync>
      cst_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          List<NonCloneSimpleTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire
        .cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
            raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] =
          cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
              raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<
          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi>
      cst_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          List<NonCloneSimpleTwinSyncMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire
        .cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
            raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] =
          cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
              raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_Chrono_Duration> cst_encode_list_Chrono_Duration(
      List<Duration> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_Chrono_Duration(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_Chrono_Duration(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_Chrono_Local> cst_encode_list_Chrono_Local(
      List<DateTime> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_Chrono_Local(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_Chrono_Local(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_Chrono_Naive> cst_encode_list_Chrono_Naive(
      List<DateTime> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_Chrono_Naive(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_Chrono_Naive(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_DartOpaque> cst_encode_list_DartOpaque(
      List<Object> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_DartOpaque(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_DartOpaque(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinMoi>
      cst_encode_list_RustOpaque_HideDataTwinMoi(List<HideDataTwinMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_RustOpaque_HideDataTwinMoi(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_RustOpaque_HideDataTwinMoi(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinNormal>
      cst_encode_list_RustOpaque_HideDataTwinNormal(
          List<HideDataTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_RustOpaque_HideDataTwinNormal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_RustOpaque_HideDataTwinNormal(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsync>
      cst_encode_list_RustOpaque_HideDataTwinRustAsync(
          List<HideDataTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_RustOpaque_HideDataTwinRustAsync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_RustOpaque_HideDataTwinRustAsync(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsyncMoi>
      cst_encode_list_RustOpaque_HideDataTwinRustAsyncMoi(
          List<HideDataTwinRustAsyncMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_RustOpaque_HideDataTwinRustAsyncMoi(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_RustOpaque_HideDataTwinRustAsyncMoi(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSync>
      cst_encode_list_RustOpaque_HideDataTwinSync(List<HideDataTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_RustOpaque_HideDataTwinSync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_RustOpaque_HideDataTwinSync(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSyncMoi>
      cst_encode_list_RustOpaque_HideDataTwinSyncMoi(
          List<HideDataTwinSyncMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_RustOpaque_HideDataTwinSyncMoi(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_RustOpaque_HideDataTwinSyncMoi(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_String> cst_encode_list_String(List<String> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_String(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_String(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_Uuid> cst_encode_list_Uuid(List<UuidValue> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_Uuid(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_Uuid(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_application_env_var>
      cst_encode_list_application_env_var(List<ApplicationEnvVar> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_application_env_var(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_application_env_var(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_application_mode> cst_encode_list_application_mode(
      List<ApplicationMode> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_application_mode(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_application_mode(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_application_settings>
      cst_encode_list_application_settings(List<ApplicationSettings> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_application_settings(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_application_settings(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_normal>
      cst_encode_list_attribute_twin_normal(List<AttributeTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_attribute_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_attribute_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_rust_async>
      cst_encode_list_attribute_twin_rust_async(
          List<AttributeTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_attribute_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_attribute_twin_rust_async(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_sync>
      cst_encode_list_attribute_twin_sync(List<AttributeTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_attribute_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_attribute_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_basic_general_enum_twin_normal>
      cst_encode_list_basic_general_enum_twin_normal(
          List<BasicGeneralEnumTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_basic_general_enum_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_basic_general_enum_twin_normal(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_basic_general_enum_twin_rust_async>
      cst_encode_list_basic_general_enum_twin_rust_async(
          List<BasicGeneralEnumTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_basic_general_enum_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_basic_general_enum_twin_rust_async(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_basic_general_enum_twin_sync>
      cst_encode_list_basic_general_enum_twin_sync(
          List<BasicGeneralEnumTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_basic_general_enum_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_basic_general_enum_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_normal>
      cst_encode_list_basic_primitive_enum_twin_normal(
          List<BasicPrimitiveEnumTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_basic_primitive_enum_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_basic_primitive_enum_twin_normal(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_rust_async>
      cst_encode_list_basic_primitive_enum_twin_rust_async(
          List<BasicPrimitiveEnumTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_basic_primitive_enum_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_basic_primitive_enum_twin_rust_async(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_sync>
      cst_encode_list_basic_primitive_enum_twin_sync(
          List<BasicPrimitiveEnumTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_basic_primitive_enum_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_basic_primitive_enum_twin_sync(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_basic_struct_twin_normal>
      cst_encode_list_basic_struct_twin_normal(
          List<BasicStructTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_basic_struct_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_basic_struct_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_basic_struct_twin_rust_async>
      cst_encode_list_basic_struct_twin_rust_async(
          List<BasicStructTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_basic_struct_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_basic_struct_twin_rust_async(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_basic_struct_twin_sync>
      cst_encode_list_basic_struct_twin_sync(List<BasicStructTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_basic_struct_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_basic_struct_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_bool> cst_encode_list_bool(List<bool> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_bool(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_bool(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_normal>
      cst_encode_list_element_twin_normal(List<ElementTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_element_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_element_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_rust_async>
      cst_encode_list_element_twin_rust_async(List<ElementTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_element_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_element_twin_rust_async(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_sync>
      cst_encode_list_element_twin_sync(List<ElementTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_element_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_element_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_moi>
      cst_encode_list_enum_opaque_twin_moi(List<EnumOpaqueTwinMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_enum_opaque_twin_moi(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_enum_opaque_twin_moi(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_normal>
      cst_encode_list_enum_opaque_twin_normal(List<EnumOpaqueTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_enum_opaque_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_enum_opaque_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async>
      cst_encode_list_enum_opaque_twin_rust_async(
          List<EnumOpaqueTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_enum_opaque_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_enum_opaque_twin_rust_async(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async_moi>
      cst_encode_list_enum_opaque_twin_rust_async_moi(
          List<EnumOpaqueTwinRustAsyncMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_enum_opaque_twin_rust_async_moi(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_enum_opaque_twin_rust_async_moi(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_sync>
      cst_encode_list_enum_opaque_twin_sync(List<EnumOpaqueTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_enum_opaque_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_enum_opaque_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_sync_moi>
      cst_encode_list_enum_opaque_twin_sync_moi(
          List<EnumOpaqueTwinSyncMoi> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_enum_opaque_twin_sync_moi(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_enum_opaque_twin_sync_moi(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_list_prim_u_8_strict>
      cst_encode_list_list_prim_u_8_strict(List<Uint8List> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_list_prim_u_8_strict(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_list_prim_u_8_strict(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_my_enum> cst_encode_list_my_enum(List<MyEnum> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_my_enum(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_my_enum(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_my_size> cst_encode_list_my_size(List<MySize> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_my_size(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_my_size(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_my_tree_node_twin_normal>
      cst_encode_list_my_tree_node_twin_normal(List<MyTreeNodeTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_my_tree_node_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_my_tree_node_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_my_tree_node_twin_rust_async>
      cst_encode_list_my_tree_node_twin_rust_async(
          List<MyTreeNodeTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_my_tree_node_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_my_tree_node_twin_rust_async(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_my_tree_node_twin_sync>
      cst_encode_list_my_tree_node_twin_sync(List<MyTreeNodeTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_my_tree_node_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_my_tree_node_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_nested_raw_string_mirrored>
      cst_encode_list_nested_raw_string_mirrored(
          List<NestedRawStringMirrored> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_nested_raw_string_mirrored(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_nested_raw_string_mirrored(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_String> cst_encode_list_opt_String(
      List<String?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_opt_String(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_String(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_normal>
      cst_encode_list_opt_box_autoadd_attribute_twin_normal(
          List<AttributeTwinNormal?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_opt_box_autoadd_attribute_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_attribute_twin_normal(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async>
      cst_encode_list_opt_box_autoadd_attribute_twin_rust_async(
          List<AttributeTwinRustAsync?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_opt_box_autoadd_attribute_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] =
          cst_encode_opt_box_autoadd_attribute_twin_rust_async(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync>
      cst_encode_list_opt_box_autoadd_attribute_twin_sync(
          List<AttributeTwinSync?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_opt_box_autoadd_attribute_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_attribute_twin_sync(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32>
      cst_encode_list_opt_box_autoadd_i_32(List<int?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_opt_box_autoadd_i_32(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_i_32(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_normal>
      cst_encode_list_opt_box_autoadd_weekdays_twin_normal(
          List<WeekdaysTwinNormal?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_opt_box_autoadd_weekdays_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_weekdays_twin_normal(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async>
      cst_encode_list_opt_box_autoadd_weekdays_twin_rust_async(
          List<WeekdaysTwinRustAsync?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_opt_box_autoadd_weekdays_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] =
          cst_encode_opt_box_autoadd_weekdays_twin_rust_async(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sync>
      cst_encode_list_opt_box_autoadd_weekdays_twin_sync(
          List<WeekdaysTwinSync?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_opt_box_autoadd_weekdays_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_weekdays_twin_sync(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_list_prim_i_32_strict>
      cst_encode_list_opt_list_prim_i_32_strict(List<Int32List?> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_opt_list_prim_i_32_strict(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_list_prim_i_32_strict(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_normal>
      cst_encode_list_point_twin_normal(List<PointTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_point_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_point_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_rust_async>
      cst_encode_list_point_twin_rust_async(List<PointTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_point_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_point_twin_rust_async(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_sync> cst_encode_list_point_twin_sync(
      List<PointTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_point_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_point_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_f_32_loose> cst_encode_list_prim_f_32_loose(
      List<double> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_f_32_loose(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_f_32_strict> cst_encode_list_prim_f_32_strict(
      Float32List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_f_32_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_f_64_loose> cst_encode_list_prim_f_64_loose(
      List<double> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_f_64_loose(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_f_64_strict> cst_encode_list_prim_f_64_strict(
      Float64List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_f_64_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_16_loose> cst_encode_list_prim_i_16_loose(
      List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_i_16_loose(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_16_strict> cst_encode_list_prim_i_16_strict(
      Int16List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_i_16_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_32_loose> cst_encode_list_prim_i_32_loose(
      List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_i_32_loose(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_32_strict> cst_encode_list_prim_i_32_strict(
      Int32List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_i_32_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_64_strict> cst_encode_list_prim_i_64_strict(
      Int64List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_i_64_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw.inner);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_8_loose> cst_encode_list_prim_i_8_loose(
      List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_i_8_loose(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_8_strict> cst_encode_list_prim_i_8_strict(
      Int8List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_i_8_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_16_loose> cst_encode_list_prim_u_16_loose(
      List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_16_loose(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_16_strict> cst_encode_list_prim_u_16_strict(
      Uint16List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_16_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_32_loose> cst_encode_list_prim_u_32_loose(
      List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_32_loose(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_32_strict> cst_encode_list_prim_u_32_strict(
      Uint32List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_32_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_64_strict> cst_encode_list_prim_u_64_strict(
      Uint64List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_64_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw.inner);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_loose> cst_encode_list_prim_u_8_loose(
      List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_8_loose(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_list_prim_u_8_strict(
      Uint8List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_8_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_raw_string_enum_mirrored>
      cst_encode_list_raw_string_enum_mirrored(
          List<RawStringEnumMirrored> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_raw_string_enum_mirrored(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_raw_string_enum_mirrored(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_raw_string_mirrored>
      cst_encode_list_raw_string_mirrored(List<RawStringMirrored> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_raw_string_mirrored(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_raw_string_mirrored(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_general_enum_twin_normal>
      cst_encode_list_record_i_32_basic_general_enum_twin_normal(
          List<(int, BasicGeneralEnumTwinNormal)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire
        .cst_new_list_record_i_32_basic_general_enum_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_basic_general_enum_twin_normal(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_general_enum_twin_rust_async>
      cst_encode_list_record_i_32_basic_general_enum_twin_rust_async(
          List<(int, BasicGeneralEnumTwinRustAsync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_record_i_32_basic_general_enum_twin_rust_async(
            raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_basic_general_enum_twin_rust_async(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_general_enum_twin_sync>
      cst_encode_list_record_i_32_basic_general_enum_twin_sync(
          List<(int, BasicGeneralEnumTwinSync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_record_i_32_basic_general_enum_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_basic_general_enum_twin_sync(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_primitive_enum_twin_normal>
      cst_encode_list_record_i_32_basic_primitive_enum_twin_normal(
          List<(int, BasicPrimitiveEnumTwinNormal)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire
        .cst_new_list_record_i_32_basic_primitive_enum_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_basic_primitive_enum_twin_normal(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_primitive_enum_twin_rust_async>
      cst_encode_list_record_i_32_basic_primitive_enum_twin_rust_async(
          List<(int, BasicPrimitiveEnumTwinRustAsync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_record_i_32_basic_primitive_enum_twin_rust_async(
            raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_basic_primitive_enum_twin_rust_async(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_primitive_enum_twin_sync>
      cst_encode_list_record_i_32_basic_primitive_enum_twin_sync(
          List<(int, BasicPrimitiveEnumTwinSync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire
        .cst_new_list_record_i_32_basic_primitive_enum_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_basic_primitive_enum_twin_sync(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_normal>
      cst_encode_list_record_i_32_basic_struct_twin_normal(
          List<(int, BasicStructTwinNormal)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_record_i_32_basic_struct_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_basic_struct_twin_normal(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_rust_async>
      cst_encode_list_record_i_32_basic_struct_twin_rust_async(
          List<(int, BasicStructTwinRustAsync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_record_i_32_basic_struct_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_basic_struct_twin_rust_async(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_sync>
      cst_encode_list_record_i_32_basic_struct_twin_sync(
          List<(int, BasicStructTwinSync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_record_i_32_basic_struct_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_basic_struct_twin_sync(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_bool> cst_encode_list_record_i_32_bool(
      List<(int, bool)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_i_32_bool(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_bool(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_f_32> cst_encode_list_record_i_32_f_32(
      List<(int, double)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_i_32_f_32(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_f_32(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_f_64> cst_encode_list_record_i_32_f_64(
      List<(int, double)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_i_32_f_64(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_f_64(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_i_16> cst_encode_list_record_i_32_i_16(
      List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_i_32_i_16(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_i_16(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_i_32> cst_encode_list_record_i_32_i_32(
      List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_i_32_i_32(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_i_32(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_i_64> cst_encode_list_record_i_32_i_64(
      List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_i_32_i_64(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_i_64(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_i_8> cst_encode_list_record_i_32_i_8(
      List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_i_32_i_8(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_i_8(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_isize>
      cst_encode_list_record_i_32_isize(List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_i_32_isize(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_isize(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_list_prim_u_8_strict>
      cst_encode_list_record_i_32_list_prim_u_8_strict(
          List<(int, Uint8List)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_i_32_list_prim_u_8_strict(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_list_prim_u_8_strict(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_string>
      cst_encode_list_record_i_32_string(List<(int, String)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_i_32_string(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_string(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_u_16> cst_encode_list_record_i_32_u_16(
      List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_i_32_u_16(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_u_16(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_u_32> cst_encode_list_record_i_32_u_32(
      List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_i_32_u_32(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_u_32(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_u_64> cst_encode_list_record_i_32_u_64(
      List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_i_32_u_64(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_u_64(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_u_8> cst_encode_list_record_i_32_u_8(
      List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_i_32_u_8(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_u_8(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_usize>
      cst_encode_list_record_i_32_usize(List<(int, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_i_32_usize(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_usize(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_normal>
      cst_encode_list_record_string_enum_simple_twin_normal(
          List<(String, EnumSimpleTwinNormal)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_record_string_enum_simple_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_enum_simple_twin_normal(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_rust_async>
      cst_encode_list_record_string_enum_simple_twin_rust_async(
          List<(String, EnumSimpleTwinRustAsync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_record_string_enum_simple_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_enum_simple_twin_rust_async(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync>
      cst_encode_list_record_string_enum_simple_twin_sync(
          List<(String, EnumSimpleTwinSync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_record_string_enum_simple_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_enum_simple_twin_sync(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_hash_map_value>
      cst_encode_list_record_string_hash_map_value(
          List<(String, HashMapValue)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_string_hash_map_value(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_hash_map_value(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_i_32>
      cst_encode_list_record_string_i_32(List<(String, int)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_string_i_32(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_i_32(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_normal>
      cst_encode_list_record_string_kitchen_sink_twin_normal(
          List<(String, KitchenSinkTwinNormal)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_record_string_kitchen_sink_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_kitchen_sink_twin_normal(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_rust_async>
      cst_encode_list_record_string_kitchen_sink_twin_rust_async(
          List<(String, KitchenSinkTwinRustAsync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire
        .cst_new_list_record_string_kitchen_sink_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_kitchen_sink_twin_rust_async(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync>
      cst_encode_list_record_string_kitchen_sink_twin_sync(
          List<(String, KitchenSinkTwinSync)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_record_string_kitchen_sink_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_kitchen_sink_twin_sync(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_list_prim_u_8_strict>
      cst_encode_list_record_string_list_prim_u_8_strict(
          List<(String, Uint8List)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans =
        wire.cst_new_list_record_string_list_prim_u_8_strict(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_list_prim_u_8_strict(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_my_size>
      cst_encode_list_record_string_my_size(List<(String, MySize)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_string_my_size(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_my_size(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_string>
      cst_encode_list_record_string_string(List<(String, String)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_string_string(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_string(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_u_8_application_mode>
      cst_encode_list_record_u_8_application_mode(
          List<(int, ApplicationMode)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_record_u_8_application_mode(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_u_8_application_mode(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_simple_struct_twin_normal>
      cst_encode_list_simple_struct_twin_normal(
          List<SimpleStructTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_simple_struct_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_simple_struct_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_simple_struct_twin_rust_async>
      cst_encode_list_simple_struct_twin_rust_async(
          List<SimpleStructTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_simple_struct_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_simple_struct_twin_rust_async(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_simple_struct_twin_sync>
      cst_encode_list_simple_struct_twin_sync(List<SimpleStructTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_simple_struct_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_simple_struct_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_normal>
      cst_encode_list_sum_with_twin_normal(List<SumWithTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_sum_with_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_sum_with_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_rust_async>
      cst_encode_list_sum_with_twin_rust_async(List<SumWithTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_sum_with_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_sum_with_twin_rust_async(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_sync>
      cst_encode_list_sum_with_twin_sync(List<SumWithTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_sum_with_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_sum_with_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_normal>
      cst_encode_list_test_id_twin_normal(List<TestIdTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_test_id_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_test_id_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_rust_async>
      cst_encode_list_test_id_twin_rust_async(List<TestIdTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_test_id_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_test_id_twin_rust_async(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_sync>
      cst_encode_list_test_id_twin_sync(List<TestIdTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_test_id_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_test_id_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_weekdays_twin_normal>
      cst_encode_list_weekdays_twin_normal(List<WeekdaysTwinNormal> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_weekdays_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_weekdays_twin_normal(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_weekdays_twin_rust_async>
      cst_encode_list_weekdays_twin_rust_async(
          List<WeekdaysTwinRustAsync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_weekdays_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_weekdays_twin_rust_async(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_weekdays_twin_sync>
      cst_encode_list_weekdays_twin_sync(List<WeekdaysTwinSync> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_weekdays_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_weekdays_twin_sync(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_opt_String(
      String? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_String(raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
            raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
            raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
            raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
            raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
            raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
            raw);
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_opt_box_autoadd_Chrono_Duration(
      Duration? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_Chrono_Duration(raw);
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_opt_box_autoadd_Chrono_Naive(
      DateTime? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_Chrono_Naive(raw);
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_opt_box_autoadd_Chrono_Utc(DateTime? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_Chrono_Utc(raw);
  }

  @protected
  ffi.Pointer<PlatformPointer> cst_encode_opt_box_autoadd_DartOpaque(
      Object? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_DartOpaque(raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(
          HideDataAnotherTwinMoi? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
          HideDataAnotherTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_opt_box_autoadd_RustOpaque_HideDataTwinMoi(
          HideDataTwinMoi? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_RustOpaque_HideDataTwinMoi(raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_opt_box_autoadd_RustOpaque_HideDataTwinNormal(
          HideDataTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_RustOpaque_HideDataTwinNormal(raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsync(
          HideDataTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_RustOpaque_HideDataTwinRustAsync(raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
          HideDataTwinRustAsyncMoi? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_opt_box_autoadd_RustOpaque_HideDataTwinSync(
          HideDataTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_RustOpaque_HideDataTwinSync(raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr>
      cst_encode_opt_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
          HideDataTwinSyncMoi? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_RustOpaque_HideDataTwinSyncMoi(raw);
  }

  @protected
  ffi.Pointer<wire_cst_application_env>
      cst_encode_opt_box_autoadd_application_env(ApplicationEnv? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_application_env(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_application_mode(
      ApplicationMode? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_application_mode(raw);
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_normal>
      cst_encode_opt_box_autoadd_attribute_twin_normal(
          AttributeTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_attribute_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_rust_async>
      cst_encode_opt_box_autoadd_attribute_twin_rust_async(
          AttributeTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_attribute_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_sync>
      cst_encode_opt_box_autoadd_attribute_twin_sync(AttributeTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_attribute_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_basic_general_enum_twin_normal>
      cst_encode_opt_box_autoadd_basic_general_enum_twin_normal(
          BasicGeneralEnumTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_basic_general_enum_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_basic_general_enum_twin_rust_async>
      cst_encode_opt_box_autoadd_basic_general_enum_twin_rust_async(
          BasicGeneralEnumTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_basic_general_enum_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_basic_general_enum_twin_sync>
      cst_encode_opt_box_autoadd_basic_general_enum_twin_sync(
          BasicGeneralEnumTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_basic_general_enum_twin_sync(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32>
      cst_encode_opt_box_autoadd_basic_primitive_enum_twin_normal(
          BasicPrimitiveEnumTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_basic_primitive_enum_twin_normal(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32>
      cst_encode_opt_box_autoadd_basic_primitive_enum_twin_rust_async(
          BasicPrimitiveEnumTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_basic_primitive_enum_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32>
      cst_encode_opt_box_autoadd_basic_primitive_enum_twin_sync(
          BasicPrimitiveEnumTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_basic_primitive_enum_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_basic_struct_twin_normal>
      cst_encode_opt_box_autoadd_basic_struct_twin_normal(
          BasicStructTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_basic_struct_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_basic_struct_twin_rust_async>
      cst_encode_opt_box_autoadd_basic_struct_twin_rust_async(
          BasicStructTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_basic_struct_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_basic_struct_twin_sync>
      cst_encode_opt_box_autoadd_basic_struct_twin_sync(
          BasicStructTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_basic_struct_twin_sync(raw);
  }

  @protected
  ffi.Pointer<ffi.Bool> cst_encode_opt_box_autoadd_bool(bool? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_bool(raw);
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_normal>
      cst_encode_opt_box_autoadd_element_twin_normal(ElementTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_element_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_rust_async>
      cst_encode_opt_box_autoadd_element_twin_rust_async(
          ElementTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_element_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_sync>
      cst_encode_opt_box_autoadd_element_twin_sync(ElementTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_element_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>
      cst_encode_opt_box_autoadd_exotic_optionals_twin_normal(
          ExoticOptionalsTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_exotic_optionals_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
      cst_encode_opt_box_autoadd_exotic_optionals_twin_rust_async(
          ExoticOptionalsTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_exotic_optionals_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>
      cst_encode_opt_box_autoadd_exotic_optionals_twin_sync(
          ExoticOptionalsTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_exotic_optionals_twin_sync(raw);
  }

  @protected
  ffi.Pointer<ffi.Float> cst_encode_opt_box_autoadd_f_32(double? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_f_32(raw);
  }

  @protected
  ffi.Pointer<ffi.Double> cst_encode_opt_box_autoadd_f_64(double? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_f_64(raw);
  }

  @protected
  ffi.Pointer<ffi.Int16> cst_encode_opt_box_autoadd_i_16(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_i_16(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_i_32(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_i_32(raw);
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_opt_box_autoadd_i_64(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_i_64(raw);
  }

  @protected
  ffi.Pointer<ffi.Int8> cst_encode_opt_box_autoadd_i_8(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_i_8(raw);
  }

  @protected
  ffi.Pointer<ffi.IntPtr> cst_encode_opt_box_autoadd_isize(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_isize(raw);
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_normal>
      cst_encode_opt_box_autoadd_measure_twin_normal(MeasureTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_measure_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_rust_async>
      cst_encode_opt_box_autoadd_measure_twin_rust_async(
          MeasureTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_measure_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_sync>
      cst_encode_opt_box_autoadd_measure_twin_sync(MeasureTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_measure_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_normal>
      cst_encode_opt_box_autoadd_new_type_int_twin_normal(
          NewTypeIntTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_new_type_int_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_rust_async>
      cst_encode_opt_box_autoadd_new_type_int_twin_rust_async(
          NewTypeIntTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_new_type_int_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_sync>
      cst_encode_opt_box_autoadd_new_type_int_twin_sync(
          NewTypeIntTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_new_type_int_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_record_string_i_32>
      cst_encode_opt_box_autoadd_record_string_i_32((String, int)? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_record_string_i_32(raw);
  }

  @protected
  ffi.Pointer<ffi.Uint16> cst_encode_opt_box_autoadd_u_16(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_u_16(raw);
  }

  @protected
  ffi.Pointer<ffi.Uint32> cst_encode_opt_box_autoadd_u_32(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_u_32(raw);
  }

  @protected
  ffi.Pointer<ffi.Uint64> cst_encode_opt_box_autoadd_u_64(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_u_64(raw);
  }

  @protected
  ffi.Pointer<ffi.Uint8> cst_encode_opt_box_autoadd_u_8(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_u_8(raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr> cst_encode_opt_box_autoadd_usize(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_usize(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_weekdays_twin_normal(
      WeekdaysTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_weekdays_twin_normal(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_weekdays_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_weekdays_twin_sync(
      WeekdaysTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_weekdays_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>
      cst_encode_opt_box_benchmark_binary_tree_twin_normal(
          BenchmarkBinaryTreeTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_benchmark_binary_tree_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
      cst_encode_opt_box_benchmark_binary_tree_twin_rust_async(
          BenchmarkBinaryTreeTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_benchmark_binary_tree_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>
      cst_encode_opt_box_benchmark_binary_tree_twin_sync(
          BenchmarkBinaryTreeTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_benchmark_binary_tree_twin_sync(raw);
  }

  @protected
  ffi.Pointer<ffi.Bool> cst_encode_opt_box_bool(bool? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_bool(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>
      cst_encode_opt_box_exotic_optionals_twin_normal(
          ExoticOptionalsTwinNormal? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_exotic_optionals_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
      cst_encode_opt_box_exotic_optionals_twin_rust_async(
          ExoticOptionalsTwinRustAsync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_exotic_optionals_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>
      cst_encode_opt_box_exotic_optionals_twin_sync(
          ExoticOptionalsTwinSync? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_exotic_optionals_twin_sync(raw);
  }

  @protected
  ffi.Pointer<ffi.Double> cst_encode_opt_box_f_64(double? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_f_64(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_i_32(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_i_32(raw);
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_opt_box_i_64(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_i_64(raw);
  }

  @protected
  ffi.Pointer<ffi.Int8> cst_encode_opt_box_i_8(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_i_8(raw);
  }

  @protected
  ffi.Pointer<ffi.Uint8> cst_encode_opt_box_u_8(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_u_8(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_normal>
      cst_encode_opt_list_attribute_twin_normal(
          List<AttributeTwinNormal>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_attribute_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_rust_async>
      cst_encode_opt_list_attribute_twin_rust_async(
          List<AttributeTwinRustAsync>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_attribute_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_sync>
      cst_encode_opt_list_attribute_twin_sync(List<AttributeTwinSync>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_list_attribute_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_normal>
      cst_encode_opt_list_element_twin_normal(List<ElementTwinNormal>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_list_element_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_rust_async>
      cst_encode_opt_list_element_twin_rust_async(
          List<ElementTwinRustAsync>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_element_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_sync>
      cst_encode_opt_list_element_twin_sync(List<ElementTwinSync>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_list_element_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_normal>
      cst_encode_opt_list_opt_box_autoadd_attribute_twin_normal(
          List<AttributeTwinNormal?>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_opt_box_autoadd_attribute_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async>
      cst_encode_opt_list_opt_box_autoadd_attribute_twin_rust_async(
          List<AttributeTwinRustAsync?>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_opt_box_autoadd_attribute_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync>
      cst_encode_opt_list_opt_box_autoadd_attribute_twin_sync(
          List<AttributeTwinSync?>? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_opt_box_autoadd_attribute_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_f_32_strict>
      cst_encode_opt_list_prim_f_32_strict(Float32List? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_list_prim_f_32_strict(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_f_64_strict>
      cst_encode_opt_list_prim_f_64_strict(Float64List? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_list_prim_f_64_strict(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_32_strict>
      cst_encode_opt_list_prim_i_32_strict(Int32List? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_list_prim_i_32_strict(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_8_strict>
      cst_encode_opt_list_prim_i_8_strict(Int8List? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_list_prim_i_8_strict(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict>
      cst_encode_opt_list_prim_u_8_strict(Uint8List? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_list_prim_u_8_strict(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_normal>
      cst_encode_point_twin_normal_array_2(PointTwinNormalArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_point_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_rust_async>
      cst_encode_point_twin_rust_async_array_2(PointTwinRustAsyncArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_point_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_sync> cst_encode_point_twin_sync_array_2(
      PointTwinSyncArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_point_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_normal>
      cst_encode_sum_with_twin_normal_array_3(SumWithTwinNormalArray3 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_sum_with_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_rust_async>
      cst_encode_sum_with_twin_rust_async_array_3(
          SumWithTwinRustAsyncArray3 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_sum_with_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_sync>
      cst_encode_sum_with_twin_sync_array_3(SumWithTwinSyncArray3 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_sum_with_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_normal>
      cst_encode_test_id_twin_normal_array_2(TestIdTwinNormalArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_test_id_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_normal>
      cst_encode_test_id_twin_normal_array_4(TestIdTwinNormalArray4 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_test_id_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_rust_async>
      cst_encode_test_id_twin_rust_async_array_2(
          TestIdTwinRustAsyncArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_test_id_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_rust_async>
      cst_encode_test_id_twin_rust_async_array_4(
          TestIdTwinRustAsyncArray4 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_test_id_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_sync>
      cst_encode_test_id_twin_sync_array_2(TestIdTwinSyncArray2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_test_id_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_sync>
      cst_encode_test_id_twin_sync_array_4(TestIdTwinSyncArray4 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_test_id_twin_sync(raw);
  }

  @protected
  int cst_encode_u_64(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.toInt();
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_u_8_array_1600(
      U8Array1600 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_8_strict(1600);
    ans.ref.ptr.asTypedList(1600).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_u_8_array_2(
      U8Array2 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_8_strict(2);
    ans.ref.ptr.asTypedList(2).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_u_8_array_32(
      U8Array32 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_8_strict(32);
    ans.ref.ptr.asTypedList(32).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_u_8_array_5(
      U8Array5 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_8_strict(5);
    ans.ref.ptr.asTypedList(5).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_u_8_array_8(
      U8Array8 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_8_strict(8);
    ans.ref.ptr.asTypedList(8).setAll(0, raw);
    return ans;
  }

  @protected
  void cst_api_fill_to_wire_a_twin_normal(
      ATwinNormal apiObj, wire_cst_a_twin_normal wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_a_twin_rust_async(
      ATwinRustAsync apiObj, wire_cst_a_twin_rust_async wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_a_twin_sync(
      ATwinSync apiObj, wire_cst_a_twin_sync wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_abc_twin_normal(
      AbcTwinNormal apiObj, wire_cst_abc_twin_normal wireObj) {
    if (apiObj is AbcTwinNormal_A) {
      var pre_field0 = cst_encode_box_autoadd_a_twin_normal(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinNormal_B) {
      var pre_field0 = cst_encode_box_autoadd_b_twin_normal(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinNormal_C) {
      var pre_field0 = cst_encode_box_autoadd_c_twin_normal(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.C.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinNormal_JustInt) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.JustInt.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_abc_twin_rust_async(
      AbcTwinRustAsync apiObj, wire_cst_abc_twin_rust_async wireObj) {
    if (apiObj is AbcTwinRustAsync_A) {
      var pre_field0 = cst_encode_box_autoadd_a_twin_rust_async(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinRustAsync_B) {
      var pre_field0 = cst_encode_box_autoadd_b_twin_rust_async(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinRustAsync_C) {
      var pre_field0 = cst_encode_box_autoadd_c_twin_rust_async(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.C.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinRustAsync_JustInt) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.JustInt.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_abc_twin_sync(
      AbcTwinSync apiObj, wire_cst_abc_twin_sync wireObj) {
    if (apiObj is AbcTwinSync_A) {
      var pre_field0 = cst_encode_box_autoadd_a_twin_sync(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinSync_B) {
      var pre_field0 = cst_encode_box_autoadd_b_twin_sync(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinSync_C) {
      var pre_field0 = cst_encode_box_autoadd_c_twin_sync(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.C.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinSync_JustInt) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.JustInt.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_another_macro_struct_twin_normal(
      AnotherMacroStructTwinNormal apiObj,
      wire_cst_another_macro_struct_twin_normal wireObj) {
    wireObj.data = cst_encode_i_32(apiObj.data);
    wireObj.non_final_data = cst_encode_i_32(apiObj.nonFinalData);
  }

  @protected
  void cst_api_fill_to_wire_another_twin_normal(
      AnotherTwinNormal apiObj, wire_cst_another_twin_normal wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_another_twin_rust_async(
      AnotherTwinRustAsync apiObj, wire_cst_another_twin_rust_async wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_another_twin_sync(
      AnotherTwinSync apiObj, wire_cst_another_twin_sync wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_application_env(
      ApplicationEnv apiObj, wire_cst_application_env wireObj) {
    wireObj.vars = cst_encode_list_application_env_var(apiObj.vars);
  }

  @protected
  void cst_api_fill_to_wire_application_env_var(
      ApplicationEnvVar apiObj, wire_cst_application_env_var wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.field0);
    wireObj.field1 = cst_encode_bool(apiObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_application_message(
      ApplicationMessage apiObj, wire_cst_application_message wireObj) {
    if (apiObj is ApplicationMessage_DisplayMessage) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.DisplayMessage.field0 = pre_field0;
      return;
    }
    if (apiObj is ApplicationMessage_RenderPixel) {
      var pre_x = cst_encode_i_32(apiObj.x);
      var pre_y = cst_encode_i_32(apiObj.y);
      wireObj.tag = 1;
      wireObj.kind.RenderPixel.x = pre_x;
      wireObj.kind.RenderPixel.y = pre_y;
      return;
    }
    if (apiObj is ApplicationMessage_Exit) {
      wireObj.tag = 2;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_application_settings(
      ApplicationSettings apiObj, wire_cst_application_settings wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.version = cst_encode_String(apiObj.version);
    wireObj.mode = cst_encode_application_mode(apiObj.mode);
    wireObj.env = cst_encode_box_application_env(apiObj.env);
    wireObj.env_optional =
        cst_encode_opt_box_autoadd_application_env(apiObj.envOptional);
  }

  @protected
  void cst_api_fill_to_wire_attribute_twin_normal(
      AttributeTwinNormal apiObj, wire_cst_attribute_twin_normal wireObj) {
    wireObj.key = cst_encode_String(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_attribute_twin_rust_async(
      AttributeTwinRustAsync apiObj,
      wire_cst_attribute_twin_rust_async wireObj) {
    wireObj.key = cst_encode_String(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_attribute_twin_sync(
      AttributeTwinSync apiObj, wire_cst_attribute_twin_sync wireObj) {
    wireObj.key = cst_encode_String(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_b_twin_normal(
      BTwinNormal apiObj, wire_cst_b_twin_normal wireObj) {
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_b_twin_rust_async(
      BTwinRustAsync apiObj, wire_cst_b_twin_rust_async wireObj) {
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_b_twin_sync(
      BTwinSync apiObj, wire_cst_b_twin_sync wireObj) {
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_basic_general_enum_twin_normal(
      BasicGeneralEnumTwinNormal apiObj,
      wire_cst_basic_general_enum_twin_normal wireObj) {
    if (apiObj is BasicGeneralEnumTwinNormal_Apple) {
      var pre_field = cst_encode_String(apiObj.field);
      wireObj.tag = 0;
      wireObj.kind.Apple.field = pre_field;
      return;
    }
    if (apiObj is BasicGeneralEnumTwinNormal_Orange) {
      wireObj.tag = 1;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_basic_general_enum_twin_rust_async(
      BasicGeneralEnumTwinRustAsync apiObj,
      wire_cst_basic_general_enum_twin_rust_async wireObj) {
    if (apiObj is BasicGeneralEnumTwinRustAsync_Apple) {
      var pre_field = cst_encode_String(apiObj.field);
      wireObj.tag = 0;
      wireObj.kind.Apple.field = pre_field;
      return;
    }
    if (apiObj is BasicGeneralEnumTwinRustAsync_Orange) {
      wireObj.tag = 1;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_basic_general_enum_twin_sync(
      BasicGeneralEnumTwinSync apiObj,
      wire_cst_basic_general_enum_twin_sync wireObj) {
    if (apiObj is BasicGeneralEnumTwinSync_Apple) {
      var pre_field = cst_encode_String(apiObj.field);
      wireObj.tag = 0;
      wireObj.kind.Apple.field = pre_field;
      return;
    }
    if (apiObj is BasicGeneralEnumTwinSync_Orange) {
      wireObj.tag = 1;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_basic_struct_twin_normal(
      BasicStructTwinNormal apiObj, wire_cst_basic_struct_twin_normal wireObj) {
    wireObj.apple = cst_encode_opt_String(apiObj.apple);
    wireObj.orange = cst_encode_opt_box_autoadd_i_32(apiObj.orange);
  }

  @protected
  void cst_api_fill_to_wire_basic_struct_twin_rust_async(
      BasicStructTwinRustAsync apiObj,
      wire_cst_basic_struct_twin_rust_async wireObj) {
    wireObj.apple = cst_encode_opt_String(apiObj.apple);
    wireObj.orange = cst_encode_opt_box_autoadd_i_32(apiObj.orange);
  }

  @protected
  void cst_api_fill_to_wire_basic_struct_twin_sync(
      BasicStructTwinSync apiObj, wire_cst_basic_struct_twin_sync wireObj) {
    wireObj.apple = cst_encode_opt_String(apiObj.apple);
    wireObj.orange = cst_encode_opt_box_autoadd_i_32(apiObj.orange);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal apiObj,
      wire_cst_benchmark_binary_tree_twin_normal wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.left =
        cst_encode_opt_box_benchmark_binary_tree_twin_normal(apiObj.left);
    wireObj.right =
        cst_encode_opt_box_benchmark_binary_tree_twin_normal(apiObj.right);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync apiObj,
      wire_cst_benchmark_binary_tree_twin_rust_async wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.left =
        cst_encode_opt_box_benchmark_binary_tree_twin_rust_async(apiObj.left);
    wireObj.right =
        cst_encode_opt_box_benchmark_binary_tree_twin_rust_async(apiObj.right);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync apiObj,
      wire_cst_benchmark_binary_tree_twin_sync wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.left =
        cst_encode_opt_box_benchmark_binary_tree_twin_sync(apiObj.left);
    wireObj.right =
        cst_encode_opt_box_benchmark_binary_tree_twin_sync(apiObj.right);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_blob_twin_normal(
      BenchmarkBlobTwinNormal apiObj,
      wire_cst_benchmark_blob_twin_normal wireObj) {
    wireObj.first = cst_encode_list_prim_u_8_strict(apiObj.first);
    wireObj.second = cst_encode_list_prim_u_8_strict(apiObj.second);
    wireObj.third = cst_encode_list_prim_u_8_strict(apiObj.third);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_blob_twin_rust_async(
      BenchmarkBlobTwinRustAsync apiObj,
      wire_cst_benchmark_blob_twin_rust_async wireObj) {
    wireObj.first = cst_encode_list_prim_u_8_strict(apiObj.first);
    wireObj.second = cst_encode_list_prim_u_8_strict(apiObj.second);
    wireObj.third = cst_encode_list_prim_u_8_strict(apiObj.third);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_blob_twin_sync(
      BenchmarkBlobTwinSync apiObj, wire_cst_benchmark_blob_twin_sync wireObj) {
    wireObj.first = cst_encode_list_prim_u_8_strict(apiObj.first);
    wireObj.second = cst_encode_list_prim_u_8_strict(apiObj.second);
    wireObj.third = cst_encode_list_prim_u_8_strict(apiObj.third);
  }

  @protected
  void cst_api_fill_to_wire_big_buffers_twin_normal(
      BigBuffersTwinNormal apiObj, wire_cst_big_buffers_twin_normal wireObj) {
    wireObj.int64 = cst_encode_list_prim_i_64_strict(apiObj.int64);
    wireObj.uint64 = cst_encode_list_prim_u_64_strict(apiObj.uint64);
  }

  @protected
  void cst_api_fill_to_wire_big_buffers_twin_rust_async(
      BigBuffersTwinRustAsync apiObj,
      wire_cst_big_buffers_twin_rust_async wireObj) {
    wireObj.int64 = cst_encode_list_prim_i_64_strict(apiObj.int64);
    wireObj.uint64 = cst_encode_list_prim_u_64_strict(apiObj.uint64);
  }

  @protected
  void cst_api_fill_to_wire_big_buffers_twin_sync(
      BigBuffersTwinSync apiObj, wire_cst_big_buffers_twin_sync wireObj) {
    wireObj.int64 = cst_encode_list_prim_i_64_strict(apiObj.int64);
    wireObj.uint64 = cst_encode_list_prim_u_64_strict(apiObj.uint64);
  }

  @protected
  void cst_api_fill_to_wire_blob_twin_normal(
      BlobTwinNormal apiObj, wire_cst_blob_twin_normal wireObj) {
    wireObj.field0 = cst_encode_u_8_array_1600(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_blob_twin_rust_async(
      BlobTwinRustAsync apiObj, wire_cst_blob_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_u_8_array_1600(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_blob_twin_sync(
      BlobTwinSync apiObj, wire_cst_blob_twin_sync wireObj) {
    wireObj.field0 = cst_encode_u_8_array_1600(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_box_application_env(
      ApplicationEnv apiObj, ffi.Pointer<wire_cst_application_env> wireObj) {
    cst_api_fill_to_wire_application_env(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_a_twin_normal(
      ATwinNormal apiObj, ffi.Pointer<wire_cst_a_twin_normal> wireObj) {
    cst_api_fill_to_wire_a_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_a_twin_rust_async(
      ATwinRustAsync apiObj, ffi.Pointer<wire_cst_a_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_a_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_a_twin_sync(
      ATwinSync apiObj, ffi.Pointer<wire_cst_a_twin_sync> wireObj) {
    cst_api_fill_to_wire_a_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_abc_twin_normal(
      AbcTwinNormal apiObj, ffi.Pointer<wire_cst_abc_twin_normal> wireObj) {
    cst_api_fill_to_wire_abc_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_abc_twin_rust_async(
      AbcTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_abc_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_abc_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_abc_twin_sync(
      AbcTwinSync apiObj, ffi.Pointer<wire_cst_abc_twin_sync> wireObj) {
    cst_api_fill_to_wire_abc_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_application_env(
      ApplicationEnv apiObj, ffi.Pointer<wire_cst_application_env> wireObj) {
    cst_api_fill_to_wire_application_env(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_application_settings(
      ApplicationSettings apiObj,
      ffi.Pointer<wire_cst_application_settings> wireObj) {
    cst_api_fill_to_wire_application_settings(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_attribute_twin_normal(
      AttributeTwinNormal apiObj,
      ffi.Pointer<wire_cst_attribute_twin_normal> wireObj) {
    cst_api_fill_to_wire_attribute_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_attribute_twin_rust_async(
      AttributeTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_attribute_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_attribute_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_attribute_twin_sync(
      AttributeTwinSync apiObj,
      ffi.Pointer<wire_cst_attribute_twin_sync> wireObj) {
    cst_api_fill_to_wire_attribute_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_b_twin_normal(
      BTwinNormal apiObj, ffi.Pointer<wire_cst_b_twin_normal> wireObj) {
    cst_api_fill_to_wire_b_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_b_twin_rust_async(
      BTwinRustAsync apiObj, ffi.Pointer<wire_cst_b_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_b_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_b_twin_sync(
      BTwinSync apiObj, ffi.Pointer<wire_cst_b_twin_sync> wireObj) {
    cst_api_fill_to_wire_b_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_basic_general_enum_twin_normal(
      BasicGeneralEnumTwinNormal apiObj,
      ffi.Pointer<wire_cst_basic_general_enum_twin_normal> wireObj) {
    cst_api_fill_to_wire_basic_general_enum_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_basic_general_enum_twin_rust_async(
      BasicGeneralEnumTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_basic_general_enum_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_basic_general_enum_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_basic_general_enum_twin_sync(
      BasicGeneralEnumTwinSync apiObj,
      ffi.Pointer<wire_cst_basic_general_enum_twin_sync> wireObj) {
    cst_api_fill_to_wire_basic_general_enum_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_basic_struct_twin_normal(
      BasicStructTwinNormal apiObj,
      ffi.Pointer<wire_cst_basic_struct_twin_normal> wireObj) {
    cst_api_fill_to_wire_basic_struct_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_basic_struct_twin_rust_async(
      BasicStructTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_basic_struct_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_basic_struct_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_basic_struct_twin_sync(
      BasicStructTwinSync apiObj,
      ffi.Pointer<wire_cst_basic_struct_twin_sync> wireObj) {
    cst_api_fill_to_wire_basic_struct_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_blob_twin_normal(
      BenchmarkBlobTwinNormal apiObj,
      ffi.Pointer<wire_cst_benchmark_blob_twin_normal> wireObj) {
    cst_api_fill_to_wire_benchmark_blob_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_blob_twin_rust_async(
      BenchmarkBlobTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_benchmark_blob_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_blob_twin_sync(
      BenchmarkBlobTwinSync apiObj,
      ffi.Pointer<wire_cst_benchmark_blob_twin_sync> wireObj) {
    cst_api_fill_to_wire_benchmark_blob_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_c_twin_normal(
      CTwinNormal apiObj, ffi.Pointer<wire_cst_c_twin_normal> wireObj) {
    cst_api_fill_to_wire_c_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_c_twin_rust_async(
      CTwinRustAsync apiObj, ffi.Pointer<wire_cst_c_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_c_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_c_twin_sync(
      CTwinSync apiObj, ffi.Pointer<wire_cst_c_twin_sync> wireObj) {
    cst_api_fill_to_wire_c_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_concatenate_with_twin_normal(
      ConcatenateWithTwinNormal apiObj,
      ffi.Pointer<wire_cst_concatenate_with_twin_normal> wireObj) {
    cst_api_fill_to_wire_concatenate_with_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_concatenate_with_twin_rust_async(
      ConcatenateWithTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_concatenate_with_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_concatenate_with_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_concatenate_with_twin_sync(
      ConcatenateWithTwinSync apiObj,
      ffi.Pointer<wire_cst_concatenate_with_twin_sync> wireObj) {
    cst_api_fill_to_wire_concatenate_with_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_2_twin_normal(
      CustomNestedError2TwinNormal apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_2_twin_normal> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_2_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_2_twin_rust_async(
      CustomNestedError2TwinRustAsync apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_2_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_2_twin_sync(
      CustomNestedError2TwinSync apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_2_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_inner_twin_normal(
      CustomNestedErrorInnerTwinNormal apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_inner_twin_normal> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_inner_twin_normal(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_custom_nested_error_inner_twin_rust_async(
          CustomNestedErrorInnerTwinRustAsync apiObj,
          ffi.Pointer<wire_cst_custom_nested_error_inner_twin_rust_async>
              wireObj) {
    cst_api_fill_to_wire_custom_nested_error_inner_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_inner_twin_sync(
      CustomNestedErrorInnerTwinSync apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_inner_twin_sync(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_outer_twin_normal(
      CustomNestedErrorOuterTwinNormal apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_outer_twin_normal> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_outer_twin_normal(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_custom_nested_error_outer_twin_rust_async(
          CustomNestedErrorOuterTwinRustAsync apiObj,
          ffi.Pointer<wire_cst_custom_nested_error_outer_twin_rust_async>
              wireObj) {
    cst_api_fill_to_wire_custom_nested_error_outer_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_outer_twin_sync(
      CustomNestedErrorOuterTwinSync apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_outer_twin_sync(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_error_twin_normal(
      CustomStructErrorTwinNormal apiObj,
      ffi.Pointer<wire_cst_custom_struct_error_twin_normal> wireObj) {
    cst_api_fill_to_wire_custom_struct_error_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_error_twin_rust_async(
      CustomStructErrorTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_custom_struct_error_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_error_twin_sync(
      CustomStructErrorTwinSync apiObj,
      ffi.Pointer<wire_cst_custom_struct_error_twin_sync> wireObj) {
    cst_api_fill_to_wire_custom_struct_error_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_twin_normal(
      CustomStructTwinNormal apiObj,
      ffi.Pointer<wire_cst_custom_struct_twin_normal> wireObj) {
    cst_api_fill_to_wire_custom_struct_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_twin_rust_async(
      CustomStructTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_custom_struct_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_custom_struct_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_twin_sync(
      CustomStructTwinSync apiObj,
      ffi.Pointer<wire_cst_custom_struct_twin_sync> wireObj) {
    cst_api_fill_to_wire_custom_struct_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_customized_twin_normal(
      CustomizedTwinNormal apiObj,
      ffi.Pointer<wire_cst_customized_twin_normal> wireObj) {
    cst_api_fill_to_wire_customized_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_customized_twin_rust_async(
      CustomizedTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_customized_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_customized_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_customized_twin_sync(
      CustomizedTwinSync apiObj,
      ffi.Pointer<wire_cst_customized_twin_sync> wireObj) {
    cst_api_fill_to_wire_customized_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_dart_opaque_nested_twin_normal(
      DartOpaqueNestedTwinNormal apiObj,
      ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal> wireObj) {
    cst_api_fill_to_wire_dart_opaque_nested_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_dart_opaque_nested_twin_rust_async(
      DartOpaqueNestedTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_dart_opaque_nested_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_dart_opaque_nested_twin_sync(
      DartOpaqueNestedTwinSync apiObj,
      ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync> wireObj) {
    cst_api_fill_to_wire_dart_opaque_nested_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_element_twin_normal(
      ElementTwinNormal apiObj,
      ffi.Pointer<wire_cst_element_twin_normal> wireObj) {
    cst_api_fill_to_wire_element_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_element_twin_rust_async(
      ElementTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_element_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_element_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_element_twin_sync(
      ElementTwinSync apiObj, ffi.Pointer<wire_cst_element_twin_sync> wireObj) {
    cst_api_fill_to_wire_element_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_dart_opaque_twin_normal(
      EnumDartOpaqueTwinNormal apiObj,
      ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal> wireObj) {
    cst_api_fill_to_wire_enum_dart_opaque_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_dart_opaque_twin_rust_async(
      EnumDartOpaqueTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_enum_dart_opaque_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_dart_opaque_twin_sync(
      EnumDartOpaqueTwinSync apiObj,
      ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync> wireObj) {
    cst_api_fill_to_wire_enum_dart_opaque_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_opaque_twin_moi(
      EnumOpaqueTwinMoi apiObj,
      ffi.Pointer<wire_cst_enum_opaque_twin_moi> wireObj) {
    cst_api_fill_to_wire_enum_opaque_twin_moi(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_opaque_twin_normal(
      EnumOpaqueTwinNormal apiObj,
      ffi.Pointer<wire_cst_enum_opaque_twin_normal> wireObj) {
    cst_api_fill_to_wire_enum_opaque_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_opaque_twin_rust_async(
      EnumOpaqueTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_enum_opaque_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_enum_opaque_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_opaque_twin_rust_async_moi(
      EnumOpaqueTwinRustAsyncMoi apiObj,
      ffi.Pointer<wire_cst_enum_opaque_twin_rust_async_moi> wireObj) {
    cst_api_fill_to_wire_enum_opaque_twin_rust_async_moi(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_opaque_twin_sync(
      EnumOpaqueTwinSync apiObj,
      ffi.Pointer<wire_cst_enum_opaque_twin_sync> wireObj) {
    cst_api_fill_to_wire_enum_opaque_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_opaque_twin_sync_moi(
      EnumOpaqueTwinSyncMoi apiObj,
      ffi.Pointer<wire_cst_enum_opaque_twin_sync_moi> wireObj) {
    cst_api_fill_to_wire_enum_opaque_twin_sync_moi(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_good_and_opaque_twin_moi(
      EnumWithGoodAndOpaqueTwinMoi apiObj,
      ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_moi> wireObj) {
    cst_api_fill_to_wire_enum_with_good_and_opaque_twin_moi(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_good_and_opaque_twin_normal(
      EnumWithGoodAndOpaqueTwinNormal apiObj,
      ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_normal> wireObj) {
    cst_api_fill_to_wire_enum_with_good_and_opaque_twin_normal(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_enum_with_good_and_opaque_twin_rust_async(
          EnumWithGoodAndOpaqueTwinRustAsync apiObj,
          ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_rust_async>
              wireObj) {
    cst_api_fill_to_wire_enum_with_good_and_opaque_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moi(
          EnumWithGoodAndOpaqueTwinRustAsyncMoi apiObj,
          ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_rust_async_moi>
              wireObj) {
    cst_api_fill_to_wire_enum_with_good_and_opaque_twin_rust_async_moi(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_good_and_opaque_twin_sync(
      EnumWithGoodAndOpaqueTwinSync apiObj,
      ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_sync> wireObj) {
    cst_api_fill_to_wire_enum_with_good_and_opaque_twin_sync(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_good_and_opaque_twin_sync_moi(
      EnumWithGoodAndOpaqueTwinSyncMoi apiObj,
      ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_sync_moi> wireObj) {
    cst_api_fill_to_wire_enum_with_good_and_opaque_twin_sync_moi(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_mixed_twin_normal(
      EnumWithItemMixedTwinNormal apiObj,
      ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal> wireObj) {
    cst_api_fill_to_wire_enum_with_item_mixed_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_mixed_twin_rust_async(
      EnumWithItemMixedTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_enum_with_item_mixed_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_mixed_twin_sync(
      EnumWithItemMixedTwinSync apiObj,
      ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync> wireObj) {
    cst_api_fill_to_wire_enum_with_item_mixed_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_struct_twin_normal(
      EnumWithItemStructTwinNormal apiObj,
      ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal> wireObj) {
    cst_api_fill_to_wire_enum_with_item_struct_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_struct_twin_rust_async(
      EnumWithItemStructTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_enum_with_item_struct_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_struct_twin_sync(
      EnumWithItemStructTwinSync apiObj,
      ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync> wireObj) {
    cst_api_fill_to_wire_enum_with_item_struct_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_tuple_twin_normal(
      EnumWithItemTupleTwinNormal apiObj,
      ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal> wireObj) {
    cst_api_fill_to_wire_enum_with_item_tuple_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_tuple_twin_rust_async(
      EnumWithItemTupleTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_enum_with_item_tuple_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_tuple_twin_sync(
      EnumWithItemTupleTwinSync apiObj,
      ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync> wireObj) {
    cst_api_fill_to_wire_enum_with_item_tuple_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_event_twin_normal(
      EventTwinNormal apiObj, ffi.Pointer<wire_cst_event_twin_normal> wireObj) {
    cst_api_fill_to_wire_event_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_event_twin_rust_async(
      EventTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_event_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_event_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_normal> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_sync> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feature_chrono_twin_normal(
      FeatureChronoTwinNormal apiObj,
      ffi.Pointer<wire_cst_feature_chrono_twin_normal> wireObj) {
    cst_api_fill_to_wire_feature_chrono_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feature_chrono_twin_rust_async(
      FeatureChronoTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_feature_chrono_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_feature_chrono_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feature_chrono_twin_sync(
      FeatureChronoTwinSync apiObj,
      ffi.Pointer<wire_cst_feature_chrono_twin_sync> wireObj) {
    cst_api_fill_to_wire_feature_chrono_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feature_uuid_twin_normal(
      FeatureUuidTwinNormal apiObj,
      ffi.Pointer<wire_cst_feature_uuid_twin_normal> wireObj) {
    cst_api_fill_to_wire_feature_uuid_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feature_uuid_twin_rust_async(
      FeatureUuidTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_feature_uuid_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_feature_uuid_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feature_uuid_twin_sync(
      FeatureUuidTwinSync apiObj,
      ffi.Pointer<wire_cst_feature_uuid_twin_sync> wireObj) {
    cst_api_fill_to_wire_feature_uuid_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feed_id_twin_normal(
      FeedIdTwinNormal apiObj,
      ffi.Pointer<wire_cst_feed_id_twin_normal> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feed_id_twin_rust_async(
      FeedIdTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_feed_id_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feed_id_twin_sync(
      FeedIdTwinSync apiObj, ffi.Pointer<wire_cst_feed_id_twin_sync> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_normal> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_kitchen_sink_twin_sync(
      KitchenSinkTwinSync apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_sync> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_list_of_nested_raw_string_mirrored(
      ListOfNestedRawStringMirrored apiObj,
      ffi.Pointer<wire_cst_list_of_nested_raw_string_mirrored> wireObj) {
    cst_api_fill_to_wire_list_of_nested_raw_string_mirrored(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_macro_struct(
      MacroStruct apiObj, ffi.Pointer<wire_cst_macro_struct> wireObj) {
    cst_api_fill_to_wire_macro_struct(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_measure_twin_normal(
      MeasureTwinNormal apiObj,
      ffi.Pointer<wire_cst_measure_twin_normal> wireObj) {
    cst_api_fill_to_wire_measure_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_measure_twin_rust_async(
      MeasureTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_measure_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_measure_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_measure_twin_sync(
      MeasureTwinSync apiObj, ffi.Pointer<wire_cst_measure_twin_sync> wireObj) {
    cst_api_fill_to_wire_measure_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_message_id_twin_normal(
      MessageIdTwinNormal apiObj,
      ffi.Pointer<wire_cst_message_id_twin_normal> wireObj) {
    cst_api_fill_to_wire_message_id_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_message_id_twin_rust_async(
      MessageIdTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_message_id_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_message_id_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_message_id_twin_sync(
      MessageIdTwinSync apiObj,
      ffi.Pointer<wire_cst_message_id_twin_sync> wireObj) {
    cst_api_fill_to_wire_message_id_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_callable_twin_normal(
      MyCallableTwinNormal apiObj,
      ffi.Pointer<wire_cst_my_callable_twin_normal> wireObj) {
    cst_api_fill_to_wire_my_callable_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_callable_twin_rust_async(
      MyCallableTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_my_callable_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_my_callable_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_callable_twin_sync(
      MyCallableTwinSync apiObj,
      ffi.Pointer<wire_cst_my_callable_twin_sync> wireObj) {
    cst_api_fill_to_wire_my_callable_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_nested_struct_twin_normal(
      MyNestedStructTwinNormal apiObj,
      ffi.Pointer<wire_cst_my_nested_struct_twin_normal> wireObj) {
    cst_api_fill_to_wire_my_nested_struct_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_nested_struct_twin_rust_async(
      MyNestedStructTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_my_nested_struct_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_nested_struct_twin_sync(
      MyNestedStructTwinSync apiObj,
      ffi.Pointer<wire_cst_my_nested_struct_twin_sync> wireObj) {
    cst_api_fill_to_wire_my_nested_struct_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_size(
      MySize apiObj, ffi.Pointer<wire_cst_my_size> wireObj) {
    cst_api_fill_to_wire_my_size(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_struct(
      MyStruct apiObj, ffi.Pointer<wire_cst_my_struct> wireObj) {
    cst_api_fill_to_wire_my_struct(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_tree_node_twin_normal(
      MyTreeNodeTwinNormal apiObj,
      ffi.Pointer<wire_cst_my_tree_node_twin_normal> wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_tree_node_twin_rust_async(
      MyTreeNodeTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_my_tree_node_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_tree_node_twin_sync(
      MyTreeNodeTwinSync apiObj,
      ffi.Pointer<wire_cst_my_tree_node_twin_sync> wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_nested_raw_string_mirrored(
      NestedRawStringMirrored apiObj,
      ffi.Pointer<wire_cst_nested_raw_string_mirrored> wireObj) {
    cst_api_fill_to_wire_nested_raw_string_mirrored(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_new_type_int_twin_normal(
      NewTypeIntTwinNormal apiObj,
      ffi.Pointer<wire_cst_new_type_int_twin_normal> wireObj) {
    cst_api_fill_to_wire_new_type_int_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_new_type_int_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_new_type_int_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_new_type_int_twin_sync(
      NewTypeIntTwinSync apiObj,
      ffi.Pointer<wire_cst_new_type_int_twin_sync> wireObj) {
    cst_api_fill_to_wire_new_type_int_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_note_twin_normal(
      NoteTwinNormal apiObj, ffi.Pointer<wire_cst_note_twin_normal> wireObj) {
    cst_api_fill_to_wire_note_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_note_twin_rust_async(
      NoteTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_note_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_note_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_note_twin_sync(
      NoteTwinSync apiObj, ffi.Pointer<wire_cst_note_twin_sync> wireObj) {
    cst_api_fill_to_wire_note_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_numbers(
      Numbers apiObj, ffi.Pointer<wire_cst_numbers> wireObj) {
    cst_api_fill_to_wire_numbers(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opaque_nested_twin_moi(
      OpaqueNestedTwinMoi apiObj,
      ffi.Pointer<wire_cst_opaque_nested_twin_moi> wireObj) {
    cst_api_fill_to_wire_opaque_nested_twin_moi(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opaque_nested_twin_normal(
      OpaqueNestedTwinNormal apiObj,
      ffi.Pointer<wire_cst_opaque_nested_twin_normal> wireObj) {
    cst_api_fill_to_wire_opaque_nested_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opaque_nested_twin_rust_async(
      OpaqueNestedTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_opaque_nested_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_opaque_nested_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opaque_nested_twin_rust_async_moi(
      OpaqueNestedTwinRustAsyncMoi apiObj,
      ffi.Pointer<wire_cst_opaque_nested_twin_rust_async_moi> wireObj) {
    cst_api_fill_to_wire_opaque_nested_twin_rust_async_moi(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opaque_nested_twin_sync(
      OpaqueNestedTwinSync apiObj,
      ffi.Pointer<wire_cst_opaque_nested_twin_sync> wireObj) {
    cst_api_fill_to_wire_opaque_nested_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opaque_nested_twin_sync_moi(
      OpaqueNestedTwinSyncMoi apiObj,
      ffi.Pointer<wire_cst_opaque_nested_twin_sync_moi> wireObj) {
    cst_api_fill_to_wire_opaque_nested_twin_sync_moi(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opt_vecs_twin_normal(
      OptVecsTwinNormal apiObj,
      ffi.Pointer<wire_cst_opt_vecs_twin_normal> wireObj) {
    cst_api_fill_to_wire_opt_vecs_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opt_vecs_twin_rust_async(
      OptVecsTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_opt_vecs_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_opt_vecs_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opt_vecs_twin_sync(
      OptVecsTwinSync apiObj,
      ffi.Pointer<wire_cst_opt_vecs_twin_sync> wireObj) {
    cst_api_fill_to_wire_opt_vecs_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_raw_string_mirrored(
      RawStringMirrored apiObj,
      ffi.Pointer<wire_cst_raw_string_mirrored> wireObj) {
    cst_api_fill_to_wire_raw_string_mirrored(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_record_string_i_32(
      (String, int) apiObj, ffi.Pointer<wire_cst_record_string_i_32> wireObj) {
    cst_api_fill_to_wire_record_string_i_32(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_sequences(
      Sequences apiObj, ffi.Pointer<wire_cst_sequences> wireObj) {
    cst_api_fill_to_wire_sequences(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_simple_struct_twin_normal(
      SimpleStructTwinNormal apiObj,
      ffi.Pointer<wire_cst_simple_struct_twin_normal> wireObj) {
    cst_api_fill_to_wire_simple_struct_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_simple_struct_twin_rust_async(
      SimpleStructTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_simple_struct_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_simple_struct_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_simple_struct_twin_sync(
      SimpleStructTwinSync apiObj,
      ffi.Pointer<wire_cst_simple_struct_twin_sync> wireObj) {
    cst_api_fill_to_wire_simple_struct_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_some_struct_twin_normal(
      SomeStructTwinNormal apiObj,
      ffi.Pointer<wire_cst_some_struct_twin_normal> wireObj) {
    cst_api_fill_to_wire_some_struct_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_some_struct_twin_rust_async(
      SomeStructTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_some_struct_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_some_struct_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_some_struct_twin_sync(
      SomeStructTwinSync apiObj,
      ffi.Pointer<wire_cst_some_struct_twin_sync> wireObj) {
    cst_api_fill_to_wire_some_struct_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_in_lower_level(
      StructInLowerLevel apiObj,
      ffi.Pointer<wire_cst_struct_in_lower_level> wireObj) {
    cst_api_fill_to_wire_struct_in_lower_level(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_comments_twin_normal(
      StructWithCommentsTwinNormal apiObj,
      ffi.Pointer<wire_cst_struct_with_comments_twin_normal> wireObj) {
    cst_api_fill_to_wire_struct_with_comments_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_comments_twin_rust_async(
      StructWithCommentsTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_struct_with_comments_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_comments_twin_sync(
      StructWithCommentsTwinSync apiObj,
      ffi.Pointer<wire_cst_struct_with_comments_twin_sync> wireObj) {
    cst_api_fill_to_wire_struct_with_comments_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_enum_twin_normal(
      StructWithEnumTwinNormal apiObj,
      ffi.Pointer<wire_cst_struct_with_enum_twin_normal> wireObj) {
    cst_api_fill_to_wire_struct_with_enum_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_enum_twin_rust_async(
      StructWithEnumTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_struct_with_enum_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_enum_twin_sync(
      StructWithEnumTwinSync apiObj,
      ffi.Pointer<wire_cst_struct_with_enum_twin_sync> wireObj) {
    cst_api_fill_to_wire_struct_with_enum_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moi(
          StructWithExplicitAutoOpaqueFieldTwinMoi apiObj,
          ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_moi>
              wireObj) {
    cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_moi(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normal(
          StructWithExplicitAutoOpaqueFieldTwinNormal apiObj,
          ffi.Pointer<
                  wire_cst_struct_with_explicit_auto_opaque_field_twin_normal>
              wireObj) {
    cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_normal(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async(
      StructWithExplicitAutoOpaqueFieldTwinRustAsync apiObj,
      ffi.Pointer<
              wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async>
          wireObj) {
    cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
      StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi apiObj,
      ffi.Pointer<
              wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async_moi>
          wireObj) {
    cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync(
          StructWithExplicitAutoOpaqueFieldTwinSync apiObj,
          ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_sync>
              wireObj) {
    cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_sync(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moi(
          StructWithExplicitAutoOpaqueFieldTwinSyncMoi apiObj,
          ffi.Pointer<
                  wire_cst_struct_with_explicit_auto_opaque_field_twin_sync_moi>
              wireObj) {
    cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_sync_moi(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_struct_with_good_and_opaque_field_twin_moi(
          StructWithGoodAndOpaqueFieldTwinMoi apiObj,
          ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_moi>
              wireObj) {
    cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_moi(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_struct_with_good_and_opaque_field_twin_normal(
          StructWithGoodAndOpaqueFieldTwinNormal apiObj,
          ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_normal>
              wireObj) {
    cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_normal(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async(
          StructWithGoodAndOpaqueFieldTwinRustAsync apiObj,
          ffi.Pointer<
                  wire_cst_struct_with_good_and_opaque_field_twin_rust_async>
              wireObj) {
    cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moi(
      StructWithGoodAndOpaqueFieldTwinRustAsyncMoi apiObj,
      ffi.Pointer<
              wire_cst_struct_with_good_and_opaque_field_twin_rust_async_moi>
          wireObj) {
    cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_rust_async_moi(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_struct_with_good_and_opaque_field_twin_sync(
          StructWithGoodAndOpaqueFieldTwinSync apiObj,
          ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_sync>
              wireObj) {
    cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_sync(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moi(
          StructWithGoodAndOpaqueFieldTwinSyncMoi apiObj,
          ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_sync_moi>
              wireObj) {
    cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_sync_moi(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_one_field_twin_normal(
      StructWithOneFieldTwinNormal apiObj,
      ffi.Pointer<wire_cst_struct_with_one_field_twin_normal> wireObj) {
    cst_api_fill_to_wire_struct_with_one_field_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_one_field_twin_rust_async(
      StructWithOneFieldTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_struct_with_one_field_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_one_field_twin_sync(
      StructWithOneFieldTwinSync apiObj,
      ffi.Pointer<wire_cst_struct_with_one_field_twin_sync> wireObj) {
    cst_api_fill_to_wire_struct_with_one_field_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_two_field_twin_normal(
      StructWithTwoFieldTwinNormal apiObj,
      ffi.Pointer<wire_cst_struct_with_two_field_twin_normal> wireObj) {
    cst_api_fill_to_wire_struct_with_two_field_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_two_field_twin_rust_async(
      StructWithTwoFieldTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_struct_with_two_field_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_two_field_twin_sync(
      StructWithTwoFieldTwinSync apiObj,
      ffi.Pointer<wire_cst_struct_with_two_field_twin_sync> wireObj) {
    cst_api_fill_to_wire_struct_with_two_field_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_sum_with_twin_normal(
      SumWithTwinNormal apiObj,
      ffi.Pointer<wire_cst_sum_with_twin_normal> wireObj) {
    cst_api_fill_to_wire_sum_with_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_sum_with_twin_rust_async(
      SumWithTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_sum_with_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_sum_with_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_sum_with_twin_sync(
      SumWithTwinSync apiObj,
      ffi.Pointer<wire_cst_sum_with_twin_sync> wireObj) {
    cst_api_fill_to_wire_sum_with_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_test_id_twin_normal(
      TestIdTwinNormal apiObj,
      ffi.Pointer<wire_cst_test_id_twin_normal> wireObj) {
    cst_api_fill_to_wire_test_id_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_test_id_twin_rust_async(
      TestIdTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_test_id_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_test_id_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_test_id_twin_sync(
      TestIdTwinSync apiObj, ffi.Pointer<wire_cst_test_id_twin_sync> wireObj) {
    cst_api_fill_to_wire_test_id_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_tuple_struct_with_one_field_twin_normal(
      TupleStructWithOneFieldTwinNormal apiObj,
      ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_normal> wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_normal(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_tuple_struct_with_one_field_twin_rust_async(
          TupleStructWithOneFieldTwinRustAsync apiObj,
          ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_rust_async>
              wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_tuple_struct_with_one_field_twin_sync(
      TupleStructWithOneFieldTwinSync apiObj,
      ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync> wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_sync(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_tuple_struct_with_two_field_twin_normal(
      TupleStructWithTwoFieldTwinNormal apiObj,
      ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_normal> wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_normal(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_tuple_struct_with_two_field_twin_rust_async(
          TupleStructWithTwoFieldTwinRustAsync apiObj,
          ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_rust_async>
              wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_tuple_struct_with_two_field_twin_sync(
      TupleStructWithTwoFieldTwinSync apiObj,
      ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync> wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_sync(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_user_id_twin_normal(
      UserIdTwinNormal apiObj,
      ffi.Pointer<wire_cst_user_id_twin_normal> wireObj) {
    cst_api_fill_to_wire_user_id_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_user_id_twin_rust_async(
      UserIdTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_user_id_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_user_id_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_user_id_twin_sync(
      UserIdTwinSync apiObj, ffi.Pointer<wire_cst_user_id_twin_sync> wireObj) {
    cst_api_fill_to_wire_user_id_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_blob_twin_normal(
      BlobTwinNormal apiObj, ffi.Pointer<wire_cst_blob_twin_normal> wireObj) {
    cst_api_fill_to_wire_blob_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_blob_twin_rust_async(BlobTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_blob_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_blob_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_blob_twin_sync(
      BlobTwinSync apiObj, ffi.Pointer<wire_cst_blob_twin_sync> wireObj) {
    cst_api_fill_to_wire_blob_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_distance_twin_normal(DistanceTwinNormal apiObj,
      ffi.Pointer<wire_cst_distance_twin_normal> wireObj) {
    cst_api_fill_to_wire_distance_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_distance_twin_rust_async(
      DistanceTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_distance_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_distance_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_distance_twin_sync(DistanceTwinSync apiObj,
      ffi.Pointer<wire_cst_distance_twin_sync> wireObj) {
    cst_api_fill_to_wire_distance_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_normal> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_sync> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_feed_id_twin_normal(FeedIdTwinNormal apiObj,
      ffi.Pointer<wire_cst_feed_id_twin_normal> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_feed_id_twin_rust_async(
      FeedIdTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_feed_id_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_feed_id_twin_sync(
      FeedIdTwinSync apiObj, ffi.Pointer<wire_cst_feed_id_twin_sync> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_normal> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_kitchen_sink_twin_sync(
      KitchenSinkTwinSync apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_sync> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_my_size(
      MySize apiObj, ffi.Pointer<wire_cst_my_size> wireObj) {
    cst_api_fill_to_wire_my_size(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_speed_twin_normal(
      SpeedTwinNormal apiObj, ffi.Pointer<wire_cst_speed_twin_normal> wireObj) {
    cst_api_fill_to_wire_speed_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_speed_twin_rust_async(SpeedTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_speed_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_speed_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_speed_twin_sync(
      SpeedTwinSync apiObj, ffi.Pointer<wire_cst_speed_twin_sync> wireObj) {
    cst_api_fill_to_wire_speed_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_u_8_array_1600(
      U8Array1600 apiObj, ffi.Pointer<wire_cst_list_prim_u_8_strict> wireObj) {
    wireObj = cst_encode_u_8_array_1600(apiObj);
  }

  @protected
  void cst_api_fill_to_wire_box_u_8_array_8(
      U8Array8 apiObj, ffi.Pointer<wire_cst_list_prim_u_8_strict> wireObj) {
    wireObj = cst_encode_u_8_array_8(apiObj);
  }

  @protected
  void cst_api_fill_to_wire_c_twin_normal(
      CTwinNormal apiObj, wire_cst_c_twin_normal wireObj) {
    wireObj.c = cst_encode_bool(apiObj.c);
  }

  @protected
  void cst_api_fill_to_wire_c_twin_rust_async(
      CTwinRustAsync apiObj, wire_cst_c_twin_rust_async wireObj) {
    wireObj.c = cst_encode_bool(apiObj.c);
  }

  @protected
  void cst_api_fill_to_wire_c_twin_sync(
      CTwinSync apiObj, wire_cst_c_twin_sync wireObj) {
    wireObj.c = cst_encode_bool(apiObj.c);
  }

  @protected
  void cst_api_fill_to_wire_concatenate_with_twin_normal(
      ConcatenateWithTwinNormal apiObj,
      wire_cst_concatenate_with_twin_normal wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_concatenate_with_twin_rust_async(
      ConcatenateWithTwinRustAsync apiObj,
      wire_cst_concatenate_with_twin_rust_async wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_concatenate_with_twin_sync(
      ConcatenateWithTwinSync apiObj,
      wire_cst_concatenate_with_twin_sync wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_constructor_translatable_struct_twin_normal(
      ConstructorTranslatableStructTwinNormal apiObj,
      wire_cst_constructor_translatable_struct_twin_normal wireObj) {
    wireObj.one = cst_encode_String(apiObj.one);
  }

  @protected
  void cst_api_fill_to_wire_constructor_translatable_sync_struct_twin_normal(
      ConstructorTranslatableSyncStructTwinNormal apiObj,
      wire_cst_constructor_translatable_sync_struct_twin_normal wireObj) {
    wireObj.one = cst_encode_String(apiObj.one);
  }

  @protected
  void cst_api_fill_to_wire_contains_mirrored_sub_struct_twin_normal(
      ContainsMirroredSubStructTwinNormal apiObj,
      wire_cst_contains_mirrored_sub_struct_twin_normal wireObj) {
    cst_api_fill_to_wire_raw_string_mirrored(apiObj.test, wireObj.test);
    cst_api_fill_to_wire_another_twin_normal(apiObj.test2, wireObj.test2);
  }

  @protected
  void cst_api_fill_to_wire_contains_mirrored_sub_struct_twin_rust_async(
      ContainsMirroredSubStructTwinRustAsync apiObj,
      wire_cst_contains_mirrored_sub_struct_twin_rust_async wireObj) {
    cst_api_fill_to_wire_raw_string_mirrored(apiObj.test, wireObj.test);
    cst_api_fill_to_wire_another_twin_rust_async(apiObj.test2, wireObj.test2);
  }

  @protected
  void cst_api_fill_to_wire_contains_mirrored_sub_struct_twin_sync(
      ContainsMirroredSubStructTwinSync apiObj,
      wire_cst_contains_mirrored_sub_struct_twin_sync wireObj) {
    cst_api_fill_to_wire_raw_string_mirrored(apiObj.test, wireObj.test);
    cst_api_fill_to_wire_another_twin_sync(apiObj.test2, wireObj.test2);
  }

  @protected
  void cst_api_fill_to_wire_custom_enum_error_twin_normal(
      CustomEnumErrorTwinNormal apiObj,
      wire_cst_custom_enum_error_twin_normal wireObj) {
    if (apiObj is CustomEnumErrorTwinNormal_One) {
      var pre_message = cst_encode_String(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.One.message = pre_message;
      wireObj.kind.One.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomEnumErrorTwinNormal_Two) {
      var pre_message = cst_encode_u_32(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Two.message = pre_message;
      wireObj.kind.Two.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_enum_error_twin_rust_async(
      CustomEnumErrorTwinRustAsync apiObj,
      wire_cst_custom_enum_error_twin_rust_async wireObj) {
    if (apiObj is CustomEnumErrorTwinRustAsync_One) {
      var pre_message = cst_encode_String(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.One.message = pre_message;
      wireObj.kind.One.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomEnumErrorTwinRustAsync_Two) {
      var pre_message = cst_encode_u_32(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Two.message = pre_message;
      wireObj.kind.Two.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_enum_error_twin_sync(
      CustomEnumErrorTwinSync apiObj,
      wire_cst_custom_enum_error_twin_sync wireObj) {
    if (apiObj is CustomEnumErrorTwinSync_One) {
      var pre_message = cst_encode_String(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.One.message = pre_message;
      wireObj.kind.One.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomEnumErrorTwinSync_Two) {
      var pre_message = cst_encode_u_32(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Two.message = pre_message;
      wireObj.kind.Two.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_error_twin_normal(
      CustomErrorTwinNormal apiObj, wire_cst_custom_error_twin_normal wireObj) {
    if (apiObj is CustomErrorTwinNormal_Error0) {
      var pre_e = cst_encode_String(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.Error0.e = pre_e;
      wireObj.kind.Error0.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomErrorTwinNormal_Error1) {
      var pre_e = cst_encode_u_32(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Error1.e = pre_e;
      wireObj.kind.Error1.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_error_twin_rust_async(
      CustomErrorTwinRustAsync apiObj,
      wire_cst_custom_error_twin_rust_async wireObj) {
    if (apiObj is CustomErrorTwinRustAsync_Error0) {
      var pre_e = cst_encode_String(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.Error0.e = pre_e;
      wireObj.kind.Error0.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomErrorTwinRustAsync_Error1) {
      var pre_e = cst_encode_u_32(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Error1.e = pre_e;
      wireObj.kind.Error1.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_error_twin_sync(
      CustomErrorTwinSync apiObj, wire_cst_custom_error_twin_sync wireObj) {
    if (apiObj is CustomErrorTwinSync_Error0) {
      var pre_e = cst_encode_String(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.Error0.e = pre_e;
      wireObj.kind.Error0.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomErrorTwinSync_Error1) {
      var pre_e = cst_encode_u_32(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Error1.e = pre_e;
      wireObj.kind.Error1.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_1_twin_normal(
      CustomNestedError1TwinNormal apiObj,
      wire_cst_custom_nested_error_1_twin_normal wireObj) {
    if (apiObj is CustomNestedError1TwinNormal_CustomNested1) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested1.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError1TwinNormal_ErrorNested) {
      var pre_field0 = cst_encode_box_autoadd_custom_nested_error_2_twin_normal(
          apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.ErrorNested.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_1_twin_rust_async(
      CustomNestedError1TwinRustAsync apiObj,
      wire_cst_custom_nested_error_1_twin_rust_async wireObj) {
    if (apiObj is CustomNestedError1TwinRustAsync_CustomNested1) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested1.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError1TwinRustAsync_ErrorNested) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_2_twin_rust_async(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.ErrorNested.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_1_twin_sync(
      CustomNestedError1TwinSync apiObj,
      wire_cst_custom_nested_error_1_twin_sync wireObj) {
    if (apiObj is CustomNestedError1TwinSync_CustomNested1) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested1.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError1TwinSync_ErrorNested) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_2_twin_sync(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.ErrorNested.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_2_twin_normal(
      CustomNestedError2TwinNormal apiObj,
      wire_cst_custom_nested_error_2_twin_normal wireObj) {
    if (apiObj is CustomNestedError2TwinNormal_CustomNested2) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested2.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError2TwinNormal_CustomNested2Number) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.CustomNested2Number.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_2_twin_rust_async(
      CustomNestedError2TwinRustAsync apiObj,
      wire_cst_custom_nested_error_2_twin_rust_async wireObj) {
    if (apiObj is CustomNestedError2TwinRustAsync_CustomNested2) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested2.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError2TwinRustAsync_CustomNested2Number) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.CustomNested2Number.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_2_twin_sync(
      CustomNestedError2TwinSync apiObj,
      wire_cst_custom_nested_error_2_twin_sync wireObj) {
    if (apiObj is CustomNestedError2TwinSync_CustomNested2) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested2.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError2TwinSync_CustomNested2Number) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.CustomNested2Number.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_inner_twin_normal(
      CustomNestedErrorInnerTwinNormal apiObj,
      wire_cst_custom_nested_error_inner_twin_normal wireObj) {
    if (apiObj is CustomNestedErrorInnerTwinNormal_Three) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Three.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorInnerTwinNormal_Four) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Four.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_inner_twin_rust_async(
      CustomNestedErrorInnerTwinRustAsync apiObj,
      wire_cst_custom_nested_error_inner_twin_rust_async wireObj) {
    if (apiObj is CustomNestedErrorInnerTwinRustAsync_Three) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Three.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorInnerTwinRustAsync_Four) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Four.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_inner_twin_sync(
      CustomNestedErrorInnerTwinSync apiObj,
      wire_cst_custom_nested_error_inner_twin_sync wireObj) {
    if (apiObj is CustomNestedErrorInnerTwinSync_Three) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Three.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorInnerTwinSync_Four) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Four.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_outer_twin_normal(
      CustomNestedErrorOuterTwinNormal apiObj,
      wire_cst_custom_nested_error_outer_twin_normal wireObj) {
    if (apiObj is CustomNestedErrorOuterTwinNormal_One) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.One.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorOuterTwinNormal_Two) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_inner_twin_normal(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Two.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_outer_twin_rust_async(
      CustomNestedErrorOuterTwinRustAsync apiObj,
      wire_cst_custom_nested_error_outer_twin_rust_async wireObj) {
    if (apiObj is CustomNestedErrorOuterTwinRustAsync_One) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.One.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorOuterTwinRustAsync_Two) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_inner_twin_rust_async(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Two.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_outer_twin_sync(
      CustomNestedErrorOuterTwinSync apiObj,
      wire_cst_custom_nested_error_outer_twin_sync wireObj) {
    if (apiObj is CustomNestedErrorOuterTwinSync_One) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.One.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorOuterTwinSync_Two) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_inner_twin_sync(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Two.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_another_twin_normal(
      CustomStructErrorAnotherTwinNormal apiObj,
      wire_cst_custom_struct_error_another_twin_normal wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_another_twin_rust_async(
      CustomStructErrorAnotherTwinRustAsync apiObj,
      wire_cst_custom_struct_error_another_twin_rust_async wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_another_twin_sync(
      CustomStructErrorAnotherTwinSync apiObj,
      wire_cst_custom_struct_error_another_twin_sync wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_twin_normal(
      CustomStructErrorTwinNormal apiObj,
      wire_cst_custom_struct_error_twin_normal wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_twin_rust_async(
      CustomStructErrorTwinRustAsync apiObj,
      wire_cst_custom_struct_error_twin_rust_async wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_twin_sync(
      CustomStructErrorTwinSync apiObj,
      wire_cst_custom_struct_error_twin_sync wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_twin_normal(
      CustomStructTwinNormal apiObj,
      wire_cst_custom_struct_twin_normal wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_twin_rust_async(
      CustomStructTwinRustAsync apiObj,
      wire_cst_custom_struct_twin_rust_async wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_twin_sync(
      CustomStructTwinSync apiObj, wire_cst_custom_struct_twin_sync wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_customized_twin_normal(
      CustomizedTwinNormal apiObj, wire_cst_customized_twin_normal wireObj) {
    wireObj.final_field = cst_encode_String(apiObj.finalField);
    wireObj.non_final_field = cst_encode_opt_String(apiObj.nonFinalField);
  }

  @protected
  void cst_api_fill_to_wire_customized_twin_rust_async(
      CustomizedTwinRustAsync apiObj,
      wire_cst_customized_twin_rust_async wireObj) {
    wireObj.final_field = cst_encode_String(apiObj.finalField);
    wireObj.non_final_field = cst_encode_opt_String(apiObj.nonFinalField);
  }

  @protected
  void cst_api_fill_to_wire_customized_twin_sync(
      CustomizedTwinSync apiObj, wire_cst_customized_twin_sync wireObj) {
    wireObj.final_field = cst_encode_String(apiObj.finalField);
    wireObj.non_final_field = cst_encode_opt_String(apiObj.nonFinalField);
  }

  @protected
  void cst_api_fill_to_wire_dart_opaque_nested_twin_normal(
      DartOpaqueNestedTwinNormal apiObj,
      wire_cst_dart_opaque_nested_twin_normal wireObj) {
    wireObj.first = cst_encode_DartOpaque(apiObj.first);
    wireObj.second = cst_encode_DartOpaque(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_dart_opaque_nested_twin_rust_async(
      DartOpaqueNestedTwinRustAsync apiObj,
      wire_cst_dart_opaque_nested_twin_rust_async wireObj) {
    wireObj.first = cst_encode_DartOpaque(apiObj.first);
    wireObj.second = cst_encode_DartOpaque(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_dart_opaque_nested_twin_sync(
      DartOpaqueNestedTwinSync apiObj,
      wire_cst_dart_opaque_nested_twin_sync wireObj) {
    wireObj.first = cst_encode_DartOpaque(apiObj.first);
    wireObj.second = cst_encode_DartOpaque(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_demo_struct_for_rust_call_dart_twin_normal(
      DemoStructForRustCallDartTwinNormal apiObj,
      wire_cst_demo_struct_for_rust_call_dart_twin_normal wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
  }

  @protected
  void cst_api_fill_to_wire_demo_struct_for_rust_call_dart_twin_rust_async(
      DemoStructForRustCallDartTwinRustAsync apiObj,
      wire_cst_demo_struct_for_rust_call_dart_twin_rust_async wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
  }

  @protected
  void cst_api_fill_to_wire_distance_twin_normal(
      DistanceTwinNormal apiObj, wire_cst_distance_twin_normal wireObj) {
    if (apiObj is DistanceTwinNormal_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is DistanceTwinNormal_Map) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Map.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_distance_twin_rust_async(
      DistanceTwinRustAsync apiObj, wire_cst_distance_twin_rust_async wireObj) {
    if (apiObj is DistanceTwinRustAsync_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is DistanceTwinRustAsync_Map) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Map.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_distance_twin_sync(
      DistanceTwinSync apiObj, wire_cst_distance_twin_sync wireObj) {
    if (apiObj is DistanceTwinSync_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is DistanceTwinSync_Map) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Map.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_element_twin_normal(
      ElementTwinNormal apiObj, wire_cst_element_twin_normal wireObj) {
    wireObj.tag = cst_encode_opt_String(apiObj.tag);
    wireObj.text = cst_encode_opt_String(apiObj.text);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_normal(apiObj.attributes);
    wireObj.children = cst_encode_opt_list_element_twin_normal(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_element_twin_rust_async(
      ElementTwinRustAsync apiObj, wire_cst_element_twin_rust_async wireObj) {
    wireObj.tag = cst_encode_opt_String(apiObj.tag);
    wireObj.text = cst_encode_opt_String(apiObj.text);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_rust_async(apiObj.attributes);
    wireObj.children =
        cst_encode_opt_list_element_twin_rust_async(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_element_twin_sync(
      ElementTwinSync apiObj, wire_cst_element_twin_sync wireObj) {
    wireObj.tag = cst_encode_opt_String(apiObj.tag);
    wireObj.text = cst_encode_opt_String(apiObj.text);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_sync(apiObj.attributes);
    wireObj.children = cst_encode_opt_list_element_twin_sync(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_empty_twin_normal(
      EmptyTwinNormal apiObj, wire_cst_empty_twin_normal wireObj) {}

  @protected
  void cst_api_fill_to_wire_empty_twin_rust_async(
      EmptyTwinRustAsync apiObj, wire_cst_empty_twin_rust_async wireObj) {}

  @protected
  void cst_api_fill_to_wire_empty_twin_sync(
      EmptyTwinSync apiObj, wire_cst_empty_twin_sync wireObj) {}

  @protected
  void cst_api_fill_to_wire_enum_dart_opaque_twin_normal(
      EnumDartOpaqueTwinNormal apiObj,
      wire_cst_enum_dart_opaque_twin_normal wireObj) {
    if (apiObj is EnumDartOpaqueTwinNormal_Primitive) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumDartOpaqueTwinNormal_Opaque) {
      var pre_field0 = cst_encode_DartOpaque(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Opaque.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_dart_opaque_twin_rust_async(
      EnumDartOpaqueTwinRustAsync apiObj,
      wire_cst_enum_dart_opaque_twin_rust_async wireObj) {
    if (apiObj is EnumDartOpaqueTwinRustAsync_Primitive) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumDartOpaqueTwinRustAsync_Opaque) {
      var pre_field0 = cst_encode_DartOpaque(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Opaque.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_dart_opaque_twin_sync(
      EnumDartOpaqueTwinSync apiObj,
      wire_cst_enum_dart_opaque_twin_sync wireObj) {
    if (apiObj is EnumDartOpaqueTwinSync_Primitive) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumDartOpaqueTwinSync_Opaque) {
      var pre_field0 = cst_encode_DartOpaque(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Opaque.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_opaque_twin_moi(
      EnumOpaqueTwinMoi apiObj, wire_cst_enum_opaque_twin_moi wireObj) {
    if (apiObj is EnumOpaqueTwinMoi_Struct) {
      var pre_field0 = cst_encode_RustOpaque_HideDataTwinMoi(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Struct.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinMoi_Primitive) {
      var pre_field0 = cst_encode_RustOpaque_i16(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinMoi_TraitObj) {
      var pre_field0 =
          cst_encode_RustOpaque_BoxdynDartDebugTwinMoi(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.TraitObj.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinMoi_Mutex) {
      var pre_field0 =
          cst_encode_RustOpaque_MutexHideDataTwinMoi(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.Mutex.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinMoi_RwLock) {
      var pre_field0 =
          cst_encode_RustOpaque_RwLockHideDataTwinMoi(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.RwLock.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinMoi_Nothing) {
      wireObj.tag = 5;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_opaque_twin_normal(
      EnumOpaqueTwinNormal apiObj, wire_cst_enum_opaque_twin_normal wireObj) {
    if (apiObj is EnumOpaqueTwinNormal_Struct) {
      var pre_field0 = cst_encode_RustOpaque_HideDataTwinNormal(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Struct.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinNormal_Primitive) {
      var pre_field0 = cst_encode_RustOpaque_i32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinNormal_TraitObj) {
      var pre_field0 =
          cst_encode_RustOpaque_BoxdynDartDebugTwinNormal(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.TraitObj.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinNormal_Mutex) {
      var pre_field0 =
          cst_encode_RustOpaque_MutexHideDataTwinNormal(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.Mutex.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinNormal_RwLock) {
      var pre_field0 =
          cst_encode_RustOpaque_RwLockHideDataTwinNormal(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.RwLock.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinNormal_Nothing) {
      wireObj.tag = 5;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_opaque_twin_rust_async(
      EnumOpaqueTwinRustAsync apiObj,
      wire_cst_enum_opaque_twin_rust_async wireObj) {
    if (apiObj is EnumOpaqueTwinRustAsync_Struct) {
      var pre_field0 =
          cst_encode_RustOpaque_HideDataTwinRustAsync(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Struct.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsync_Primitive) {
      var pre_field0 = cst_encode_RustOpaque_i32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsync_TraitObj) {
      var pre_field0 =
          cst_encode_RustOpaque_BoxdynDartDebugTwinRustAsync(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.TraitObj.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsync_Mutex) {
      var pre_field0 =
          cst_encode_RustOpaque_MutexHideDataTwinRustAsync(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.Mutex.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsync_RwLock) {
      var pre_field0 =
          cst_encode_RustOpaque_RwLockHideDataTwinRustAsync(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.RwLock.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsync_Nothing) {
      wireObj.tag = 5;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_opaque_twin_rust_async_moi(
      EnumOpaqueTwinRustAsyncMoi apiObj,
      wire_cst_enum_opaque_twin_rust_async_moi wireObj) {
    if (apiObj is EnumOpaqueTwinRustAsyncMoi_Struct) {
      var pre_field0 =
          cst_encode_RustOpaque_HideDataTwinRustAsyncMoi(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Struct.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsyncMoi_Primitive) {
      var pre_field0 = cst_encode_RustOpaque_i16(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsyncMoi_TraitObj) {
      var pre_field0 =
          cst_encode_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.TraitObj.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsyncMoi_Mutex) {
      var pre_field0 =
          cst_encode_RustOpaque_MutexHideDataTwinRustAsyncMoi(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.Mutex.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsyncMoi_RwLock) {
      var pre_field0 =
          cst_encode_RustOpaque_RwLockHideDataTwinRustAsyncMoi(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.RwLock.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsyncMoi_Nothing) {
      wireObj.tag = 5;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_opaque_twin_sync(
      EnumOpaqueTwinSync apiObj, wire_cst_enum_opaque_twin_sync wireObj) {
    if (apiObj is EnumOpaqueTwinSync_Struct) {
      var pre_field0 = cst_encode_RustOpaque_HideDataTwinSync(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Struct.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSync_Primitive) {
      var pre_field0 = cst_encode_RustOpaque_i32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSync_TraitObj) {
      var pre_field0 =
          cst_encode_RustOpaque_BoxdynDartDebugTwinSync(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.TraitObj.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSync_Mutex) {
      var pre_field0 =
          cst_encode_RustOpaque_MutexHideDataTwinSync(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.Mutex.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSync_RwLock) {
      var pre_field0 =
          cst_encode_RustOpaque_RwLockHideDataTwinSync(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.RwLock.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSync_Nothing) {
      wireObj.tag = 5;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_opaque_twin_sync_moi(
      EnumOpaqueTwinSyncMoi apiObj,
      wire_cst_enum_opaque_twin_sync_moi wireObj) {
    if (apiObj is EnumOpaqueTwinSyncMoi_Struct) {
      var pre_field0 = cst_encode_RustOpaque_HideDataTwinSyncMoi(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Struct.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSyncMoi_Primitive) {
      var pre_field0 = cst_encode_RustOpaque_i16(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSyncMoi_TraitObj) {
      var pre_field0 =
          cst_encode_RustOpaque_BoxdynDartDebugTwinSyncMoi(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.TraitObj.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSyncMoi_Mutex) {
      var pre_field0 =
          cst_encode_RustOpaque_MutexHideDataTwinSyncMoi(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.Mutex.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSyncMoi_RwLock) {
      var pre_field0 =
          cst_encode_RustOpaque_RwLockHideDataTwinSyncMoi(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.RwLock.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSyncMoi_Nothing) {
      wireObj.tag = 5;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_good_and_opaque_twin_moi(
      EnumWithGoodAndOpaqueTwinMoi apiObj,
      wire_cst_enum_with_good_and_opaque_twin_moi wireObj) {
    if (apiObj is EnumWithGoodAndOpaqueTwinMoi_Good) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Good.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithGoodAndOpaqueTwinMoi_Opaque) {
      var pre_field0 =
          cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Opaque.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_good_and_opaque_twin_normal(
      EnumWithGoodAndOpaqueTwinNormal apiObj,
      wire_cst_enum_with_good_and_opaque_twin_normal wireObj) {
    if (apiObj is EnumWithGoodAndOpaqueTwinNormal_Good) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Good.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithGoodAndOpaqueTwinNormal_Opaque) {
      var pre_field0 =
          cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Opaque.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_good_and_opaque_twin_rust_async(
      EnumWithGoodAndOpaqueTwinRustAsync apiObj,
      wire_cst_enum_with_good_and_opaque_twin_rust_async wireObj) {
    if (apiObj is EnumWithGoodAndOpaqueTwinRustAsync_Good) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Good.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithGoodAndOpaqueTwinRustAsync_Opaque) {
      var pre_field0 =
          cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Opaque.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_good_and_opaque_twin_rust_async_moi(
      EnumWithGoodAndOpaqueTwinRustAsyncMoi apiObj,
      wire_cst_enum_with_good_and_opaque_twin_rust_async_moi wireObj) {
    if (apiObj is EnumWithGoodAndOpaqueTwinRustAsyncMoi_Good) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Good.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithGoodAndOpaqueTwinRustAsyncMoi_Opaque) {
      var pre_field0 =
          cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Opaque.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_good_and_opaque_twin_sync(
      EnumWithGoodAndOpaqueTwinSync apiObj,
      wire_cst_enum_with_good_and_opaque_twin_sync wireObj) {
    if (apiObj is EnumWithGoodAndOpaqueTwinSync_Good) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Good.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithGoodAndOpaqueTwinSync_Opaque) {
      var pre_field0 =
          cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Opaque.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_good_and_opaque_twin_sync_moi(
      EnumWithGoodAndOpaqueTwinSyncMoi apiObj,
      wire_cst_enum_with_good_and_opaque_twin_sync_moi wireObj) {
    if (apiObj is EnumWithGoodAndOpaqueTwinSyncMoi_Good) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Good.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithGoodAndOpaqueTwinSyncMoi_Opaque) {
      var pre_field0 =
          cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Opaque.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_mixed_twin_normal(
      EnumWithItemMixedTwinNormal apiObj,
      wire_cst_enum_with_item_mixed_twin_normal wireObj) {
    if (apiObj is EnumWithItemMixedTwinNormal_A) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinNormal_B) {
      var pre_field0 = cst_encode_list_prim_u_8_strict(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinNormal_C) {
      var pre_c_field = cst_encode_String(apiObj.cField);
      wireObj.tag = 2;
      wireObj.kind.C.c_field = pre_c_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_mixed_twin_rust_async(
      EnumWithItemMixedTwinRustAsync apiObj,
      wire_cst_enum_with_item_mixed_twin_rust_async wireObj) {
    if (apiObj is EnumWithItemMixedTwinRustAsync_A) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinRustAsync_B) {
      var pre_field0 = cst_encode_list_prim_u_8_strict(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinRustAsync_C) {
      var pre_c_field = cst_encode_String(apiObj.cField);
      wireObj.tag = 2;
      wireObj.kind.C.c_field = pre_c_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_mixed_twin_sync(
      EnumWithItemMixedTwinSync apiObj,
      wire_cst_enum_with_item_mixed_twin_sync wireObj) {
    if (apiObj is EnumWithItemMixedTwinSync_A) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinSync_B) {
      var pre_field0 = cst_encode_list_prim_u_8_strict(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinSync_C) {
      var pre_c_field = cst_encode_String(apiObj.cField);
      wireObj.tag = 2;
      wireObj.kind.C.c_field = pre_c_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_struct_twin_normal(
      EnumWithItemStructTwinNormal apiObj,
      wire_cst_enum_with_item_struct_twin_normal wireObj) {
    if (apiObj is EnumWithItemStructTwinNormal_A) {
      var pre_a_field = cst_encode_list_prim_u_8_strict(apiObj.aField);
      wireObj.tag = 0;
      wireObj.kind.A.a_field = pre_a_field;
      return;
    }
    if (apiObj is EnumWithItemStructTwinNormal_B) {
      var pre_b_field = cst_encode_list_prim_i_32_strict(apiObj.bField);
      wireObj.tag = 1;
      wireObj.kind.B.b_field = pre_b_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_struct_twin_rust_async(
      EnumWithItemStructTwinRustAsync apiObj,
      wire_cst_enum_with_item_struct_twin_rust_async wireObj) {
    if (apiObj is EnumWithItemStructTwinRustAsync_A) {
      var pre_a_field = cst_encode_list_prim_u_8_strict(apiObj.aField);
      wireObj.tag = 0;
      wireObj.kind.A.a_field = pre_a_field;
      return;
    }
    if (apiObj is EnumWithItemStructTwinRustAsync_B) {
      var pre_b_field = cst_encode_list_prim_i_32_strict(apiObj.bField);
      wireObj.tag = 1;
      wireObj.kind.B.b_field = pre_b_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_struct_twin_sync(
      EnumWithItemStructTwinSync apiObj,
      wire_cst_enum_with_item_struct_twin_sync wireObj) {
    if (apiObj is EnumWithItemStructTwinSync_A) {
      var pre_a_field = cst_encode_list_prim_u_8_strict(apiObj.aField);
      wireObj.tag = 0;
      wireObj.kind.A.a_field = pre_a_field;
      return;
    }
    if (apiObj is EnumWithItemStructTwinSync_B) {
      var pre_b_field = cst_encode_list_prim_i_32_strict(apiObj.bField);
      wireObj.tag = 1;
      wireObj.kind.B.b_field = pre_b_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_tuple_twin_normal(
      EnumWithItemTupleTwinNormal apiObj,
      wire_cst_enum_with_item_tuple_twin_normal wireObj) {
    if (apiObj is EnumWithItemTupleTwinNormal_A) {
      var pre_field0 = cst_encode_list_prim_u_8_strict(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemTupleTwinNormal_B) {
      var pre_field0 = cst_encode_list_prim_i_32_strict(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_tuple_twin_rust_async(
      EnumWithItemTupleTwinRustAsync apiObj,
      wire_cst_enum_with_item_tuple_twin_rust_async wireObj) {
    if (apiObj is EnumWithItemTupleTwinRustAsync_A) {
      var pre_field0 = cst_encode_list_prim_u_8_strict(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemTupleTwinRustAsync_B) {
      var pre_field0 = cst_encode_list_prim_i_32_strict(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_tuple_twin_sync(
      EnumWithItemTupleTwinSync apiObj,
      wire_cst_enum_with_item_tuple_twin_sync wireObj) {
    if (apiObj is EnumWithItemTupleTwinSync_A) {
      var pre_field0 = cst_encode_list_prim_u_8_strict(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemTupleTwinSync_B) {
      var pre_field0 = cst_encode_list_prim_i_32_strict(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_event_twin_normal(
      EventTwinNormal apiObj, wire_cst_event_twin_normal wireObj) {
    wireObj.address = cst_encode_String(apiObj.address);
    wireObj.payload = cst_encode_String(apiObj.payload);
  }

  @protected
  void cst_api_fill_to_wire_event_twin_rust_async(
      EventTwinRustAsync apiObj, wire_cst_event_twin_rust_async wireObj) {
    wireObj.address = cst_encode_String(apiObj.address);
    wireObj.payload = cst_encode_String(apiObj.payload);
  }

  @protected
  void cst_api_fill_to_wire_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal apiObj,
      wire_cst_exotic_optionals_twin_normal wireObj) {
    wireObj.int32 = cst_encode_opt_box_autoadd_i_32(apiObj.int32);
    wireObj.int64 = cst_encode_opt_box_autoadd_i_64(apiObj.int64);
    wireObj.float64 = cst_encode_opt_box_autoadd_f_64(apiObj.float64);
    wireObj.boolean = cst_encode_opt_box_autoadd_bool(apiObj.boolean);
    wireObj.zerocopy = cst_encode_opt_list_prim_u_8_strict(apiObj.zerocopy);
    wireObj.int8list = cst_encode_opt_list_prim_i_8_strict(apiObj.int8List);
    wireObj.uint8list = cst_encode_opt_list_prim_u_8_strict(apiObj.uint8List);
    wireObj.int32list = cst_encode_opt_list_prim_i_32_strict(apiObj.int32List);
    wireObj.float32list =
        cst_encode_opt_list_prim_f_32_strict(apiObj.float32List);
    wireObj.float64list =
        cst_encode_opt_list_prim_f_64_strict(apiObj.float64List);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_normal(apiObj.attributes);
    wireObj.attributes_nullable =
        cst_encode_list_opt_box_autoadd_attribute_twin_normal(
            apiObj.attributesNullable);
    wireObj.nullable_attributes =
        cst_encode_opt_list_opt_box_autoadd_attribute_twin_normal(
            apiObj.nullableAttributes);
    wireObj.newtypeint =
        cst_encode_opt_box_autoadd_new_type_int_twin_normal(apiObj.newtypeint);
  }

  @protected
  void cst_api_fill_to_wire_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync apiObj,
      wire_cst_exotic_optionals_twin_rust_async wireObj) {
    wireObj.int32 = cst_encode_opt_box_autoadd_i_32(apiObj.int32);
    wireObj.int64 = cst_encode_opt_box_autoadd_i_64(apiObj.int64);
    wireObj.float64 = cst_encode_opt_box_autoadd_f_64(apiObj.float64);
    wireObj.boolean = cst_encode_opt_box_autoadd_bool(apiObj.boolean);
    wireObj.zerocopy = cst_encode_opt_list_prim_u_8_strict(apiObj.zerocopy);
    wireObj.int8list = cst_encode_opt_list_prim_i_8_strict(apiObj.int8List);
    wireObj.uint8list = cst_encode_opt_list_prim_u_8_strict(apiObj.uint8List);
    wireObj.int32list = cst_encode_opt_list_prim_i_32_strict(apiObj.int32List);
    wireObj.float32list =
        cst_encode_opt_list_prim_f_32_strict(apiObj.float32List);
    wireObj.float64list =
        cst_encode_opt_list_prim_f_64_strict(apiObj.float64List);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_rust_async(apiObj.attributes);
    wireObj.attributes_nullable =
        cst_encode_list_opt_box_autoadd_attribute_twin_rust_async(
            apiObj.attributesNullable);
    wireObj.nullable_attributes =
        cst_encode_opt_list_opt_box_autoadd_attribute_twin_rust_async(
            apiObj.nullableAttributes);
    wireObj.newtypeint =
        cst_encode_opt_box_autoadd_new_type_int_twin_rust_async(
            apiObj.newtypeint);
  }

  @protected
  void cst_api_fill_to_wire_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync apiObj,
      wire_cst_exotic_optionals_twin_sync wireObj) {
    wireObj.int32 = cst_encode_opt_box_autoadd_i_32(apiObj.int32);
    wireObj.int64 = cst_encode_opt_box_autoadd_i_64(apiObj.int64);
    wireObj.float64 = cst_encode_opt_box_autoadd_f_64(apiObj.float64);
    wireObj.boolean = cst_encode_opt_box_autoadd_bool(apiObj.boolean);
    wireObj.zerocopy = cst_encode_opt_list_prim_u_8_strict(apiObj.zerocopy);
    wireObj.int8list = cst_encode_opt_list_prim_i_8_strict(apiObj.int8List);
    wireObj.uint8list = cst_encode_opt_list_prim_u_8_strict(apiObj.uint8List);
    wireObj.int32list = cst_encode_opt_list_prim_i_32_strict(apiObj.int32List);
    wireObj.float32list =
        cst_encode_opt_list_prim_f_32_strict(apiObj.float32List);
    wireObj.float64list =
        cst_encode_opt_list_prim_f_64_strict(apiObj.float64List);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_sync(apiObj.attributes);
    wireObj.attributes_nullable =
        cst_encode_list_opt_box_autoadd_attribute_twin_sync(
            apiObj.attributesNullable);
    wireObj.nullable_attributes =
        cst_encode_opt_list_opt_box_autoadd_attribute_twin_sync(
            apiObj.nullableAttributes);
    wireObj.newtypeint =
        cst_encode_opt_box_autoadd_new_type_int_twin_sync(apiObj.newtypeint);
  }

  @protected
  void cst_api_fill_to_wire_feature_chrono_twin_normal(
      FeatureChronoTwinNormal apiObj,
      wire_cst_feature_chrono_twin_normal wireObj) {
    wireObj.utc = cst_encode_Chrono_Utc(apiObj.utc);
    wireObj.local = cst_encode_Chrono_Local(apiObj.local);
    wireObj.duration = cst_encode_Chrono_Duration(apiObj.duration);
    wireObj.naive = cst_encode_Chrono_Naive(apiObj.naive);
  }

  @protected
  void cst_api_fill_to_wire_feature_chrono_twin_rust_async(
      FeatureChronoTwinRustAsync apiObj,
      wire_cst_feature_chrono_twin_rust_async wireObj) {
    wireObj.utc = cst_encode_Chrono_Utc(apiObj.utc);
    wireObj.local = cst_encode_Chrono_Local(apiObj.local);
    wireObj.duration = cst_encode_Chrono_Duration(apiObj.duration);
    wireObj.naive = cst_encode_Chrono_Naive(apiObj.naive);
  }

  @protected
  void cst_api_fill_to_wire_feature_chrono_twin_sync(
      FeatureChronoTwinSync apiObj, wire_cst_feature_chrono_twin_sync wireObj) {
    wireObj.utc = cst_encode_Chrono_Utc(apiObj.utc);
    wireObj.local = cst_encode_Chrono_Local(apiObj.local);
    wireObj.duration = cst_encode_Chrono_Duration(apiObj.duration);
    wireObj.naive = cst_encode_Chrono_Naive(apiObj.naive);
  }

  @protected
  void cst_api_fill_to_wire_feature_uuid_twin_normal(
      FeatureUuidTwinNormal apiObj, wire_cst_feature_uuid_twin_normal wireObj) {
    wireObj.one = cst_encode_Uuid(apiObj.one);
  }

  @protected
  void cst_api_fill_to_wire_feature_uuid_twin_rust_async(
      FeatureUuidTwinRustAsync apiObj,
      wire_cst_feature_uuid_twin_rust_async wireObj) {
    wireObj.one = cst_encode_Uuid(apiObj.one);
  }

  @protected
  void cst_api_fill_to_wire_feature_uuid_twin_sync(
      FeatureUuidTwinSync apiObj, wire_cst_feature_uuid_twin_sync wireObj) {
    wireObj.one = cst_encode_Uuid(apiObj.one);
  }

  @protected
  void cst_api_fill_to_wire_feed_id_twin_normal(
      FeedIdTwinNormal apiObj, wire_cst_feed_id_twin_normal wireObj) {
    wireObj.field0 = cst_encode_u_8_array_8(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_feed_id_twin_rust_async(
      FeedIdTwinRustAsync apiObj, wire_cst_feed_id_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_u_8_array_8(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_feed_id_twin_sync(
      FeedIdTwinSync apiObj, wire_cst_feed_id_twin_sync wireObj) {
    wireObj.field0 = cst_encode_u_8_array_8(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_hash_map_value(
      HashMapValue apiObj, wire_cst_hash_map_value wireObj) {
    wireObj.inner = cst_encode_String(apiObj.inner);
  }

  @protected
  void cst_api_fill_to_wire_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal apiObj, wire_cst_kitchen_sink_twin_normal wireObj) {
    if (apiObj is KitchenSinkTwinNormal_Empty) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is KitchenSinkTwinNormal_Primitives) {
      var pre_int32 = cst_encode_i_32(apiObj.int32);
      var pre_float64 = cst_encode_f_64(apiObj.float64);
      var pre_boolean = cst_encode_bool(apiObj.boolean);
      wireObj.tag = 1;
      wireObj.kind.Primitives.int32 = pre_int32;
      wireObj.kind.Primitives.float64 = pre_float64;
      wireObj.kind.Primitives.boolean = pre_boolean;
      return;
    }
    if (apiObj is KitchenSinkTwinNormal_Nested) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      var pre_field1 = cst_encode_box_kitchen_sink_twin_normal(apiObj.field1);
      wireObj.tag = 2;
      wireObj.kind.Nested.field0 = pre_field0;
      wireObj.kind.Nested.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinNormal_Optional) {
      var pre_field0 = cst_encode_opt_box_autoadd_i_32(apiObj.field0);
      var pre_field1 = cst_encode_opt_box_autoadd_i_32(apiObj.field1);
      wireObj.tag = 3;
      wireObj.kind.Optional.field0 = pre_field0;
      wireObj.kind.Optional.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinNormal_Buffer) {
      var pre_field0 = cst_encode_list_prim_u_8_strict(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.Buffer.field0 = pre_field0;
      return;
    }
    if (apiObj is KitchenSinkTwinNormal_Enums) {
      var pre_field0 = cst_encode_weekdays_twin_normal(apiObj.field0);
      wireObj.tag = 5;
      wireObj.kind.Enums.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync apiObj,
      wire_cst_kitchen_sink_twin_rust_async wireObj) {
    if (apiObj is KitchenSinkTwinRustAsync_Empty) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is KitchenSinkTwinRustAsync_Primitives) {
      var pre_int32 = cst_encode_i_32(apiObj.int32);
      var pre_float64 = cst_encode_f_64(apiObj.float64);
      var pre_boolean = cst_encode_bool(apiObj.boolean);
      wireObj.tag = 1;
      wireObj.kind.Primitives.int32 = pre_int32;
      wireObj.kind.Primitives.float64 = pre_float64;
      wireObj.kind.Primitives.boolean = pre_boolean;
      return;
    }
    if (apiObj is KitchenSinkTwinRustAsync_Nested) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      var pre_field1 =
          cst_encode_box_kitchen_sink_twin_rust_async(apiObj.field1);
      wireObj.tag = 2;
      wireObj.kind.Nested.field0 = pre_field0;
      wireObj.kind.Nested.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinRustAsync_Optional) {
      var pre_field0 = cst_encode_opt_box_autoadd_i_32(apiObj.field0);
      var pre_field1 = cst_encode_opt_box_autoadd_i_32(apiObj.field1);
      wireObj.tag = 3;
      wireObj.kind.Optional.field0 = pre_field0;
      wireObj.kind.Optional.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinRustAsync_Buffer) {
      var pre_field0 = cst_encode_list_prim_u_8_strict(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.Buffer.field0 = pre_field0;
      return;
    }
    if (apiObj is KitchenSinkTwinRustAsync_Enums) {
      var pre_field0 = cst_encode_weekdays_twin_rust_async(apiObj.field0);
      wireObj.tag = 5;
      wireObj.kind.Enums.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_kitchen_sink_twin_sync(
      KitchenSinkTwinSync apiObj, wire_cst_kitchen_sink_twin_sync wireObj) {
    if (apiObj is KitchenSinkTwinSync_Empty) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is KitchenSinkTwinSync_Primitives) {
      var pre_int32 = cst_encode_i_32(apiObj.int32);
      var pre_float64 = cst_encode_f_64(apiObj.float64);
      var pre_boolean = cst_encode_bool(apiObj.boolean);
      wireObj.tag = 1;
      wireObj.kind.Primitives.int32 = pre_int32;
      wireObj.kind.Primitives.float64 = pre_float64;
      wireObj.kind.Primitives.boolean = pre_boolean;
      return;
    }
    if (apiObj is KitchenSinkTwinSync_Nested) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      var pre_field1 = cst_encode_box_kitchen_sink_twin_sync(apiObj.field1);
      wireObj.tag = 2;
      wireObj.kind.Nested.field0 = pre_field0;
      wireObj.kind.Nested.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinSync_Optional) {
      var pre_field0 = cst_encode_opt_box_autoadd_i_32(apiObj.field0);
      var pre_field1 = cst_encode_opt_box_autoadd_i_32(apiObj.field1);
      wireObj.tag = 3;
      wireObj.kind.Optional.field0 = pre_field0;
      wireObj.kind.Optional.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinSync_Buffer) {
      var pre_field0 = cst_encode_list_prim_u_8_strict(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.Buffer.field0 = pre_field0;
      return;
    }
    if (apiObj is KitchenSinkTwinSync_Enums) {
      var pre_field0 = cst_encode_weekdays_twin_sync(apiObj.field0);
      wireObj.tag = 5;
      wireObj.kind.Enums.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_list_of_nested_raw_string_mirrored(
      ListOfNestedRawStringMirrored apiObj,
      wire_cst_list_of_nested_raw_string_mirrored wireObj) {
    wireObj.raw = cst_encode_list_nested_raw_string_mirrored(apiObj.raw);
  }

  @protected
  void cst_api_fill_to_wire_log_2_twin_normal(
      Log2TwinNormal apiObj, wire_cst_log_2_twin_normal wireObj) {
    wireObj.key = cst_encode_u_32(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_log_2_twin_rust_async(
      Log2TwinRustAsync apiObj, wire_cst_log_2_twin_rust_async wireObj) {
    wireObj.key = cst_encode_u_32(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_log_2_twin_sync(
      Log2TwinSync apiObj, wire_cst_log_2_twin_sync wireObj) {
    wireObj.key = cst_encode_u_32(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_log_twin_normal(
      LogTwinNormal apiObj, wire_cst_log_twin_normal wireObj) {
    wireObj.key = cst_encode_u_32(apiObj.key);
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_log_twin_rust_async(
      LogTwinRustAsync apiObj, wire_cst_log_twin_rust_async wireObj) {
    wireObj.key = cst_encode_u_32(apiObj.key);
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_macro_struct(
      MacroStruct apiObj, wire_cst_macro_struct wireObj) {
    wireObj.data = cst_encode_i_32(apiObj.data);
  }

  @protected
  void cst_api_fill_to_wire_measure_twin_normal(
      MeasureTwinNormal apiObj, wire_cst_measure_twin_normal wireObj) {
    if (apiObj is MeasureTwinNormal_Speed) {
      var pre_field0 = cst_encode_box_speed_twin_normal(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Speed.field0 = pre_field0;
      return;
    }
    if (apiObj is MeasureTwinNormal_Distance) {
      var pre_field0 = cst_encode_box_distance_twin_normal(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Distance.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_measure_twin_rust_async(
      MeasureTwinRustAsync apiObj, wire_cst_measure_twin_rust_async wireObj) {
    if (apiObj is MeasureTwinRustAsync_Speed) {
      var pre_field0 = cst_encode_box_speed_twin_rust_async(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Speed.field0 = pre_field0;
      return;
    }
    if (apiObj is MeasureTwinRustAsync_Distance) {
      var pre_field0 = cst_encode_box_distance_twin_rust_async(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Distance.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_measure_twin_sync(
      MeasureTwinSync apiObj, wire_cst_measure_twin_sync wireObj) {
    if (apiObj is MeasureTwinSync_Speed) {
      var pre_field0 = cst_encode_box_speed_twin_sync(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Speed.field0 = pre_field0;
      return;
    }
    if (apiObj is MeasureTwinSync_Distance) {
      var pre_field0 = cst_encode_box_distance_twin_sync(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Distance.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_message_id_twin_normal(
      MessageIdTwinNormal apiObj, wire_cst_message_id_twin_normal wireObj) {
    wireObj.field0 = cst_encode_u_8_array_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_message_id_twin_rust_async(
      MessageIdTwinRustAsync apiObj,
      wire_cst_message_id_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_u_8_array_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_message_id_twin_sync(
      MessageIdTwinSync apiObj, wire_cst_message_id_twin_sync wireObj) {
    wireObj.field0 = cst_encode_u_8_array_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_mirror_struct_twin_normal(
      MirrorStructTwinNormal apiObj,
      wire_cst_mirror_struct_twin_normal wireObj) {
    cst_api_fill_to_wire_application_settings(apiObj.a, wireObj.a);
    cst_api_fill_to_wire_my_struct(apiObj.b, wireObj.b);
    wireObj.c = cst_encode_list_my_enum(apiObj.c);
    wireObj.d = cst_encode_list_application_settings(apiObj.d);
  }

  @protected
  void cst_api_fill_to_wire_mirror_struct_twin_rust_async(
      MirrorStructTwinRustAsync apiObj,
      wire_cst_mirror_struct_twin_rust_async wireObj) {
    cst_api_fill_to_wire_application_settings(apiObj.a, wireObj.a);
    cst_api_fill_to_wire_my_struct(apiObj.b, wireObj.b);
    wireObj.c = cst_encode_list_my_enum(apiObj.c);
    wireObj.d = cst_encode_list_application_settings(apiObj.d);
  }

  @protected
  void cst_api_fill_to_wire_mirror_struct_twin_sync(
      MirrorStructTwinSync apiObj, wire_cst_mirror_struct_twin_sync wireObj) {
    cst_api_fill_to_wire_application_settings(apiObj.a, wireObj.a);
    cst_api_fill_to_wire_my_struct(apiObj.b, wireObj.b);
    wireObj.c = cst_encode_list_my_enum(apiObj.c);
    wireObj.d = cst_encode_list_application_settings(apiObj.d);
  }

  @protected
  void cst_api_fill_to_wire_more_than_just_one_raw_string_struct_twin_normal(
      MoreThanJustOneRawStringStructTwinNormal apiObj,
      wire_cst_more_than_just_one_raw_string_struct_twin_normal wireObj) {
    wireObj.regular = cst_encode_String(apiObj.regular);
    wireObj.type = cst_encode_String(apiObj.type);
    wireObj.async1 = cst_encode_bool(apiObj.async);
    wireObj.another = cst_encode_String(apiObj.another);
  }

  @protected
  void
      cst_api_fill_to_wire_more_than_just_one_raw_string_struct_twin_rust_async(
          MoreThanJustOneRawStringStructTwinRustAsync apiObj,
          wire_cst_more_than_just_one_raw_string_struct_twin_rust_async
              wireObj) {
    wireObj.regular = cst_encode_String(apiObj.regular);
    wireObj.type = cst_encode_String(apiObj.type);
    wireObj.async1 = cst_encode_bool(apiObj.async);
    wireObj.another = cst_encode_String(apiObj.another);
  }

  @protected
  void cst_api_fill_to_wire_more_than_just_one_raw_string_struct_twin_sync(
      MoreThanJustOneRawStringStructTwinSync apiObj,
      wire_cst_more_than_just_one_raw_string_struct_twin_sync wireObj) {
    wireObj.regular = cst_encode_String(apiObj.regular);
    wireObj.type = cst_encode_String(apiObj.type);
    wireObj.async1 = cst_encode_bool(apiObj.async);
    wireObj.another = cst_encode_String(apiObj.another);
  }

  @protected
  void cst_api_fill_to_wire_my_callable_twin_normal(
      MyCallableTwinNormal apiObj, wire_cst_my_callable_twin_normal wireObj) {
    wireObj.one = cst_encode_String(apiObj.one);
  }

  @protected
  void cst_api_fill_to_wire_my_callable_twin_rust_async(
      MyCallableTwinRustAsync apiObj,
      wire_cst_my_callable_twin_rust_async wireObj) {
    wireObj.one = cst_encode_String(apiObj.one);
  }

  @protected
  void cst_api_fill_to_wire_my_callable_twin_sync(
      MyCallableTwinSync apiObj, wire_cst_my_callable_twin_sync wireObj) {
    wireObj.one = cst_encode_String(apiObj.one);
  }

  @protected
  void cst_api_fill_to_wire_my_nested_struct_twin_normal(
      MyNestedStructTwinNormal apiObj,
      wire_cst_my_nested_struct_twin_normal wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_normal(
        apiObj.treeNode, wireObj.tree_node);
    wireObj.weekday = cst_encode_weekdays_twin_normal(apiObj.weekday);
  }

  @protected
  void cst_api_fill_to_wire_my_nested_struct_twin_rust_async(
      MyNestedStructTwinRustAsync apiObj,
      wire_cst_my_nested_struct_twin_rust_async wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_rust_async(
        apiObj.treeNode, wireObj.tree_node);
    wireObj.weekday = cst_encode_weekdays_twin_rust_async(apiObj.weekday);
  }

  @protected
  void cst_api_fill_to_wire_my_nested_struct_twin_sync(
      MyNestedStructTwinSync apiObj,
      wire_cst_my_nested_struct_twin_sync wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_sync(
        apiObj.treeNode, wireObj.tree_node);
    wireObj.weekday = cst_encode_weekdays_twin_sync(apiObj.weekday);
  }

  @protected
  void cst_api_fill_to_wire_my_size(MySize apiObj, wire_cst_my_size wireObj) {
    wireObj.width = cst_encode_i_32(apiObj.width);
    wireObj.height = cst_encode_i_32(apiObj.height);
  }

  @protected
  void cst_api_fill_to_wire_my_stream_entry_twin_normal(
      MyStreamEntryTwinNormal apiObj,
      wire_cst_my_stream_entry_twin_normal wireObj) {
    wireObj.hello = cst_encode_String(apiObj.hello);
  }

  @protected
  void cst_api_fill_to_wire_my_stream_entry_twin_rust_async(
      MyStreamEntryTwinRustAsync apiObj,
      wire_cst_my_stream_entry_twin_rust_async wireObj) {
    wireObj.hello = cst_encode_String(apiObj.hello);
  }

  @protected
  void cst_api_fill_to_wire_my_struct(
      MyStruct apiObj, wire_cst_my_struct wireObj) {
    wireObj.content = cst_encode_bool(apiObj.content);
  }

  @protected
  void cst_api_fill_to_wire_my_tree_node_twin_normal(
      MyTreeNodeTwinNormal apiObj, wire_cst_my_tree_node_twin_normal wireObj) {
    wireObj.value_i32 = cst_encode_i_32(apiObj.valueI32);
    wireObj.value_vec_u8 = cst_encode_list_prim_u_8_strict(apiObj.valueVecU8);
    wireObj.value_boolean = cst_encode_bool(apiObj.valueBoolean);
    wireObj.children =
        cst_encode_list_my_tree_node_twin_normal(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_my_tree_node_twin_rust_async(
      MyTreeNodeTwinRustAsync apiObj,
      wire_cst_my_tree_node_twin_rust_async wireObj) {
    wireObj.value_i32 = cst_encode_i_32(apiObj.valueI32);
    wireObj.value_vec_u8 = cst_encode_list_prim_u_8_strict(apiObj.valueVecU8);
    wireObj.value_boolean = cst_encode_bool(apiObj.valueBoolean);
    wireObj.children =
        cst_encode_list_my_tree_node_twin_rust_async(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_my_tree_node_twin_sync(
      MyTreeNodeTwinSync apiObj, wire_cst_my_tree_node_twin_sync wireObj) {
    wireObj.value_i32 = cst_encode_i_32(apiObj.valueI32);
    wireObj.value_vec_u8 = cst_encode_list_prim_u_8_strict(apiObj.valueVecU8);
    wireObj.value_boolean = cst_encode_bool(apiObj.valueBoolean);
    wireObj.children = cst_encode_list_my_tree_node_twin_sync(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_nested_raw_string_mirrored(
      NestedRawStringMirrored apiObj,
      wire_cst_nested_raw_string_mirrored wireObj) {
    cst_api_fill_to_wire_raw_string_mirrored(apiObj.raw, wireObj.raw);
  }

  @protected
  void cst_api_fill_to_wire_new_simple_struct(
      NewSimpleStruct apiObj, wire_cst_new_simple_struct wireObj) {
    wireObj.field = cst_encode_i_32(apiObj.field);
  }

  @protected
  void cst_api_fill_to_wire_new_type_int_twin_normal(
      NewTypeIntTwinNormal apiObj, wire_cst_new_type_int_twin_normal wireObj) {
    wireObj.field0 = cst_encode_i_64(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync apiObj,
      wire_cst_new_type_int_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_i_64(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_new_type_int_twin_sync(
      NewTypeIntTwinSync apiObj, wire_cst_new_type_int_twin_sync wireObj) {
    wireObj.field0 = cst_encode_i_64(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_note_twin_normal(
      NoteTwinNormal apiObj, wire_cst_note_twin_normal wireObj) {
    wireObj.day = cst_encode_box_weekdays_twin_normal(apiObj.day);
    wireObj.body = cst_encode_String(apiObj.body);
  }

  @protected
  void cst_api_fill_to_wire_note_twin_rust_async(
      NoteTwinRustAsync apiObj, wire_cst_note_twin_rust_async wireObj) {
    wireObj.day = cst_encode_box_weekdays_twin_rust_async(apiObj.day);
    wireObj.body = cst_encode_String(apiObj.body);
  }

  @protected
  void cst_api_fill_to_wire_note_twin_sync(
      NoteTwinSync apiObj, wire_cst_note_twin_sync wireObj) {
    wireObj.day = cst_encode_box_weekdays_twin_sync(apiObj.day);
    wireObj.body = cst_encode_String(apiObj.body);
  }

  @protected
  void cst_api_fill_to_wire_numbers(Numbers apiObj, wire_cst_numbers wireObj) {
    wireObj.field0 = cst_encode_list_prim_i_32_strict(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_old_simple_struct(
      OldSimpleStruct apiObj, wire_cst_old_simple_struct wireObj) {
    wireObj.field = cst_encode_i_32(apiObj.field);
  }

  @protected
  void cst_api_fill_to_wire_opaque_nested_twin_moi(
      OpaqueNestedTwinMoi apiObj, wire_cst_opaque_nested_twin_moi wireObj) {
    wireObj.first = cst_encode_RustOpaque_HideDataTwinMoi(apiObj.first);
    wireObj.second = cst_encode_RustOpaque_HideDataTwinMoi(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_opaque_nested_twin_normal(
      OpaqueNestedTwinNormal apiObj,
      wire_cst_opaque_nested_twin_normal wireObj) {
    wireObj.first = cst_encode_RustOpaque_HideDataTwinNormal(apiObj.first);
    wireObj.second = cst_encode_RustOpaque_HideDataTwinNormal(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_opaque_nested_twin_rust_async(
      OpaqueNestedTwinRustAsync apiObj,
      wire_cst_opaque_nested_twin_rust_async wireObj) {
    wireObj.first = cst_encode_RustOpaque_HideDataTwinRustAsync(apiObj.first);
    wireObj.second = cst_encode_RustOpaque_HideDataTwinRustAsync(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_opaque_nested_twin_rust_async_moi(
      OpaqueNestedTwinRustAsyncMoi apiObj,
      wire_cst_opaque_nested_twin_rust_async_moi wireObj) {
    wireObj.first =
        cst_encode_RustOpaque_HideDataTwinRustAsyncMoi(apiObj.first);
    wireObj.second =
        cst_encode_RustOpaque_HideDataTwinRustAsyncMoi(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_opaque_nested_twin_sync(
      OpaqueNestedTwinSync apiObj, wire_cst_opaque_nested_twin_sync wireObj) {
    wireObj.first = cst_encode_RustOpaque_HideDataTwinSync(apiObj.first);
    wireObj.second = cst_encode_RustOpaque_HideDataTwinSync(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_opaque_nested_twin_sync_moi(
      OpaqueNestedTwinSyncMoi apiObj,
      wire_cst_opaque_nested_twin_sync_moi wireObj) {
    wireObj.first = cst_encode_RustOpaque_HideDataTwinSyncMoi(apiObj.first);
    wireObj.second = cst_encode_RustOpaque_HideDataTwinSyncMoi(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_opt_vecs_twin_normal(
      OptVecsTwinNormal apiObj, wire_cst_opt_vecs_twin_normal wireObj) {
    wireObj.i32 = cst_encode_list_opt_box_autoadd_i_32(apiObj.i32);
    wireObj.enums =
        cst_encode_list_opt_box_autoadd_weekdays_twin_normal(apiObj.enums);
    wireObj.strings = cst_encode_list_opt_String(apiObj.strings);
    wireObj.buffers = cst_encode_list_opt_list_prim_i_32_strict(apiObj.buffers);
  }

  @protected
  void cst_api_fill_to_wire_opt_vecs_twin_rust_async(
      OptVecsTwinRustAsync apiObj, wire_cst_opt_vecs_twin_rust_async wireObj) {
    wireObj.i32 = cst_encode_list_opt_box_autoadd_i_32(apiObj.i32);
    wireObj.enums =
        cst_encode_list_opt_box_autoadd_weekdays_twin_rust_async(apiObj.enums);
    wireObj.strings = cst_encode_list_opt_String(apiObj.strings);
    wireObj.buffers = cst_encode_list_opt_list_prim_i_32_strict(apiObj.buffers);
  }

  @protected
  void cst_api_fill_to_wire_opt_vecs_twin_sync(
      OptVecsTwinSync apiObj, wire_cst_opt_vecs_twin_sync wireObj) {
    wireObj.i32 = cst_encode_list_opt_box_autoadd_i_32(apiObj.i32);
    wireObj.enums =
        cst_encode_list_opt_box_autoadd_weekdays_twin_sync(apiObj.enums);
    wireObj.strings = cst_encode_list_opt_String(apiObj.strings);
    wireObj.buffers = cst_encode_list_opt_list_prim_i_32_strict(apiObj.buffers);
  }

  @protected
  void cst_api_fill_to_wire_point_twin_normal(
      PointTwinNormal apiObj, wire_cst_point_twin_normal wireObj) {
    wireObj.x = cst_encode_f_32(apiObj.x);
    wireObj.y = cst_encode_f_32(apiObj.y);
  }

  @protected
  void cst_api_fill_to_wire_point_twin_rust_async(
      PointTwinRustAsync apiObj, wire_cst_point_twin_rust_async wireObj) {
    wireObj.x = cst_encode_f_32(apiObj.x);
    wireObj.y = cst_encode_f_32(apiObj.y);
  }

  @protected
  void cst_api_fill_to_wire_point_twin_sync(
      PointTwinSync apiObj, wire_cst_point_twin_sync wireObj) {
    wireObj.x = cst_encode_f_32(apiObj.x);
    wireObj.y = cst_encode_f_32(apiObj.y);
  }

  @protected
  void cst_api_fill_to_wire_raw_string_enum_mirrored(
      RawStringEnumMirrored apiObj, wire_cst_raw_string_enum_mirrored wireObj) {
    if (apiObj is RawStringEnumMirrored_Raw) {
      var pre_field0 =
          cst_encode_box_autoadd_raw_string_mirrored(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Raw.field0 = pre_field0;
      return;
    }
    if (apiObj is RawStringEnumMirrored_Nested) {
      var pre_field0 =
          cst_encode_box_autoadd_nested_raw_string_mirrored(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Nested.field0 = pre_field0;
      return;
    }
    if (apiObj is RawStringEnumMirrored_ListOfNested) {
      var pre_field0 =
          cst_encode_box_autoadd_list_of_nested_raw_string_mirrored(
              apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.ListOfNested.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_raw_string_item_struct_twin_normal(
      RawStringItemStructTwinNormal apiObj,
      wire_cst_raw_string_item_struct_twin_normal wireObj) {
    wireObj.type = cst_encode_String(apiObj.type);
  }

  @protected
  void cst_api_fill_to_wire_raw_string_item_struct_twin_rust_async(
      RawStringItemStructTwinRustAsync apiObj,
      wire_cst_raw_string_item_struct_twin_rust_async wireObj) {
    wireObj.type = cst_encode_String(apiObj.type);
  }

  @protected
  void cst_api_fill_to_wire_raw_string_item_struct_twin_sync(
      RawStringItemStructTwinSync apiObj,
      wire_cst_raw_string_item_struct_twin_sync wireObj) {
    wireObj.type = cst_encode_String(apiObj.type);
  }

  @protected
  void cst_api_fill_to_wire_raw_string_mirrored(
      RawStringMirrored apiObj, wire_cst_raw_string_mirrored wireObj) {
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void
      cst_api_fill_to_wire_record_application_settings_raw_string_enum_mirrored(
          (ApplicationSettings, RawStringEnumMirrored) apiObj,
          wire_cst_record_application_settings_raw_string_enum_mirrored
              wireObj) {
    cst_api_fill_to_wire_application_settings(apiObj.$1, wireObj.field0);
    cst_api_fill_to_wire_raw_string_enum_mirrored(apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_moi(
      (OpaqueOneTwinMoi, OpaqueTwoTwinMoi) apiObj,
      wire_cst_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_moi
          wireObj) {
    wireObj.field0 =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
            apiObj.$1);
    wireObj.field1 =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
            apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_normal_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_normal(
      (OpaqueOneTwinNormal, OpaqueTwoTwinNormal) apiObj,
      wire_cst_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_normal_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_normal
          wireObj) {
    wireObj.field0 =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
            apiObj.$1);
    wireObj.field1 =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
            apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async(
      (OpaqueOneTwinRustAsync, OpaqueTwoTwinRustAsync) apiObj,
      wire_cst_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async
          wireObj) {
    wireObj.field0 =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
            apiObj.$1);
    wireObj.field1 =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
            apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_moi(
      (OpaqueOneTwinRustAsyncMoi, OpaqueTwoTwinRustAsyncMoi) apiObj,
      wire_cst_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_moi
          wireObj) {
    wireObj.field0 =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
            apiObj.$1);
    wireObj.field1 =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
            apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync(
      (OpaqueOneTwinSync, OpaqueTwoTwinSync) apiObj,
      wire_cst_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync
          wireObj) {
    wireObj.field0 =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
            apiObj.$1);
    wireObj.field1 =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
            apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_moi(
      (OpaqueOneTwinSyncMoi, OpaqueTwoTwinSyncMoi) apiObj,
      wire_cst_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_moi
          wireObj) {
    wireObj.field0 =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
            apiObj.$1);
    wireObj.field1 =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
            apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_basic_general_enum_twin_normal(
      (int, BasicGeneralEnumTwinNormal) apiObj,
      wire_cst_record_i_32_basic_general_enum_twin_normal wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    cst_api_fill_to_wire_basic_general_enum_twin_normal(
        apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_basic_general_enum_twin_rust_async(
      (int, BasicGeneralEnumTwinRustAsync) apiObj,
      wire_cst_record_i_32_basic_general_enum_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    cst_api_fill_to_wire_basic_general_enum_twin_rust_async(
        apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_basic_general_enum_twin_sync(
      (int, BasicGeneralEnumTwinSync) apiObj,
      wire_cst_record_i_32_basic_general_enum_twin_sync wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    cst_api_fill_to_wire_basic_general_enum_twin_sync(
        apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_basic_primitive_enum_twin_normal(
      (int, BasicPrimitiveEnumTwinNormal) apiObj,
      wire_cst_record_i_32_basic_primitive_enum_twin_normal wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_basic_primitive_enum_twin_normal(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_basic_primitive_enum_twin_rust_async(
      (int, BasicPrimitiveEnumTwinRustAsync) apiObj,
      wire_cst_record_i_32_basic_primitive_enum_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_basic_primitive_enum_twin_rust_async(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_basic_primitive_enum_twin_sync(
      (int, BasicPrimitiveEnumTwinSync) apiObj,
      wire_cst_record_i_32_basic_primitive_enum_twin_sync wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_basic_primitive_enum_twin_sync(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_basic_struct_twin_normal(
      (int, BasicStructTwinNormal) apiObj,
      wire_cst_record_i_32_basic_struct_twin_normal wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    cst_api_fill_to_wire_basic_struct_twin_normal(apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_basic_struct_twin_rust_async(
      (int, BasicStructTwinRustAsync) apiObj,
      wire_cst_record_i_32_basic_struct_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    cst_api_fill_to_wire_basic_struct_twin_rust_async(
        apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_basic_struct_twin_sync(
      (int, BasicStructTwinSync) apiObj,
      wire_cst_record_i_32_basic_struct_twin_sync wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    cst_api_fill_to_wire_basic_struct_twin_sync(apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_bool(
      (int, bool) apiObj, wire_cst_record_i_32_bool wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_bool(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_f_32(
      (int, double) apiObj, wire_cst_record_i_32_f_32 wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_f_32(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_f_64(
      (int, double) apiObj, wire_cst_record_i_32_f_64 wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_f_64(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_i_16(
      (int, int) apiObj, wire_cst_record_i_32_i_16 wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_i_16(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_i_32(
      (int, int) apiObj, wire_cst_record_i_32_i_32 wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_i_32(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_i_64(
      (int, int) apiObj, wire_cst_record_i_32_i_64 wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_i_64(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_i_8(
      (int, int) apiObj, wire_cst_record_i_32_i_8 wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_i_8(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_isize(
      (int, int) apiObj, wire_cst_record_i_32_isize wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_isize(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_list_prim_u_8_strict(
      (int, Uint8List) apiObj,
      wire_cst_record_i_32_list_prim_u_8_strict wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_list_prim_u_8_strict(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_string(
      (int, String) apiObj, wire_cst_record_i_32_string wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_String(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_u_16(
      (int, int) apiObj, wire_cst_record_i_32_u_16 wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_u_16(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_u_32(
      (int, int) apiObj, wire_cst_record_i_32_u_32 wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_u_32(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_u_64(
      (int, int) apiObj, wire_cst_record_i_32_u_64 wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_u_64(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_u_8(
      (int, int) apiObj, wire_cst_record_i_32_u_8 wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_u_8(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_usize(
      (int, int) apiObj, wire_cst_record_i_32_usize wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_usize(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_string_enum_simple_twin_normal(
      (String, EnumSimpleTwinNormal) apiObj,
      wire_cst_record_string_enum_simple_twin_normal wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_enum_simple_twin_normal(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_string_enum_simple_twin_rust_async(
      (String, EnumSimpleTwinRustAsync) apiObj,
      wire_cst_record_string_enum_simple_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_enum_simple_twin_rust_async(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_string_enum_simple_twin_sync(
      (String, EnumSimpleTwinSync) apiObj,
      wire_cst_record_string_enum_simple_twin_sync wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_enum_simple_twin_sync(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_string_hash_map_value(
      (String, HashMapValue) apiObj,
      wire_cst_record_string_hash_map_value wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    cst_api_fill_to_wire_hash_map_value(apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_string_i_32(
      (String, int) apiObj, wire_cst_record_string_i_32 wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_i_32(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_string_kitchen_sink_twin_normal(
      (String, KitchenSinkTwinNormal) apiObj,
      wire_cst_record_string_kitchen_sink_twin_normal wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    cst_api_fill_to_wire_kitchen_sink_twin_normal(apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_string_kitchen_sink_twin_rust_async(
      (String, KitchenSinkTwinRustAsync) apiObj,
      wire_cst_record_string_kitchen_sink_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    cst_api_fill_to_wire_kitchen_sink_twin_rust_async(
        apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_string_kitchen_sink_twin_sync(
      (String, KitchenSinkTwinSync) apiObj,
      wire_cst_record_string_kitchen_sink_twin_sync wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    cst_api_fill_to_wire_kitchen_sink_twin_sync(apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_string_list_prim_u_8_strict(
      (String, Uint8List) apiObj,
      wire_cst_record_string_list_prim_u_8_strict wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_list_prim_u_8_strict(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_string_my_size(
      (String, MySize) apiObj, wire_cst_record_string_my_size wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    cst_api_fill_to_wire_my_size(apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_string_string(
      (String, String) apiObj, wire_cst_record_string_string wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_String(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_u_8_application_mode(
      (int, ApplicationMode) apiObj,
      wire_cst_record_u_8_application_mode wireObj) {
    wireObj.field0 = cst_encode_u_8(apiObj.$1);
    wireObj.field1 = cst_encode_application_mode(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_sequences(
      Sequences apiObj, wire_cst_sequences wireObj) {
    wireObj.field0 = cst_encode_list_prim_i_32_strict(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_simple_struct_twin_normal(
      SimpleStructTwinNormal apiObj,
      wire_cst_simple_struct_twin_normal wireObj) {
    wireObj.one = cst_encode_String(apiObj.one);
  }

  @protected
  void cst_api_fill_to_wire_simple_struct_twin_rust_async(
      SimpleStructTwinRustAsync apiObj,
      wire_cst_simple_struct_twin_rust_async wireObj) {
    wireObj.one = cst_encode_String(apiObj.one);
  }

  @protected
  void cst_api_fill_to_wire_simple_struct_twin_sync(
      SimpleStructTwinSync apiObj, wire_cst_simple_struct_twin_sync wireObj) {
    wireObj.one = cst_encode_String(apiObj.one);
  }

  @protected
  void cst_api_fill_to_wire_some_struct_twin_normal(
      SomeStructTwinNormal apiObj, wire_cst_some_struct_twin_normal wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_some_struct_twin_rust_async(
      SomeStructTwinRustAsync apiObj,
      wire_cst_some_struct_twin_rust_async wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_some_struct_twin_sync(
      SomeStructTwinSync apiObj, wire_cst_some_struct_twin_sync wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_speed_twin_normal(
      SpeedTwinNormal apiObj, wire_cst_speed_twin_normal wireObj) {
    if (apiObj is SpeedTwinNormal_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is SpeedTwinNormal_GPS) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.GPS.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_speed_twin_rust_async(
      SpeedTwinRustAsync apiObj, wire_cst_speed_twin_rust_async wireObj) {
    if (apiObj is SpeedTwinRustAsync_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is SpeedTwinRustAsync_GPS) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.GPS.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_speed_twin_sync(
      SpeedTwinSync apiObj, wire_cst_speed_twin_sync wireObj) {
    if (apiObj is SpeedTwinSync_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is SpeedTwinSync_GPS) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.GPS.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_struct_in_lower_level(
      StructInLowerLevel apiObj, wire_cst_struct_in_lower_level wireObj) {
    cst_api_fill_to_wire_struct_in_upper_level(apiObj.inner, wireObj.inner);
  }

  @protected
  void cst_api_fill_to_wire_struct_in_upper_level(
      StructInUpperLevel apiObj, wire_cst_struct_in_upper_level wireObj) {
    wireObj.upper = cst_encode_usize(apiObj.upper);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_comments_twin_normal(
      StructWithCommentsTwinNormal apiObj,
      wire_cst_struct_with_comments_twin_normal wireObj) {
    wireObj.field_with_comments = cst_encode_i_32(apiObj.fieldWithComments);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_comments_twin_rust_async(
      StructWithCommentsTwinRustAsync apiObj,
      wire_cst_struct_with_comments_twin_rust_async wireObj) {
    wireObj.field_with_comments = cst_encode_i_32(apiObj.fieldWithComments);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_comments_twin_sync(
      StructWithCommentsTwinSync apiObj,
      wire_cst_struct_with_comments_twin_sync wireObj) {
    wireObj.field_with_comments = cst_encode_i_32(apiObj.fieldWithComments);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_enum_twin_normal(
      StructWithEnumTwinNormal apiObj,
      wire_cst_struct_with_enum_twin_normal wireObj) {
    cst_api_fill_to_wire_abc_twin_normal(apiObj.abc1, wireObj.abc1);
    cst_api_fill_to_wire_abc_twin_normal(apiObj.abc2, wireObj.abc2);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_enum_twin_rust_async(
      StructWithEnumTwinRustAsync apiObj,
      wire_cst_struct_with_enum_twin_rust_async wireObj) {
    cst_api_fill_to_wire_abc_twin_rust_async(apiObj.abc1, wireObj.abc1);
    cst_api_fill_to_wire_abc_twin_rust_async(apiObj.abc2, wireObj.abc2);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_enum_twin_sync(
      StructWithEnumTwinSync apiObj,
      wire_cst_struct_with_enum_twin_sync wireObj) {
    cst_api_fill_to_wire_abc_twin_sync(apiObj.abc1, wireObj.abc1);
    cst_api_fill_to_wire_abc_twin_sync(apiObj.abc2, wireObj.abc2);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_moi(
      StructWithExplicitAutoOpaqueFieldTwinMoi apiObj,
      wire_cst_struct_with_explicit_auto_opaque_field_twin_moi wireObj) {
    wireObj.auto_opaque =
        cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
            apiObj.autoOpaque);
    wireObj.normal = cst_encode_i_32(apiObj.normal);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_normal(
      StructWithExplicitAutoOpaqueFieldTwinNormal apiObj,
      wire_cst_struct_with_explicit_auto_opaque_field_twin_normal wireObj) {
    wireObj.auto_opaque =
        cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
            apiObj.autoOpaque);
    wireObj.normal = cst_encode_i_32(apiObj.normal);
  }

  @protected
  void
      cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_rust_async(
          StructWithExplicitAutoOpaqueFieldTwinRustAsync apiObj,
          wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async
              wireObj) {
    wireObj.auto_opaque =
        cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
            apiObj.autoOpaque);
    wireObj.normal = cst_encode_i_32(apiObj.normal);
  }

  @protected
  void
      cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
          StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi apiObj,
          wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async_moi
              wireObj) {
    wireObj.auto_opaque =
        cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
            apiObj.autoOpaque);
    wireObj.normal = cst_encode_i_32(apiObj.normal);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_sync(
      StructWithExplicitAutoOpaqueFieldTwinSync apiObj,
      wire_cst_struct_with_explicit_auto_opaque_field_twin_sync wireObj) {
    wireObj.auto_opaque =
        cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
            apiObj.autoOpaque);
    wireObj.normal = cst_encode_i_32(apiObj.normal);
  }

  @protected
  void
      cst_api_fill_to_wire_struct_with_explicit_auto_opaque_field_twin_sync_moi(
          StructWithExplicitAutoOpaqueFieldTwinSyncMoi apiObj,
          wire_cst_struct_with_explicit_auto_opaque_field_twin_sync_moi
              wireObj) {
    wireObj.auto_opaque =
        cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
            apiObj.autoOpaque);
    wireObj.normal = cst_encode_i_32(apiObj.normal);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_moi(
      StructWithGoodAndOpaqueFieldTwinMoi apiObj,
      wire_cst_struct_with_good_and_opaque_field_twin_moi wireObj) {
    wireObj.good = cst_encode_String(apiObj.good);
    wireObj.opaque =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
            apiObj.opaque);
    wireObj.option_opaque =
        cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
            apiObj.optionOpaque);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_normal(
      StructWithGoodAndOpaqueFieldTwinNormal apiObj,
      wire_cst_struct_with_good_and_opaque_field_twin_normal wireObj) {
    wireObj.good = cst_encode_String(apiObj.good);
    wireObj.opaque =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
            apiObj.opaque);
    wireObj.option_opaque =
        cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
            apiObj.optionOpaque);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_rust_async(
      StructWithGoodAndOpaqueFieldTwinRustAsync apiObj,
      wire_cst_struct_with_good_and_opaque_field_twin_rust_async wireObj) {
    wireObj.good = cst_encode_String(apiObj.good);
    wireObj.opaque =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
            apiObj.opaque);
    wireObj.option_opaque =
        cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
            apiObj.optionOpaque);
  }

  @protected
  void
      cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_rust_async_moi(
          StructWithGoodAndOpaqueFieldTwinRustAsyncMoi apiObj,
          wire_cst_struct_with_good_and_opaque_field_twin_rust_async_moi
              wireObj) {
    wireObj.good = cst_encode_String(apiObj.good);
    wireObj.opaque =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
            apiObj.opaque);
    wireObj.option_opaque =
        cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
            apiObj.optionOpaque);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_sync(
      StructWithGoodAndOpaqueFieldTwinSync apiObj,
      wire_cst_struct_with_good_and_opaque_field_twin_sync wireObj) {
    wireObj.good = cst_encode_String(apiObj.good);
    wireObj.opaque =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
            apiObj.opaque);
    wireObj.option_opaque =
        cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
            apiObj.optionOpaque);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_good_and_opaque_field_twin_sync_moi(
      StructWithGoodAndOpaqueFieldTwinSyncMoi apiObj,
      wire_cst_struct_with_good_and_opaque_field_twin_sync_moi wireObj) {
    wireObj.good = cst_encode_String(apiObj.good);
    wireObj.opaque =
        cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
            apiObj.opaque);
    wireObj.option_opaque =
        cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
            apiObj.optionOpaque);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_hash_map(
      StructWithHashMap apiObj, wire_cst_struct_with_hash_map wireObj) {
    wireObj.map = cst_encode_Map_String_hash_map_value(apiObj.map);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_one_field_twin_normal(
      StructWithOneFieldTwinNormal apiObj,
      wire_cst_struct_with_one_field_twin_normal wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_one_field_twin_rust_async(
      StructWithOneFieldTwinRustAsync apiObj,
      wire_cst_struct_with_one_field_twin_rust_async wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_one_field_twin_sync(
      StructWithOneFieldTwinSync apiObj,
      wire_cst_struct_with_one_field_twin_sync wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_two_field_twin_normal(
      StructWithTwoFieldTwinNormal apiObj,
      wire_cst_struct_with_two_field_twin_normal wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_two_field_twin_rust_async(
      StructWithTwoFieldTwinRustAsync apiObj,
      wire_cst_struct_with_two_field_twin_rust_async wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_two_field_twin_sync(
      StructWithTwoFieldTwinSync apiObj,
      wire_cst_struct_with_two_field_twin_sync wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_zero_field_twin_normal(
      StructWithZeroFieldTwinNormal apiObj,
      wire_cst_struct_with_zero_field_twin_normal wireObj) {}

  @protected
  void cst_api_fill_to_wire_struct_with_zero_field_twin_rust_async(
      StructWithZeroFieldTwinRustAsync apiObj,
      wire_cst_struct_with_zero_field_twin_rust_async wireObj) {}

  @protected
  void cst_api_fill_to_wire_struct_with_zero_field_twin_sync(
      StructWithZeroFieldTwinSync apiObj,
      wire_cst_struct_with_zero_field_twin_sync wireObj) {}

  @protected
  void cst_api_fill_to_wire_sum_with_twin_normal(
      SumWithTwinNormal apiObj, wire_cst_sum_with_twin_normal wireObj) {
    wireObj.x = cst_encode_u_32(apiObj.x);
  }

  @protected
  void cst_api_fill_to_wire_sum_with_twin_rust_async(
      SumWithTwinRustAsync apiObj, wire_cst_sum_with_twin_rust_async wireObj) {
    wireObj.x = cst_encode_u_32(apiObj.x);
  }

  @protected
  void cst_api_fill_to_wire_sum_with_twin_sync(
      SumWithTwinSync apiObj, wire_cst_sum_with_twin_sync wireObj) {
    wireObj.x = cst_encode_u_32(apiObj.x);
  }

  @protected
  void cst_api_fill_to_wire_test_chrono_twin_normal(
      TestChronoTwinNormal apiObj, wire_cst_test_chrono_twin_normal wireObj) {
    wireObj.dt = cst_encode_opt_box_autoadd_Chrono_Utc(apiObj.dt);
    wireObj.dt2 = cst_encode_opt_box_autoadd_Chrono_Naive(apiObj.dt2);
    wireObj.du = cst_encode_opt_box_autoadd_Chrono_Duration(apiObj.du);
  }

  @protected
  void cst_api_fill_to_wire_test_chrono_twin_rust_async(
      TestChronoTwinRustAsync apiObj,
      wire_cst_test_chrono_twin_rust_async wireObj) {
    wireObj.dt = cst_encode_opt_box_autoadd_Chrono_Utc(apiObj.dt);
    wireObj.dt2 = cst_encode_opt_box_autoadd_Chrono_Naive(apiObj.dt2);
    wireObj.du = cst_encode_opt_box_autoadd_Chrono_Duration(apiObj.du);
  }

  @protected
  void cst_api_fill_to_wire_test_chrono_twin_sync(
      TestChronoTwinSync apiObj, wire_cst_test_chrono_twin_sync wireObj) {
    wireObj.dt = cst_encode_opt_box_autoadd_Chrono_Utc(apiObj.dt);
    wireObj.dt2 = cst_encode_opt_box_autoadd_Chrono_Naive(apiObj.dt2);
    wireObj.du = cst_encode_opt_box_autoadd_Chrono_Duration(apiObj.du);
  }

  @protected
  void cst_api_fill_to_wire_test_id_twin_normal(
      TestIdTwinNormal apiObj, wire_cst_test_id_twin_normal wireObj) {
    wireObj.field0 = cst_encode_i_32_array_2(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_test_id_twin_rust_async(
      TestIdTwinRustAsync apiObj, wire_cst_test_id_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_i_32_array_2(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_test_id_twin_sync(
      TestIdTwinSync apiObj, wire_cst_test_id_twin_sync wireObj) {
    wireObj.field0 = cst_encode_i_32_array_2(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_test_model_twin_normal(
      TestModelTwinNormal apiObj, wire_cst_test_model_twin_normal wireObj) {
    wireObj.id = cst_encode_u_64(apiObj.id);
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.alias_enum = cst_encode_my_enum(apiObj.aliasEnum);
    cst_api_fill_to_wire_my_struct(apiObj.aliasStruct, wireObj.alias_struct);
  }

  @protected
  void cst_api_fill_to_wire_test_model_twin_rust_async(
      TestModelTwinRustAsync apiObj,
      wire_cst_test_model_twin_rust_async wireObj) {
    wireObj.id = cst_encode_u_64(apiObj.id);
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.alias_enum = cst_encode_my_enum(apiObj.aliasEnum);
    cst_api_fill_to_wire_my_struct(apiObj.aliasStruct, wireObj.alias_struct);
  }

  @protected
  void cst_api_fill_to_wire_test_model_twin_sync(
      TestModelTwinSync apiObj, wire_cst_test_model_twin_sync wireObj) {
    wireObj.id = cst_encode_u_64(apiObj.id);
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.alias_enum = cst_encode_my_enum(apiObj.aliasEnum);
    cst_api_fill_to_wire_my_struct(apiObj.aliasStruct, wireObj.alias_struct);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_one_field_twin_normal(
      TupleStructWithOneFieldTwinNormal apiObj,
      wire_cst_tuple_struct_with_one_field_twin_normal wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_one_field_twin_rust_async(
      TupleStructWithOneFieldTwinRustAsync apiObj,
      wire_cst_tuple_struct_with_one_field_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_one_field_twin_sync(
      TupleStructWithOneFieldTwinSync apiObj,
      wire_cst_tuple_struct_with_one_field_twin_sync wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_two_field_twin_normal(
      TupleStructWithTwoFieldTwinNormal apiObj,
      wire_cst_tuple_struct_with_two_field_twin_normal wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
    wireObj.field1 = cst_encode_i_32(apiObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_two_field_twin_rust_async(
      TupleStructWithTwoFieldTwinRustAsync apiObj,
      wire_cst_tuple_struct_with_two_field_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
    wireObj.field1 = cst_encode_i_32(apiObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_two_field_twin_sync(
      TupleStructWithTwoFieldTwinSync apiObj,
      wire_cst_tuple_struct_with_two_field_twin_sync wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
    wireObj.field1 = cst_encode_i_32(apiObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_user_id_twin_normal(
      UserIdTwinNormal apiObj, wire_cst_user_id_twin_normal wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_user_id_twin_rust_async(
      UserIdTwinRustAsync apiObj, wire_cst_user_id_twin_rust_async wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_user_id_twin_sync(
      UserIdTwinSync apiObj, wire_cst_user_id_twin_sync wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_vec_of_primitive_pack_twin_normal(
      VecOfPrimitivePackTwinNormal apiObj,
      wire_cst_vec_of_primitive_pack_twin_normal wireObj) {
    wireObj.int8list = cst_encode_list_prim_i_8_strict(apiObj.int8List);
    wireObj.uint8list = cst_encode_list_prim_u_8_strict(apiObj.uint8List);
    wireObj.int16list = cst_encode_list_prim_i_16_strict(apiObj.int16List);
    wireObj.uint16list = cst_encode_list_prim_u_16_strict(apiObj.uint16List);
    wireObj.uint32list = cst_encode_list_prim_u_32_strict(apiObj.uint32List);
    wireObj.int32list = cst_encode_list_prim_i_32_strict(apiObj.int32List);
    wireObj.uint64list = cst_encode_list_prim_u_64_strict(apiObj.uint64List);
    wireObj.int64list = cst_encode_list_prim_i_64_strict(apiObj.int64List);
    wireObj.float32list = cst_encode_list_prim_f_32_strict(apiObj.float32List);
    wireObj.float64list = cst_encode_list_prim_f_64_strict(apiObj.float64List);
    wireObj.bool_list = cst_encode_list_bool(apiObj.boolList);
  }

  @protected
  void cst_api_fill_to_wire_vec_of_primitive_pack_twin_rust_async(
      VecOfPrimitivePackTwinRustAsync apiObj,
      wire_cst_vec_of_primitive_pack_twin_rust_async wireObj) {
    wireObj.int8list = cst_encode_list_prim_i_8_strict(apiObj.int8List);
    wireObj.uint8list = cst_encode_list_prim_u_8_strict(apiObj.uint8List);
    wireObj.int16list = cst_encode_list_prim_i_16_strict(apiObj.int16List);
    wireObj.uint16list = cst_encode_list_prim_u_16_strict(apiObj.uint16List);
    wireObj.uint32list = cst_encode_list_prim_u_32_strict(apiObj.uint32List);
    wireObj.int32list = cst_encode_list_prim_i_32_strict(apiObj.int32List);
    wireObj.uint64list = cst_encode_list_prim_u_64_strict(apiObj.uint64List);
    wireObj.int64list = cst_encode_list_prim_i_64_strict(apiObj.int64List);
    wireObj.float32list = cst_encode_list_prim_f_32_strict(apiObj.float32List);
    wireObj.float64list = cst_encode_list_prim_f_64_strict(apiObj.float64List);
    wireObj.bool_list = cst_encode_list_bool(apiObj.boolList);
  }

  @protected
  void cst_api_fill_to_wire_vec_of_primitive_pack_twin_sync(
      VecOfPrimitivePackTwinSync apiObj,
      wire_cst_vec_of_primitive_pack_twin_sync wireObj) {
    wireObj.int8list = cst_encode_list_prim_i_8_strict(apiObj.int8List);
    wireObj.uint8list = cst_encode_list_prim_u_8_strict(apiObj.uint8List);
    wireObj.int16list = cst_encode_list_prim_i_16_strict(apiObj.int16List);
    wireObj.uint16list = cst_encode_list_prim_u_16_strict(apiObj.uint16List);
    wireObj.uint32list = cst_encode_list_prim_u_32_strict(apiObj.uint32List);
    wireObj.int32list = cst_encode_list_prim_i_32_strict(apiObj.int32List);
    wireObj.uint64list = cst_encode_list_prim_u_64_strict(apiObj.uint64List);
    wireObj.int64list = cst_encode_list_prim_i_64_strict(apiObj.int64List);
    wireObj.float32list = cst_encode_list_prim_f_32_strict(apiObj.float32List);
    wireObj.float64list = cst_encode_list_prim_f_64_strict(apiObj.float64List);
    wireObj.bool_list = cst_encode_list_bool(apiObj.boolList);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
      BoxFnStringString raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
      BoxHelloTraitTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
      BoxHelloTraitTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
      BoxHelloTraitTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
      BoxHelloTraitTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
      BoxHelloTraitTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
      BoxHelloTraitTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
      BoxMyTraitTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
      BoxMyTraitTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
      BoxMyTraitTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
      BoxMyTraitTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
      BoxMyTraitTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
      BoxMyTraitTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
      ConstructorOpaqueStructTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
      ConstructorOpaqueSyncStructTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
      DroppableTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
      DroppableTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
      DroppableTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
      EnumWithGoodAndOpaqueWithoutOptionTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
      EnumWithGoodAndOpaqueWithoutOptionTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
      EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
      EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
      EnumWithGoodAndOpaqueWithoutOptionTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
      EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
      NonCloneSimpleEnumTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
      NonCloneSimpleEnumTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
      NonCloneSimpleEnumTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
      NonCloneSimpleEnumTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
      NonCloneSimpleEnumTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
      NonCloneSimpleEnumTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
      NonCloneSimpleTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
      NonCloneSimpleTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
      NonCloneSimpleTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
      NonCloneSimpleTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
      NonCloneSimpleTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
      NonCloneSimpleTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
      OpaqueOneTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
      OpaqueOneTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
      OpaqueOneTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
      OpaqueOneTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
      OpaqueOneTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
      OpaqueOneTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
      OpaqueTwoTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
      OpaqueTwoTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
      OpaqueTwoTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
      OpaqueTwoTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
      OpaqueTwoTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
      OpaqueTwoTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
      StructInMiscNoTwinExampleA raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinSync raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
      BoxHelloTraitTwinMoi raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
      BoxHelloTraitTwinNormal raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
      BoxHelloTraitTwinRustAsync raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
      BoxHelloTraitTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
      BoxHelloTraitTwinSync raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
      BoxHelloTraitTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
      DroppableTwinNormal raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
      DroppableTwinRustAsync raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
      DroppableTwinSync raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
      NonCloneSimpleTwinMoi raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
      NonCloneSimpleTwinNormal raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
      NonCloneSimpleTwinRustAsync raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
      NonCloneSimpleTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
      NonCloneSimpleTwinSync raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
      NonCloneSimpleTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
      BoxHelloTraitTwinMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
      BoxHelloTraitTwinNormal raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
      BoxHelloTraitTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
      BoxHelloTraitTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
      BoxHelloTraitTwinSync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
      BoxHelloTraitTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
      ConstructorOpaqueStructTwinNormal raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
      ConstructorOpaqueSyncStructTwinNormal raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
      DroppableTwinNormal raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
      DroppableTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
      DroppableTwinSync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
      NonCloneSimpleEnumTwinMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
      NonCloneSimpleEnumTwinNormal raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
      NonCloneSimpleEnumTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
      NonCloneSimpleEnumTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
      NonCloneSimpleEnumTwinSync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
      NonCloneSimpleEnumTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
      NonCloneSimpleTwinMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
      NonCloneSimpleTwinNormal raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
      NonCloneSimpleTwinRustAsync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
      NonCloneSimpleTwinRustAsyncMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
      NonCloneSimpleTwinSync raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
      NonCloneSimpleTwinSyncMoi raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
      StructInMiscNoTwinExampleA raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
      StructInMiscNoTwinExampleB raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
      StructWithImplBlockInMultiFile raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs_DartOpaque_Output_unit(
      FutureOr<void> Function(Object) raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs_String_Output_unit(
      FutureOr<void> Function(String) raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_normal_Output_unit(
          FutureOr<void> Function(String, DemoStructForRustCallDartTwinNormal)
              raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_Output_unit(
          FutureOr<void> Function(
                  String, DemoStructForRustCallDartTwinRustAsync)
              raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs__Output_DartOpaque(
      FutureOr<Object> Function() raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs__Output_String(
      FutureOr<String> Function() raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs__Output_unit(
      FutureOr<void> Function() raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_normal_Output_demo_struct_for_rust_call_dart_twin_normal(
          FutureOr<DemoStructForRustCallDartTwinNormal> Function(
                  DemoStructForRustCallDartTwinNormal)
              raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_Output_demo_struct_for_rust_call_dart_twin_rust_async(
          FutureOr<DemoStructForRustCallDartTwinRustAsync> Function(
                  DemoStructForRustCallDartTwinRustAsync)
              raw);

  @protected
  PlatformPointer cst_encode_DartOpaque(Object raw);

  @protected
  int cst_encode_RustOpaque_BoxdynDartDebugTwinMoi(BoxDartDebugTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_BoxdynDartDebugTwinNormal(
      BoxDartDebugTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_BoxdynDartDebugTwinRustAsync(
      BoxDartDebugTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
      BoxDartDebugTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_BoxdynDartDebugTwinSync(BoxDartDebugTwinSync raw);

  @protected
  int cst_encode_RustOpaque_BoxdynDartDebugTwinSyncMoi(
      BoxDartDebugTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueReturnTwinMoi(FrbOpaqueReturnTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueReturnTwinNormal(
      FrbOpaqueReturnTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueReturnTwinRustAsync(
      FrbOpaqueReturnTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
      FrbOpaqueReturnTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueReturnTwinSync(
      FrbOpaqueReturnTwinSync raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
      FrbOpaqueReturnTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
      FrbOpaqueSyncReturnTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
      FrbOpaqueSyncReturnTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_HideDataAnotherTwinMoi(HideDataAnotherTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_HideDataAnotherTwinNormal(
      HideDataAnotherTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_HideDataTwinMoi(HideDataTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_HideDataTwinNormal(HideDataTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_HideDataTwinRustAsync(HideDataTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_HideDataTwinRustAsyncMoi(
      HideDataTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_HideDataTwinSync(HideDataTwinSync raw);

  @protected
  int cst_encode_RustOpaque_HideDataTwinSyncMoi(HideDataTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_MutexHideDataTwinMoi(MutexHideDataTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_MutexHideDataTwinNormal(
      MutexHideDataTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_MutexHideDataTwinRustAsync(
      MutexHideDataTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_MutexHideDataTwinRustAsyncMoi(
      MutexHideDataTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_MutexHideDataTwinSync(MutexHideDataTwinSync raw);

  @protected
  int cst_encode_RustOpaque_MutexHideDataTwinSyncMoi(
      MutexHideDataTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_NonCloneDataTwinMoi(NonCloneDataTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_NonCloneDataTwinNormal(NonCloneDataTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_NonCloneDataTwinRustAsync(
      NonCloneDataTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_NonCloneDataTwinRustAsyncMoi(
      NonCloneDataTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_NonCloneDataTwinSync(NonCloneDataTwinSync raw);

  @protected
  int cst_encode_RustOpaque_NonCloneDataTwinSyncMoi(
      NonCloneDataTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_RwLockHideDataTwinMoi(RwLockHideDataTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_RwLockHideDataTwinNormal(
      RwLockHideDataTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_RwLockHideDataTwinRustAsync(
      RwLockHideDataTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
      RwLockHideDataTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_RwLockHideDataTwinSync(RwLockHideDataTwinSync raw);

  @protected
  int cst_encode_RustOpaque_RwLockHideDataTwinSyncMoi(
      RwLockHideDataTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
      BoxFnStringString raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
      BoxHelloTraitTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
      BoxHelloTraitTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
      BoxHelloTraitTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
      BoxHelloTraitTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
      BoxHelloTraitTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
      BoxHelloTraitTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
      BoxMyTraitTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
      BoxMyTraitTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
      BoxMyTraitTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
      BoxMyTraitTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
      BoxMyTraitTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
      BoxMyTraitTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
      ConstructorOpaqueStructTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
      ConstructorOpaqueSyncStructTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
      DroppableTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
      DroppableTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
      DroppableTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
      EnumWithGoodAndOpaqueWithoutOptionTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
      EnumWithGoodAndOpaqueWithoutOptionTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
      EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
      EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
      EnumWithGoodAndOpaqueWithoutOptionTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
      EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
      NonCloneSimpleEnumTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
      NonCloneSimpleEnumTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
      NonCloneSimpleEnumTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
      NonCloneSimpleEnumTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
      NonCloneSimpleEnumTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
      NonCloneSimpleEnumTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
      NonCloneSimpleTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
      NonCloneSimpleTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
      NonCloneSimpleTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
      NonCloneSimpleTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
      NonCloneSimpleTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
      NonCloneSimpleTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
      OpaqueOneTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
      OpaqueOneTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
      OpaqueOneTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
      OpaqueOneTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
      OpaqueOneTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
      OpaqueOneTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
      OpaqueTwoTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
      OpaqueTwoTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
      OpaqueTwoTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
      OpaqueTwoTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
      OpaqueTwoTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
      OpaqueTwoTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
      StructInMiscNoTwinExampleA raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
      StructInMiscNoTwinExampleB raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinSync raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
      StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
      StructWithImplBlockInMultiFile raw);

  @protected
  int cst_encode_RustOpaque_i16(I16 raw);

  @protected
  int cst_encode_RustOpaque_i32(I32 raw);

  @protected
  int cst_encode_application_mode(ApplicationMode raw);

  @protected
  int cst_encode_basic_primitive_enum_twin_normal(
      BasicPrimitiveEnumTwinNormal raw);

  @protected
  int cst_encode_basic_primitive_enum_twin_rust_async(
      BasicPrimitiveEnumTwinRustAsync raw);

  @protected
  int cst_encode_basic_primitive_enum_twin_sync(BasicPrimitiveEnumTwinSync raw);

  @protected
  bool cst_encode_bool(bool raw);

  @protected
  int cst_encode_enum_simple_twin_normal(EnumSimpleTwinNormal raw);

  @protected
  int cst_encode_enum_simple_twin_rust_async(EnumSimpleTwinRustAsync raw);

  @protected
  int cst_encode_enum_simple_twin_sync(EnumSimpleTwinSync raw);

  @protected
  int cst_encode_enum_with_discriminant_twin_normal(
      EnumWithDiscriminantTwinNormal raw);

  @protected
  int cst_encode_enum_with_discriminant_twin_rust_async(
      EnumWithDiscriminantTwinRustAsync raw);

  @protected
  int cst_encode_enum_with_discriminant_twin_sync(
      EnumWithDiscriminantTwinSync raw);

  @protected
  double cst_encode_f_32(double raw);

  @protected
  double cst_encode_f_64(double raw);

  @protected
  int cst_encode_i_16(int raw);

  @protected
  int cst_encode_i_32(int raw);

  @protected
  int cst_encode_i_8(int raw);

  @protected
  int cst_encode_isize(int raw);

  @protected
  int cst_encode_my_enum(MyEnum raw);

  @protected
  int cst_encode_u_16(int raw);

  @protected
  int cst_encode_u_32(int raw);

  @protected
  int cst_encode_u_8(int raw);

  @protected
  void cst_encode_unit(void raw);

  @protected
  int cst_encode_usize(int raw);

  @protected
  int cst_encode_weekdays_twin_normal(WeekdaysTwinNormal raw);

  @protected
  int cst_encode_weekdays_twin_rust_async(WeekdaysTwinRustAsync raw);

  @protected
  int cst_encode_weekdays_twin_sync(WeekdaysTwinSync raw);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          BoxFnStringString self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          BoxHelloTraitTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          BoxHelloTraitTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          BoxHelloTraitTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          BoxHelloTraitTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          BoxHelloTraitTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          BoxHelloTraitTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          BoxHelloTraitTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          BoxHelloTraitTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          BoxHelloTraitTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          BoxHelloTraitTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          BoxHelloTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          BoxHelloTraitTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          BoxMyTraitTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          BoxMyTraitTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          BoxMyTraitTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          BoxMyTraitTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          BoxMyTraitTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          BoxMyTraitTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          BoxMyTraitTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          BoxMyTraitTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          BoxMyTraitTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          BoxMyTraitTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          BoxMyTraitTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          BoxMyTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          ConstructorOpaqueStructTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          ConstructorOpaqueSyncStructTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          DroppableTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          DroppableTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          DroppableTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          DroppableTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          DroppableTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          DroppableTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          EnumWithGoodAndOpaqueWithoutOptionTwinNormal self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          EnumWithGoodAndOpaqueWithoutOptionTwinSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          EnumWithGoodAndOpaqueWithoutOptionTwinSync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          NonCloneSimpleEnumTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          NonCloneSimpleEnumTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          NonCloneSimpleEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          NonCloneSimpleEnumTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          NonCloneSimpleEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          NonCloneSimpleEnumTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          NonCloneSimpleEnumTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          NonCloneSimpleEnumTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          NonCloneSimpleEnumTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          NonCloneSimpleEnumTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          NonCloneSimpleEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          NonCloneSimpleEnumTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          NonCloneSimpleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          NonCloneSimpleTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          NonCloneSimpleTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          NonCloneSimpleTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          NonCloneSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          NonCloneSimpleTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          OpaqueOneTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          OpaqueOneTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          OpaqueOneTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          OpaqueOneTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          OpaqueOneTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          OpaqueOneTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          OpaqueOneTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          OpaqueOneTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          OpaqueOneTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          OpaqueOneTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          OpaqueOneTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          OpaqueOneTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          OpaqueTwoTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          OpaqueTwoTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          OpaqueTwoTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          OpaqueTwoTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          OpaqueTwoTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          OpaqueTwoTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          OpaqueTwoTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          OpaqueTwoTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          OpaqueTwoTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          OpaqueTwoTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          OpaqueTwoTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          OpaqueTwoTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          StructInMiscNoTwinExampleA self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          BoxHelloTraitTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          BoxHelloTraitTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          BoxHelloTraitTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          BoxHelloTraitTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          BoxHelloTraitTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          BoxHelloTraitTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          BoxHelloTraitTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          BoxHelloTraitTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          BoxHelloTraitTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          BoxHelloTraitTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          BoxHelloTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          BoxHelloTraitTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          DroppableTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          DroppableTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          DroppableTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          DroppableTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          DroppableTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          DroppableTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          NonCloneSimpleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          NonCloneSimpleTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          NonCloneSimpleTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          NonCloneSimpleTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          NonCloneSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          NonCloneSimpleTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          BoxHelloTraitTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          BoxHelloTraitTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          BoxHelloTraitTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          BoxHelloTraitTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          BoxHelloTraitTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          BoxHelloTraitTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          BoxHelloTraitTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          BoxHelloTraitTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          BoxHelloTraitTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          BoxHelloTraitTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          BoxHelloTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          BoxHelloTraitTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          ConstructorOpaqueStructTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          ConstructorOpaqueSyncStructTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          DroppableTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          DroppableTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          DroppableTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          DroppableTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          DroppableTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          DroppableTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          NonCloneSimpleEnumTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          NonCloneSimpleEnumTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          NonCloneSimpleEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          NonCloneSimpleEnumTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          NonCloneSimpleEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          NonCloneSimpleEnumTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          NonCloneSimpleEnumTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          NonCloneSimpleEnumTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          NonCloneSimpleEnumTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          NonCloneSimpleEnumTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          NonCloneSimpleEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          NonCloneSimpleEnumTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          NonCloneSimpleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          NonCloneSimpleTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          NonCloneSimpleTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          NonCloneSimpleTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          NonCloneSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          NonCloneSimpleTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          StructInMiscNoTwinExampleA self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          StructInMiscNoTwinExampleB self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          StructWithImplBlockInMultiFile self, SseSerializer serializer);

  @protected
  void sse_encode_Backtrace(String self, SseSerializer serializer);

  @protected
  void sse_encode_Chrono_Duration(Duration self, SseSerializer serializer);

  @protected
  void sse_encode_Chrono_Local(DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_Chrono_Naive(DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_Chrono_Utc(DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs_DartOpaque_Output_unit(
      FutureOr<void> Function(Object) self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs_String_Output_unit(
      FutureOr<void> Function(String) self, SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_normal_Output_unit(
          FutureOr<void> Function(String, DemoStructForRustCallDartTwinNormal)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_Output_unit(
          FutureOr<void> Function(
                  String, DemoStructForRustCallDartTwinRustAsync)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_sse_Output_unit(
          FutureOr<void> Function(
                  String, DemoStructForRustCallDartTwinRustAsyncSse)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_sse_Output_unit(
          FutureOr<void> Function(String, DemoStructForRustCallDartTwinSse)
              self,
          SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs__Output_DartOpaque(
      FutureOr<Object> Function() self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs__Output_String(
      FutureOr<String> Function() self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs__Output_unit(
      FutureOr<void> Function() self, SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_normal_Output_demo_struct_for_rust_call_dart_twin_normal(
          FutureOr<DemoStructForRustCallDartTwinNormal> Function(
                  DemoStructForRustCallDartTwinNormal)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_Output_demo_struct_for_rust_call_dart_twin_rust_async(
          FutureOr<DemoStructForRustCallDartTwinRustAsync> Function(
                  DemoStructForRustCallDartTwinRustAsync)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_sse_Output_demo_struct_for_rust_call_dart_twin_rust_async_sse(
          FutureOr<DemoStructForRustCallDartTwinRustAsyncSse> Function(
                  DemoStructForRustCallDartTwinRustAsyncSse)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_sse_Output_demo_struct_for_rust_call_dart_twin_sse(
          FutureOr<DemoStructForRustCallDartTwinSse> Function(
                  DemoStructForRustCallDartTwinSse)
              self,
          SseSerializer serializer);

  @protected
  void sse_encode_DartOpaque(Object self, SseSerializer serializer);

  @protected
  void sse_encode_DartOpaque_array_1(
      ObjectArray1 self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_String(
      Map<String, String> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_normal(
      Map<String, EnumSimpleTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_rust_async(
      Map<String, EnumSimpleTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_rust_async_sse(
      Map<String, EnumSimpleTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_sse(
      Map<String, EnumSimpleTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_sync(
      Map<String, EnumSimpleTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_sync_sse(
      Map<String, EnumSimpleTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_hash_map_value(
      Map<String, HashMapValue> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_normal(
      Map<String, KitchenSinkTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_rust_async(
      Map<String, KitchenSinkTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_rust_async_sse(
      Map<String, KitchenSinkTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_sse(
      Map<String, KitchenSinkTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_sync(
      Map<String, KitchenSinkTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_sync_sse(
      Map<String, KitchenSinkTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_list_prim_u_8_strict(
      Map<String, Uint8List> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_my_size(
      Map<String, MySize> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_String(
      Map<int, String> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_general_enum_twin_normal(
      Map<int, BasicGeneralEnumTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_general_enum_twin_rust_async(
      Map<int, BasicGeneralEnumTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_general_enum_twin_rust_async_sse(
      Map<int, BasicGeneralEnumTwinRustAsyncSse> self,
      SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_general_enum_twin_sse(
      Map<int, BasicGeneralEnumTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_general_enum_twin_sync(
      Map<int, BasicGeneralEnumTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_general_enum_twin_sync_sse(
      Map<int, BasicGeneralEnumTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_primitive_enum_twin_normal(
      Map<int, BasicPrimitiveEnumTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_primitive_enum_twin_rust_async(
      Map<int, BasicPrimitiveEnumTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_primitive_enum_twin_rust_async_sse(
      Map<int, BasicPrimitiveEnumTwinRustAsyncSse> self,
      SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_primitive_enum_twin_sse(
      Map<int, BasicPrimitiveEnumTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_primitive_enum_twin_sync(
      Map<int, BasicPrimitiveEnumTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_primitive_enum_twin_sync_sse(
      Map<int, BasicPrimitiveEnumTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_struct_twin_normal(
      Map<int, BasicStructTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_struct_twin_rust_async(
      Map<int, BasicStructTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_struct_twin_rust_async_sse(
      Map<int, BasicStructTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_struct_twin_sse(
      Map<int, BasicStructTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_struct_twin_sync(
      Map<int, BasicStructTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_basic_struct_twin_sync_sse(
      Map<int, BasicStructTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_bool(Map<int, bool> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_f_32(
      Map<int, double> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_f_64(
      Map<int, double> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_i_16(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_i_32(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_i_64(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_i_8(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_isize(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_list_prim_u_8_strict(
      Map<int, Uint8List> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_u_16(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_u_32(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_u_64(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_u_8(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_usize(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_u_8_application_mode(
      Map<int, ApplicationMode> self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinMoi(
      BoxDartDebugTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinNormal(
      BoxDartDebugTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinRustAsync(
      BoxDartDebugTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
      BoxDartDebugTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
      BoxDartDebugTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
      BoxDartDebugTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinSse(
      BoxDartDebugTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinSseMoi(
      BoxDartDebugTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinSync(
      BoxDartDebugTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinSyncMoi(
      BoxDartDebugTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinSyncSse(
      BoxDartDebugTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
      BoxDartDebugTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinMoi(
      FrbOpaqueReturnTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinNormal(
      FrbOpaqueReturnTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinRustAsync(
      FrbOpaqueReturnTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
      FrbOpaqueReturnTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
      FrbOpaqueReturnTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
      FrbOpaqueReturnTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinSse(
      FrbOpaqueReturnTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinSseMoi(
      FrbOpaqueReturnTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinSync(
      FrbOpaqueReturnTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
      FrbOpaqueReturnTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinSyncSse(
      FrbOpaqueReturnTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
      FrbOpaqueReturnTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
      FrbOpaqueSyncReturnTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
      FrbOpaqueSyncReturnTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueSyncReturnTwinSse(
      FrbOpaqueSyncReturnTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
      FrbOpaqueSyncReturnTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataAnotherTwinMoi(
      HideDataAnotherTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataAnotherTwinNormal(
      HideDataAnotherTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataAnotherTwinSse(
      HideDataAnotherTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataAnotherTwinSseMoi(
      HideDataAnotherTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinMoi(
      HideDataTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinMoi_array_2(
      HideDataTwinMoiArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinNormal(
      HideDataTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinNormal_array_2(
      HideDataTwinNormalArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsync(
      HideDataTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsyncMoi(
      HideDataTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsyncMoi_array_2(
      HideDataTwinRustAsyncMoiArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsyncSse(
      HideDataTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsyncSseMoi(
      HideDataTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsyncSseMoi_array_2(
      HideDataTwinRustAsyncSseMoiArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsyncSse_array_2(
      HideDataTwinRustAsyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinRustAsync_array_2(
      HideDataTwinRustAsyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSse(
      HideDataTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSseMoi(
      HideDataTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSseMoi_array_2(
      HideDataTwinSseMoiArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSse_array_2(
      HideDataTwinSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSync(
      HideDataTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSyncMoi(
      HideDataTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSyncMoi_array_2(
      HideDataTwinSyncMoiArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSyncSse(
      HideDataTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSyncSseMoi(
      HideDataTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSyncSseMoi_array_2(
      HideDataTwinSyncSseMoiArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSyncSse_array_2(
      HideDataTwinSyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_HideDataTwinSync_array_2(
      HideDataTwinSyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinMoi(
      MutexHideDataTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinNormal(
      MutexHideDataTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinRustAsync(
      MutexHideDataTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinRustAsyncMoi(
      MutexHideDataTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinRustAsyncSse(
      MutexHideDataTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
      MutexHideDataTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinSse(
      MutexHideDataTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinSseMoi(
      MutexHideDataTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinSync(
      MutexHideDataTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinSyncMoi(
      MutexHideDataTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinSyncSse(
      MutexHideDataTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideDataTwinSyncSseMoi(
      MutexHideDataTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinMoi(
      NonCloneDataTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinNormal(
      NonCloneDataTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinRustAsync(
      NonCloneDataTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinRustAsyncMoi(
      NonCloneDataTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinRustAsyncSse(
      NonCloneDataTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
      NonCloneDataTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinSse(
      NonCloneDataTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinSseMoi(
      NonCloneDataTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinSync(
      NonCloneDataTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinSyncMoi(
      NonCloneDataTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinSyncSse(
      NonCloneDataTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_NonCloneDataTwinSyncSseMoi(
      NonCloneDataTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinMoi(
      RwLockHideDataTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinNormal(
      RwLockHideDataTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinRustAsync(
      RwLockHideDataTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
      RwLockHideDataTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinRustAsyncSse(
      RwLockHideDataTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
      RwLockHideDataTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinSse(
      RwLockHideDataTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinSseMoi(
      RwLockHideDataTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinSync(
      RwLockHideDataTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinSyncMoi(
      RwLockHideDataTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinSyncSse(
      RwLockHideDataTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideDataTwinSyncSseMoi(
      RwLockHideDataTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
          BoxFnStringString self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
          BoxHelloTraitTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
          BoxHelloTraitTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
          BoxHelloTraitTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
          BoxHelloTraitTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
          BoxHelloTraitTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
          BoxHelloTraitTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
          BoxHelloTraitTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
          BoxHelloTraitTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
          BoxHelloTraitTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
          BoxHelloTraitTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
          BoxHelloTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
          BoxHelloTraitTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
          BoxMyTraitTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
          BoxMyTraitTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
          BoxMyTraitTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
          BoxMyTraitTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
          BoxMyTraitTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
          BoxMyTraitTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
          BoxMyTraitTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
          BoxMyTraitTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
          BoxMyTraitTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
          BoxMyTraitTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
          BoxMyTraitTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          BoxMyTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
          ConstructorOpaqueStructTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
          ConstructorOpaqueSyncStructTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
          DroppableTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
          DroppableTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
          DroppableTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
          DroppableTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
          DroppableTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
          DroppableTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
          EnumWithGoodAndOpaqueWithoutOptionTwinNormal self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
          EnumWithGoodAndOpaqueWithoutOptionTwinSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
          EnumWithGoodAndOpaqueWithoutOptionTwinSync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
          EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
          EnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
          NonCloneSimpleEnumTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
          NonCloneSimpleEnumTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
          NonCloneSimpleEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
          NonCloneSimpleEnumTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
          NonCloneSimpleEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
          NonCloneSimpleEnumTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
          NonCloneSimpleEnumTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
          NonCloneSimpleEnumTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
          NonCloneSimpleEnumTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
          NonCloneSimpleEnumTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
          NonCloneSimpleEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
          NonCloneSimpleEnumTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          NonCloneSimpleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          NonCloneSimpleTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          NonCloneSimpleTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          NonCloneSimpleTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          NonCloneSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          NonCloneSimpleTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
          OpaqueOneTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
          OpaqueOneTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
          OpaqueOneTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
          OpaqueOneTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
          OpaqueOneTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
          OpaqueOneTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
          OpaqueOneTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
          OpaqueOneTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
          OpaqueOneTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
          OpaqueOneTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
          OpaqueOneTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
          OpaqueOneTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
          OpaqueTwoTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
          OpaqueTwoTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
          OpaqueTwoTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
          OpaqueTwoTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
          OpaqueTwoTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
          OpaqueTwoTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
          OpaqueTwoTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
          OpaqueTwoTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
          OpaqueTwoTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
          OpaqueTwoTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
          OpaqueTwoTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
          OpaqueTwoTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
          StructInMiscNoTwinExampleA self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
          StructInMiscNoTwinExampleB self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinNormal self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
          StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
          StructWithImplBlockInMultiFile self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_i16(I16 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_i32(I32 self, SseSerializer serializer);

  @protected
  void sse_encode_Set_String(Set<String> self, SseSerializer serializer);

  @protected
  void sse_encode_Set_application_mode(
      Set<ApplicationMode> self, SseSerializer serializer);

  @protected
  void sse_encode_Set_i_32(Set<int> self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_Uuid(UuidValue self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_normal(ATwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_rust_async(
      ATwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_rust_async_sse(
      ATwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_sse(ATwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_sync(ATwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_sync_sse(ATwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_normal(AbcTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_rust_async(
      AbcTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_rust_async_sse(
      AbcTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_sse(AbcTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_sync(AbcTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_sync_sse(
      AbcTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_another_macro_struct_twin_normal(
      AnotherMacroStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_normal(
      AnotherTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_rust_async(
      AnotherTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_rust_async_sse(
      AnotherTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_sse(
      AnotherTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_sync(
      AnotherTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_sync_sse(
      AnotherTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_application_env(
      ApplicationEnv self, SseSerializer serializer);

  @protected
  void sse_encode_application_env_var(
      ApplicationEnvVar self, SseSerializer serializer);

  @protected
  void sse_encode_application_message(
      ApplicationMessage self, SseSerializer serializer);

  @protected
  void sse_encode_application_mode(
      ApplicationMode self, SseSerializer serializer);

  @protected
  void sse_encode_application_mode_array_2(
      ApplicationModeArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_application_settings(
      ApplicationSettings self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_normal(
      AttributeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_rust_async(
      AttributeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_rust_async_sse(
      AttributeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_sse(
      AttributeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_sync(
      AttributeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_sync_sse(
      AttributeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_normal(BTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_rust_async(
      BTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_rust_async_sse(
      BTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_sse(BTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_sync(BTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_sync_sse(BTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_general_enum_twin_normal(
      BasicGeneralEnumTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_basic_general_enum_twin_rust_async(
      BasicGeneralEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_basic_general_enum_twin_rust_async_sse(
      BasicGeneralEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_general_enum_twin_sse(
      BasicGeneralEnumTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_general_enum_twin_sync(
      BasicGeneralEnumTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_basic_general_enum_twin_sync_sse(
      BasicGeneralEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_primitive_enum_twin_normal(
      BasicPrimitiveEnumTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_basic_primitive_enum_twin_rust_async(
      BasicPrimitiveEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_basic_primitive_enum_twin_rust_async_sse(
      BasicPrimitiveEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_primitive_enum_twin_sse(
      BasicPrimitiveEnumTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_primitive_enum_twin_sync(
      BasicPrimitiveEnumTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_basic_primitive_enum_twin_sync_sse(
      BasicPrimitiveEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_struct_twin_normal(
      BasicStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_basic_struct_twin_rust_async(
      BasicStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_basic_struct_twin_rust_async_sse(
      BasicStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_struct_twin_sse(
      BasicStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_basic_struct_twin_sync(
      BasicStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_basic_struct_twin_sync_sse(
      BasicStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_rust_async_sse(
      BenchmarkBinaryTreeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_sse(
      BenchmarkBinaryTreeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_sync_sse(
      BenchmarkBinaryTreeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_normal(
      BenchmarkBlobTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_rust_async(
      BenchmarkBlobTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_rust_async_sse(
      BenchmarkBlobTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_sse(
      BenchmarkBlobTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_sync(
      BenchmarkBlobTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_sync_sse(
      BenchmarkBlobTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_normal(
      BigBuffersTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_rust_async(
      BigBuffersTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_rust_async_sse(
      BigBuffersTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_sse(
      BigBuffersTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_sync(
      BigBuffersTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_sync_sse(
      BigBuffersTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_normal(
      BlobTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_rust_async(
      BlobTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_rust_async_sse(
      BlobTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_sse(BlobTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_sync(BlobTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_sync_sse(
      BlobTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_application_env(
      ApplicationEnv self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          NonCloneSimpleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          NonCloneSimpleTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          NonCloneSimpleTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          NonCloneSimpleTwinSseMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          NonCloneSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          NonCloneSimpleTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_Chrono_Duration(
      Duration self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_Chrono_Naive(
      DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_Chrono_Utc(
      DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_DartOpaque(Object self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(
      HideDataAnotherTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
      HideDataAnotherTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataAnotherTwinSse(
      HideDataAnotherTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataAnotherTwinSseMoi(
      HideDataAnotherTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinMoi(
      HideDataTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinNormal(
      HideDataTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinRustAsync(
      HideDataTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
      HideDataTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinRustAsyncSse(
      HideDataTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinRustAsyncSseMoi(
      HideDataTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinSse(
      HideDataTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinSseMoi(
      HideDataTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinSync(
      HideDataTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
      HideDataTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinSyncSse(
      HideDataTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_HideDataTwinSyncSseMoi(
      HideDataTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_normal(
      ATwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_rust_async(
      ATwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_rust_async_sse(
      ATwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_sse(
      ATwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_sync(
      ATwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_sync_sse(
      ATwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_normal(
      AbcTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_rust_async(
      AbcTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_rust_async_sse(
      AbcTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_sse(
      AbcTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_sync(
      AbcTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_sync_sse(
      AbcTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_application_env(
      ApplicationEnv self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_application_mode(
      ApplicationMode self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_application_settings(
      ApplicationSettings self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_normal(
      AttributeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_rust_async(
      AttributeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_rust_async_sse(
      AttributeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_sse(
      AttributeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_sync(
      AttributeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_sync_sse(
      AttributeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_normal(
      BTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_rust_async(
      BTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_rust_async_sse(
      BTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_sse(
      BTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_sync(
      BTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_sync_sse(
      BTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_general_enum_twin_normal(
      BasicGeneralEnumTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_general_enum_twin_rust_async(
      BasicGeneralEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_general_enum_twin_rust_async_sse(
      BasicGeneralEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_general_enum_twin_sse(
      BasicGeneralEnumTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_general_enum_twin_sync(
      BasicGeneralEnumTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_general_enum_twin_sync_sse(
      BasicGeneralEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_primitive_enum_twin_normal(
      BasicPrimitiveEnumTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_primitive_enum_twin_rust_async(
      BasicPrimitiveEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_primitive_enum_twin_rust_async_sse(
      BasicPrimitiveEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_primitive_enum_twin_sse(
      BasicPrimitiveEnumTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_primitive_enum_twin_sync(
      BasicPrimitiveEnumTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_primitive_enum_twin_sync_sse(
      BasicPrimitiveEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_struct_twin_normal(
      BasicStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_struct_twin_rust_async(
      BasicStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_struct_twin_rust_async_sse(
      BasicStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_struct_twin_sse(
      BasicStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_struct_twin_sync(
      BasicStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_basic_struct_twin_sync_sse(
      BasicStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_rust_async_sse(
      BenchmarkBinaryTreeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_sse(
      BenchmarkBinaryTreeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_sync_sse(
      BenchmarkBinaryTreeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_normal(
      BenchmarkBlobTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_rust_async(
      BenchmarkBlobTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_rust_async_sse(
      BenchmarkBlobTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_sse(
      BenchmarkBlobTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_sync(
      BenchmarkBlobTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_sync_sse(
      BenchmarkBlobTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_normal(
      CTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_rust_async(
      CTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_rust_async_sse(
      CTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_sse(
      CTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_sync(
      CTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_sync_sse(
      CTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_normal(
      ConcatenateWithTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_rust_async(
      ConcatenateWithTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_rust_async_sse(
      ConcatenateWithTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_sse(
      ConcatenateWithTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_sync(
      ConcatenateWithTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_sync_sse(
      ConcatenateWithTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_normal(
      CustomNestedError2TwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_rust_async(
      CustomNestedError2TwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_rust_async_sse(
      CustomNestedError2TwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_sse(
      CustomNestedError2TwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_sync(
      CustomNestedError2TwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_sync_sse(
      CustomNestedError2TwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_normal(
      CustomNestedErrorInnerTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_rust_async(
      CustomNestedErrorInnerTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_rust_async_sse(
      CustomNestedErrorInnerTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_sse(
      CustomNestedErrorInnerTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_sync(
      CustomNestedErrorInnerTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_sync_sse(
      CustomNestedErrorInnerTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_normal(
      CustomNestedErrorOuterTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_rust_async(
      CustomNestedErrorOuterTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_rust_async_sse(
      CustomNestedErrorOuterTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_sse(
      CustomNestedErrorOuterTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_sync(
      CustomNestedErrorOuterTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_sync_sse(
      CustomNestedErrorOuterTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_normal(
      CustomStructErrorTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_rust_async(
      CustomStructErrorTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_rust_async_sse(
      CustomStructErrorTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_sse(
      CustomStructErrorTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_sync(
      CustomStructErrorTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_sync_sse(
      CustomStructErrorTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_normal(
      CustomStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_rust_async(
      CustomStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_rust_async_sse(
      CustomStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_sse(
      CustomStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_sync(
      CustomStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_sync_sse(
      CustomStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_normal(
      CustomizedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_rust_async(
      CustomizedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_rust_async_sse(
      CustomizedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_sse(
      CustomizedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_sync(
      CustomizedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_sync_sse(
      CustomizedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_normal(
      DartOpaqueNestedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_rust_async(
      DartOpaqueNestedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_rust_async_sse(
      DartOpaqueNestedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_sse(
      DartOpaqueNestedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_sync(
      DartOpaqueNestedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_sync_sse(
      DartOpaqueNestedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_normal(
      ElementTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_rust_async(
      ElementTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_rust_async_sse(
      ElementTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_sse(
      ElementTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_sync(
      ElementTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_sync_sse(
      ElementTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_normal(
      EmptyTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_rust_async(
      EmptyTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_rust_async_sse(
      EmptyTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_sse(
      EmptyTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_sync(
      EmptyTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_sync_sse(
      EmptyTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_normal(
      EnumDartOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_rust_async(
      EnumDartOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_rust_async_sse(
      EnumDartOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_sse(
      EnumDartOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_sync(
      EnumDartOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_sync_sse(
      EnumDartOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_moi(
      EnumOpaqueTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_normal(
      EnumOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_rust_async(
      EnumOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_rust_async_moi(
      EnumOpaqueTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_rust_async_sse(
      EnumOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_rust_async_sse_moi(
      EnumOpaqueTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_sse(
      EnumOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_sse_moi(
      EnumOpaqueTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_sync(
      EnumOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_sync_moi(
      EnumOpaqueTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_sync_sse(
      EnumOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_sync_sse_moi(
      EnumOpaqueTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_moi(
      EnumWithGoodAndOpaqueTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_normal(
      EnumWithGoodAndOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_rust_async(
      EnumWithGoodAndOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moi(
      EnumWithGoodAndOpaqueTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_sse(
      EnumWithGoodAndOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_rust_async_sse_moi(
      EnumWithGoodAndOpaqueTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_sse(
      EnumWithGoodAndOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_sse_moi(
      EnumWithGoodAndOpaqueTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_sync(
      EnumWithGoodAndOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_sync_moi(
      EnumWithGoodAndOpaqueTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_sync_sse(
      EnumWithGoodAndOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_good_and_opaque_twin_sync_sse_moi(
      EnumWithGoodAndOpaqueTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_normal(
      EnumWithItemMixedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_rust_async(
      EnumWithItemMixedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_rust_async_sse(
      EnumWithItemMixedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_sse(
      EnumWithItemMixedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_sync(
      EnumWithItemMixedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_sync_sse(
      EnumWithItemMixedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_normal(
      EnumWithItemStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_rust_async(
      EnumWithItemStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_rust_async_sse(
      EnumWithItemStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_sse(
      EnumWithItemStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_sync(
      EnumWithItemStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_sync_sse(
      EnumWithItemStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_normal(
      EnumWithItemTupleTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_rust_async(
      EnumWithItemTupleTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_rust_async_sse(
      EnumWithItemTupleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_sse(
      EnumWithItemTupleTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_sync(
      EnumWithItemTupleTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_sync_sse(
      EnumWithItemTupleTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_event_twin_normal(
      EventTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_event_twin_rust_async(
      EventTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_event_twin_rust_async_sse(
      EventTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_event_twin_sse(
      EventTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_chrono_twin_normal(
      FeatureChronoTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_chrono_twin_rust_async(
      FeatureChronoTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_chrono_twin_rust_async_sse(
      FeatureChronoTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_chrono_twin_sse(
      FeatureChronoTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_chrono_twin_sync(
      FeatureChronoTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_chrono_twin_sync_sse(
      FeatureChronoTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_uuid_twin_normal(
      FeatureUuidTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_uuid_twin_rust_async(
      FeatureUuidTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_uuid_twin_rust_async_sse(
      FeatureUuidTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_uuid_twin_sse(
      FeatureUuidTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_uuid_twin_sync(
      FeatureUuidTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_uuid_twin_sync_sse(
      FeatureUuidTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_normal(
      FeedIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_rust_async(
      FeedIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_rust_async_sse(
      FeedIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_sse(
      FeedIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_sync(
      FeedIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_sync_sse(
      FeedIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_isize(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_rust_async_sse(
      KitchenSinkTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_sse(
      KitchenSinkTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_sync(
      KitchenSinkTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_sync_sse(
      KitchenSinkTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_list_of_nested_raw_string_mirrored(
      ListOfNestedRawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_macro_struct(
      MacroStruct self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_normal(
      MeasureTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_rust_async(
      MeasureTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_rust_async_sse(
      MeasureTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_sse(
      MeasureTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_sync(
      MeasureTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_sync_sse(
      MeasureTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_normal(
      MessageIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_rust_async(
      MessageIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_rust_async_sse(
      MessageIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_sse(
      MessageIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_sync(
      MessageIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_sync_sse(
      MessageIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_callable_twin_normal(
      MyCallableTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_callable_twin_rust_async(
      MyCallableTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_callable_twin_rust_async_sse(
      MyCallableTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_callable_twin_sse(
      MyCallableTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_callable_twin_sync(
      MyCallableTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_callable_twin_sync_sse(
      MyCallableTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_normal(
      MyNestedStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_rust_async(
      MyNestedStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_rust_async_sse(
      MyNestedStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_sse(
      MyNestedStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_sync(
      MyNestedStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_sync_sse(
      MyNestedStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_size(MySize self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_struct(
      MyStruct self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_normal(
      MyTreeNodeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_rust_async(
      MyTreeNodeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_rust_async_sse(
      MyTreeNodeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_sse(
      MyTreeNodeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_sync(
      MyTreeNodeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_sync_sse(
      MyTreeNodeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_nested_raw_string_mirrored(
      NestedRawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_normal(
      NewTypeIntTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_rust_async_sse(
      NewTypeIntTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_sse(
      NewTypeIntTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_sync(
      NewTypeIntTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_sync_sse(
      NewTypeIntTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_normal(
      NoteTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_rust_async(
      NoteTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_rust_async_sse(
      NoteTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_sse(
      NoteTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_sync(
      NoteTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_sync_sse(
      NoteTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_numbers(Numbers self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_moi(
      OpaqueNestedTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_normal(
      OpaqueNestedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_rust_async(
      OpaqueNestedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_rust_async_moi(
      OpaqueNestedTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_rust_async_sse(
      OpaqueNestedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_rust_async_sse_moi(
      OpaqueNestedTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_sse(
      OpaqueNestedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_sse_moi(
      OpaqueNestedTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_sync(
      OpaqueNestedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_sync_moi(
      OpaqueNestedTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_sync_sse(
      OpaqueNestedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_sync_sse_moi(
      OpaqueNestedTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_normal(
      OptVecsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_rust_async(
      OptVecsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_rust_async_sse(
      OptVecsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_sse(
      OptVecsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_sync(
      OptVecsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_sync_sse(
      OptVecsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_raw_string_mirrored(
      RawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_record_string_i_32(
      (String, int) self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sequences(
      Sequences self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_simple_struct_twin_normal(
      SimpleStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_simple_struct_twin_rust_async(
      SimpleStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_simple_struct_twin_rust_async_sse(
      SimpleStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_simple_struct_twin_sse(
      SimpleStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_simple_struct_twin_sync(
      SimpleStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_simple_struct_twin_sync_sse(
      SimpleStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_normal(
      SomeStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_rust_async(
      SomeStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_rust_async_sse(
      SomeStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_sse(
      SomeStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_sync(
      SomeStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_sync_sse(
      SomeStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_in_lower_level(
      StructInLowerLevel self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_normal(
      StructWithCommentsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_rust_async(
      StructWithCommentsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_rust_async_sse(
      StructWithCommentsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_sse(
      StructWithCommentsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_sync(
      StructWithCommentsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_sync_sse(
      StructWithCommentsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_normal(
      StructWithEnumTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_rust_async(
      StructWithEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_rust_async_sse(
      StructWithEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_sse(
      StructWithEnumTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_sync(
      StructWithEnumTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_sync_sse(
      StructWithEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moi(
      StructWithExplicitAutoOpaqueFieldTwinMoi self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normal(
          StructWithExplicitAutoOpaqueFieldTwinNormal self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async(
          StructWithExplicitAutoOpaqueFieldTwinRustAsync self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
          StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_sse(
          StructWithExplicitAutoOpaqueFieldTwinRustAsyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_sse_moi(
          StructWithExplicitAutoOpaqueFieldTwinRustAsyncSseMoi self,
          SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sse(
      StructWithExplicitAutoOpaqueFieldTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sse_moi(
          StructWithExplicitAutoOpaqueFieldTwinSseMoi self,
          SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync(
      StructWithExplicitAutoOpaqueFieldTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moi(
          StructWithExplicitAutoOpaqueFieldTwinSyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_sse(
          StructWithExplicitAutoOpaqueFieldTwinSyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_sse_moi(
          StructWithExplicitAutoOpaqueFieldTwinSyncSseMoi self,
          SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_moi(
      StructWithGoodAndOpaqueFieldTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_normal(
      StructWithGoodAndOpaqueFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async(
      StructWithGoodAndOpaqueFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moi(
          StructWithGoodAndOpaqueFieldTwinRustAsyncMoi self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_sse(
          StructWithGoodAndOpaqueFieldTwinRustAsyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_sse_moi(
          StructWithGoodAndOpaqueFieldTwinRustAsyncSseMoi self,
          SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sse(
      StructWithGoodAndOpaqueFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sse_moi(
      StructWithGoodAndOpaqueFieldTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sync(
      StructWithGoodAndOpaqueFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moi(
      StructWithGoodAndOpaqueFieldTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_sse(
      StructWithGoodAndOpaqueFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_box_autoadd_struct_with_good_and_opaque_field_twin_sync_sse_moi(
          StructWithGoodAndOpaqueFieldTwinSyncSseMoi self,
          SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_normal(
      StructWithOneFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_rust_async(
      StructWithOneFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_rust_async_sse(
      StructWithOneFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_sse(
      StructWithOneFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_sync(
      StructWithOneFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_sync_sse(
      StructWithOneFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_normal(
      StructWithTwoFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_rust_async(
      StructWithTwoFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_rust_async_sse(
      StructWithTwoFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_sse(
      StructWithTwoFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_sync(
      StructWithTwoFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_sync_sse(
      StructWithTwoFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_normal(
      StructWithZeroFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_rust_async(
      StructWithZeroFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_rust_async_sse(
      StructWithZeroFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_sse(
      StructWithZeroFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_sync(
      StructWithZeroFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_sync_sse(
      StructWithZeroFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_normal(
      SumWithTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_rust_async(
      SumWithTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_rust_async_sse(
      SumWithTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_sse(
      SumWithTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_sync(
      SumWithTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_sync_sse(
      SumWithTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_normal(
      TestIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_rust_async(
      TestIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_rust_async_sse(
      TestIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_sse(
      TestIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_sync(
      TestIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_sync_sse(
      TestIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_normal(
      TupleStructWithOneFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_rust_async(
      TupleStructWithOneFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse(
      TupleStructWithOneFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_sse(
      TupleStructWithOneFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_sync(
      TupleStructWithOneFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_sync_sse(
      TupleStructWithOneFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_normal(
      TupleStructWithTwoFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_rust_async(
      TupleStructWithTwoFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse(
      TupleStructWithTwoFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_sse(
      TupleStructWithTwoFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_sync(
      TupleStructWithTwoFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_sync_sse(
      TupleStructWithTwoFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_normal(
      UserIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_rust_async(
      UserIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_rust_async_sse(
      UserIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_sse(
      UserIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_sync(
      UserIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_sync_sse(
      UserIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_normal(
      WeekdaysTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_rust_async_sse(
      WeekdaysTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_sse(
      WeekdaysTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_sync(
      WeekdaysTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_sync_sse(
      WeekdaysTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_rust_async_sse(
      BenchmarkBinaryTreeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_sse(
      BenchmarkBinaryTreeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_sync_sse(
      BenchmarkBinaryTreeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_normal(
      BlobTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_rust_async(
      BlobTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_rust_async_sse(
      BlobTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_sse(BlobTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_sync(
      BlobTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_sync_sse(
      BlobTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_normal(
      DistanceTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_rust_async(
      DistanceTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_rust_async_sse(
      DistanceTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_sse(
      DistanceTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_sync(
      DistanceTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_sync_sse(
      DistanceTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_normal(
      FeedIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_rust_async(
      FeedIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_rust_async_sse(
      FeedIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_sse(
      FeedIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_sync(
      FeedIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_sync_sse(
      FeedIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_i_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_i_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_rust_async_sse(
      KitchenSinkTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_sse(
      KitchenSinkTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_sync(
      KitchenSinkTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_sync_sse(
      KitchenSinkTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_my_size(MySize self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_normal(
      SpeedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_rust_async(
      SpeedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_rust_async_sse(
      SpeedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_sse(
      SpeedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_sync(
      SpeedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_sync_sse(
      SpeedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_u_8_array_1600(
      U8Array1600 self, SseSerializer serializer);

  @protected
  void sse_encode_box_u_8_array_8(U8Array8 self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_normal(
      WeekdaysTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_rust_async_sse(
      WeekdaysTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_sse(
      WeekdaysTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_sync(
      WeekdaysTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_sync_sse(
      WeekdaysTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_normal(CTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_rust_async(
      CTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_rust_async_sse(
      CTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_sse(CTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_sync(CTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_sync_sse(CTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_normal(
      ConcatenateWithTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_rust_async(
      ConcatenateWithTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_rust_async_sse(
      ConcatenateWithTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_sse(
      ConcatenateWithTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_sync(
      ConcatenateWithTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_sync_sse(
      ConcatenateWithTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_constructor_translatable_struct_twin_normal(
      ConstructorTranslatableStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_constructor_translatable_sync_struct_twin_normal(
      ConstructorTranslatableSyncStructTwinNormal self,
      SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_normal(
      ContainsMirroredSubStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_rust_async(
      ContainsMirroredSubStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_rust_async_sse(
      ContainsMirroredSubStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_sse(
      ContainsMirroredSubStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_sync(
      ContainsMirroredSubStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_sync_sse(
      ContainsMirroredSubStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_normal(
      CustomEnumErrorTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_rust_async(
      CustomEnumErrorTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_rust_async_sse(
      CustomEnumErrorTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_sse(
      CustomEnumErrorTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_sync(
      CustomEnumErrorTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_sync_sse(
      CustomEnumErrorTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_normal(
      CustomErrorTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_rust_async(
      CustomErrorTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_rust_async_sse(
      CustomErrorTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_sse(
      CustomErrorTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_sync(
      CustomErrorTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_sync_sse(
      CustomErrorTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_normal(
      CustomNestedError1TwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_rust_async(
      CustomNestedError1TwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_rust_async_sse(
      CustomNestedError1TwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_sse(
      CustomNestedError1TwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_sync(
      CustomNestedError1TwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_sync_sse(
      CustomNestedError1TwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_normal(
      CustomNestedError2TwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_rust_async(
      CustomNestedError2TwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_rust_async_sse(
      CustomNestedError2TwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_sse(
      CustomNestedError2TwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_sync(
      CustomNestedError2TwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_sync_sse(
      CustomNestedError2TwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_normal(
      CustomNestedErrorInnerTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_rust_async(
      CustomNestedErrorInnerTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_rust_async_sse(
      CustomNestedErrorInnerTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_sse(
      CustomNestedErrorInnerTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_sync(
      CustomNestedErrorInnerTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_sync_sse(
      CustomNestedErrorInnerTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_normal(
      CustomNestedErrorOuterTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_rust_async(
      CustomNestedErrorOuterTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_rust_async_sse(
      CustomNestedErrorOuterTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_sse(
      CustomNestedErrorOuterTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_sync(
      CustomNestedErrorOuterTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_sync_sse(
      CustomNestedErrorOuterTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_normal(
      CustomStructErrorAnotherTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_rust_async(
      CustomStructErrorAnotherTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_rust_async_sse(
      CustomStructErrorAnotherTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_sse(
      CustomStructErrorAnotherTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_sync(
      CustomStructErrorAnotherTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_sync_sse(
      CustomStructErrorAnotherTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_normal(
      CustomStructErrorTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_rust_async(
      CustomStructErrorTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_rust_async_sse(
      CustomStructErrorTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_sse(
      CustomStructErrorTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_sync(
      CustomStructErrorTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_sync_sse(
      CustomStructErrorTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_normal(
      CustomStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_rust_async(
      CustomStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_rust_async_sse(
      CustomStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_sse(
      CustomStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_sync(
      CustomStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_sync_sse(
      CustomStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_normal(
      CustomizedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_rust_async(
      CustomizedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_rust_async_sse(
      CustomizedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_sse(
      CustomizedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_sync(
      CustomizedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_sync_sse(
      CustomizedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_normal(
      DartOpaqueNestedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_rust_async(
      DartOpaqueNestedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_rust_async_sse(
      DartOpaqueNestedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_sse(
      DartOpaqueNestedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_sync(
      DartOpaqueNestedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_sync_sse(
      DartOpaqueNestedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_dartabi(dynamic self, SseSerializer serializer);

  @protected
  void sse_encode_demo_struct_for_rust_call_dart_twin_normal(
      DemoStructForRustCallDartTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_demo_struct_for_rust_call_dart_twin_rust_async(
      DemoStructForRustCallDartTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_demo_struct_for_rust_call_dart_twin_rust_async_sse(
      DemoStructForRustCallDartTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_demo_struct_for_rust_call_dart_twin_sse(
      DemoStructForRustCallDartTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_normal(
      DistanceTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_rust_async(
      DistanceTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_rust_async_sse(
      DistanceTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_sse(
      DistanceTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_sync(
      DistanceTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_sync_sse(
      DistanceTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_normal(
      ElementTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_rust_async(
      ElementTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_rust_async_sse(
      ElementTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_sse(
      ElementTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_sync(
      ElementTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_sync_sse(
      ElementTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_normal(
      EmptyTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_rust_async(
      EmptyTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_rust_async_sse(
      EmptyTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_sse(EmptyTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_sync(EmptyTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_sync_sse(
      EmptyTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_normal(
      EnumDartOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_rust_async(
      EnumDartOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_rust_async_sse(
      EnumDartOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_sse(
      EnumDartOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_sync(
      EnumDartOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_sync_sse(
      EnumDartOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_moi(
      EnumOpaqueTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_moi_array_5(
      EnumOpaqueTwinMoiArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_normal(
      EnumOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_normal_array_5(
      EnumOpaqueTwinNormalArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async(
      EnumOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_array_5(
      EnumOpaqueTwinRustAsyncArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_moi(
      EnumOpaqueTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_moi_array_5(
      EnumOpaqueTwinRustAsyncMoiArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_sse(
      EnumOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_sse_array_5(
      EnumOpaqueTwinRustAsyncSseArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_sse_moi(
      EnumOpaqueTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_sse_moi_array_5(
      EnumOpaqueTwinRustAsyncSseMoiArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sse(
      EnumOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sse_array_5(
      EnumOpaqueTwinSseArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sse_moi(
      EnumOpaqueTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sse_moi_array_5(
      EnumOpaqueTwinSseMoiArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync(
      EnumOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_array_5(
      EnumOpaqueTwinSyncArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_moi(
      EnumOpaqueTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_moi_array_5(
      EnumOpaqueTwinSyncMoiArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_sse(
      EnumOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_sse_array_5(
      EnumOpaqueTwinSyncSseArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_sse_moi(
      EnumOpaqueTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_sse_moi_array_5(
      EnumOpaqueTwinSyncSseMoiArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_normal(
      EnumSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_rust_async(
      EnumSimpleTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_rust_async_sse(
      EnumSimpleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_sse(
      EnumSimpleTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_sync(
      EnumSimpleTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_sync_sse(
      EnumSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_discriminant_twin_normal(
      EnumWithDiscriminantTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_discriminant_twin_rust_async(
      EnumWithDiscriminantTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_discriminant_twin_rust_async_sse(
      EnumWithDiscriminantTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_discriminant_twin_sse(
      EnumWithDiscriminantTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_discriminant_twin_sync(
      EnumWithDiscriminantTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_discriminant_twin_sync_sse(
      EnumWithDiscriminantTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_moi(
      EnumWithGoodAndOpaqueTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_normal(
      EnumWithGoodAndOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_rust_async(
      EnumWithGoodAndOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_rust_async_moi(
      EnumWithGoodAndOpaqueTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_rust_async_sse(
      EnumWithGoodAndOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_rust_async_sse_moi(
      EnumWithGoodAndOpaqueTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_sse(
      EnumWithGoodAndOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_sse_moi(
      EnumWithGoodAndOpaqueTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_sync(
      EnumWithGoodAndOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_sync_moi(
      EnumWithGoodAndOpaqueTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_sync_sse(
      EnumWithGoodAndOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_good_and_opaque_twin_sync_sse_moi(
      EnumWithGoodAndOpaqueTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_normal(
      EnumWithItemMixedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_rust_async(
      EnumWithItemMixedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_rust_async_sse(
      EnumWithItemMixedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_sse(
      EnumWithItemMixedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_sync(
      EnumWithItemMixedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_sync_sse(
      EnumWithItemMixedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_normal(
      EnumWithItemStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_rust_async(
      EnumWithItemStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_rust_async_sse(
      EnumWithItemStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_sse(
      EnumWithItemStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_sync(
      EnumWithItemStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_sync_sse(
      EnumWithItemStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_normal(
      EnumWithItemTupleTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_rust_async(
      EnumWithItemTupleTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_rust_async_sse(
      EnumWithItemTupleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_sse(
      EnumWithItemTupleTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_sync(
      EnumWithItemTupleTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_sync_sse(
      EnumWithItemTupleTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_event_twin_normal(
      EventTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_event_twin_rust_async(
      EventTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_event_twin_rust_async_sse(
      EventTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_event_twin_sse(EventTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_f_64_array_16(F64Array16 self, SseSerializer serializer);

  @protected
  void sse_encode_feature_chrono_twin_normal(
      FeatureChronoTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_feature_chrono_twin_rust_async(
      FeatureChronoTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_feature_chrono_twin_rust_async_sse(
      FeatureChronoTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_feature_chrono_twin_sse(
      FeatureChronoTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_feature_chrono_twin_sync(
      FeatureChronoTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_feature_chrono_twin_sync_sse(
      FeatureChronoTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_feature_uuid_twin_normal(
      FeatureUuidTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_feature_uuid_twin_rust_async(
      FeatureUuidTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_feature_uuid_twin_rust_async_sse(
      FeatureUuidTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_feature_uuid_twin_sse(
      FeatureUuidTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_feature_uuid_twin_sync(
      FeatureUuidTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_feature_uuid_twin_sync_sse(
      FeatureUuidTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_normal(
      FeedIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_rust_async(
      FeedIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_rust_async_sse(
      FeedIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_sse(
      FeedIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_sync(
      FeedIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_sync_sse(
      FeedIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_hash_map_value(HashMapValue self, SseSerializer serializer);

  @protected
  void sse_encode_i_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_32_array_2(I32Array2 self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_isize(int self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_rust_async_sse(
      KitchenSinkTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_sse(
      KitchenSinkTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_sync(
      KitchenSinkTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_sync_sse(
      KitchenSinkTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          List<NonCloneSimpleTwinMoi> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          List<NonCloneSimpleTwinNormal> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          List<NonCloneSimpleTwinRustAsync> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          List<NonCloneSimpleTwinRustAsyncMoi> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          List<NonCloneSimpleTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          List<NonCloneSimpleTwinRustAsyncSseMoi> self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          List<NonCloneSimpleTwinSse> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          List<NonCloneSimpleTwinSseMoi> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          List<NonCloneSimpleTwinSync> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          List<NonCloneSimpleTwinSyncMoi> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          List<NonCloneSimpleTwinSyncSse> self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          List<NonCloneSimpleTwinSyncSseMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_Chrono_Duration(
      List<Duration> self, SseSerializer serializer);

  @protected
  void sse_encode_list_Chrono_Local(
      List<DateTime> self, SseSerializer serializer);

  @protected
  void sse_encode_list_Chrono_Naive(
      List<DateTime> self, SseSerializer serializer);

  @protected
  void sse_encode_list_DartOpaque(List<Object> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinMoi(
      List<HideDataTwinMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinNormal(
      List<HideDataTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinRustAsync(
      List<HideDataTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinRustAsyncMoi(
      List<HideDataTwinRustAsyncMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinRustAsyncSse(
      List<HideDataTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinRustAsyncSseMoi(
      List<HideDataTwinRustAsyncSseMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinSse(
      List<HideDataTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinSseMoi(
      List<HideDataTwinSseMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinSync(
      List<HideDataTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinSyncMoi(
      List<HideDataTwinSyncMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinSyncSse(
      List<HideDataTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_HideDataTwinSyncSseMoi(
      List<HideDataTwinSyncSseMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_Uuid(List<UuidValue> self, SseSerializer serializer);

  @protected
  void sse_encode_list_application_env_var(
      List<ApplicationEnvVar> self, SseSerializer serializer);

  @protected
  void sse_encode_list_application_mode(
      List<ApplicationMode> self, SseSerializer serializer);

  @protected
  void sse_encode_list_application_settings(
      List<ApplicationSettings> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_normal(
      List<AttributeTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_rust_async(
      List<AttributeTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_rust_async_sse(
      List<AttributeTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_sse(
      List<AttributeTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_sync(
      List<AttributeTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_sync_sse(
      List<AttributeTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_general_enum_twin_normal(
      List<BasicGeneralEnumTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_general_enum_twin_rust_async(
      List<BasicGeneralEnumTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_general_enum_twin_rust_async_sse(
      List<BasicGeneralEnumTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_general_enum_twin_sse(
      List<BasicGeneralEnumTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_general_enum_twin_sync(
      List<BasicGeneralEnumTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_general_enum_twin_sync_sse(
      List<BasicGeneralEnumTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_primitive_enum_twin_normal(
      List<BasicPrimitiveEnumTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_primitive_enum_twin_rust_async(
      List<BasicPrimitiveEnumTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_primitive_enum_twin_rust_async_sse(
      List<BasicPrimitiveEnumTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_primitive_enum_twin_sse(
      List<BasicPrimitiveEnumTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_primitive_enum_twin_sync(
      List<BasicPrimitiveEnumTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_primitive_enum_twin_sync_sse(
      List<BasicPrimitiveEnumTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_struct_twin_normal(
      List<BasicStructTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_struct_twin_rust_async(
      List<BasicStructTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_struct_twin_rust_async_sse(
      List<BasicStructTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_struct_twin_sse(
      List<BasicStructTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_struct_twin_sync(
      List<BasicStructTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_basic_struct_twin_sync_sse(
      List<BasicStructTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_bool(List<bool> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_normal(
      List<ElementTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_rust_async(
      List<ElementTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_rust_async_sse(
      List<ElementTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_sse(
      List<ElementTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_sync(
      List<ElementTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_sync_sse(
      List<ElementTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_moi(
      List<EnumOpaqueTwinMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_normal(
      List<EnumOpaqueTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_rust_async(
      List<EnumOpaqueTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_rust_async_moi(
      List<EnumOpaqueTwinRustAsyncMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_rust_async_sse(
      List<EnumOpaqueTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_rust_async_sse_moi(
      List<EnumOpaqueTwinRustAsyncSseMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_sse(
      List<EnumOpaqueTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_sse_moi(
      List<EnumOpaqueTwinSseMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_sync(
      List<EnumOpaqueTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_sync_moi(
      List<EnumOpaqueTwinSyncMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_sync_sse(
      List<EnumOpaqueTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_sync_sse_moi(
      List<EnumOpaqueTwinSyncSseMoi> self, SseSerializer serializer);

  @protected
  void sse_encode_list_list_prim_u_8_strict(
      List<Uint8List> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_enum(List<MyEnum> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_size(List<MySize> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_normal(
      List<MyTreeNodeTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_rust_async(
      List<MyTreeNodeTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_rust_async_sse(
      List<MyTreeNodeTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_sse(
      List<MyTreeNodeTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_sync(
      List<MyTreeNodeTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_sync_sse(
      List<MyTreeNodeTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_nested_raw_string_mirrored(
      List<NestedRawStringMirrored> self, SseSerializer serializer);

  @protected
  void sse_encode_list_of_nested_raw_string_mirrored(
      ListOfNestedRawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_String(List<String?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_normal(
      List<AttributeTwinNormal?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_rust_async(
      List<AttributeTwinRustAsync?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_rust_async_sse(
      List<AttributeTwinRustAsyncSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_sse(
      List<AttributeTwinSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_sync(
      List<AttributeTwinSync?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_sync_sse(
      List<AttributeTwinSyncSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_i_32(
      List<int?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_normal(
      List<WeekdaysTwinNormal?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_rust_async(
      List<WeekdaysTwinRustAsync?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_rust_async_sse(
      List<WeekdaysTwinRustAsyncSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_sse(
      List<WeekdaysTwinSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_sync(
      List<WeekdaysTwinSync?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_sync_sse(
      List<WeekdaysTwinSyncSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_list_prim_i_32_strict(
      List<Int32List?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_normal(
      List<PointTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_rust_async(
      List<PointTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_rust_async_sse(
      List<PointTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_sse(
      List<PointTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_sync(
      List<PointTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_sync_sse(
      List<PointTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_f_32_loose(
      List<double> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_f_32_strict(
      Float32List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_f_64_loose(
      List<double> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_f_64_strict(
      Float64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_16_loose(
      List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_16_strict(
      Int16List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_32_loose(
      List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_32_strict(
      Int32List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_64_strict(
      Int64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_8_loose(List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_8_strict(Int8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_16_loose(
      List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_16_strict(
      Uint16List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_32_loose(
      List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_32_strict(
      Uint32List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_64_strict(
      Uint64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_loose(List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_raw_string_enum_mirrored(
      List<RawStringEnumMirrored> self, SseSerializer serializer);

  @protected
  void sse_encode_list_raw_string_mirrored(
      List<RawStringMirrored> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_general_enum_twin_normal(
      List<(int, BasicGeneralEnumTwinNormal)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_general_enum_twin_rust_async(
      List<(int, BasicGeneralEnumTwinRustAsync)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_general_enum_twin_rust_async_sse(
      List<(int, BasicGeneralEnumTwinRustAsyncSse)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_general_enum_twin_sse(
      List<(int, BasicGeneralEnumTwinSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_general_enum_twin_sync(
      List<(int, BasicGeneralEnumTwinSync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_general_enum_twin_sync_sse(
      List<(int, BasicGeneralEnumTwinSyncSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_primitive_enum_twin_normal(
      List<(int, BasicPrimitiveEnumTwinNormal)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_primitive_enum_twin_rust_async(
      List<(int, BasicPrimitiveEnumTwinRustAsync)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_primitive_enum_twin_rust_async_sse(
      List<(int, BasicPrimitiveEnumTwinRustAsyncSse)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_primitive_enum_twin_sse(
      List<(int, BasicPrimitiveEnumTwinSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_primitive_enum_twin_sync(
      List<(int, BasicPrimitiveEnumTwinSync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_primitive_enum_twin_sync_sse(
      List<(int, BasicPrimitiveEnumTwinSyncSse)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_struct_twin_normal(
      List<(int, BasicStructTwinNormal)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_struct_twin_rust_async(
      List<(int, BasicStructTwinRustAsync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_struct_twin_rust_async_sse(
      List<(int, BasicStructTwinRustAsyncSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_struct_twin_sse(
      List<(int, BasicStructTwinSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_struct_twin_sync(
      List<(int, BasicStructTwinSync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_basic_struct_twin_sync_sse(
      List<(int, BasicStructTwinSyncSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_bool(
      List<(int, bool)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_f_32(
      List<(int, double)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_f_64(
      List<(int, double)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_i_16(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_i_32(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_i_64(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_i_8(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_isize(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_list_prim_u_8_strict(
      List<(int, Uint8List)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_string(
      List<(int, String)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_u_16(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_u_32(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_u_64(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_u_8(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_usize(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_normal(
      List<(String, EnumSimpleTwinNormal)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_rust_async(
      List<(String, EnumSimpleTwinRustAsync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_rust_async_sse(
      List<(String, EnumSimpleTwinRustAsyncSse)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_sse(
      List<(String, EnumSimpleTwinSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_sync(
      List<(String, EnumSimpleTwinSync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_sync_sse(
      List<(String, EnumSimpleTwinSyncSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_hash_map_value(
      List<(String, HashMapValue)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_i_32(
      List<(String, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_normal(
      List<(String, KitchenSinkTwinNormal)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_rust_async(
      List<(String, KitchenSinkTwinRustAsync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_rust_async_sse(
      List<(String, KitchenSinkTwinRustAsyncSse)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_sse(
      List<(String, KitchenSinkTwinSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_sync(
      List<(String, KitchenSinkTwinSync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_sync_sse(
      List<(String, KitchenSinkTwinSyncSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_list_prim_u_8_strict(
      List<(String, Uint8List)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_my_size(
      List<(String, MySize)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_string(
      List<(String, String)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_u_8_application_mode(
      List<(int, ApplicationMode)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_simple_struct_twin_normal(
      List<SimpleStructTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_simple_struct_twin_rust_async(
      List<SimpleStructTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_simple_struct_twin_rust_async_sse(
      List<SimpleStructTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_simple_struct_twin_sse(
      List<SimpleStructTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_simple_struct_twin_sync(
      List<SimpleStructTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_simple_struct_twin_sync_sse(
      List<SimpleStructTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_normal(
      List<SumWithTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_rust_async(
      List<SumWithTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_rust_async_sse(
      List<SumWithTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_sse(
      List<SumWithTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_sync(
      List<SumWithTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_sync_sse(
      List<SumWithTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_normal(
      List<TestIdTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_rust_async(
      List<TestIdTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_rust_async_sse(
      List<TestIdTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_sse(
      List<TestIdTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_sync(
      List<TestIdTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_sync_sse(
      List<TestIdTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_normal(
      List<WeekdaysTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_rust_async(
      List<WeekdaysTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_rust_async_sse(
      List<WeekdaysTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_sse(
      List<WeekdaysTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_sync(
      List<WeekdaysTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_sync_sse(
      List<WeekdaysTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_normal(
      Log2TwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_rust_async(
      Log2TwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_rust_async_sse(
      Log2TwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_sse(Log2TwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_sync(Log2TwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_sync_sse(
      Log2TwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_log_twin_normal(LogTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_log_twin_rust_async(
      LogTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_log_twin_rust_async_sse(
      LogTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_log_twin_sse(LogTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_macro_struct(MacroStruct self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_normal(
      MeasureTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_rust_async(
      MeasureTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_rust_async_sse(
      MeasureTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_sse(
      MeasureTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_sync(
      MeasureTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_sync_sse(
      MeasureTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_normal(
      MessageIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_rust_async(
      MessageIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_rust_async_sse(
      MessageIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_sse(
      MessageIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_sync(
      MessageIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_sync_sse(
      MessageIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_normal(
      MirrorStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_rust_async(
      MirrorStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_rust_async_sse(
      MirrorStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_sse(
      MirrorStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_sync(
      MirrorStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_sync_sse(
      MirrorStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_normal(
      MoreThanJustOneRawStringStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_rust_async(
      MoreThanJustOneRawStringStructTwinRustAsync self,
      SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_rust_async_sse(
      MoreThanJustOneRawStringStructTwinRustAsyncSse self,
      SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_sse(
      MoreThanJustOneRawStringStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_sync(
      MoreThanJustOneRawStringStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_sync_sse(
      MoreThanJustOneRawStringStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_callable_twin_normal(
      MyCallableTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_my_callable_twin_rust_async(
      MyCallableTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_my_callable_twin_rust_async_sse(
      MyCallableTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_callable_twin_sse(
      MyCallableTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_callable_twin_sync(
      MyCallableTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_my_callable_twin_sync_sse(
      MyCallableTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_enum(MyEnum self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_normal(
      MyNestedStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_rust_async(
      MyNestedStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_rust_async_sse(
      MyNestedStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_sse(
      MyNestedStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_sync(
      MyNestedStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_sync_sse(
      MyNestedStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_size(MySize self, SseSerializer serializer);

  @protected
  void sse_encode_my_stream_entry_twin_normal(
      MyStreamEntryTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_my_stream_entry_twin_rust_async(
      MyStreamEntryTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_my_stream_entry_twin_rust_async_sse(
      MyStreamEntryTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_stream_entry_twin_sse(
      MyStreamEntryTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_struct(MyStruct self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_normal(
      MyTreeNodeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_rust_async(
      MyTreeNodeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_rust_async_sse(
      MyTreeNodeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_sse(
      MyTreeNodeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_sync(
      MyTreeNodeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_sync_sse(
      MyTreeNodeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_nested_raw_string_mirrored(
      NestedRawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_new_simple_struct(
      NewSimpleStruct self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_normal(
      NewTypeIntTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_rust_async_sse(
      NewTypeIntTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_sse(
      NewTypeIntTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_sync(
      NewTypeIntTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_sync_sse(
      NewTypeIntTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_normal(
      NoteTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_rust_async(
      NoteTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_rust_async_sse(
      NoteTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_sse(NoteTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_sync(NoteTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_sync_sse(
      NoteTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_numbers(Numbers self, SseSerializer serializer);

  @protected
  void sse_encode_old_simple_struct(
      OldSimpleStruct self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_moi(
      OpaqueNestedTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_normal(
      OpaqueNestedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_rust_async(
      OpaqueNestedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_rust_async_moi(
      OpaqueNestedTwinRustAsyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_rust_async_sse(
      OpaqueNestedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_rust_async_sse_moi(
      OpaqueNestedTwinRustAsyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_sse(
      OpaqueNestedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_sse_moi(
      OpaqueNestedTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_sync(
      OpaqueNestedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_sync_moi(
      OpaqueNestedTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_sync_sse(
      OpaqueNestedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_sync_sse_moi(
      OpaqueNestedTwinSyncSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
          NonCloneSimpleTwinMoi? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
          NonCloneSimpleTwinRustAsync? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
          NonCloneSimpleTwinRustAsyncMoi? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
          NonCloneSimpleTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
          NonCloneSimpleTwinRustAsyncSseMoi? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
          NonCloneSimpleTwinSse? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
          NonCloneSimpleTwinSseMoi? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
          NonCloneSimpleTwinSyncMoi? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
          NonCloneSimpleTwinSyncSse? self, SseSerializer serializer);

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
          NonCloneSimpleTwinSyncSseMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_Chrono_Duration(
      Duration? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_Chrono_Naive(
      DateTime? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_Chrono_Utc(
      DateTime? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_DartOpaque(
      Object? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(
      HideDataAnotherTwinMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
      HideDataAnotherTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinSse(
      HideDataAnotherTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataAnotherTwinSseMoi(
      HideDataAnotherTwinSseMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinMoi(
      HideDataTwinMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinNormal(
      HideDataTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsync(
      HideDataTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
      HideDataTwinRustAsyncMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncSse(
      HideDataTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinRustAsyncSseMoi(
      HideDataTwinRustAsyncSseMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinSse(
      HideDataTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinSseMoi(
      HideDataTwinSseMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinSync(
      HideDataTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
      HideDataTwinSyncMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinSyncSse(
      HideDataTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_HideDataTwinSyncSseMoi(
      HideDataTwinSyncSseMoi? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_application_env(
      ApplicationEnv? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_application_mode(
      ApplicationMode? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_normal(
      AttributeTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_rust_async(
      AttributeTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_rust_async_sse(
      AttributeTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_sse(
      AttributeTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_sync(
      AttributeTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_sync_sse(
      AttributeTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_general_enum_twin_normal(
      BasicGeneralEnumTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_general_enum_twin_rust_async(
      BasicGeneralEnumTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_general_enum_twin_rust_async_sse(
      BasicGeneralEnumTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_general_enum_twin_sse(
      BasicGeneralEnumTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_general_enum_twin_sync(
      BasicGeneralEnumTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_general_enum_twin_sync_sse(
      BasicGeneralEnumTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_primitive_enum_twin_normal(
      BasicPrimitiveEnumTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_primitive_enum_twin_rust_async(
      BasicPrimitiveEnumTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_primitive_enum_twin_rust_async_sse(
      BasicPrimitiveEnumTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_primitive_enum_twin_sse(
      BasicPrimitiveEnumTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_primitive_enum_twin_sync(
      BasicPrimitiveEnumTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_primitive_enum_twin_sync_sse(
      BasicPrimitiveEnumTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_struct_twin_normal(
      BasicStructTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_struct_twin_rust_async(
      BasicStructTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_struct_twin_rust_async_sse(
      BasicStructTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_struct_twin_sse(
      BasicStructTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_struct_twin_sync(
      BasicStructTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_basic_struct_twin_sync_sse(
      BasicStructTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_bool(bool? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_normal(
      ElementTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_rust_async(
      ElementTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_rust_async_sse(
      ElementTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_sse(
      ElementTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_sync(
      ElementTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_sync_sse(
      ElementTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_f_32(double? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_f_64(double? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_16(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_64(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_isize(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_normal(
      MeasureTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_rust_async(
      MeasureTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_rust_async_sse(
      MeasureTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_sse(
      MeasureTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_sync(
      MeasureTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_sync_sse(
      MeasureTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_normal(
      NewTypeIntTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_rust_async_sse(
      NewTypeIntTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_sse(
      NewTypeIntTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_sync(
      NewTypeIntTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_sync_sse(
      NewTypeIntTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_record_string_i_32(
      (String, int)? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_16(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_64(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_usize(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_normal(
      WeekdaysTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_rust_async_sse(
      WeekdaysTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_sse(
      WeekdaysTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_sync(
      WeekdaysTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_sync_sse(
      WeekdaysTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_rust_async_sse(
      BenchmarkBinaryTreeTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_sse(
      BenchmarkBinaryTreeTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_sync_sse(
      BenchmarkBinaryTreeTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_bool(bool? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_f_64(double? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_i_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_i_64(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_i_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_u_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_normal(
      List<AttributeTwinNormal>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_rust_async(
      List<AttributeTwinRustAsync>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_rust_async_sse(
      List<AttributeTwinRustAsyncSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_sse(
      List<AttributeTwinSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_sync(
      List<AttributeTwinSync>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_sync_sse(
      List<AttributeTwinSyncSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_normal(
      List<ElementTwinNormal>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_rust_async(
      List<ElementTwinRustAsync>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_rust_async_sse(
      List<ElementTwinRustAsyncSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_sse(
      List<ElementTwinSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_sync(
      List<ElementTwinSync>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_sync_sse(
      List<ElementTwinSyncSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_normal(
      List<AttributeTwinNormal?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_rust_async(
      List<AttributeTwinRustAsync?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_rust_async_sse(
      List<AttributeTwinRustAsyncSse?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_sse(
      List<AttributeTwinSse?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_sync(
      List<AttributeTwinSync?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_sync_sse(
      List<AttributeTwinSyncSse?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_f_32_strict(
      Float32List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_f_64_strict(
      Float64List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_i_32_strict(
      Int32List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_i_8_strict(
      Int8List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_u_8_strict(
      Uint8List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_normal(
      OptVecsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_rust_async(
      OptVecsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_rust_async_sse(
      OptVecsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_sse(
      OptVecsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_sync(
      OptVecsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_sync_sse(
      OptVecsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_normal(
      PointTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_normal_array_2(
      PointTwinNormalArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_rust_async(
      PointTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_rust_async_array_2(
      PointTwinRustAsyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_rust_async_sse(
      PointTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_rust_async_sse_array_2(
      PointTwinRustAsyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sse(PointTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sse_array_2(
      PointTwinSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sync(PointTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sync_array_2(
      PointTwinSyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sync_sse(
      PointTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sync_sse_array_2(
      PointTwinSyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_enum_mirrored(
      RawStringEnumMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_normal(
      RawStringItemStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_rust_async(
      RawStringItemStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_rust_async_sse(
      RawStringItemStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_sse(
      RawStringItemStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_sync(
      RawStringItemStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_sync_sse(
      RawStringItemStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_mirrored(
      RawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_record_application_settings_raw_string_enum_mirrored(
      (ApplicationSettings, RawStringEnumMirrored) self,
      SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_moi(
          (OpaqueOneTwinMoi, OpaqueTwoTwinMoi) self, SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_normal_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_normal(
          (OpaqueOneTwinNormal, OpaqueTwoTwinNormal) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async(
          (OpaqueOneTwinRustAsync, OpaqueTwoTwinRustAsync) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_moi(
          (OpaqueOneTwinRustAsyncMoi, OpaqueTwoTwinRustAsyncMoi) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_sse(
          (OpaqueOneTwinRustAsyncSse, OpaqueTwoTwinRustAsyncSse) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_sse_moi(
          (OpaqueOneTwinRustAsyncSseMoi, OpaqueTwoTwinRustAsyncSseMoi) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sse(
          (OpaqueOneTwinSse, OpaqueTwoTwinSse) self, SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sse_moi(
          (OpaqueOneTwinSseMoi, OpaqueTwoTwinSseMoi) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync(
          (OpaqueOneTwinSync, OpaqueTwoTwinSync) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_moi(
          (OpaqueOneTwinSyncMoi, OpaqueTwoTwinSyncMoi) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_sse_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_sse(
          (OpaqueOneTwinSyncSse, OpaqueTwoTwinSyncSse) self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_sse_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_sse_moi(
          (OpaqueOneTwinSyncSseMoi, OpaqueTwoTwinSyncSseMoi) self,
          SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_general_enum_twin_normal(
      (int, BasicGeneralEnumTwinNormal) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_general_enum_twin_rust_async(
      (int, BasicGeneralEnumTwinRustAsync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_general_enum_twin_rust_async_sse(
      (int, BasicGeneralEnumTwinRustAsyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_general_enum_twin_sse(
      (int, BasicGeneralEnumTwinSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_general_enum_twin_sync(
      (int, BasicGeneralEnumTwinSync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_general_enum_twin_sync_sse(
      (int, BasicGeneralEnumTwinSyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_primitive_enum_twin_normal(
      (int, BasicPrimitiveEnumTwinNormal) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_primitive_enum_twin_rust_async(
      (int, BasicPrimitiveEnumTwinRustAsync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_primitive_enum_twin_rust_async_sse(
      (int, BasicPrimitiveEnumTwinRustAsyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_primitive_enum_twin_sse(
      (int, BasicPrimitiveEnumTwinSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_primitive_enum_twin_sync(
      (int, BasicPrimitiveEnumTwinSync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_primitive_enum_twin_sync_sse(
      (int, BasicPrimitiveEnumTwinSyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_struct_twin_normal(
      (int, BasicStructTwinNormal) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_struct_twin_rust_async(
      (int, BasicStructTwinRustAsync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_struct_twin_rust_async_sse(
      (int, BasicStructTwinRustAsyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_struct_twin_sse(
      (int, BasicStructTwinSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_struct_twin_sync(
      (int, BasicStructTwinSync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_basic_struct_twin_sync_sse(
      (int, BasicStructTwinSyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_bool((int, bool) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_f_32(
      (int, double) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_f_64(
      (int, double) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_i_16((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_i_32((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_i_64((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_i_8((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_isize((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_list_prim_u_8_strict(
      (int, Uint8List) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_string(
      (int, String) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_u_16((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_u_32((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_u_64((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_u_8((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_usize((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_normal(
      (String, EnumSimpleTwinNormal) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_rust_async(
      (String, EnumSimpleTwinRustAsync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_rust_async_sse(
      (String, EnumSimpleTwinRustAsyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_sse(
      (String, EnumSimpleTwinSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_sync(
      (String, EnumSimpleTwinSync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_sync_sse(
      (String, EnumSimpleTwinSyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_hash_map_value(
      (String, HashMapValue) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_i_32(
      (String, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_normal(
      (String, KitchenSinkTwinNormal) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_rust_async(
      (String, KitchenSinkTwinRustAsync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_rust_async_sse(
      (String, KitchenSinkTwinRustAsyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_sse(
      (String, KitchenSinkTwinSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_sync(
      (String, KitchenSinkTwinSync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_sync_sse(
      (String, KitchenSinkTwinSyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_list_prim_u_8_strict(
      (String, Uint8List) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_my_size(
      (String, MySize) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_string(
      (String, String) self, SseSerializer serializer);

  @protected
  void sse_encode_record_u_8_application_mode(
      (int, ApplicationMode) self, SseSerializer serializer);

  @protected
  void sse_encode_sequences(Sequences self, SseSerializer serializer);

  @protected
  void sse_encode_simple_struct_twin_normal(
      SimpleStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_simple_struct_twin_rust_async(
      SimpleStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_simple_struct_twin_rust_async_sse(
      SimpleStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_simple_struct_twin_sse(
      SimpleStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_simple_struct_twin_sync(
      SimpleStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_simple_struct_twin_sync_sse(
      SimpleStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_normal(
      SomeStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_rust_async(
      SomeStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_rust_async_sse(
      SomeStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_sse(
      SomeStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_sync(
      SomeStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_sync_sse(
      SomeStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_normal(
      SpeedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_rust_async(
      SpeedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_rust_async_sse(
      SpeedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_sse(SpeedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_sync(SpeedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_sync_sse(
      SpeedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_in_lower_level(
      StructInLowerLevel self, SseSerializer serializer);

  @protected
  void sse_encode_struct_in_upper_level(
      StructInUpperLevel self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_normal(
      StructWithCommentsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_rust_async(
      StructWithCommentsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_rust_async_sse(
      StructWithCommentsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_sse(
      StructWithCommentsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_sync(
      StructWithCommentsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_sync_sse(
      StructWithCommentsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_normal(
      StructWithEnumTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_rust_async(
      StructWithEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_rust_async_sse(
      StructWithEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_sse(
      StructWithEnumTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_sync(
      StructWithEnumTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_sync_sse(
      StructWithEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_moi(
      StructWithExplicitAutoOpaqueFieldTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_normal(
      StructWithExplicitAutoOpaqueFieldTwinNormal self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_rust_async(
      StructWithExplicitAutoOpaqueFieldTwinRustAsync self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_rust_async_moi(
      StructWithExplicitAutoOpaqueFieldTwinRustAsyncMoi self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_rust_async_sse(
      StructWithExplicitAutoOpaqueFieldTwinRustAsyncSse self,
      SseSerializer serializer);

  @protected
  void
      sse_encode_struct_with_explicit_auto_opaque_field_twin_rust_async_sse_moi(
          StructWithExplicitAutoOpaqueFieldTwinRustAsyncSseMoi self,
          SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_sse(
      StructWithExplicitAutoOpaqueFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_sse_moi(
      StructWithExplicitAutoOpaqueFieldTwinSseMoi self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_sync(
      StructWithExplicitAutoOpaqueFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_sync_moi(
      StructWithExplicitAutoOpaqueFieldTwinSyncMoi self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_sync_sse(
      StructWithExplicitAutoOpaqueFieldTwinSyncSse self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_explicit_auto_opaque_field_twin_sync_sse_moi(
      StructWithExplicitAutoOpaqueFieldTwinSyncSseMoi self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_moi(
      StructWithGoodAndOpaqueFieldTwinMoi self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_normal(
      StructWithGoodAndOpaqueFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_rust_async(
      StructWithGoodAndOpaqueFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_rust_async_moi(
      StructWithGoodAndOpaqueFieldTwinRustAsyncMoi self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_rust_async_sse(
      StructWithGoodAndOpaqueFieldTwinRustAsyncSse self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_rust_async_sse_moi(
      StructWithGoodAndOpaqueFieldTwinRustAsyncSseMoi self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_sse(
      StructWithGoodAndOpaqueFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_sse_moi(
      StructWithGoodAndOpaqueFieldTwinSseMoi self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_sync(
      StructWithGoodAndOpaqueFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_sync_moi(
      StructWithGoodAndOpaqueFieldTwinSyncMoi self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_sync_sse(
      StructWithGoodAndOpaqueFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_good_and_opaque_field_twin_sync_sse_moi(
      StructWithGoodAndOpaqueFieldTwinSyncSseMoi self,
      SseSerializer serializer);

  @protected
  void sse_encode_struct_with_hash_map(
      StructWithHashMap self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_normal(
      StructWithOneFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_rust_async(
      StructWithOneFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_rust_async_sse(
      StructWithOneFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_sse(
      StructWithOneFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_sync(
      StructWithOneFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_sync_sse(
      StructWithOneFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_normal(
      StructWithTwoFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_rust_async(
      StructWithTwoFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_rust_async_sse(
      StructWithTwoFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_sse(
      StructWithTwoFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_sync(
      StructWithTwoFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_sync_sse(
      StructWithTwoFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_normal(
      StructWithZeroFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_rust_async(
      StructWithZeroFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_rust_async_sse(
      StructWithZeroFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_sse(
      StructWithZeroFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_sync(
      StructWithZeroFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_sync_sse(
      StructWithZeroFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_normal(
      SumWithTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_normal_array_3(
      SumWithTwinNormalArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_rust_async(
      SumWithTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_rust_async_array_3(
      SumWithTwinRustAsyncArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_rust_async_sse(
      SumWithTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_rust_async_sse_array_3(
      SumWithTwinRustAsyncSseArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sse(
      SumWithTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sse_array_3(
      SumWithTwinSseArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sync(
      SumWithTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sync_array_3(
      SumWithTwinSyncArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sync_sse(
      SumWithTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sync_sse_array_3(
      SumWithTwinSyncSseArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_test_chrono_twin_normal(
      TestChronoTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_test_chrono_twin_rust_async(
      TestChronoTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_test_chrono_twin_rust_async_sse(
      TestChronoTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_chrono_twin_sse(
      TestChronoTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_chrono_twin_sync(
      TestChronoTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_test_chrono_twin_sync_sse(
      TestChronoTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_normal(
      TestIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_normal_array_2(
      TestIdTwinNormalArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_normal_array_4(
      TestIdTwinNormalArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async(
      TestIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async_array_2(
      TestIdTwinRustAsyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async_array_4(
      TestIdTwinRustAsyncArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async_sse(
      TestIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async_sse_array_2(
      TestIdTwinRustAsyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async_sse_array_4(
      TestIdTwinRustAsyncSseArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sse(
      TestIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sse_array_2(
      TestIdTwinSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sse_array_4(
      TestIdTwinSseArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync(
      TestIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync_array_2(
      TestIdTwinSyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync_array_4(
      TestIdTwinSyncArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync_sse(
      TestIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync_sse_array_2(
      TestIdTwinSyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync_sse_array_4(
      TestIdTwinSyncSseArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_normal(
      TestModelTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_rust_async(
      TestModelTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_rust_async_sse(
      TestModelTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_sse(
      TestModelTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_sync(
      TestModelTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_sync_sse(
      TestModelTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_normal(
      TupleStructWithOneFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_rust_async(
      TupleStructWithOneFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_rust_async_sse(
      TupleStructWithOneFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_sse(
      TupleStructWithOneFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_sync(
      TupleStructWithOneFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_sync_sse(
      TupleStructWithOneFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_normal(
      TupleStructWithTwoFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_rust_async(
      TupleStructWithTwoFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_rust_async_sse(
      TupleStructWithTwoFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_sse(
      TupleStructWithTwoFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_sync(
      TupleStructWithTwoFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_sync_sse(
      TupleStructWithTwoFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_1600(U8Array1600 self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_2(U8Array2 self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_32(U8Array32 self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_5(U8Array5 self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_8(U8Array8 self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_normal(
      UserIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_rust_async(
      UserIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_rust_async_sse(
      UserIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_sse(
      UserIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_sync(
      UserIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_sync_sse(
      UserIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_normal(
      VecOfPrimitivePackTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_rust_async(
      VecOfPrimitivePackTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_rust_async_sse(
      VecOfPrimitivePackTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_sse(
      VecOfPrimitivePackTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_sync(
      VecOfPrimitivePackTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_sync_sse(
      VecOfPrimitivePackTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_normal(
      WeekdaysTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_rust_async_sse(
      WeekdaysTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_sse(
      WeekdaysTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_sync(
      WeekdaysTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_sync_sse(
      WeekdaysTwinSyncSse self, SseSerializer serializer);
}

// Section: wire_class

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names
// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  RustLibWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>(
          'store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr
      .asFunction<void Function(DartPostCObjectFnType)>();

  void benchmark_raw_void_sync() {
    return _benchmark_raw_void_sync();
  }

  late final _benchmark_raw_void_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>(
          'benchmark_raw_void_sync');
  late final _benchmark_raw_void_sync =
      _benchmark_raw_void_syncPtr.asFunction<void Function()>();

  benchmark_raw_list_prim_u_8 benchmark_raw_new_list_prim_u_8(
    int len,
  ) {
    return _benchmark_raw_new_list_prim_u_8(
      len,
    );
  }

  late final _benchmark_raw_new_list_prim_u_8Ptr = _lookup<
          ffi.NativeFunction<benchmark_raw_list_prim_u_8 Function(ffi.Int32)>>(
      'benchmark_raw_new_list_prim_u_8');
  late final _benchmark_raw_new_list_prim_u_8 =
      _benchmark_raw_new_list_prim_u_8Ptr
          .asFunction<benchmark_raw_list_prim_u_8 Function(int)>();

  int benchmark_raw_input_bytes(
    benchmark_raw_list_prim_u_8 bytes,
  ) {
    return _benchmark_raw_input_bytes(
      bytes,
    );
  }

  late final _benchmark_raw_input_bytesPtr = _lookup<
          ffi.NativeFunction<ffi.Int32 Function(benchmark_raw_list_prim_u_8)>>(
      'benchmark_raw_input_bytes');
  late final _benchmark_raw_input_bytes = _benchmark_raw_input_bytesPtr
      .asFunction<int Function(benchmark_raw_list_prim_u_8)>();

  void benchmark_raw_output_bytes(
    int port,
    int message_id,
    int size,
  ) {
    return _benchmark_raw_output_bytes(
      port,
      message_id,
      size,
    );
  }

  late final _benchmark_raw_output_bytesPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32, ffi.Int32)>>(
      'benchmark_raw_output_bytes');
  late final _benchmark_raw_output_bytes =
      _benchmark_raw_output_bytesPtr.asFunction<void Function(int, int, int)>();

  void wire_boxed_blob_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> blob,
  ) {
    return _wire_boxed_blob_twin_normal(
      port_,
      blob,
    );
  }

  late final _wire_boxed_blob_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_boxed_blob_twin_normal');
  late final _wire_boxed_blob_twin_normal =
      _wire_boxed_blob_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_func_test_id_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_test_id_twin_normal> id,
  ) {
    return _wire_func_test_id_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_func_test_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_test_id_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_test_id_twin_normal');
  late final _wire_func_test_id_twin_normal =
      _wire_func_test_id_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_test_id_twin_normal>)>();

  void wire_get_array_twin_normal(
    int port_,
  ) {
    return _wire_get_array_twin_normal(
      port_,
    );
  }

  late final _wire_get_array_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_array_twin_normal');
  late final _wire_get_array_twin_normal =
      _wire_get_array_twin_normalPtr.asFunction<void Function(int)>();

  void wire_get_complex_array_twin_normal(
    int port_,
  ) {
    return _wire_get_complex_array_twin_normal(
      port_,
    );
  }

  late final _wire_get_complex_array_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_complex_array_twin_normal');
  late final _wire_get_complex_array_twin_normal =
      _wire_get_complex_array_twin_normalPtr.asFunction<void Function(int)>();

  void wire_last_number_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> array,
  ) {
    return _wire_last_number_twin_normal(
      port_,
      array,
    );
  }

  late final _wire_last_number_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_f_64_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_last_number_twin_normal');
  late final _wire_last_number_twin_normal =
      _wire_last_number_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_f_64_strict>)>();

  void wire_nested_id_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_test_id_twin_normal> id,
  ) {
    return _wire_nested_id_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_nested_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_test_id_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_nested_id_twin_normal');
  late final _wire_nested_id_twin_normal =
      _wire_nested_id_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_test_id_twin_normal>)>();

  void wire_new_msgid_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
  ) {
    return _wire_new_msgid_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_new_msgid_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_new_msgid_twin_normal');
  late final _wire_new_msgid_twin_normal =
      _wire_new_msgid_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_return_boxed_feed_id_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
  ) {
    return _wire_return_boxed_feed_id_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_return_boxed_feed_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_feed_id_twin_normal');
  late final _wire_return_boxed_feed_id_twin_normal =
      _wire_return_boxed_feed_id_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_return_boxed_raw_feed_id_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_feed_id_twin_normal> id,
  ) {
    return _wire_return_boxed_raw_feed_id_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_return_boxed_raw_feed_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_feed_id_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_raw_feed_id_twin_normal');
  late final _wire_return_boxed_raw_feed_id_twin_normal =
      _wire_return_boxed_raw_feed_id_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_feed_id_twin_normal>)>();

  void wire_use_boxed_blob_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_blob_twin_normal> blob,
  ) {
    return _wire_use_boxed_blob_twin_normal(
      port_,
      blob,
    );
  }

  late final _wire_use_boxed_blob_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_blob_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_use_boxed_blob_twin_normal');
  late final _wire_use_boxed_blob_twin_normal =
      _wire_use_boxed_blob_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_blob_twin_normal>)>();

  void wire_use_msgid_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_message_id_twin_normal> id,
  ) {
    return _wire_use_msgid_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_use_msgid_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_message_id_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_use_msgid_twin_normal');
  late final _wire_use_msgid_twin_normal =
      _wire_use_msgid_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_message_id_twin_normal>)>();

  void wire_func_async_simple_add_twin_normal(
    int port_,
    int a,
    int b,
  ) {
    return _wire_func_async_simple_add_twin_normal(
      port_,
      a,
      b,
    );
  }

  late final _wire_func_async_simple_add_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_async_simple_add_twin_normal');
  late final _wire_func_async_simple_add_twin_normal =
      _wire_func_async_simple_add_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_func_async_void_twin_normal(
    int port_,
  ) {
    return _wire_func_async_void_twin_normal(
      port_,
    );
  }

  late final _wire_func_async_void_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_func_async_void_twin_normal');
  late final _wire_func_async_void_twin_normal =
      _wire_func_async_void_twin_normalPtr.asFunction<void Function(int)>();

  void wire_simple_use_async_spawn(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> arg,
  ) {
    return _wire_simple_use_async_spawn(
      port_,
      arg,
    );
  }

  late final _wire_simple_use_async_spawnPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_simple_use_async_spawn');
  late final _wire_simple_use_async_spawn =
      _wire_simple_use_async_spawnPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_simple_use_async_spawn_blocking(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> arg,
  ) {
    return _wire_simple_use_async_spawn_blocking(
      port_,
      arg,
    );
  }

  late final _wire_simple_use_async_spawn_blockingPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_simple_use_async_spawn_blocking');
  late final _wire_simple_use_async_spawn_blocking =
      _wire_simple_use_async_spawn_blockingPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_simple_use_async_spawn_local(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> arg,
  ) {
    return _wire_simple_use_async_spawn_local(
      port_,
      arg,
    );
  }

  late final _wire_simple_use_async_spawn_localPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_simple_use_async_spawn_local');
  late final _wire_simple_use_async_spawn_local =
      _wire_simple_use_async_spawn_localPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_handle_customized_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_customized_twin_normal> val,
  ) {
    return _wire_handle_customized_struct_twin_normal(
      port_,
      val,
    );
  }

  late final _wire_handle_customized_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_customized_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_customized_struct_twin_normal');
  late final _wire_handle_customized_struct_twin_normal =
      _wire_handle_customized_struct_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_customized_twin_normal>)>();

  void wire_next_user_id_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_user_id_twin_normal> user_id,
  ) {
    return _wire_next_user_id_twin_normal(
      port_,
      user_id,
    );
  }

  late final _wire_next_user_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_user_id_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_next_user_id_twin_normal');
  late final _wire_next_user_id_twin_normal =
      _wire_next_user_id_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_user_id_twin_normal>)>();

  WireSyncRust2DartSse wire_benchmark_void_semi_serialize() {
    return _wire_benchmark_void_semi_serialize();
  }

  late final _wire_benchmark_void_semi_serializePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartSse Function()>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_void_semi_serialize');
  late final _wire_benchmark_void_semi_serialize =
      _wire_benchmark_void_semi_serializePtr
          .asFunction<WireSyncRust2DartSse Function()>();

  void wire_datetime_local_twin_normal(
    int port_,
    int d,
  ) {
    return _wire_datetime_local_twin_normal(
      port_,
      d,
    );
  }

  late final _wire_datetime_local_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_datetime_local_twin_normal');
  late final _wire_datetime_local_twin_normal =
      _wire_datetime_local_twin_normalPtr.asFunction<void Function(int, int)>();

  void wire_datetime_utc_twin_normal(
    int port_,
    int d,
  ) {
    return _wire_datetime_utc_twin_normal(
      port_,
      d,
    );
  }

  late final _wire_datetime_utc_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_datetime_utc_twin_normal');
  late final _wire_datetime_utc_twin_normal =
      _wire_datetime_utc_twin_normalPtr.asFunction<void Function(int, int)>();

  void wire_duration_twin_normal(
    int port_,
    int d,
  ) {
    return _wire_duration_twin_normal(
      port_,
      d,
    );
  }

  late final _wire_duration_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_duration_twin_normal');
  late final _wire_duration_twin_normal =
      _wire_duration_twin_normalPtr.asFunction<void Function(int, int)>();

  void wire_handle_durations_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_Chrono_Duration> durations,
    int since,
  ) {
    return _wire_handle_durations_twin_normal(
      port_,
      durations,
      since,
    );
  }

  late final _wire_handle_durations_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_Chrono_Duration>, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_durations_twin_normal');
  late final _wire_handle_durations_twin_normal =
      _wire_handle_durations_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_Chrono_Duration>, int)>();

  void wire_handle_timestamps_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_Chrono_Naive> timestamps,
    int epoch,
  ) {
    return _wire_handle_timestamps_twin_normal(
      port_,
      timestamps,
      epoch,
    );
  }

  late final _wire_handle_timestamps_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_Chrono_Naive>, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_timestamps_twin_normal');
  late final _wire_handle_timestamps_twin_normal =
      _wire_handle_timestamps_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_Chrono_Naive>, int)>();

  void wire_how_long_does_it_take_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_feature_chrono_twin_normal> mine,
  ) {
    return _wire_how_long_does_it_take_twin_normal(
      port_,
      mine,
    );
  }

  late final _wire_how_long_does_it_take_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_feature_chrono_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_how_long_does_it_take_twin_normal');
  late final _wire_how_long_does_it_take_twin_normal =
      _wire_how_long_does_it_take_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_feature_chrono_twin_normal>)>();

  void wire_naivedatetime_twin_normal(
    int port_,
    int d,
  ) {
    return _wire_naivedatetime_twin_normal(
      port_,
      d,
    );
  }

  late final _wire_naivedatetime_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_naivedatetime_twin_normal');
  late final _wire_naivedatetime_twin_normal =
      _wire_naivedatetime_twin_normalPtr.asFunction<void Function(int, int)>();

  void wire_optional_empty_datetime_utc_twin_normal(
    int port_,
    ffi.Pointer<ffi.Int64> d,
  ) {
    return _wire_optional_empty_datetime_utc_twin_normal(
      port_,
      d,
    );
  }

  late final _wire_optional_empty_datetime_utc_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int64>)>>(
      'frbgen_frb_example_pure_dart_wire_optional_empty_datetime_utc_twin_normal');
  late final _wire_optional_empty_datetime_utc_twin_normal =
      _wire_optional_empty_datetime_utc_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int64>)>();

  void wire_test_chrono_twin_normal(
    int port_,
  ) {
    return _wire_test_chrono_twin_normal(
      port_,
    );
  }

  late final _wire_test_chrono_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_chrono_twin_normal');
  late final _wire_test_chrono_twin_normal =
      _wire_test_chrono_twin_normalPtr.asFunction<void Function(int)>();

  void wire_test_precise_chrono_twin_normal(
    int port_,
  ) {
    return _wire_test_precise_chrono_twin_normal(
      port_,
    );
  }

  late final _wire_test_precise_chrono_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_precise_chrono_twin_normal');
  late final _wire_test_precise_chrono_twin_normal =
      _wire_test_precise_chrono_twin_normalPtr.asFunction<void Function(int)>();

  void wire_StructWithCommentsTwinNormal_instance_method_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_struct_with_comments_twin_normal> that,
  ) {
    return _wire_StructWithCommentsTwinNormal_instance_method_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_StructWithCommentsTwinNormal_instance_method_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_struct_with_comments_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinNormal_instance_method_twin_normal');
  late final _wire_StructWithCommentsTwinNormal_instance_method_twin_normal =
      _wire_StructWithCommentsTwinNormal_instance_method_twin_normalPtr
          .asFunction<
              void Function(int,
                  ffi.Pointer<wire_cst_struct_with_comments_twin_normal>)>();

  void wire_StructWithCommentsTwinNormal_static_method_twin_normal(
    int port_,
  ) {
    return _wire_StructWithCommentsTwinNormal_static_method_twin_normal(
      port_,
    );
  }

  late final _wire_StructWithCommentsTwinNormal_static_method_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinNormal_static_method_twin_normal');
  late final _wire_StructWithCommentsTwinNormal_static_method_twin_normal =
      _wire_StructWithCommentsTwinNormal_static_method_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_function_with_comments_slash_star_star_twin_normal(
    int port_,
  ) {
    return _wire_function_with_comments_slash_star_star_twin_normal(
      port_,
    );
  }

  late final _wire_function_with_comments_slash_star_star_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_function_with_comments_slash_star_star_twin_normal');
  late final _wire_function_with_comments_slash_star_star_twin_normal =
      _wire_function_with_comments_slash_star_star_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_function_with_comments_triple_slash_multi_line_twin_normal(
    int port_,
  ) {
    return _wire_function_with_comments_triple_slash_multi_line_twin_normal(
      port_,
    );
  }

  late final _wire_function_with_comments_triple_slash_multi_line_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_multi_line_twin_normal');
  late final _wire_function_with_comments_triple_slash_multi_line_twin_normal =
      _wire_function_with_comments_triple_slash_multi_line_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_function_with_comments_triple_slash_single_line_twin_normal(
    int port_,
  ) {
    return _wire_function_with_comments_triple_slash_single_line_twin_normal(
      port_,
    );
  }

  late final _wire_function_with_comments_triple_slash_single_line_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_single_line_twin_normal');
  late final _wire_function_with_comments_triple_slash_single_line_twin_normal =
      _wire_function_with_comments_triple_slash_single_line_twin_normalPtr
          .asFunction<void Function(int)>();

  WireSyncRust2DartDco wire_ConstructorOpaqueStructTwinNormal_check(
    int that,
  ) {
    return _wire_ConstructorOpaqueStructTwinNormal_check(
      that,
    );
  }

  late final _wire_ConstructorOpaqueStructTwinNormal_checkPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_ConstructorOpaqueStructTwinNormal_check');
  late final _wire_ConstructorOpaqueStructTwinNormal_check =
      _wire_ConstructorOpaqueStructTwinNormal_checkPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  void wire_ConstructorOpaqueStructTwinNormal_new(
    int port_,
  ) {
    return _wire_ConstructorOpaqueStructTwinNormal_new(
      port_,
    );
  }

  late final _wire_ConstructorOpaqueStructTwinNormal_newPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_ConstructorOpaqueStructTwinNormal_new');
  late final _wire_ConstructorOpaqueStructTwinNormal_new =
      _wire_ConstructorOpaqueStructTwinNormal_newPtr
          .asFunction<void Function(int)>();

  WireSyncRust2DartDco wire_ConstructorOpaqueSyncStructTwinNormal_check(
    int that,
  ) {
    return _wire_ConstructorOpaqueSyncStructTwinNormal_check(
      that,
    );
  }

  late final _wire_ConstructorOpaqueSyncStructTwinNormal_checkPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_ConstructorOpaqueSyncStructTwinNormal_check');
  late final _wire_ConstructorOpaqueSyncStructTwinNormal_check =
      _wire_ConstructorOpaqueSyncStructTwinNormal_checkPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_ConstructorOpaqueSyncStructTwinNormal_new() {
    return _wire_ConstructorOpaqueSyncStructTwinNormal_new();
  }

  late final _wire_ConstructorOpaqueSyncStructTwinNormal_newPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_ConstructorOpaqueSyncStructTwinNormal_new');
  late final _wire_ConstructorOpaqueSyncStructTwinNormal_new =
      _wire_ConstructorOpaqueSyncStructTwinNormal_newPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  void wire_ConstructorTranslatableStructTwinNormal_new(
    int port_,
  ) {
    return _wire_ConstructorTranslatableStructTwinNormal_new(
      port_,
    );
  }

  late final _wire_ConstructorTranslatableStructTwinNormal_newPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_ConstructorTranslatableStructTwinNormal_new');
  late final _wire_ConstructorTranslatableStructTwinNormal_new =
      _wire_ConstructorTranslatableStructTwinNormal_newPtr
          .asFunction<void Function(int)>();

  WireSyncRust2DartDco wire_ConstructorTranslatableSyncStructTwinNormal_new() {
    return _wire_ConstructorTranslatableSyncStructTwinNormal_new();
  }

  late final _wire_ConstructorTranslatableSyncStructTwinNormal_newPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_ConstructorTranslatableSyncStructTwinNormal_new');
  late final _wire_ConstructorTranslatableSyncStructTwinNormal_new =
      _wire_ConstructorTranslatableSyncStructTwinNormal_newPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  void wire_check_init_done(
    int port_,
  ) {
    return _wire_check_init_done(
      port_,
    );
  }

  late final _wire_check_init_donePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_check_init_done');
  late final _wire_check_init_done =
      _wire_check_init_donePtr.asFunction<void Function(int)>();

  void wire_init_app(
    int port_,
  ) {
    return _wire_init_app(
      port_,
    );
  }

  late final _wire_init_appPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_init_app');
  late final _wire_init_app =
      _wire_init_appPtr.asFunction<void Function(int)>();

  void wire_my_init_one(
    int port_,
  ) {
    return _wire_my_init_one(
      port_,
    );
  }

  late final _wire_my_init_onePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_my_init_one');
  late final _wire_my_init_one =
      _wire_my_init_onePtr.asFunction<void Function(int)>();

  void wire_my_init_two(
    int port_,
  ) {
    return _wire_my_init_two(
      port_,
    );
  }

  late final _wire_my_init_twoPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_my_init_two');
  late final _wire_my_init_two =
      _wire_my_init_twoPtr.asFunction<void Function(int)>();

  void wire_return_dart_dynamic_twin_normal(
    int port_,
  ) {
    return _wire_return_dart_dynamic_twin_normal(
      port_,
    );
  }

  late final _wire_return_dart_dynamic_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_return_dart_dynamic_twin_normal');
  late final _wire_return_dart_dynamic_twin_normal =
      _wire_return_dart_dynamic_twin_normalPtr.asFunction<void Function(int)>();

  void wire_rust_call_dart_loopback_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_loopback_twin_normal(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_loopback_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_loopback_twin_normal');
  late final _wire_rust_call_dart_loopback_twin_normal =
      _wire_rust_call_dart_loopback_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_multi_times_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> callback,
    int num_times,
  ) {
    return _wire_rust_call_dart_multi_times_twin_normal(
      port_,
      callback,
      num_times,
    );
  }

  late final _wire_rust_call_dart_multi_times_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_multi_times_twin_normal');
  late final _wire_rust_call_dart_multi_times_twin_normal =
      _wire_rust_call_dart_multi_times_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>, int)>();

  void wire_rust_call_dart_one_arg_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_one_arg_twin_normal(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_one_arg_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_one_arg_twin_normal');
  late final _wire_rust_call_dart_one_arg_twin_normal =
      _wire_rust_call_dart_one_arg_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_return_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_return_twin_normal(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_return_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_return_twin_normal');
  late final _wire_rust_call_dart_return_twin_normal =
      _wire_rust_call_dart_return_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_simple_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_simple_twin_normal(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_simple_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_simple_twin_normal');
  late final _wire_rust_call_dart_simple_twin_normal =
      _wire_rust_call_dart_simple_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_two_args_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_two_args_twin_normal(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_two_args_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_two_args_twin_normal');
  late final _wire_rust_call_dart_two_args_twin_normal =
      _wire_rust_call_dart_two_args_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_with_dart_opaque_arg_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> input,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_arg_twin_normal(
      port_,
      input,
      callback,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_arg_twin_normal');
  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_normal =
      _wire_rust_call_dart_with_dart_opaque_arg_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_with_dart_opaque_result_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_result_twin_normal(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_result_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_result_twin_normal');
  late final _wire_rust_call_dart_with_dart_opaque_result_twin_normal =
      _wire_rust_call_dart_with_dart_opaque_result_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_async_accept_dart_opaque_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_async_accept_dart_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_async_accept_dart_opaque_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_async_accept_dart_opaque_twin_normal');
  late final _wire_async_accept_dart_opaque_twin_normal =
      _wire_async_accept_dart_opaque_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_clone_dart_opaque_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_clone_dart_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_clone_dart_opaque_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_clone_dart_opaque_twin_normal');
  late final _wire_clone_dart_opaque_twin_normal =
      _wire_clone_dart_opaque_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_create_enum_dart_opaque_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_create_enum_dart_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_create_enum_dart_opaque_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_create_enum_dart_opaque_twin_normal');
  late final _wire_create_enum_dart_opaque_twin_normal =
      _wire_create_enum_dart_opaque_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_create_nested_dart_opaque_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque1,
    ffi.Pointer<ffi.Void> opaque2,
  ) {
    return _wire_create_nested_dart_opaque_twin_normal(
      port_,
      opaque1,
      opaque2,
    );
  }

  late final _wire_create_nested_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_dart_opaque_twin_normal');
  late final _wire_create_nested_dart_opaque_twin_normal =
      _wire_create_nested_dart_opaque_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  void wire_drop_static_dart_opaque_twin_normal(
    int port_,
    int id,
  ) {
    return _wire_drop_static_dart_opaque_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_drop_static_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_drop_static_dart_opaque_twin_normal');
  late final _wire_drop_static_dart_opaque_twin_normal =
      _wire_drop_static_dart_opaque_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_get_enum_dart_opaque_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal> opaque,
  ) {
    return _wire_get_enum_dart_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_get_enum_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_get_enum_dart_opaque_twin_normal');
  late final _wire_get_enum_dart_opaque_twin_normal =
      _wire_get_enum_dart_opaque_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal>)>();

  void wire_get_nested_dart_opaque_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal> opaque,
  ) {
    return _wire_get_nested_dart_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_get_nested_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_get_nested_dart_opaque_twin_normal');
  late final _wire_get_nested_dart_opaque_twin_normal =
      _wire_get_nested_dart_opaque_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal>)>();

  void wire_loop_back_array_get_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_DartOpaque> opaque,
  ) {
    return _wire_loop_back_array_get_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_array_get_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_DartOpaque>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_get_twin_normal');
  late final _wire_loop_back_array_get_twin_normal =
      _wire_loop_back_array_get_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_DartOpaque>)>();

  void wire_loop_back_array_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_array_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_array_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_twin_normal');
  late final _wire_loop_back_array_twin_normal =
      _wire_loop_back_array_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_loop_back_option_get_twin_normal(
    int port_,
    ffi.Pointer<ffi.Pointer<ffi.Void>> opaque,
  ) {
    return _wire_loop_back_option_get_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_option_get_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Pointer<ffi.Void>>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_get_twin_normal');
  late final _wire_loop_back_option_get_twin_normal =
      _wire_loop_back_option_get_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Pointer<ffi.Void>>)>();

  void wire_loop_back_option_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_option_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_option_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_twin_normal');
  late final _wire_loop_back_option_twin_normal =
      _wire_loop_back_option_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_loop_back_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_twin_normal');
  late final _wire_loop_back_twin_normal = _wire_loop_back_twin_normalPtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_loop_back_vec_get_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_DartOpaque> opaque,
  ) {
    return _wire_loop_back_vec_get_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_vec_get_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_DartOpaque>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_get_twin_normal');
  late final _wire_loop_back_vec_get_twin_normal =
      _wire_loop_back_vec_get_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_DartOpaque>)>();

  void wire_loop_back_vec_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_vec_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_vec_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_twin_normal');
  late final _wire_loop_back_vec_twin_normal =
      _wire_loop_back_vec_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_panic_unwrap_dart_opaque_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_panic_unwrap_dart_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_panic_unwrap_dart_opaque_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_panic_unwrap_dart_opaque_twin_normal');
  late final _wire_panic_unwrap_dart_opaque_twin_normal =
      _wire_panic_unwrap_dart_opaque_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_set_static_dart_opaque_twin_normal(
    int port_,
    int id,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_set_static_dart_opaque_twin_normal(
      port_,
      id,
      opaque,
    );
  }

  late final _wire_set_static_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Int32, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_set_static_dart_opaque_twin_normal');
  late final _wire_set_static_dart_opaque_twin_normal =
      _wire_set_static_dart_opaque_twin_normalPtr
          .asFunction<void Function(int, int, ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_sync_accept_dart_opaque_twin_normal(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_sync_accept_dart_opaque_twin_normal(
      opaque,
    );
  }

  late final _wire_sync_accept_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_sync_accept_dart_opaque_twin_normal');
  late final _wire_sync_accept_dart_opaque_twin_normal =
      _wire_sync_accept_dart_opaque_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_sync_loopback_twin_normal(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_sync_loopback_twin_normal(
      opaque,
    );
  }

  late final _wire_sync_loopback_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_sync_loopback_twin_normal');
  late final _wire_sync_loopback_twin_normal =
      _wire_sync_loopback_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_sync_option_dart_opaque_twin_normal(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_sync_option_dart_opaque_twin_normal(
      opaque,
    );
  }

  late final _wire_sync_option_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_sync_option_dart_opaque_twin_normal');
  late final _wire_sync_option_dart_opaque_twin_normal =
      _wire_sync_option_dart_opaque_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_sync_option_loopback_twin_normal(
    ffi.Pointer<ffi.Pointer<ffi.Void>> opaque,
  ) {
    return _wire_sync_option_loopback_twin_normal(
      opaque,
    );
  }

  late final _wire_sync_option_loopback_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Pointer<ffi.Void>>)>>(
      'frbgen_frb_example_pure_dart_wire_sync_option_loopback_twin_normal');
  late final _wire_sync_option_loopback_twin_normal =
      _wire_sync_option_loopback_twin_normalPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<ffi.Pointer<ffi.Void>>)>();

  WireSyncRust2DartDco wire_unwrap_dart_opaque_twin_normal(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_unwrap_dart_opaque_twin_normal(
      opaque,
    );
  }

  late final _wire_unwrap_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_dart_opaque_twin_normal');
  late final _wire_unwrap_dart_opaque_twin_normal =
      _wire_unwrap_dart_opaque_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  void wire_test_duplicated_module_names(
    int port_,
    ffi.Pointer<wire_cst_struct_in_lower_level> s,
  ) {
    return _wire_test_duplicated_module_names(
      port_,
      s,
    );
  }

  late final _wire_test_duplicated_module_namesPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_struct_in_lower_level>)>>(
      'frbgen_frb_example_pure_dart_wire_test_duplicated_module_names');
  late final _wire_test_duplicated_module_names =
      _wire_test_duplicated_module_namesPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_struct_in_lower_level>)>();

  void wire_DroppableTwinNormal_create_stream(
    int port_,
    int that,
  ) {
    return _wire_DroppableTwinNormal_create_stream(
      port_,
      that,
    );
  }

  late final _wire_DroppableTwinNormal_create_streamPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinNormal_create_stream');
  late final _wire_DroppableTwinNormal_create_stream =
      _wire_DroppableTwinNormal_create_streamPtr
          .asFunction<void Function(int, int)>();

  void wire_DroppableTwinNormal_get_drop_count_twin_normal(
    int port_,
  ) {
    return _wire_DroppableTwinNormal_get_drop_count_twin_normal(
      port_,
    );
  }

  late final _wire_DroppableTwinNormal_get_drop_count_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinNormal_get_drop_count_twin_normal');
  late final _wire_DroppableTwinNormal_get_drop_count_twin_normal =
      _wire_DroppableTwinNormal_get_drop_count_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_DroppableTwinNormal_new_twin_normal(
    int port_,
  ) {
    return _wire_DroppableTwinNormal_new_twin_normal(
      port_,
    );
  }

  late final _wire_DroppableTwinNormal_new_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinNormal_new_twin_normal');
  late final _wire_DroppableTwinNormal_new_twin_normal =
      _wire_DroppableTwinNormal_new_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_DroppableTwinNormal_simple_method_twin_normal(
    int port_,
    int that,
  ) {
    return _wire_DroppableTwinNormal_simple_method_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_DroppableTwinNormal_simple_method_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinNormal_simple_method_twin_normal');
  late final _wire_DroppableTwinNormal_simple_method_twin_normal =
      _wire_DroppableTwinNormal_simple_method_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_func_enum_simple_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_func_enum_simple_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_simple_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_func_enum_simple_twin_normal');
  late final _wire_func_enum_simple_twin_normal =
      _wire_func_enum_simple_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_func_enum_with_discriminant_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_func_enum_with_discriminant_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_with_discriminant_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_discriminant_twin_normal');
  late final _wire_func_enum_with_discriminant_twin_normal =
      _wire_func_enum_with_discriminant_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_func_enum_with_item_mixed_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal> arg,
  ) {
    return _wire_func_enum_with_item_mixed_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_with_item_mixed_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_mixed_twin_normal');
  late final _wire_func_enum_with_item_mixed_twin_normal =
      _wire_func_enum_with_item_mixed_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal>)>();

  void wire_func_enum_with_item_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal> arg,
  ) {
    return _wire_func_enum_with_item_struct_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_with_item_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_struct_twin_normal');
  late final _wire_func_enum_with_item_struct_twin_normal =
      _wire_func_enum_with_item_struct_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal>)>();

  void wire_func_enum_with_item_tuple_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal> arg,
  ) {
    return _wire_func_enum_with_item_tuple_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_with_item_tuple_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_tuple_twin_normal');
  late final _wire_func_enum_with_item_tuple_twin_normal =
      _wire_func_enum_with_item_tuple_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal>)>();

  void wire_handle_enum_parameter_twin_normal(
    int port_,
    int weekday,
  ) {
    return _wire_handle_enum_parameter_twin_normal(
      port_,
      weekday,
    );
  }

  late final _wire_handle_enum_parameter_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_parameter_twin_normal');
  late final _wire_handle_enum_parameter_twin_normal =
      _wire_handle_enum_parameter_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_enum_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_kitchen_sink_twin_normal> val,
  ) {
    return _wire_handle_enum_struct_twin_normal(
      port_,
      val,
    );
  }

  late final _wire_handle_enum_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_kitchen_sink_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_struct_twin_normal');
  late final _wire_handle_enum_struct_twin_normal =
      _wire_handle_enum_struct_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_kitchen_sink_twin_normal>)>();

  void wire_handle_return_enum_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> input,
  ) {
    return _wire_handle_return_enum_twin_normal(
      port_,
      input,
    );
  }

  late final _wire_handle_return_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_return_enum_twin_normal');
  late final _wire_handle_return_enum_twin_normal =
      _wire_handle_return_enum_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_multiply_by_ten_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_measure_twin_normal> measure,
  ) {
    return _wire_multiply_by_ten_twin_normal(
      port_,
      measure,
    );
  }

  late final _wire_multiply_by_ten_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_measure_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_multiply_by_ten_twin_normal');
  late final _wire_multiply_by_ten_twin_normal =
      _wire_multiply_by_ten_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_measure_twin_normal>)>();

  void wire_print_note_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_note_twin_normal> note,
  ) {
    return _wire_print_note_twin_normal(
      port_,
      note,
    );
  }

  late final _wire_print_note_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_note_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_print_note_twin_normal');
  late final _wire_print_note_twin_normal = _wire_print_note_twin_normalPtr
      .asFunction<void Function(int, ffi.Pointer<wire_cst_note_twin_normal>)>();

  void wire_EventTwinNormal_as_string_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_event_twin_normal> that,
  ) {
    return _wire_EventTwinNormal_as_string_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_EventTwinNormal_as_string_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_event_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_EventTwinNormal_as_string_twin_normal');
  late final _wire_EventTwinNormal_as_string_twin_normal =
      _wire_EventTwinNormal_as_string_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_event_twin_normal>)>();

  void wire_close_event_listener_twin_normal(
    int port_,
  ) {
    return _wire_close_event_listener_twin_normal(
      port_,
    );
  }

  late final _wire_close_event_listener_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_close_event_listener_twin_normal');
  late final _wire_close_event_listener_twin_normal =
      _wire_close_event_listener_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_create_event_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> address,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> payload,
  ) {
    return _wire_create_event_twin_normal(
      port_,
      address,
      payload,
    );
  }

  late final _wire_create_event_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_create_event_twin_normal');
  late final _wire_create_event_twin_normal =
      _wire_create_event_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_register_event_listener_twin_normal(
    int port_,
  ) {
    return _wire_register_event_listener_twin_normal(
      port_,
    );
  }

  late final _wire_register_event_listener_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_register_event_listener_twin_normal');
  late final _wire_register_event_listener_twin_normal =
      _wire_register_event_listener_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_CustomStructTwinNormal_new_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> message,
  ) {
    return _wire_CustomStructTwinNormal_new_twin_normal(
      port_,
      message,
    );
  }

  late final _wire_CustomStructTwinNormal_new_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_CustomStructTwinNormal_new_twin_normal');
  late final _wire_CustomStructTwinNormal_new_twin_normal =
      _wire_CustomStructTwinNormal_new_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void
      wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_custom_struct_twin_normal> that,
  ) {
    return _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_custom_struct_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normal');
  late final _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normal =
      _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normalPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_custom_struct_twin_normal>)>();

  void
      wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_custom_struct_twin_normal> that,
  ) {
    return _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_custom_struct_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normal');
  late final _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normal =
      _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normalPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_custom_struct_twin_normal>)>();

  void
      wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normal(
    int port_,
  ) {
    return _wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normal(
      port_,
    );
  }

  late final _wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normal');
  late final _wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normal =
      _wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normal(
    int port_,
  ) {
    return _wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normal(
      port_,
    );
  }

  late final _wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normal');
  late final _wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normal =
      _wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_SomeStructTwinNormal_new_twin_normal(
    int port_,
    int value,
  ) {
    return _wire_SomeStructTwinNormal_new_twin_normal(
      port_,
      value,
    );
  }

  late final _wire_SomeStructTwinNormal_new_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_SomeStructTwinNormal_new_twin_normal');
  late final _wire_SomeStructTwinNormal_new_twin_normal =
      _wire_SomeStructTwinNormal_new_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_some_struct_twin_normal> that,
  ) {
    return _wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_some_struct_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normal');
  late final _wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normal =
      _wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normalPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_some_struct_twin_normal>)>();

  void wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_some_struct_twin_normal> that,
  ) {
    return _wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_some_struct_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normal');
  late final _wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normal =
      _wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normalPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_some_struct_twin_normal>)>();

  void wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normal(
    int port_,
  ) {
    return _wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normal(
      port_,
    );
  }

  late final _wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normal');
  late final _wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normal =
      _wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normal(
    int port_,
  ) {
    return _wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normal(
      port_,
    );
  }

  late final _wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normal');
  late final _wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normal =
      _wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_custom_enum_error_panic_twin_normal(
    int port_,
  ) {
    return _wire_custom_enum_error_panic_twin_normal(
      port_,
    );
  }

  late final _wire_custom_enum_error_panic_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_panic_twin_normal');
  late final _wire_custom_enum_error_panic_twin_normal =
      _wire_custom_enum_error_panic_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_custom_enum_error_return_error_twin_normal(
    int port_,
  ) {
    return _wire_custom_enum_error_return_error_twin_normal(
      port_,
    );
  }

  late final _wire_custom_enum_error_return_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_error_twin_normal');
  late final _wire_custom_enum_error_return_error_twin_normal =
      _wire_custom_enum_error_return_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_custom_enum_error_return_ok_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_custom_enum_error_return_ok_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_custom_enum_error_return_ok_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_ok_twin_normal');
  late final _wire_custom_enum_error_return_ok_twin_normal =
      _wire_custom_enum_error_return_ok_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_custom_nested_error_return_error_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_custom_nested_error_outer_twin_normal> arg,
  ) {
    return _wire_custom_nested_error_return_error_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_custom_nested_error_return_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_custom_nested_error_outer_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_custom_nested_error_return_error_twin_normal');
  late final _wire_custom_nested_error_return_error_twin_normal =
      _wire_custom_nested_error_return_error_twin_normalPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_custom_nested_error_outer_twin_normal>)>();

  void wire_custom_struct_error_return_error_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_custom_struct_error_twin_normal> arg,
  ) {
    return _wire_custom_struct_error_return_error_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_custom_struct_error_return_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_custom_struct_error_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_custom_struct_error_return_error_twin_normal');
  late final _wire_custom_struct_error_return_error_twin_normal =
      _wire_custom_struct_error_return_error_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_custom_struct_error_twin_normal>)>();

  void wire_func_return_error_twin_normal(
    int port_,
  ) {
    return _wire_func_return_error_twin_normal(
      port_,
    );
  }

  late final _wire_func_return_error_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_func_return_error_twin_normal');
  late final _wire_func_return_error_twin_normal =
      _wire_func_return_error_twin_normalPtr.asFunction<void Function(int)>();

  void wire_func_type_fallible_panic_twin_normal(
    int port_,
  ) {
    return _wire_func_type_fallible_panic_twin_normal(
      port_,
    );
  }

  late final _wire_func_type_fallible_panic_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_fallible_panic_twin_normal');
  late final _wire_func_type_fallible_panic_twin_normal =
      _wire_func_type_fallible_panic_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_func_type_infallible_panic_twin_normal(
    int port_,
  ) {
    return _wire_func_type_infallible_panic_twin_normal(
      port_,
    );
  }

  late final _wire_func_type_infallible_panic_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_infallible_panic_twin_normal');
  late final _wire_func_type_infallible_panic_twin_normal =
      _wire_func_type_infallible_panic_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_panic_with_custom_result_twin_normal(
    int port_,
  ) {
    return _wire_panic_with_custom_result_twin_normal(
      port_,
    );
  }

  late final _wire_panic_with_custom_result_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_panic_with_custom_result_twin_normal');
  late final _wire_panic_with_custom_result_twin_normal =
      _wire_panic_with_custom_result_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_nested_error_1_twin_normal(
    int port_,
  ) {
    return _wire_return_custom_nested_error_1_twin_normal(
      port_,
    );
  }

  late final _wire_return_custom_nested_error_1_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_twin_normal');
  late final _wire_return_custom_nested_error_1_twin_normal =
      _wire_return_custom_nested_error_1_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_nested_error_1_variant1_twin_normal(
    int port_,
  ) {
    return _wire_return_custom_nested_error_1_variant1_twin_normal(
      port_,
    );
  }

  late final _wire_return_custom_nested_error_1_variant1_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_variant1_twin_normal');
  late final _wire_return_custom_nested_error_1_variant1_twin_normal =
      _wire_return_custom_nested_error_1_variant1_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_nested_error_2_twin_normal(
    int port_,
  ) {
    return _wire_return_custom_nested_error_2_twin_normal(
      port_,
    );
  }

  late final _wire_return_custom_nested_error_2_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_2_twin_normal');
  late final _wire_return_custom_nested_error_2_twin_normal =
      _wire_return_custom_nested_error_2_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_struct_error_twin_normal(
    int port_,
  ) {
    return _wire_return_custom_struct_error_twin_normal(
      port_,
    );
  }

  late final _wire_return_custom_struct_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_error_twin_normal');
  late final _wire_return_custom_struct_error_twin_normal =
      _wire_return_custom_struct_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_struct_ok_twin_normal(
    int port_,
  ) {
    return _wire_return_custom_struct_ok_twin_normal(
      port_,
    );
  }

  late final _wire_return_custom_struct_ok_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_ok_twin_normal');
  late final _wire_return_custom_struct_ok_twin_normal =
      _wire_return_custom_struct_ok_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_return_err_custom_error_twin_normal(
    int port_,
  ) {
    return _wire_return_err_custom_error_twin_normal(
      port_,
    );
  }

  late final _wire_return_err_custom_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_err_custom_error_twin_normal');
  late final _wire_return_err_custom_error_twin_normal =
      _wire_return_err_custom_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_return_error_variant_twin_normal(
    int port_,
    int variant,
  ) {
    return _wire_return_error_variant_twin_normal(
      port_,
      variant,
    );
  }

  late final _wire_return_error_variant_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_return_error_variant_twin_normal');
  late final _wire_return_error_variant_twin_normal =
      _wire_return_error_variant_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_return_ok_custom_error_twin_normal(
    int port_,
  ) {
    return _wire_return_ok_custom_error_twin_normal(
      port_,
    );
  }

  late final _wire_return_ok_custom_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_ok_custom_error_twin_normal');
  late final _wire_return_ok_custom_error_twin_normal =
      _wire_return_ok_custom_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_stream_sink_throw_anyhow_twin_normal(
    int port_,
  ) {
    return _wire_stream_sink_throw_anyhow_twin_normal(
      port_,
    );
  }

  late final _wire_stream_sink_throw_anyhow_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_stream_sink_throw_anyhow_twin_normal');
  late final _wire_stream_sink_throw_anyhow_twin_normal =
      _wire_stream_sink_throw_anyhow_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_throw_anyhow_twin_normal(
    int port_,
  ) {
    return _wire_throw_anyhow_twin_normal(
      port_,
    );
  }

  late final _wire_throw_anyhow_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_throw_anyhow_twin_normal');
  late final _wire_throw_anyhow_twin_normal =
      _wire_throw_anyhow_twin_normalPtr.asFunction<void Function(int)>();

  void wire_call_new_module_system_twin_normal(
    int port_,
  ) {
    return _wire_call_new_module_system_twin_normal(
      port_,
    );
  }

  late final _wire_call_new_module_system_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_call_new_module_system_twin_normal');
  late final _wire_call_new_module_system_twin_normal =
      _wire_call_new_module_system_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_call_old_module_system_twin_normal(
    int port_,
  ) {
    return _wire_call_old_module_system_twin_normal(
      port_,
    );
  }

  late final _wire_call_old_module_system_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_call_old_module_system_twin_normal');
  late final _wire_call_old_module_system_twin_normal =
      _wire_call_old_module_system_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_use_imported_enum_twin_normal(
    int port_,
    int my_enum,
  ) {
    return _wire_use_imported_enum_twin_normal(
      port_,
      my_enum,
    );
  }

  late final _wire_use_imported_enum_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_use_imported_enum_twin_normal');
  late final _wire_use_imported_enum_twin_normal =
      _wire_use_imported_enum_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_use_imported_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_my_struct> my_struct,
  ) {
    return _wire_use_imported_struct_twin_normal(
      port_,
      my_struct,
    );
  }

  late final _wire_use_imported_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_my_struct>)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_struct_twin_normal');
  late final _wire_use_imported_struct_twin_normal =
      _wire_use_imported_struct_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_my_struct>)>();

  void wire_another_macro_struct_twin_normal(
    int port_,
  ) {
    return _wire_another_macro_struct_twin_normal(
      port_,
    );
  }

  late final _wire_another_macro_struct_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_another_macro_struct_twin_normal');
  late final _wire_another_macro_struct_twin_normal =
      _wire_another_macro_struct_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_func_macro_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_macro_struct> arg,
  ) {
    return _wire_func_macro_struct_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_macro_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_macro_struct>)>>(
      'frbgen_frb_example_pure_dart_wire_func_macro_struct_twin_normal');
  late final _wire_func_macro_struct_twin_normal =
      _wire_func_macro_struct_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_macro_struct>)>();

  void wire_func_hash_map_i32_i32_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_i_32> arg,
  ) {
    return _wire_func_hash_map_i32_i32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_i32_i32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_i32_i32_twin_normal');
  late final _wire_func_hash_map_i32_i32_twin_normal =
      _wire_func_hash_map_i32_i32_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_i_32>)>();

  void wire_func_hash_map_string_bytes_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_list_prim_u_8_strict> arg,
  ) {
    return _wire_func_hash_map_string_bytes_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_bytes_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_record_string_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_bytes_twin_normal');
  late final _wire_func_hash_map_string_bytes_twin_normal =
      _wire_func_hash_map_string_bytes_twin_normalPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_list_record_string_list_prim_u_8_strict>)>();

  void wire_func_hash_map_string_complex_enum_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_normal> arg,
  ) {
    return _wire_func_hash_map_string_complex_enum_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_complex_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_record_string_kitchen_sink_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_complex_enum_twin_normal');
  late final _wire_func_hash_map_string_complex_enum_twin_normal =
      _wire_func_hash_map_string_complex_enum_twin_normalPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_list_record_string_kitchen_sink_twin_normal>)>();

  void wire_func_hash_map_string_simple_enum_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_normal> arg,
  ) {
    return _wire_func_hash_map_string_simple_enum_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_simple_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_record_string_enum_simple_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_simple_enum_twin_normal');
  late final _wire_func_hash_map_string_simple_enum_twin_normal =
      _wire_func_hash_map_string_simple_enum_twin_normalPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_list_record_string_enum_simple_twin_normal>)>();

  void wire_func_hash_map_string_string_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_string> arg,
  ) {
    return _wire_func_hash_map_string_string_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_string_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_string_string>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_string_twin_normal');
  late final _wire_func_hash_map_string_string_twin_normal =
      _wire_func_hash_map_string_string_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_record_string_string>)>();

  void wire_func_hash_map_string_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_my_size> arg,
  ) {
    return _wire_func_hash_map_string_struct_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_record_string_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_struct_twin_normal');
  late final _wire_func_hash_map_string_struct_twin_normal =
      _wire_func_hash_map_string_struct_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_record_string_my_size>)>();

  void wire_func_hash_set_i32_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_32_strict> arg,
  ) {
    return _wire_func_hash_set_i32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_set_i32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_32_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_i32_twin_normal');
  late final _wire_func_hash_set_i32_twin_normal =
      _wire_func_hash_set_i32_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_32_strict>)>();

  void wire_func_hash_set_string_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_String> arg,
  ) {
    return _wire_func_hash_set_string_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_set_string_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_string_twin_normal');
  late final _wire_func_hash_set_string_twin_normal =
      _wire_func_hash_set_string_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_String>)>();

  void wire_ConcatenateWithTwinNormal_concatenate_static_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> a,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> b,
  ) {
    return _wire_ConcatenateWithTwinNormal_concatenate_static_twin_normal(
      port_,
      a,
      b,
    );
  }

  late final _wire_ConcatenateWithTwinNormal_concatenate_static_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinNormal_concatenate_static_twin_normal');
  late final _wire_ConcatenateWithTwinNormal_concatenate_static_twin_normal =
      _wire_ConcatenateWithTwinNormal_concatenate_static_twin_normalPtr
          .asFunction<
              void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_ConcatenateWithTwinNormal_concatenate_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_normal> that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> b,
  ) {
    return _wire_ConcatenateWithTwinNormal_concatenate_twin_normal(
      port_,
      that,
      b,
    );
  }

  late final _wire_ConcatenateWithTwinNormal_concatenate_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_concatenate_with_twin_normal>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinNormal_concatenate_twin_normal');
  late final _wire_ConcatenateWithTwinNormal_concatenate_twin_normal =
      _wire_ConcatenateWithTwinNormal_concatenate_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_concatenate_with_twin_normal>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void
      wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normal(
    int port_,
  ) {
    return _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normal(
      port_,
    );
  }

  late final _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normal');
  late final _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normal =
      _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normalPtr
          .asFunction<void Function(int)>();

  void
      wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normal(
    int port_,
    int key,
    int max,
  ) {
    return _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normal(
      port_,
      key,
      max,
    );
  }

  late final _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normal');
  late final _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normal =
      _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_normal> that,
  ) {
    return _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_concatenate_with_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normal');
  late final _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normal =
      _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normalPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_concatenate_with_twin_normal>)>();

  void wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_normal> that,
    int key,
    int max,
  ) {
    return _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normal(
      port_,
      that,
      key,
      max,
    );
  }

  late final _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_concatenate_with_twin_normal>,
                      ffi.Uint32,
                      ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normal');
  late final _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normal =
      _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normalPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<wire_cst_concatenate_with_twin_normal>,
                  int,
                  int)>();

  void wire_ConcatenateWithTwinNormal_new_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> a,
  ) {
    return _wire_ConcatenateWithTwinNormal_new_twin_normal(
      port_,
      a,
    );
  }

  late final _wire_ConcatenateWithTwinNormal_new_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinNormal_new_twin_normal');
  late final _wire_ConcatenateWithTwinNormal_new_twin_normal =
      _wire_ConcatenateWithTwinNormal_new_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_ConcatenateWithTwinNormal_simple_getter_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_normal> that,
  ) {
    return _wire_ConcatenateWithTwinNormal_simple_getter_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_ConcatenateWithTwinNormal_simple_getter_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_concatenate_with_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinNormal_simple_getter_twin_normal');
  late final _wire_ConcatenateWithTwinNormal_simple_getter_twin_normal =
      _wire_ConcatenateWithTwinNormal_simple_getter_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_concatenate_with_twin_normal>)>();

  void wire_MyCallableTwinNormal_call(
    int port_,
    ffi.Pointer<wire_cst_my_callable_twin_normal> that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> two,
  ) {
    return _wire_MyCallableTwinNormal_call(
      port_,
      that,
      two,
    );
  }

  late final _wire_MyCallableTwinNormal_callPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_my_callable_twin_normal>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_MyCallableTwinNormal_call');
  late final _wire_MyCallableTwinNormal_call =
      _wire_MyCallableTwinNormal_callPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_my_callable_twin_normal>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_SimpleStructTwinNormal_arg_self_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_simple_struct_twin_normal> a,
    ffi.Pointer<wire_cst_simple_struct_twin_normal> b,
  ) {
    return _wire_SimpleStructTwinNormal_arg_self_twin_normal(
      port_,
      a,
      b,
    );
  }

  late final _wire_SimpleStructTwinNormal_arg_self_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_simple_struct_twin_normal>,
                  ffi.Pointer<wire_cst_simple_struct_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_SimpleStructTwinNormal_arg_self_twin_normal');
  late final _wire_SimpleStructTwinNormal_arg_self_twin_normal =
      _wire_SimpleStructTwinNormal_arg_self_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_simple_struct_twin_normal>,
              ffi.Pointer<wire_cst_simple_struct_twin_normal>)>();

  void wire_SimpleStructTwinNormal_return_self_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> one,
  ) {
    return _wire_SimpleStructTwinNormal_return_self_twin_normal(
      port_,
      one,
    );
  }

  late final _wire_SimpleStructTwinNormal_return_self_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_SimpleStructTwinNormal_return_self_twin_normal');
  late final _wire_SimpleStructTwinNormal_return_self_twin_normal =
      _wire_SimpleStructTwinNormal_return_self_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_SimpleStructTwinNormal_vec_self_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_simple_struct_twin_normal> arg,
  ) {
    return _wire_SimpleStructTwinNormal_vec_self_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_SimpleStructTwinNormal_vec_self_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_simple_struct_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_SimpleStructTwinNormal_vec_self_twin_normal');
  late final _wire_SimpleStructTwinNormal_vec_self_twin_normal =
      _wire_SimpleStructTwinNormal_vec_self_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_simple_struct_twin_normal>)>();

  void wire_SumWithTwinNormal_sum_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_sum_with_twin_normal> that,
    int y,
    int z,
  ) {
    return _wire_SumWithTwinNormal_sum_twin_normal(
      port_,
      that,
      y,
      z,
    );
  }

  late final _wire_SumWithTwinNormal_sum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_sum_with_twin_normal>,
                  ffi.Uint32,
                  ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_SumWithTwinNormal_sum_twin_normal');
  late final _wire_SumWithTwinNormal_sum_twin_normal =
      _wire_SumWithTwinNormal_sum_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_sum_with_twin_normal>, int, int)>();

  void wire_get_sum_array_twin_normal(
    int port_,
    int a,
    int b,
    int c,
  ) {
    return _wire_get_sum_array_twin_normal(
      port_,
      a,
      b,
      c,
    );
  }

  late final _wire_get_sum_array_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Uint32, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_array_twin_normal');
  late final _wire_get_sum_array_twin_normal =
      _wire_get_sum_array_twin_normalPtr
          .asFunction<void Function(int, int, int, int)>();

  void wire_get_sum_struct_twin_normal(
    int port_,
  ) {
    return _wire_get_sum_struct_twin_normal(
      port_,
    );
  }

  late final _wire_get_sum_struct_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_sum_struct_twin_normal');
  late final _wire_get_sum_struct_twin_normal =
      _wire_get_sum_struct_twin_normalPtr.asFunction<void Function(int)>();

  void wire_app_settings_stream_twin_normal(
    int port_,
  ) {
    return _wire_app_settings_stream_twin_normal(
      port_,
    );
  }

  late final _wire_app_settings_stream_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_app_settings_stream_twin_normal');
  late final _wire_app_settings_stream_twin_normal =
      _wire_app_settings_stream_twin_normalPtr.asFunction<void Function(int)>();

  void wire_app_settings_vec_stream_twin_normal(
    int port_,
  ) {
    return _wire_app_settings_vec_stream_twin_normal(
      port_,
    );
  }

  late final _wire_app_settings_vec_stream_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_vec_stream_twin_normal');
  late final _wire_app_settings_vec_stream_twin_normal =
      _wire_app_settings_vec_stream_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_first_number_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_numbers> nums,
  ) {
    return _wire_first_number_twin_normal(
      port_,
      nums,
    );
  }

  late final _wire_first_number_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_numbers>)>>(
      'frbgen_frb_example_pure_dart_wire_first_number_twin_normal');
  late final _wire_first_number_twin_normal = _wire_first_number_twin_normalPtr
      .asFunction<void Function(int, ffi.Pointer<wire_cst_numbers>)>();

  void wire_first_sequence_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_sequences> seqs,
  ) {
    return _wire_first_sequence_twin_normal(
      port_,
      seqs,
    );
  }

  late final _wire_first_sequence_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_sequences>)>>(
      'frbgen_frb_example_pure_dart_wire_first_sequence_twin_normal');
  late final _wire_first_sequence_twin_normal =
      _wire_first_sequence_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_sequences>)>();

  void wire_get_app_settings_twin_normal(
    int port_,
  ) {
    return _wire_get_app_settings_twin_normal(
      port_,
    );
  }

  late final _wire_get_app_settings_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_app_settings_twin_normal');
  late final _wire_get_app_settings_twin_normal =
      _wire_get_app_settings_twin_normalPtr.asFunction<void Function(int)>();

  void wire_get_fallible_app_settings_twin_normal(
    int port_,
  ) {
    return _wire_get_fallible_app_settings_twin_normal(
      port_,
    );
  }

  late final _wire_get_fallible_app_settings_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_get_fallible_app_settings_twin_normal');
  late final _wire_get_fallible_app_settings_twin_normal =
      _wire_get_fallible_app_settings_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_get_message_twin_normal(
    int port_,
  ) {
    return _wire_get_message_twin_normal(
      port_,
    );
  }

  late final _wire_get_message_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_message_twin_normal');
  late final _wire_get_message_twin_normal =
      _wire_get_message_twin_normalPtr.asFunction<void Function(int)>();

  void wire_is_app_embedded_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_application_settings> app_settings,
  ) {
    return _wire_is_app_embedded_twin_normal(
      port_,
      app_settings,
    );
  }

  late final _wire_is_app_embedded_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_application_settings>)>>(
      'frbgen_frb_example_pure_dart_wire_is_app_embedded_twin_normal');
  late final _wire_is_app_embedded_twin_normal =
      _wire_is_app_embedded_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_application_settings>)>();

  void wire_mirror_array_enum_stream_twin_normal(
    int port_,
  ) {
    return _wire_mirror_array_enum_stream_twin_normal(
      port_,
    );
  }

  late final _wire_mirror_array_enum_stream_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_array_enum_stream_twin_normal');
  late final _wire_mirror_array_enum_stream_twin_normal =
      _wire_mirror_array_enum_stream_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_mirror_enum_stream_twin_normal(
    int port_,
  ) {
    return _wire_mirror_enum_stream_twin_normal(
      port_,
    );
  }

  late final _wire_mirror_enum_stream_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_mirror_enum_stream_twin_normal');
  late final _wire_mirror_enum_stream_twin_normal =
      _wire_mirror_enum_stream_twin_normalPtr.asFunction<void Function(int)>();

  void wire_mirror_map_enum_stream_twin_normal(
    int port_,
  ) {
    return _wire_mirror_map_enum_stream_twin_normal(
      port_,
    );
  }

  late final _wire_mirror_map_enum_stream_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_map_enum_stream_twin_normal');
  late final _wire_mirror_map_enum_stream_twin_normal =
      _wire_mirror_map_enum_stream_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_mirror_option_enum_stream_twin_normal(
    int port_,
  ) {
    return _wire_mirror_option_enum_stream_twin_normal(
      port_,
    );
  }

  late final _wire_mirror_option_enum_stream_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_option_enum_stream_twin_normal');
  late final _wire_mirror_option_enum_stream_twin_normal =
      _wire_mirror_option_enum_stream_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_mirror_set_enum_stream_twin_normal(
    int port_,
  ) {
    return _wire_mirror_set_enum_stream_twin_normal(
      port_,
    );
  }

  late final _wire_mirror_set_enum_stream_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_set_enum_stream_twin_normal');
  late final _wire_mirror_set_enum_stream_twin_normal =
      _wire_mirror_set_enum_stream_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_mirror_struct_stream_twin_normal(
    int port_,
  ) {
    return _wire_mirror_struct_stream_twin_normal(
      port_,
    );
  }

  late final _wire_mirror_struct_stream_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_mirror_struct_stream_twin_normal');
  late final _wire_mirror_struct_stream_twin_normal =
      _wire_mirror_struct_stream_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_mirror_tuple_stream_twin_normal(
    int port_,
  ) {
    return _wire_mirror_tuple_stream_twin_normal(
      port_,
    );
  }

  late final _wire_mirror_tuple_stream_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_mirror_tuple_stream_twin_normal');
  late final _wire_mirror_tuple_stream_twin_normal =
      _wire_mirror_tuple_stream_twin_normalPtr.asFunction<void Function(int)>();

  void wire_mirror_vec_enum_stream_twin_normal(
    int port_,
  ) {
    return _wire_mirror_vec_enum_stream_twin_normal(
      port_,
    );
  }

  late final _wire_mirror_vec_enum_stream_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_vec_enum_stream_twin_normal');
  late final _wire_mirror_vec_enum_stream_twin_normal =
      _wire_mirror_vec_enum_stream_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_repeat_number_twin_normal(
    int port_,
    int num,
    int times,
  ) {
    return _wire_repeat_number_twin_normal(
      port_,
      num,
      times,
    );
  }

  late final _wire_repeat_number_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Int32, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_number_twin_normal');
  late final _wire_repeat_number_twin_normal =
      _wire_repeat_number_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_repeat_sequence_twin_normal(
    int port_,
    int seq,
    int times,
  ) {
    return _wire_repeat_sequence_twin_normal(
      port_,
      seq,
      times,
    );
  }

  late final _wire_repeat_sequence_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Int32, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_sequence_twin_normal');
  late final _wire_repeat_sequence_twin_normal =
      _wire_repeat_sequence_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_test_contains_mirrored_sub_struct_twin_normal(
    int port_,
  ) {
    return _wire_test_contains_mirrored_sub_struct_twin_normal(
      port_,
    );
  }

  late final _wire_test_contains_mirrored_sub_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_contains_mirrored_sub_struct_twin_normal');
  late final _wire_test_contains_mirrored_sub_struct_twin_normal =
      _wire_test_contains_mirrored_sub_struct_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_test_fallible_of_raw_string_mirrored_twin_normal(
    int port_,
  ) {
    return _wire_test_fallible_of_raw_string_mirrored_twin_normal(
      port_,
    );
  }

  late final _wire_test_fallible_of_raw_string_mirrored_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_fallible_of_raw_string_mirrored_twin_normal');
  late final _wire_test_fallible_of_raw_string_mirrored_twin_normal =
      _wire_test_fallible_of_raw_string_mirrored_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_test_hashmap_with_mirrored_value_twin_normal(
    int port_,
  ) {
    return _wire_test_hashmap_with_mirrored_value_twin_normal(
      port_,
    );
  }

  late final _wire_test_hashmap_with_mirrored_value_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_hashmap_with_mirrored_value_twin_normal');
  late final _wire_test_hashmap_with_mirrored_value_twin_normal =
      _wire_test_hashmap_with_mirrored_value_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_test_list_of_nested_enums_mirrored_twin_normal(
    int port_,
  ) {
    return _wire_test_list_of_nested_enums_mirrored_twin_normal(
      port_,
    );
  }

  late final _wire_test_list_of_nested_enums_mirrored_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_list_of_nested_enums_mirrored_twin_normal');
  late final _wire_test_list_of_nested_enums_mirrored_twin_normal =
      _wire_test_list_of_nested_enums_mirrored_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_test_list_of_raw_nested_string_mirrored_twin_normal(
    int port_,
  ) {
    return _wire_test_list_of_raw_nested_string_mirrored_twin_normal(
      port_,
    );
  }

  late final _wire_test_list_of_raw_nested_string_mirrored_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_list_of_raw_nested_string_mirrored_twin_normal');
  late final _wire_test_list_of_raw_nested_string_mirrored_twin_normal =
      _wire_test_list_of_raw_nested_string_mirrored_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_test_nested_raw_string_mirrored_twin_normal(
    int port_,
  ) {
    return _wire_test_nested_raw_string_mirrored_twin_normal(
      port_,
    );
  }

  late final _wire_test_nested_raw_string_mirrored_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_nested_raw_string_mirrored_twin_normal');
  late final _wire_test_nested_raw_string_mirrored_twin_normal =
      _wire_test_nested_raw_string_mirrored_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_test_raw_string_enum_mirrored_twin_normal(
    int port_,
    bool nested,
  ) {
    return _wire_test_raw_string_enum_mirrored_twin_normal(
      port_,
      nested,
    );
  }

  late final _wire_test_raw_string_enum_mirrored_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_enum_mirrored_twin_normal');
  late final _wire_test_raw_string_enum_mirrored_twin_normal =
      _wire_test_raw_string_enum_mirrored_twin_normalPtr
          .asFunction<void Function(int, bool)>();

  void wire_test_raw_string_mirrored_twin_normal(
    int port_,
  ) {
    return _wire_test_raw_string_mirrored_twin_normal(
      port_,
    );
  }

  late final _wire_test_raw_string_mirrored_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_mirrored_twin_normal');
  late final _wire_test_raw_string_mirrored_twin_normal =
      _wire_test_raw_string_mirrored_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_handle_big_buffers_twin_normal(
    int port_,
  ) {
    return _wire_handle_big_buffers_twin_normal(
      port_,
    );
  }

  late final _wire_handle_big_buffers_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_handle_big_buffers_twin_normal');
  late final _wire_handle_big_buffers_twin_normal =
      _wire_handle_big_buffers_twin_normalPtr.asFunction<void Function(int)>();

  void wire_handle_complex_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_my_tree_node_twin_normal> s,
  ) {
    return _wire_handle_complex_struct_twin_normal(
      port_,
      s,
    );
  }

  late final _wire_handle_complex_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_my_tree_node_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_complex_struct_twin_normal');
  late final _wire_handle_complex_struct_twin_normal =
      _wire_handle_complex_struct_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_my_tree_node_twin_normal>)>();

  void wire_handle_nested_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_my_nested_struct_twin_normal> s,
  ) {
    return _wire_handle_nested_struct_twin_normal(
      port_,
      s,
    );
  }

  late final _wire_handle_nested_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_my_nested_struct_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_struct_twin_normal');
  late final _wire_handle_nested_struct_twin_normal =
      _wire_handle_nested_struct_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_my_nested_struct_twin_normal>)>();

  void wire_handle_string_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> s,
  ) {
    return _wire_handle_string_twin_normal(
      port_,
      s,
    );
  }

  late final _wire_handle_string_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_twin_normal');
  late final _wire_handle_string_twin_normal =
      _wire_handle_string_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_handle_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_my_size> arg,
    ffi.Pointer<wire_cst_my_size> boxed,
  ) {
    return _wire_handle_struct_twin_normal(
      port_,
      arg,
      boxed,
    );
  }

  late final _wire_handle_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_my_size>,
                  ffi.Pointer<wire_cst_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_struct_twin_normal');
  late final _wire_handle_struct_twin_normal =
      _wire_handle_struct_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_my_size>,
              ffi.Pointer<wire_cst_my_size>)>();

  void wire_handle_vec_u8_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> v,
  ) {
    return _wire_handle_vec_u8_twin_normal(
      port_,
      v,
    );
  }

  late final _wire_handle_vec_u8_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_u8_twin_normal');
  late final _wire_handle_vec_u8_twin_normal =
      _wire_handle_vec_u8_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void wire_list_of_primitive_enums_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_weekdays_twin_normal> weekdays,
  ) {
    return _wire_list_of_primitive_enums_twin_normal(
      port_,
      weekdays,
    );
  }

  late final _wire_list_of_primitive_enums_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_weekdays_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_list_of_primitive_enums_twin_normal');
  late final _wire_list_of_primitive_enums_twin_normal =
      _wire_list_of_primitive_enums_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_weekdays_twin_normal>)>();

  void wire_test_abc_enum_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_abc_twin_normal> abc,
  ) {
    return _wire_test_abc_enum_twin_normal(
      port_,
      abc,
    );
  }

  late final _wire_test_abc_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_abc_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_test_abc_enum_twin_normal');
  late final _wire_test_abc_enum_twin_normal =
      _wire_test_abc_enum_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_abc_twin_normal>)>();

  void wire_test_struct_with_enum_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_struct_with_enum_twin_normal> se,
  ) {
    return _wire_test_struct_with_enum_twin_normal(
      port_,
      se,
    );
  }

  late final _wire_test_struct_with_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_struct_with_enum_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_test_struct_with_enum_twin_normal');
  late final _wire_test_struct_with_enum_twin_normal =
      _wire_test_struct_with_enum_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_struct_with_enum_twin_normal>)>();

  void wire_StructInMiscNoTwinExampleA_sample_function_a(
    int port_,
    int that,
  ) {
    return _wire_StructInMiscNoTwinExampleA_sample_function_a(
      port_,
      that,
    );
  }

  late final _wire_StructInMiscNoTwinExampleA_sample_function_aPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_StructInMiscNoTwinExampleA_sample_function_a');
  late final _wire_StructInMiscNoTwinExampleA_sample_function_a =
      _wire_StructInMiscNoTwinExampleA_sample_function_aPtr
          .asFunction<void Function(int, int)>();

  void wire_StructWithImplBlockInMultiFile_method_in_a(
    int port_,
    int that,
  ) {
    return _wire_StructWithImplBlockInMultiFile_method_in_a(
      port_,
      that,
    );
  }

  late final _wire_StructWithImplBlockInMultiFile_method_in_aPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_StructWithImplBlockInMultiFile_method_in_a');
  late final _wire_StructWithImplBlockInMultiFile_method_in_a =
      _wire_StructWithImplBlockInMultiFile_method_in_aPtr
          .asFunction<void Function(int, int)>();

  void wire_StructInMiscNoTwinExampleB_get_struct_in_misc_no_twin_example_a(
    int port_,
    int that,
  ) {
    return _wire_StructInMiscNoTwinExampleB_get_struct_in_misc_no_twin_example_a(
      port_,
      that,
    );
  }

  late final _wire_StructInMiscNoTwinExampleB_get_struct_in_misc_no_twin_example_aPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_StructInMiscNoTwinExampleB_get_struct_in_misc_no_twin_example_a');
  late final _wire_StructInMiscNoTwinExampleB_get_struct_in_misc_no_twin_example_a =
      _wire_StructInMiscNoTwinExampleB_get_struct_in_misc_no_twin_example_aPtr
          .asFunction<void Function(int, int)>();

  void wire_StructInMiscNoTwinExampleB_sample_function_b(
    int port_,
    int that,
  ) {
    return _wire_StructInMiscNoTwinExampleB_sample_function_b(
      port_,
      that,
    );
  }

  late final _wire_StructInMiscNoTwinExampleB_sample_function_bPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_StructInMiscNoTwinExampleB_sample_function_b');
  late final _wire_StructInMiscNoTwinExampleB_sample_function_b =
      _wire_StructInMiscNoTwinExampleB_sample_function_bPtr
          .asFunction<void Function(int, int)>();

  void wire_StructWithImplBlockInMultiFile_method_in_b(
    int port_,
    int that,
  ) {
    return _wire_StructWithImplBlockInMultiFile_method_in_b(
      port_,
      that,
    );
  }

  late final _wire_StructWithImplBlockInMultiFile_method_in_bPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_StructWithImplBlockInMultiFile_method_in_b');
  late final _wire_StructWithImplBlockInMultiFile_method_in_b =
      _wire_StructWithImplBlockInMultiFile_method_in_bPtr
          .asFunction<void Function(int, int)>();

  void wire_empty_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_empty_twin_normal> empty,
  ) {
    return _wire_empty_struct_twin_normal(
      port_,
      empty,
    );
  }

  late final _wire_empty_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_empty_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_empty_struct_twin_normal');
  late final _wire_empty_struct_twin_normal =
      _wire_empty_struct_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_empty_twin_normal>)>();

  void wire_func_return_unit_twin_normal(
    int port_,
  ) {
    return _wire_func_return_unit_twin_normal(
      port_,
    );
  }

  late final _wire_func_return_unit_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_func_return_unit_twin_normal');
  late final _wire_func_return_unit_twin_normal =
      _wire_func_return_unit_twin_normalPtr.asFunction<void Function(int)>();

  void wire_handle_list_of_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_my_size> l,
  ) {
    return _wire_handle_list_of_struct_twin_normal(
      port_,
      l,
    );
  }

  late final _wire_handle_list_of_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_list_of_struct_twin_normal');
  late final _wire_handle_list_of_struct_twin_normal =
      _wire_handle_list_of_struct_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_my_size>)>();

  void wire_handle_string_list_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_String> names,
  ) {
    return _wire_handle_string_list_twin_normal(
      port_,
      names,
    );
  }

  late final _wire_handle_string_list_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_list_twin_normal');
  late final _wire_handle_string_list_twin_normal =
      _wire_handle_string_list_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_String>)>();

  void wire_handle_newtype_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_new_type_int_twin_normal> arg,
  ) {
    return _wire_handle_newtype_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_handle_newtype_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_new_type_int_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_newtype_twin_normal');
  late final _wire_handle_newtype_twin_normal =
      _wire_handle_newtype_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_new_type_int_twin_normal>)>();

  void wire_handle_increment_boxed_optional_twin_normal(
    int port_,
    ffi.Pointer<ffi.Double> opt,
  ) {
    return _wire_handle_increment_boxed_optional_twin_normal(
      port_,
      opt,
    );
  }

  late final _wire_handle_increment_boxed_optional_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Double>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_increment_boxed_optional_twin_normal');
  late final _wire_handle_increment_boxed_optional_twin_normal =
      _wire_handle_increment_boxed_optional_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Double>)>();

  void wire_handle_option_box_arguments_twin_normal(
    int port_,
    ffi.Pointer<ffi.Int8> i8box,
    ffi.Pointer<ffi.Uint8> u8box,
    ffi.Pointer<ffi.Int32> i32box,
    ffi.Pointer<ffi.Int64> i64box,
    ffi.Pointer<ffi.Double> f64box,
    ffi.Pointer<ffi.Bool> boolbox,
    ffi.Pointer<wire_cst_exotic_optionals_twin_normal> structbox,
  ) {
    return _wire_handle_option_box_arguments_twin_normal(
      port_,
      i8box,
      u8box,
      i32box,
      i64box,
      f64box,
      boolbox,
      structbox,
    );
  }

  late final _wire_handle_option_box_arguments_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<ffi.Int8>,
                  ffi.Pointer<ffi.Uint8>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int64>,
                  ffi.Pointer<ffi.Double>,
                  ffi.Pointer<ffi.Bool>,
                  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_option_box_arguments_twin_normal');
  late final _wire_handle_option_box_arguments_twin_normal =
      _wire_handle_option_box_arguments_twin_normalPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<ffi.Int8>,
              ffi.Pointer<ffi.Uint8>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<ffi.Int64>,
              ffi.Pointer<ffi.Double>,
              ffi.Pointer<ffi.Bool>,
              ffi.Pointer<wire_cst_exotic_optionals_twin_normal>)>();

  void wire_handle_optional_increment_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_exotic_optionals_twin_normal> opt,
  ) {
    return _wire_handle_optional_increment_twin_normal(
      port_,
      opt,
    );
  }

  late final _wire_handle_optional_increment_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_increment_twin_normal');
  late final _wire_handle_optional_increment_twin_normal =
      _wire_handle_optional_increment_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_exotic_optionals_twin_normal>)>();

  void wire_handle_optional_return_twin_normal(
    int port_,
    double left,
    double right,
  ) {
    return _wire_handle_optional_return_twin_normal(
      port_,
      left,
      right,
    );
  }

  late final _wire_handle_optional_return_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Double, ffi.Double)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_return_twin_normal');
  late final _wire_handle_optional_return_twin_normal =
      _wire_handle_optional_return_twin_normalPtr
          .asFunction<void Function(int, double, double)>();

  void wire_handle_optional_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> document,
  ) {
    return _wire_handle_optional_struct_twin_normal(
      port_,
      document,
    );
  }

  late final _wire_handle_optional_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_struct_twin_normal');
  late final _wire_handle_optional_struct_twin_normal =
      _wire_handle_optional_struct_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_handle_vec_of_opts_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_opt_vecs_twin_normal> opt,
  ) {
    return _wire_handle_vec_of_opts_twin_normal(
      port_,
      opt,
    );
  }

  late final _wire_handle_vec_of_opts_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_opt_vecs_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_opts_twin_normal');
  late final _wire_handle_vec_of_opts_twin_normal =
      _wire_handle_vec_of_opts_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_opt_vecs_twin_normal>)>();

  void wire_primitive_optional_types_twin_normal(
    int port_,
    ffi.Pointer<ffi.Int32> my_i32,
    ffi.Pointer<ffi.Int64> my_i64,
    ffi.Pointer<ffi.Double> my_f64,
    ffi.Pointer<ffi.Bool> my_bool,
  ) {
    return _wire_primitive_optional_types_twin_normal(
      port_,
      my_i32,
      my_i64,
      my_f64,
      my_bool,
    );
  }

  late final _wire_primitive_optional_types_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int64>,
                  ffi.Pointer<ffi.Double>,
                  ffi.Pointer<ffi.Bool>)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_optional_types_twin_normal');
  late final _wire_primitive_optional_types_twin_normal =
      _wire_primitive_optional_types_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Int32>, ffi.Pointer<ffi.Int64>,
              ffi.Pointer<ffi.Double>, ffi.Pointer<ffi.Bool>)>();

  void wire_handle_vec_of_primitive_twin_normal(
    int port_,
    int n,
  ) {
    return _wire_handle_vec_of_primitive_twin_normal(
      port_,
      n,
    );
  }

  late final _wire_handle_vec_of_primitive_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_primitive_twin_normal');
  late final _wire_handle_vec_of_primitive_twin_normal =
      _wire_handle_vec_of_primitive_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_primitive_types_twin_normal(
    int port_,
    int my_i32,
    int my_i64,
    double my_f64,
    bool my_bool,
  ) {
    return _wire_primitive_types_twin_normal(
      port_,
      my_i32,
      my_i64,
      my_f64,
      my_bool,
    );
  }

  late final _wire_primitive_types_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Int32, ffi.Int64, ffi.Double, ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_types_twin_normal');
  late final _wire_primitive_types_twin_normal =
      _wire_primitive_types_twin_normalPtr
          .asFunction<void Function(int, int, int, double, bool)>();

  void wire_primitive_u32_twin_normal(
    int port_,
    int my_u32,
  ) {
    return _wire_primitive_u32_twin_normal(
      port_,
      my_u32,
    );
  }

  late final _wire_primitive_u32_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_primitive_u32_twin_normal');
  late final _wire_primitive_u32_twin_normal =
      _wire_primitive_u32_twin_normalPtr.asFunction<void Function(int, int)>();

  void wire_boxed_blob_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> blob,
  ) {
    return _wire_boxed_blob_twin_rust_async(
      port_,
      blob,
    );
  }

  late final _wire_boxed_blob_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_boxed_blob_twin_rust_async');
  late final _wire_boxed_blob_twin_rust_async =
      _wire_boxed_blob_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_func_test_id_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_test_id_twin_rust_async> id,
  ) {
    return _wire_func_test_id_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_func_test_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_test_id_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_test_id_twin_rust_async');
  late final _wire_func_test_id_twin_rust_async =
      _wire_func_test_id_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_test_id_twin_rust_async>)>();

  void wire_get_array_twin_rust_async(
    int port_,
  ) {
    return _wire_get_array_twin_rust_async(
      port_,
    );
  }

  late final _wire_get_array_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_array_twin_rust_async');
  late final _wire_get_array_twin_rust_async =
      _wire_get_array_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_get_complex_array_twin_rust_async(
    int port_,
  ) {
    return _wire_get_complex_array_twin_rust_async(
      port_,
    );
  }

  late final _wire_get_complex_array_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_get_complex_array_twin_rust_async');
  late final _wire_get_complex_array_twin_rust_async =
      _wire_get_complex_array_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_last_number_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> array,
  ) {
    return _wire_last_number_twin_rust_async(
      port_,
      array,
    );
  }

  late final _wire_last_number_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_f_64_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_last_number_twin_rust_async');
  late final _wire_last_number_twin_rust_async =
      _wire_last_number_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_f_64_strict>)>();

  void wire_nested_id_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_test_id_twin_rust_async> id,
  ) {
    return _wire_nested_id_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_nested_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_test_id_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_nested_id_twin_rust_async');
  late final _wire_nested_id_twin_rust_async =
      _wire_nested_id_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_test_id_twin_rust_async>)>();

  void wire_new_msgid_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
  ) {
    return _wire_new_msgid_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_new_msgid_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_new_msgid_twin_rust_async');
  late final _wire_new_msgid_twin_rust_async =
      _wire_new_msgid_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_return_boxed_feed_id_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
  ) {
    return _wire_return_boxed_feed_id_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_return_boxed_feed_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_feed_id_twin_rust_async');
  late final _wire_return_boxed_feed_id_twin_rust_async =
      _wire_return_boxed_feed_id_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_return_boxed_raw_feed_id_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_feed_id_twin_rust_async> id,
  ) {
    return _wire_return_boxed_raw_feed_id_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_return_boxed_raw_feed_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_feed_id_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_raw_feed_id_twin_rust_async');
  late final _wire_return_boxed_raw_feed_id_twin_rust_async =
      _wire_return_boxed_raw_feed_id_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_feed_id_twin_rust_async>)>();

  void wire_use_boxed_blob_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_blob_twin_rust_async> blob,
  ) {
    return _wire_use_boxed_blob_twin_rust_async(
      port_,
      blob,
    );
  }

  late final _wire_use_boxed_blob_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_blob_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_use_boxed_blob_twin_rust_async');
  late final _wire_use_boxed_blob_twin_rust_async =
      _wire_use_boxed_blob_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_blob_twin_rust_async>)>();

  void wire_use_msgid_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_message_id_twin_rust_async> id,
  ) {
    return _wire_use_msgid_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_use_msgid_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_message_id_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_use_msgid_twin_rust_async');
  late final _wire_use_msgid_twin_rust_async =
      _wire_use_msgid_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_message_id_twin_rust_async>)>();

  void wire_boxed_blob_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_boxed_blob_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_boxed_blob_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_boxed_blob_twin_rust_async_sse');
  late final _wire_boxed_blob_twin_rust_async_sse =
      _wire_boxed_blob_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_test_id_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_test_id_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_test_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_test_id_twin_rust_async_sse');
  late final _wire_func_test_id_twin_rust_async_sse =
      _wire_func_test_id_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_array_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_array_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_array_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_array_twin_rust_async_sse');
  late final _wire_get_array_twin_rust_async_sse =
      _wire_get_array_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_complex_array_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_complex_array_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_complex_array_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_complex_array_twin_rust_async_sse');
  late final _wire_get_complex_array_twin_rust_async_sse =
      _wire_get_complex_array_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_last_number_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_last_number_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_last_number_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_last_number_twin_rust_async_sse');
  late final _wire_last_number_twin_rust_async_sse =
      _wire_last_number_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_nested_id_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_nested_id_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_nested_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_nested_id_twin_rust_async_sse');
  late final _wire_nested_id_twin_rust_async_sse =
      _wire_nested_id_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_new_msgid_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_new_msgid_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_new_msgid_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_new_msgid_twin_rust_async_sse');
  late final _wire_new_msgid_twin_rust_async_sse =
      _wire_new_msgid_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_boxed_feed_id_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_boxed_feed_id_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_boxed_feed_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_feed_id_twin_rust_async_sse');
  late final _wire_return_boxed_feed_id_twin_rust_async_sse =
      _wire_return_boxed_feed_id_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_boxed_raw_feed_id_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_boxed_raw_feed_id_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_boxed_raw_feed_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_raw_feed_id_twin_rust_async_sse');
  late final _wire_return_boxed_raw_feed_id_twin_rust_async_sse =
      _wire_return_boxed_raw_feed_id_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_boxed_blob_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_boxed_blob_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_boxed_blob_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_boxed_blob_twin_rust_async_sse');
  late final _wire_use_boxed_blob_twin_rust_async_sse =
      _wire_use_boxed_blob_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_msgid_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_msgid_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_msgid_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_msgid_twin_rust_async_sse');
  late final _wire_use_msgid_twin_rust_async_sse =
      _wire_use_msgid_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_boxed_blob_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_boxed_blob_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_boxed_blob_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_boxed_blob_twin_sse');
  late final _wire_boxed_blob_twin_sse = _wire_boxed_blob_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_test_id_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_test_id_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_test_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_test_id_twin_sse');
  late final _wire_func_test_id_twin_sse = _wire_func_test_id_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_array_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_array_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_array_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_array_twin_sse');
  late final _wire_get_array_twin_sse = _wire_get_array_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_complex_array_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_complex_array_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_complex_array_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_complex_array_twin_sse');
  late final _wire_get_complex_array_twin_sse =
      _wire_get_complex_array_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_last_number_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_last_number_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_last_number_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_last_number_twin_sse');
  late final _wire_last_number_twin_sse = _wire_last_number_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_nested_id_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_nested_id_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_nested_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_nested_id_twin_sse');
  late final _wire_nested_id_twin_sse = _wire_nested_id_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_new_msgid_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_new_msgid_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_new_msgid_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_new_msgid_twin_sse');
  late final _wire_new_msgid_twin_sse = _wire_new_msgid_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_boxed_feed_id_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_boxed_feed_id_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_boxed_feed_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_feed_id_twin_sse');
  late final _wire_return_boxed_feed_id_twin_sse =
      _wire_return_boxed_feed_id_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_boxed_raw_feed_id_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_boxed_raw_feed_id_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_boxed_raw_feed_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_raw_feed_id_twin_sse');
  late final _wire_return_boxed_raw_feed_id_twin_sse =
      _wire_return_boxed_raw_feed_id_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_boxed_blob_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_boxed_blob_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_boxed_blob_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_boxed_blob_twin_sse');
  late final _wire_use_boxed_blob_twin_sse = _wire_use_boxed_blob_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_msgid_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_msgid_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_msgid_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_msgid_twin_sse');
  late final _wire_use_msgid_twin_sse = _wire_use_msgid_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_boxed_blob_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> blob,
  ) {
    return _wire_boxed_blob_twin_sync(
      blob,
    );
  }

  late final _wire_boxed_blob_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_boxed_blob_twin_sync');
  late final _wire_boxed_blob_twin_sync =
      _wire_boxed_blob_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_func_test_id_twin_sync(
    ffi.Pointer<wire_cst_test_id_twin_sync> id,
  ) {
    return _wire_func_test_id_twin_sync(
      id,
    );
  }

  late final _wire_func_test_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_test_id_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_test_id_twin_sync');
  late final _wire_func_test_id_twin_sync =
      _wire_func_test_id_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_test_id_twin_sync>)>();

  WireSyncRust2DartDco wire_get_array_twin_sync() {
    return _wire_get_array_twin_sync();
  }

  late final _wire_get_array_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_get_array_twin_sync');
  late final _wire_get_array_twin_sync = _wire_get_array_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_get_complex_array_twin_sync() {
    return _wire_get_complex_array_twin_sync();
  }

  late final _wire_get_complex_array_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_get_complex_array_twin_sync');
  late final _wire_get_complex_array_twin_sync =
      _wire_get_complex_array_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_last_number_twin_sync(
    ffi.Pointer<wire_cst_list_prim_f_64_strict> array,
  ) {
    return _wire_last_number_twin_sync(
      array,
    );
  }

  late final _wire_last_number_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_f_64_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_last_number_twin_sync');
  late final _wire_last_number_twin_sync =
      _wire_last_number_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_f_64_strict>)>();

  WireSyncRust2DartDco wire_nested_id_twin_sync(
    ffi.Pointer<wire_cst_list_test_id_twin_sync> id,
  ) {
    return _wire_nested_id_twin_sync(
      id,
    );
  }

  late final _wire_nested_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_test_id_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_nested_id_twin_sync');
  late final _wire_nested_id_twin_sync =
      _wire_nested_id_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_test_id_twin_sync>)>();

  WireSyncRust2DartDco wire_new_msgid_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
  ) {
    return _wire_new_msgid_twin_sync(
      id,
    );
  }

  late final _wire_new_msgid_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_new_msgid_twin_sync');
  late final _wire_new_msgid_twin_sync =
      _wire_new_msgid_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_return_boxed_feed_id_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
  ) {
    return _wire_return_boxed_feed_id_twin_sync(
      id,
    );
  }

  late final _wire_return_boxed_feed_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_feed_id_twin_sync');
  late final _wire_return_boxed_feed_id_twin_sync =
      _wire_return_boxed_feed_id_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_return_boxed_raw_feed_id_twin_sync(
    ffi.Pointer<wire_cst_feed_id_twin_sync> id,
  ) {
    return _wire_return_boxed_raw_feed_id_twin_sync(
      id,
    );
  }

  late final _wire_return_boxed_raw_feed_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_feed_id_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_raw_feed_id_twin_sync');
  late final _wire_return_boxed_raw_feed_id_twin_sync =
      _wire_return_boxed_raw_feed_id_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_feed_id_twin_sync>)>();

  WireSyncRust2DartDco wire_use_boxed_blob_twin_sync(
    ffi.Pointer<wire_cst_blob_twin_sync> blob,
  ) {
    return _wire_use_boxed_blob_twin_sync(
      blob,
    );
  }

  late final _wire_use_boxed_blob_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_blob_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_use_boxed_blob_twin_sync');
  late final _wire_use_boxed_blob_twin_sync =
      _wire_use_boxed_blob_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_blob_twin_sync>)>();

  WireSyncRust2DartDco wire_use_msgid_twin_sync(
    ffi.Pointer<wire_cst_message_id_twin_sync> id,
  ) {
    return _wire_use_msgid_twin_sync(
      id,
    );
  }

  late final _wire_use_msgid_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_message_id_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_use_msgid_twin_sync');
  late final _wire_use_msgid_twin_sync =
      _wire_use_msgid_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_message_id_twin_sync>)>();

  WireSyncRust2DartSse wire_boxed_blob_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_boxed_blob_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_boxed_blob_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_boxed_blob_twin_sync_sse');
  late final _wire_boxed_blob_twin_sync_sse =
      _wire_boxed_blob_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_test_id_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_test_id_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_test_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_test_id_twin_sync_sse');
  late final _wire_func_test_id_twin_sync_sse =
      _wire_func_test_id_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_array_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_array_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_array_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_array_twin_sync_sse');
  late final _wire_get_array_twin_sync_sse =
      _wire_get_array_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_complex_array_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_complex_array_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_complex_array_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_complex_array_twin_sync_sse');
  late final _wire_get_complex_array_twin_sync_sse =
      _wire_get_complex_array_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_last_number_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_last_number_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_last_number_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_last_number_twin_sync_sse');
  late final _wire_last_number_twin_sync_sse =
      _wire_last_number_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_nested_id_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_nested_id_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_nested_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_nested_id_twin_sync_sse');
  late final _wire_nested_id_twin_sync_sse =
      _wire_nested_id_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_new_msgid_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_new_msgid_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_new_msgid_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_new_msgid_twin_sync_sse');
  late final _wire_new_msgid_twin_sync_sse =
      _wire_new_msgid_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_boxed_feed_id_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_boxed_feed_id_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_boxed_feed_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_feed_id_twin_sync_sse');
  late final _wire_return_boxed_feed_id_twin_sync_sse =
      _wire_return_boxed_feed_id_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_boxed_raw_feed_id_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_boxed_raw_feed_id_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_boxed_raw_feed_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_raw_feed_id_twin_sync_sse');
  late final _wire_return_boxed_raw_feed_id_twin_sync_sse =
      _wire_return_boxed_raw_feed_id_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_use_boxed_blob_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_boxed_blob_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_boxed_blob_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_boxed_blob_twin_sync_sse');
  late final _wire_use_boxed_blob_twin_sync_sse =
      _wire_use_boxed_blob_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_use_msgid_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_msgid_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_msgid_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_msgid_twin_sync_sse');
  late final _wire_use_msgid_twin_sync_sse =
      _wire_use_msgid_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_async_simple_add_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_async_simple_add_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_async_simple_add_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_async_simple_add_twin_sse');
  late final _wire_func_async_simple_add_twin_sse =
      _wire_func_async_simple_add_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_async_void_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_async_void_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_async_void_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_async_void_twin_sse');
  late final _wire_func_async_void_twin_sse = _wire_func_async_void_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_customized_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_customized_twin_rust_async> val,
  ) {
    return _wire_handle_customized_struct_twin_rust_async(
      port_,
      val,
    );
  }

  late final _wire_handle_customized_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_customized_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_customized_struct_twin_rust_async');
  late final _wire_handle_customized_struct_twin_rust_async =
      _wire_handle_customized_struct_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_customized_twin_rust_async>)>();

  void wire_next_user_id_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_user_id_twin_rust_async> user_id,
  ) {
    return _wire_next_user_id_twin_rust_async(
      port_,
      user_id,
    );
  }

  late final _wire_next_user_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_user_id_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_next_user_id_twin_rust_async');
  late final _wire_next_user_id_twin_rust_async =
      _wire_next_user_id_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_user_id_twin_rust_async>)>();

  void wire_handle_customized_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_customized_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_customized_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_customized_struct_twin_rust_async_sse');
  late final _wire_handle_customized_struct_twin_rust_async_sse =
      _wire_handle_customized_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_next_user_id_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_next_user_id_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_next_user_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_next_user_id_twin_rust_async_sse');
  late final _wire_next_user_id_twin_rust_async_sse =
      _wire_next_user_id_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_customized_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_customized_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_customized_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_customized_struct_twin_sse');
  late final _wire_handle_customized_struct_twin_sse =
      _wire_handle_customized_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_next_user_id_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_next_user_id_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_next_user_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_next_user_id_twin_sse');
  late final _wire_next_user_id_twin_sse = _wire_next_user_id_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_handle_customized_struct_twin_sync(
    ffi.Pointer<wire_cst_customized_twin_sync> val,
  ) {
    return _wire_handle_customized_struct_twin_sync(
      val,
    );
  }

  late final _wire_handle_customized_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_customized_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_customized_struct_twin_sync');
  late final _wire_handle_customized_struct_twin_sync =
      _wire_handle_customized_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_customized_twin_sync>)>();

  WireSyncRust2DartDco wire_next_user_id_twin_sync(
    ffi.Pointer<wire_cst_user_id_twin_sync> user_id,
  ) {
    return _wire_next_user_id_twin_sync(
      user_id,
    );
  }

  late final _wire_next_user_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_user_id_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_next_user_id_twin_sync');
  late final _wire_next_user_id_twin_sync =
      _wire_next_user_id_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_user_id_twin_sync>)>();

  WireSyncRust2DartSse wire_handle_customized_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_customized_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_customized_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_customized_struct_twin_sync_sse');
  late final _wire_handle_customized_struct_twin_sync_sse =
      _wire_handle_customized_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_next_user_id_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_next_user_id_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_next_user_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_next_user_id_twin_sync_sse');
  late final _wire_next_user_id_twin_sync_sse =
      _wire_next_user_id_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_basic_general_enum_twin_normal_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_basic_general_enum_twin_normal> arg,
  ) {
    return _wire_example_basic_type_basic_general_enum_twin_normal_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_basic_general_enum_twin_normal_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_basic_general_enum_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_general_enum_twin_normal_twin_normal');
  late final _wire_example_basic_type_basic_general_enum_twin_normal_twin_normal =
      _wire_example_basic_type_basic_general_enum_twin_normal_twin_normalPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_basic_general_enum_twin_normal>)>();

  void wire_example_basic_type_basic_primitive_enum_twin_normal_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_basic_primitive_enum_twin_normal_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_basic_primitive_enum_twin_normal_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_primitive_enum_twin_normal_twin_normal');
  late final _wire_example_basic_type_basic_primitive_enum_twin_normal_twin_normal =
      _wire_example_basic_type_basic_primitive_enum_twin_normal_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_basic_struct_twin_normal_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_basic_struct_twin_normal> arg,
  ) {
    return _wire_example_basic_type_basic_struct_twin_normal_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_basic_struct_twin_normal_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_basic_struct_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_struct_twin_normal_twin_normal');
  late final _wire_example_basic_type_basic_struct_twin_normal_twin_normal =
      _wire_example_basic_type_basic_struct_twin_normal_twin_normalPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_basic_struct_twin_normal>)>();

  void wire_example_basic_type_bool_twin_normal(
    int port_,
    bool arg,
  ) {
    return _wire_example_basic_type_bool_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_bool_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_bool_twin_normal');
  late final _wire_example_basic_type_bool_twin_normal =
      _wire_example_basic_type_bool_twin_normalPtr
          .asFunction<void Function(int, bool)>();

  void wire_example_basic_type_bytes_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> arg,
  ) {
    return _wire_example_basic_type_bytes_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_bytes_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_bytes_twin_normal');
  late final _wire_example_basic_type_bytes_twin_normal =
      _wire_example_basic_type_bytes_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void wire_example_basic_type_f32_twin_normal(
    int port_,
    double arg,
  ) {
    return _wire_example_basic_type_f32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_f32_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Float)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_f32_twin_normal');
  late final _wire_example_basic_type_f32_twin_normal =
      _wire_example_basic_type_f32_twin_normalPtr
          .asFunction<void Function(int, double)>();

  void wire_example_basic_type_f64_twin_normal(
    int port_,
    double arg,
  ) {
    return _wire_example_basic_type_f64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_f64_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Double)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_f64_twin_normal');
  late final _wire_example_basic_type_f64_twin_normal =
      _wire_example_basic_type_f64_twin_normalPtr
          .asFunction<void Function(int, double)>();

  void wire_example_basic_type_i16_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_i16_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_i16_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int16)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i16_twin_normal');
  late final _wire_example_basic_type_i16_twin_normal =
      _wire_example_basic_type_i16_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_i32_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_i32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_i32_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i32_twin_normal');
  late final _wire_example_basic_type_i32_twin_normal =
      _wire_example_basic_type_i32_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_i64_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_i64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_i64_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i64_twin_normal');
  late final _wire_example_basic_type_i64_twin_normal =
      _wire_example_basic_type_i64_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_i8_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_i8_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_i8_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int8)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i8_twin_normal');
  late final _wire_example_basic_type_i8_twin_normal =
      _wire_example_basic_type_i8_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_isize_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_isize_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_isize_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.IntPtr)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_isize_twin_normal');
  late final _wire_example_basic_type_isize_twin_normal =
      _wire_example_basic_type_isize_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_string_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> arg,
  ) {
    return _wire_example_basic_type_string_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_string_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_string_twin_normal');
  late final _wire_example_basic_type_string_twin_normal =
      _wire_example_basic_type_string_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_example_basic_type_u16_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_u16_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_u16_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint16)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u16_twin_normal');
  late final _wire_example_basic_type_u16_twin_normal =
      _wire_example_basic_type_u16_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_u32_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_u32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_u32_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u32_twin_normal');
  late final _wire_example_basic_type_u32_twin_normal =
      _wire_example_basic_type_u32_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_u64_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_u64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_u64_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u64_twin_normal');
  late final _wire_example_basic_type_u64_twin_normal =
      _wire_example_basic_type_u64_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_u8_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_u8_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_u8_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint8)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u8_twin_normal');
  late final _wire_example_basic_type_u8_twin_normal =
      _wire_example_basic_type_u8_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_usize_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_usize_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_usize_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_usize_twin_normal');
  late final _wire_example_basic_type_usize_twin_normal =
      _wire_example_basic_type_usize_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_list_type_basic_general_enum_twin_normal_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_basic_general_enum_twin_normal> arg,
  ) {
    return _wire_example_basic_list_type_basic_general_enum_twin_normal_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_basic_general_enum_twin_normal_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_list_basic_general_enum_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_general_enum_twin_normal_twin_normal');
  late final _wire_example_basic_list_type_basic_general_enum_twin_normal_twin_normal =
      _wire_example_basic_list_type_basic_general_enum_twin_normal_twin_normalPtr
          .asFunction<
              void Function(int,
                  ffi.Pointer<wire_cst_list_basic_general_enum_twin_normal>)>();

  void
      wire_example_basic_list_type_basic_primitive_enum_twin_normal_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_normal> arg,
  ) {
    return _wire_example_basic_list_type_basic_primitive_enum_twin_normal_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_basic_primitive_enum_twin_normal_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_list_basic_primitive_enum_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_primitive_enum_twin_normal_twin_normal');
  late final _wire_example_basic_list_type_basic_primitive_enum_twin_normal_twin_normal =
      _wire_example_basic_list_type_basic_primitive_enum_twin_normal_twin_normalPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_list_basic_primitive_enum_twin_normal>)>();

  void wire_example_basic_list_type_basic_struct_twin_normal_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_basic_struct_twin_normal> arg,
  ) {
    return _wire_example_basic_list_type_basic_struct_twin_normal_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_basic_struct_twin_normal_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_list_basic_struct_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_struct_twin_normal_twin_normal');
  late final _wire_example_basic_list_type_basic_struct_twin_normal_twin_normal =
      _wire_example_basic_list_type_basic_struct_twin_normal_twin_normalPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_list_basic_struct_twin_normal>)>();

  void wire_example_basic_list_type_bool_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_bool> arg,
  ) {
    return _wire_example_basic_list_type_bool_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_bool_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_bool>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_bool_twin_normal');
  late final _wire_example_basic_list_type_bool_twin_normal =
      _wire_example_basic_list_type_bool_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_bool>)>();

  void wire_example_basic_list_type_bytes_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_list_prim_u_8_strict> arg,
  ) {
    return _wire_example_basic_list_type_bytes_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_bytes_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_bytes_twin_normal');
  late final _wire_example_basic_list_type_bytes_twin_normal =
      _wire_example_basic_list_type_bytes_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_list_prim_u_8_strict>)>();

  void wire_example_basic_list_type_f32_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_f_32_loose> arg,
  ) {
    return _wire_example_basic_list_type_f32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_f32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_f_32_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_f32_twin_normal');
  late final _wire_example_basic_list_type_f32_twin_normal =
      _wire_example_basic_list_type_f32_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_f_32_loose>)>();

  void wire_example_basic_list_type_f64_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_f_64_loose> arg,
  ) {
    return _wire_example_basic_list_type_f64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_f64_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_f_64_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_f64_twin_normal');
  late final _wire_example_basic_list_type_f64_twin_normal =
      _wire_example_basic_list_type_f64_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_f_64_loose>)>();

  void wire_example_basic_list_type_i16_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_16_loose> arg,
  ) {
    return _wire_example_basic_list_type_i16_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_i16_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_16_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i16_twin_normal');
  late final _wire_example_basic_list_type_i16_twin_normal =
      _wire_example_basic_list_type_i16_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_16_loose>)>();

  void wire_example_basic_list_type_i32_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_32_loose> arg,
  ) {
    return _wire_example_basic_list_type_i32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_i32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_32_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i32_twin_normal');
  late final _wire_example_basic_list_type_i32_twin_normal =
      _wire_example_basic_list_type_i32_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_32_loose>)>();

  void wire_example_basic_list_type_i64_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_64_strict> arg,
  ) {
    return _wire_example_basic_list_type_i64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_i64_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_64_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i64_twin_normal');
  late final _wire_example_basic_list_type_i64_twin_normal =
      _wire_example_basic_list_type_i64_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_64_strict>)>();

  void wire_example_basic_list_type_i8_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_8_loose> arg,
  ) {
    return _wire_example_basic_list_type_i8_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_i8_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i8_twin_normal');
  late final _wire_example_basic_list_type_i8_twin_normal =
      _wire_example_basic_list_type_i8_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_8_loose>)>();

  void wire_example_basic_list_type_string_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_String> arg,
  ) {
    return _wire_example_basic_list_type_string_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_string_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_string_twin_normal');
  late final _wire_example_basic_list_type_string_twin_normal =
      _wire_example_basic_list_type_string_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_String>)>();

  void wire_example_basic_list_type_u16_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_16_loose> arg,
  ) {
    return _wire_example_basic_list_type_u16_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_u16_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_16_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u16_twin_normal');
  late final _wire_example_basic_list_type_u16_twin_normal =
      _wire_example_basic_list_type_u16_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_16_loose>)>();

  void wire_example_basic_list_type_u32_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_32_loose> arg,
  ) {
    return _wire_example_basic_list_type_u32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_u32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_32_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u32_twin_normal');
  late final _wire_example_basic_list_type_u32_twin_normal =
      _wire_example_basic_list_type_u32_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_32_loose>)>();

  void wire_example_basic_list_type_u64_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_64_strict> arg,
  ) {
    return _wire_example_basic_list_type_u64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_u64_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_64_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u64_twin_normal');
  late final _wire_example_basic_list_type_u64_twin_normal =
      _wire_example_basic_list_type_u64_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_64_strict>)>();

  void wire_example_basic_list_type_u8_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> arg,
  ) {
    return _wire_example_basic_list_type_u8_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_u8_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u8_twin_normal');
  late final _wire_example_basic_list_type_u8_twin_normal =
      _wire_example_basic_list_type_u8_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void
      wire_example_basic_list_type_basic_general_enum_twin_rust_async_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_basic_general_enum_twin_rust_async> arg,
  ) {
    return _wire_example_basic_list_type_basic_general_enum_twin_rust_async_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_basic_general_enum_twin_rust_async_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_list_basic_general_enum_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_general_enum_twin_rust_async_twin_rust_async');
  late final _wire_example_basic_list_type_basic_general_enum_twin_rust_async_twin_rust_async =
      _wire_example_basic_list_type_basic_general_enum_twin_rust_async_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_list_basic_general_enum_twin_rust_async>)>();

  void
      wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_rust_async> arg,
  ) {
    return _wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_list_basic_primitive_enum_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_twin_rust_async');
  late final _wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_twin_rust_async =
      _wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_list_basic_primitive_enum_twin_rust_async>)>();

  void
      wire_example_basic_list_type_basic_struct_twin_rust_async_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_basic_struct_twin_rust_async> arg,
  ) {
    return _wire_example_basic_list_type_basic_struct_twin_rust_async_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_basic_struct_twin_rust_async_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_list_basic_struct_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_struct_twin_rust_async_twin_rust_async');
  late final _wire_example_basic_list_type_basic_struct_twin_rust_async_twin_rust_async =
      _wire_example_basic_list_type_basic_struct_twin_rust_async_twin_rust_asyncPtr
          .asFunction<
              void Function(int,
                  ffi.Pointer<wire_cst_list_basic_struct_twin_rust_async>)>();

  void wire_example_basic_list_type_bool_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_bool> arg,
  ) {
    return _wire_example_basic_list_type_bool_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_bool_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_bool>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_bool_twin_rust_async');
  late final _wire_example_basic_list_type_bool_twin_rust_async =
      _wire_example_basic_list_type_bool_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_bool>)>();

  void wire_example_basic_list_type_bytes_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_list_prim_u_8_strict> arg,
  ) {
    return _wire_example_basic_list_type_bytes_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_bytes_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_bytes_twin_rust_async');
  late final _wire_example_basic_list_type_bytes_twin_rust_async =
      _wire_example_basic_list_type_bytes_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_list_prim_u_8_strict>)>();

  void wire_example_basic_list_type_f32_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_f_32_loose> arg,
  ) {
    return _wire_example_basic_list_type_f32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_f32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_f_32_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_f32_twin_rust_async');
  late final _wire_example_basic_list_type_f32_twin_rust_async =
      _wire_example_basic_list_type_f32_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_f_32_loose>)>();

  void wire_example_basic_list_type_f64_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_f_64_loose> arg,
  ) {
    return _wire_example_basic_list_type_f64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_f64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_f_64_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_f64_twin_rust_async');
  late final _wire_example_basic_list_type_f64_twin_rust_async =
      _wire_example_basic_list_type_f64_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_f_64_loose>)>();

  void wire_example_basic_list_type_i16_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_16_loose> arg,
  ) {
    return _wire_example_basic_list_type_i16_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_i16_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_16_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i16_twin_rust_async');
  late final _wire_example_basic_list_type_i16_twin_rust_async =
      _wire_example_basic_list_type_i16_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_16_loose>)>();

  void wire_example_basic_list_type_i32_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_32_loose> arg,
  ) {
    return _wire_example_basic_list_type_i32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_i32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_32_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i32_twin_rust_async');
  late final _wire_example_basic_list_type_i32_twin_rust_async =
      _wire_example_basic_list_type_i32_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_32_loose>)>();

  void wire_example_basic_list_type_i64_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_64_strict> arg,
  ) {
    return _wire_example_basic_list_type_i64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_i64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_64_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i64_twin_rust_async');
  late final _wire_example_basic_list_type_i64_twin_rust_async =
      _wire_example_basic_list_type_i64_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_64_strict>)>();

  void wire_example_basic_list_type_i8_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_8_loose> arg,
  ) {
    return _wire_example_basic_list_type_i8_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_i8_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i8_twin_rust_async');
  late final _wire_example_basic_list_type_i8_twin_rust_async =
      _wire_example_basic_list_type_i8_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_8_loose>)>();

  void wire_example_basic_list_type_string_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_String> arg,
  ) {
    return _wire_example_basic_list_type_string_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_string_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_string_twin_rust_async');
  late final _wire_example_basic_list_type_string_twin_rust_async =
      _wire_example_basic_list_type_string_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_String>)>();

  void wire_example_basic_list_type_u16_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_16_loose> arg,
  ) {
    return _wire_example_basic_list_type_u16_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_u16_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_16_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u16_twin_rust_async');
  late final _wire_example_basic_list_type_u16_twin_rust_async =
      _wire_example_basic_list_type_u16_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_16_loose>)>();

  void wire_example_basic_list_type_u32_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_32_loose> arg,
  ) {
    return _wire_example_basic_list_type_u32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_u32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_32_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u32_twin_rust_async');
  late final _wire_example_basic_list_type_u32_twin_rust_async =
      _wire_example_basic_list_type_u32_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_32_loose>)>();

  void wire_example_basic_list_type_u64_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_64_strict> arg,
  ) {
    return _wire_example_basic_list_type_u64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_u64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_64_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u64_twin_rust_async');
  late final _wire_example_basic_list_type_u64_twin_rust_async =
      _wire_example_basic_list_type_u64_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_64_strict>)>();

  void wire_example_basic_list_type_u8_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> arg,
  ) {
    return _wire_example_basic_list_type_u8_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_list_type_u8_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u8_twin_rust_async');
  late final _wire_example_basic_list_type_u8_twin_rust_async =
      _wire_example_basic_list_type_u8_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void
      wire_example_basic_list_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse');
  late final _wire_example_basic_list_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse =
      _wire_example_basic_list_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse');
  late final _wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse =
      _wire_example_basic_list_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_example_basic_list_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_basic_struct_twin_rust_async_sse_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse');
  late final _wire_example_basic_list_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse =
      _wire_example_basic_list_type_basic_struct_twin_rust_async_sse_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_bool_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_bool_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_bool_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_bool_twin_rust_async_sse');
  late final _wire_example_basic_list_type_bool_twin_rust_async_sse =
      _wire_example_basic_list_type_bool_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_bytes_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_bytes_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_bytes_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_bytes_twin_rust_async_sse');
  late final _wire_example_basic_list_type_bytes_twin_rust_async_sse =
      _wire_example_basic_list_type_bytes_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_f32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_f32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_f32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_f32_twin_rust_async_sse');
  late final _wire_example_basic_list_type_f32_twin_rust_async_sse =
      _wire_example_basic_list_type_f32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_f64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_f64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_f64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_f64_twin_rust_async_sse');
  late final _wire_example_basic_list_type_f64_twin_rust_async_sse =
      _wire_example_basic_list_type_f64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_i16_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_i16_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_i16_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i16_twin_rust_async_sse');
  late final _wire_example_basic_list_type_i16_twin_rust_async_sse =
      _wire_example_basic_list_type_i16_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_i32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_i32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_i32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i32_twin_rust_async_sse');
  late final _wire_example_basic_list_type_i32_twin_rust_async_sse =
      _wire_example_basic_list_type_i32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_i64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_i64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_i64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i64_twin_rust_async_sse');
  late final _wire_example_basic_list_type_i64_twin_rust_async_sse =
      _wire_example_basic_list_type_i64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_i8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_i8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_i8_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i8_twin_rust_async_sse');
  late final _wire_example_basic_list_type_i8_twin_rust_async_sse =
      _wire_example_basic_list_type_i8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_string_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_string_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_string_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_string_twin_rust_async_sse');
  late final _wire_example_basic_list_type_string_twin_rust_async_sse =
      _wire_example_basic_list_type_string_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_u16_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_u16_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_u16_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u16_twin_rust_async_sse');
  late final _wire_example_basic_list_type_u16_twin_rust_async_sse =
      _wire_example_basic_list_type_u16_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_u32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_u32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_u32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u32_twin_rust_async_sse');
  late final _wire_example_basic_list_type_u32_twin_rust_async_sse =
      _wire_example_basic_list_type_u32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_u64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_u64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_u64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u64_twin_rust_async_sse');
  late final _wire_example_basic_list_type_u64_twin_rust_async_sse =
      _wire_example_basic_list_type_u64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_u8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_u8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_u8_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u8_twin_rust_async_sse');
  late final _wire_example_basic_list_type_u8_twin_rust_async_sse =
      _wire_example_basic_list_type_u8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_basic_general_enum_twin_sse_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_basic_general_enum_twin_sse_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_basic_general_enum_twin_sse_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_general_enum_twin_sse_twin_sse');
  late final _wire_example_basic_list_type_basic_general_enum_twin_sse_twin_sse =
      _wire_example_basic_list_type_basic_general_enum_twin_sse_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_basic_primitive_enum_twin_sse_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_basic_primitive_enum_twin_sse_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_basic_primitive_enum_twin_sse_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_primitive_enum_twin_sse_twin_sse');
  late final _wire_example_basic_list_type_basic_primitive_enum_twin_sse_twin_sse =
      _wire_example_basic_list_type_basic_primitive_enum_twin_sse_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_basic_struct_twin_sse_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_basic_struct_twin_sse_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_basic_struct_twin_sse_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_struct_twin_sse_twin_sse');
  late final _wire_example_basic_list_type_basic_struct_twin_sse_twin_sse =
      _wire_example_basic_list_type_basic_struct_twin_sse_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_bool_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_bool_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_bool_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_bool_twin_sse');
  late final _wire_example_basic_list_type_bool_twin_sse =
      _wire_example_basic_list_type_bool_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_bytes_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_bytes_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_bytes_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_bytes_twin_sse');
  late final _wire_example_basic_list_type_bytes_twin_sse =
      _wire_example_basic_list_type_bytes_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_f32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_f32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_f32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_f32_twin_sse');
  late final _wire_example_basic_list_type_f32_twin_sse =
      _wire_example_basic_list_type_f32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_f64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_f64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_f64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_f64_twin_sse');
  late final _wire_example_basic_list_type_f64_twin_sse =
      _wire_example_basic_list_type_f64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_i16_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_i16_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_i16_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i16_twin_sse');
  late final _wire_example_basic_list_type_i16_twin_sse =
      _wire_example_basic_list_type_i16_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_i32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_i32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_i32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i32_twin_sse');
  late final _wire_example_basic_list_type_i32_twin_sse =
      _wire_example_basic_list_type_i32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_i64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_i64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_i64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i64_twin_sse');
  late final _wire_example_basic_list_type_i64_twin_sse =
      _wire_example_basic_list_type_i64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_i8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_i8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_i8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i8_twin_sse');
  late final _wire_example_basic_list_type_i8_twin_sse =
      _wire_example_basic_list_type_i8_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_string_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_string_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_string_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_string_twin_sse');
  late final _wire_example_basic_list_type_string_twin_sse =
      _wire_example_basic_list_type_string_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_u16_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_u16_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_u16_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u16_twin_sse');
  late final _wire_example_basic_list_type_u16_twin_sse =
      _wire_example_basic_list_type_u16_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_u32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_u32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_u32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u32_twin_sse');
  late final _wire_example_basic_list_type_u32_twin_sse =
      _wire_example_basic_list_type_u32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_u64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_u64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_u64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u64_twin_sse');
  late final _wire_example_basic_list_type_u64_twin_sse =
      _wire_example_basic_list_type_u64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_list_type_u8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_u8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_u8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u8_twin_sse');
  late final _wire_example_basic_list_type_u8_twin_sse =
      _wire_example_basic_list_type_u8_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco
      wire_example_basic_list_type_basic_general_enum_twin_sync_twin_sync(
    ffi.Pointer<wire_cst_list_basic_general_enum_twin_sync> arg,
  ) {
    return _wire_example_basic_list_type_basic_general_enum_twin_sync_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_basic_general_enum_twin_sync_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<
                          wire_cst_list_basic_general_enum_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_general_enum_twin_sync_twin_sync');
  late final _wire_example_basic_list_type_basic_general_enum_twin_sync_twin_sync =
      _wire_example_basic_list_type_basic_general_enum_twin_sync_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_basic_general_enum_twin_sync>)>();

  WireSyncRust2DartDco
      wire_example_basic_list_type_basic_primitive_enum_twin_sync_twin_sync(
    ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_sync> arg,
  ) {
    return _wire_example_basic_list_type_basic_primitive_enum_twin_sync_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_basic_primitive_enum_twin_sync_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<
                          wire_cst_list_basic_primitive_enum_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_primitive_enum_twin_sync_twin_sync');
  late final _wire_example_basic_list_type_basic_primitive_enum_twin_sync_twin_sync =
      _wire_example_basic_list_type_basic_primitive_enum_twin_sync_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_sync>)>();

  WireSyncRust2DartDco
      wire_example_basic_list_type_basic_struct_twin_sync_twin_sync(
    ffi.Pointer<wire_cst_list_basic_struct_twin_sync> arg,
  ) {
    return _wire_example_basic_list_type_basic_struct_twin_sync_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_basic_struct_twin_sync_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_list_basic_struct_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_struct_twin_sync_twin_sync');
  late final _wire_example_basic_list_type_basic_struct_twin_sync_twin_sync =
      _wire_example_basic_list_type_basic_struct_twin_sync_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_basic_struct_twin_sync>)>();

  WireSyncRust2DartDco wire_example_basic_list_type_bool_twin_sync(
    ffi.Pointer<wire_cst_list_bool> arg,
  ) {
    return _wire_example_basic_list_type_bool_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_bool_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_bool>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_bool_twin_sync');
  late final _wire_example_basic_list_type_bool_twin_sync =
      _wire_example_basic_list_type_bool_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_bool>)>();

  WireSyncRust2DartDco wire_example_basic_list_type_bytes_twin_sync(
    ffi.Pointer<wire_cst_list_list_prim_u_8_strict> arg,
  ) {
    return _wire_example_basic_list_type_bytes_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_bytes_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_bytes_twin_sync');
  late final _wire_example_basic_list_type_bytes_twin_sync =
      _wire_example_basic_list_type_bytes_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_example_basic_list_type_f32_twin_sync(
    ffi.Pointer<wire_cst_list_prim_f_32_loose> arg,
  ) {
    return _wire_example_basic_list_type_f32_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_f32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_f_32_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_f32_twin_sync');
  late final _wire_example_basic_list_type_f32_twin_sync =
      _wire_example_basic_list_type_f32_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_f_32_loose>)>();

  WireSyncRust2DartDco wire_example_basic_list_type_f64_twin_sync(
    ffi.Pointer<wire_cst_list_prim_f_64_loose> arg,
  ) {
    return _wire_example_basic_list_type_f64_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_f64_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_f_64_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_f64_twin_sync');
  late final _wire_example_basic_list_type_f64_twin_sync =
      _wire_example_basic_list_type_f64_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_f_64_loose>)>();

  WireSyncRust2DartDco wire_example_basic_list_type_i16_twin_sync(
    ffi.Pointer<wire_cst_list_prim_i_16_loose> arg,
  ) {
    return _wire_example_basic_list_type_i16_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_i16_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_i_16_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i16_twin_sync');
  late final _wire_example_basic_list_type_i16_twin_sync =
      _wire_example_basic_list_type_i16_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_i_16_loose>)>();

  WireSyncRust2DartDco wire_example_basic_list_type_i32_twin_sync(
    ffi.Pointer<wire_cst_list_prim_i_32_loose> arg,
  ) {
    return _wire_example_basic_list_type_i32_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_i32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_i_32_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i32_twin_sync');
  late final _wire_example_basic_list_type_i32_twin_sync =
      _wire_example_basic_list_type_i32_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_i_32_loose>)>();

  WireSyncRust2DartDco wire_example_basic_list_type_i64_twin_sync(
    ffi.Pointer<wire_cst_list_prim_i_64_strict> arg,
  ) {
    return _wire_example_basic_list_type_i64_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_i64_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_i_64_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i64_twin_sync');
  late final _wire_example_basic_list_type_i64_twin_sync =
      _wire_example_basic_list_type_i64_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_i_64_strict>)>();

  WireSyncRust2DartDco wire_example_basic_list_type_i8_twin_sync(
    ffi.Pointer<wire_cst_list_prim_i_8_loose> arg,
  ) {
    return _wire_example_basic_list_type_i8_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_i8_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_i_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i8_twin_sync');
  late final _wire_example_basic_list_type_i8_twin_sync =
      _wire_example_basic_list_type_i8_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_i_8_loose>)>();

  WireSyncRust2DartDco wire_example_basic_list_type_string_twin_sync(
    ffi.Pointer<wire_cst_list_String> arg,
  ) {
    return _wire_example_basic_list_type_string_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_string_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_string_twin_sync');
  late final _wire_example_basic_list_type_string_twin_sync =
      _wire_example_basic_list_type_string_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_String>)>();

  WireSyncRust2DartDco wire_example_basic_list_type_u16_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_16_loose> arg,
  ) {
    return _wire_example_basic_list_type_u16_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_u16_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_16_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u16_twin_sync');
  late final _wire_example_basic_list_type_u16_twin_sync =
      _wire_example_basic_list_type_u16_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_16_loose>)>();

  WireSyncRust2DartDco wire_example_basic_list_type_u32_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_32_loose> arg,
  ) {
    return _wire_example_basic_list_type_u32_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_u32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_32_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u32_twin_sync');
  late final _wire_example_basic_list_type_u32_twin_sync =
      _wire_example_basic_list_type_u32_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_32_loose>)>();

  WireSyncRust2DartDco wire_example_basic_list_type_u64_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_64_strict> arg,
  ) {
    return _wire_example_basic_list_type_u64_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_u64_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_64_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u64_twin_sync');
  late final _wire_example_basic_list_type_u64_twin_sync =
      _wire_example_basic_list_type_u64_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_64_strict>)>();

  WireSyncRust2DartDco wire_example_basic_list_type_u8_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_loose> arg,
  ) {
    return _wire_example_basic_list_type_u8_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_list_type_u8_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u8_twin_sync');
  late final _wire_example_basic_list_type_u8_twin_sync =
      _wire_example_basic_list_type_u8_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  WireSyncRust2DartSse
      wire_example_basic_list_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_basic_general_enum_twin_sync_sse_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_general_enum_twin_sync_sse_twin_sync_sse');
  late final _wire_example_basic_list_type_basic_general_enum_twin_sync_sse_twin_sync_sse =
      _wire_example_basic_list_type_basic_general_enum_twin_sync_sse_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_example_basic_list_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_basic_primitive_enum_twin_sync_sse_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse');
  late final _wire_example_basic_list_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse =
      _wire_example_basic_list_type_basic_primitive_enum_twin_sync_sse_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_example_basic_list_type_basic_struct_twin_sync_sse_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_basic_struct_twin_sync_sse_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_basic_struct_twin_sync_sse_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_list_type_basic_struct_twin_sync_sse_twin_sync_sse');
  late final _wire_example_basic_list_type_basic_struct_twin_sync_sse_twin_sync_sse =
      _wire_example_basic_list_type_basic_struct_twin_sync_sse_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_list_type_bool_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_bool_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_bool_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_bool_twin_sync_sse');
  late final _wire_example_basic_list_type_bool_twin_sync_sse =
      _wire_example_basic_list_type_bool_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_list_type_bytes_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_bytes_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_bytes_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_bytes_twin_sync_sse');
  late final _wire_example_basic_list_type_bytes_twin_sync_sse =
      _wire_example_basic_list_type_bytes_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_list_type_f32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_f32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_f32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_f32_twin_sync_sse');
  late final _wire_example_basic_list_type_f32_twin_sync_sse =
      _wire_example_basic_list_type_f32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_list_type_f64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_f64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_f64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_f64_twin_sync_sse');
  late final _wire_example_basic_list_type_f64_twin_sync_sse =
      _wire_example_basic_list_type_f64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_list_type_i16_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_i16_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_i16_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i16_twin_sync_sse');
  late final _wire_example_basic_list_type_i16_twin_sync_sse =
      _wire_example_basic_list_type_i16_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_list_type_i32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_i32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_i32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i32_twin_sync_sse');
  late final _wire_example_basic_list_type_i32_twin_sync_sse =
      _wire_example_basic_list_type_i32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_list_type_i64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_i64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_i64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i64_twin_sync_sse');
  late final _wire_example_basic_list_type_i64_twin_sync_sse =
      _wire_example_basic_list_type_i64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_list_type_i8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_i8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_i8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_i8_twin_sync_sse');
  late final _wire_example_basic_list_type_i8_twin_sync_sse =
      _wire_example_basic_list_type_i8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_list_type_string_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_string_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_string_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_string_twin_sync_sse');
  late final _wire_example_basic_list_type_string_twin_sync_sse =
      _wire_example_basic_list_type_string_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_list_type_u16_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_u16_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_u16_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u16_twin_sync_sse');
  late final _wire_example_basic_list_type_u16_twin_sync_sse =
      _wire_example_basic_list_type_u16_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_list_type_u32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_u32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_u32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u32_twin_sync_sse');
  late final _wire_example_basic_list_type_u32_twin_sync_sse =
      _wire_example_basic_list_type_u32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_list_type_u64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_u64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_u64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u64_twin_sync_sse');
  late final _wire_example_basic_list_type_u64_twin_sync_sse =
      _wire_example_basic_list_type_u64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_list_type_u8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_list_type_u8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_list_type_u8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_list_type_u8_twin_sync_sse');
  late final _wire_example_basic_list_type_u8_twin_sync_sse =
      _wire_example_basic_list_type_u8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_basic_general_enum_twin_normal_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_basic_general_enum_twin_normal> arg,
  ) {
    return _wire_example_basic_map_type_basic_general_enum_twin_normal_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_basic_general_enum_twin_normal_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_list_record_i_32_basic_general_enum_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_general_enum_twin_normal_twin_normal');
  late final _wire_example_basic_map_type_basic_general_enum_twin_normal_twin_normal =
      _wire_example_basic_map_type_basic_general_enum_twin_normal_twin_normalPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_list_record_i_32_basic_general_enum_twin_normal>)>();

  void wire_example_basic_map_type_basic_primitive_enum_twin_normal_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_basic_primitive_enum_twin_normal> arg,
  ) {
    return _wire_example_basic_map_type_basic_primitive_enum_twin_normal_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_basic_primitive_enum_twin_normal_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_list_record_i_32_basic_primitive_enum_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_primitive_enum_twin_normal_twin_normal');
  late final _wire_example_basic_map_type_basic_primitive_enum_twin_normal_twin_normal =
      _wire_example_basic_map_type_basic_primitive_enum_twin_normal_twin_normalPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_list_record_i_32_basic_primitive_enum_twin_normal>)>();

  void wire_example_basic_map_type_basic_struct_twin_normal_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_normal> arg,
  ) {
    return _wire_example_basic_map_type_basic_struct_twin_normal_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_basic_struct_twin_normal_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_list_record_i_32_basic_struct_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_struct_twin_normal_twin_normal');
  late final _wire_example_basic_map_type_basic_struct_twin_normal_twin_normal =
      _wire_example_basic_map_type_basic_struct_twin_normal_twin_normalPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_list_record_i_32_basic_struct_twin_normal>)>();

  void wire_example_basic_map_type_bool_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_bool> arg,
  ) {
    return _wire_example_basic_map_type_bool_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_bool_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_bool>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_bool_twin_normal');
  late final _wire_example_basic_map_type_bool_twin_normal =
      _wire_example_basic_map_type_bool_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_bool>)>();

  void wire_example_basic_map_type_bytes_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_list_prim_u_8_strict> arg,
  ) {
    return _wire_example_basic_map_type_bytes_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_bytes_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_record_i_32_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_bytes_twin_normal');
  late final _wire_example_basic_map_type_bytes_twin_normal =
      _wire_example_basic_map_type_bytes_twin_normalPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_list_record_i_32_list_prim_u_8_strict>)>();

  void wire_example_basic_map_type_f32_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_f_32> arg,
  ) {
    return _wire_example_basic_map_type_f32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_f32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_f_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_f32_twin_normal');
  late final _wire_example_basic_map_type_f32_twin_normal =
      _wire_example_basic_map_type_f32_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_f_32>)>();

  void wire_example_basic_map_type_f64_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_f_64> arg,
  ) {
    return _wire_example_basic_map_type_f64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_f64_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_f_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_f64_twin_normal');
  late final _wire_example_basic_map_type_f64_twin_normal =
      _wire_example_basic_map_type_f64_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_f_64>)>();

  void wire_example_basic_map_type_i16_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_i_16> arg,
  ) {
    return _wire_example_basic_map_type_i16_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_i16_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_i_16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i16_twin_normal');
  late final _wire_example_basic_map_type_i16_twin_normal =
      _wire_example_basic_map_type_i16_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_i_16>)>();

  void wire_example_basic_map_type_i32_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_i_32> arg,
  ) {
    return _wire_example_basic_map_type_i32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_i32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i32_twin_normal');
  late final _wire_example_basic_map_type_i32_twin_normal =
      _wire_example_basic_map_type_i32_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_i_32>)>();

  void wire_example_basic_map_type_i64_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_i_64> arg,
  ) {
    return _wire_example_basic_map_type_i64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_i64_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_i_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i64_twin_normal');
  late final _wire_example_basic_map_type_i64_twin_normal =
      _wire_example_basic_map_type_i64_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_i_64>)>();

  void wire_example_basic_map_type_i8_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_i_8> arg,
  ) {
    return _wire_example_basic_map_type_i8_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_i8_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_i_8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i8_twin_normal');
  late final _wire_example_basic_map_type_i8_twin_normal =
      _wire_example_basic_map_type_i8_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_i_8>)>();

  void wire_example_basic_map_type_isize_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_isize> arg,
  ) {
    return _wire_example_basic_map_type_isize_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_isize_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_isize>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_isize_twin_normal');
  late final _wire_example_basic_map_type_isize_twin_normal =
      _wire_example_basic_map_type_isize_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_isize>)>();

  void wire_example_basic_map_type_string_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_string> arg,
  ) {
    return _wire_example_basic_map_type_string_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_string_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_string>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_string_twin_normal');
  late final _wire_example_basic_map_type_string_twin_normal =
      _wire_example_basic_map_type_string_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_string>)>();

  void wire_example_basic_map_type_u16_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_u_16> arg,
  ) {
    return _wire_example_basic_map_type_u16_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_u16_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_u_16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u16_twin_normal');
  late final _wire_example_basic_map_type_u16_twin_normal =
      _wire_example_basic_map_type_u16_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_u_16>)>();

  void wire_example_basic_map_type_u32_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_u_32> arg,
  ) {
    return _wire_example_basic_map_type_u32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_u32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_u_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u32_twin_normal');
  late final _wire_example_basic_map_type_u32_twin_normal =
      _wire_example_basic_map_type_u32_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_u_32>)>();

  void wire_example_basic_map_type_u64_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_u_64> arg,
  ) {
    return _wire_example_basic_map_type_u64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_u64_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_u_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u64_twin_normal');
  late final _wire_example_basic_map_type_u64_twin_normal =
      _wire_example_basic_map_type_u64_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_u_64>)>();

  void wire_example_basic_map_type_u8_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_u_8> arg,
  ) {
    return _wire_example_basic_map_type_u8_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_u8_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u8_twin_normal');
  late final _wire_example_basic_map_type_u8_twin_normal =
      _wire_example_basic_map_type_u8_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_u_8>)>();

  void wire_example_basic_map_type_usize_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_usize> arg,
  ) {
    return _wire_example_basic_map_type_usize_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_usize_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_usize>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_usize_twin_normal');
  late final _wire_example_basic_map_type_usize_twin_normal =
      _wire_example_basic_map_type_usize_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_usize>)>();

  void
      wire_example_basic_map_type_basic_general_enum_twin_rust_async_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_basic_general_enum_twin_rust_async>
        arg,
  ) {
    return _wire_example_basic_map_type_basic_general_enum_twin_rust_async_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_basic_general_enum_twin_rust_async_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_list_record_i_32_basic_general_enum_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_general_enum_twin_rust_async_twin_rust_async');
  late final _wire_example_basic_map_type_basic_general_enum_twin_rust_async_twin_rust_async =
      _wire_example_basic_map_type_basic_general_enum_twin_rust_async_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_list_record_i_32_basic_general_enum_twin_rust_async>)>();

  void
      wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_basic_primitive_enum_twin_rust_async>
        arg,
  ) {
    return _wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_list_record_i_32_basic_primitive_enum_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_twin_rust_async');
  late final _wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_twin_rust_async =
      _wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_list_record_i_32_basic_primitive_enum_twin_rust_async>)>();

  void wire_example_basic_map_type_basic_struct_twin_rust_async_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_rust_async> arg,
  ) {
    return _wire_example_basic_map_type_basic_struct_twin_rust_async_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_basic_struct_twin_rust_async_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_list_record_i_32_basic_struct_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_struct_twin_rust_async_twin_rust_async');
  late final _wire_example_basic_map_type_basic_struct_twin_rust_async_twin_rust_async =
      _wire_example_basic_map_type_basic_struct_twin_rust_async_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_list_record_i_32_basic_struct_twin_rust_async>)>();

  void wire_example_basic_map_type_bool_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_bool> arg,
  ) {
    return _wire_example_basic_map_type_bool_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_bool_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_bool>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_bool_twin_rust_async');
  late final _wire_example_basic_map_type_bool_twin_rust_async =
      _wire_example_basic_map_type_bool_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_bool>)>();

  void wire_example_basic_map_type_bytes_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_list_prim_u_8_strict> arg,
  ) {
    return _wire_example_basic_map_type_bytes_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_bytes_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_record_i_32_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_bytes_twin_rust_async');
  late final _wire_example_basic_map_type_bytes_twin_rust_async =
      _wire_example_basic_map_type_bytes_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_list_record_i_32_list_prim_u_8_strict>)>();

  void wire_example_basic_map_type_f32_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_f_32> arg,
  ) {
    return _wire_example_basic_map_type_f32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_f32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_f_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_f32_twin_rust_async');
  late final _wire_example_basic_map_type_f32_twin_rust_async =
      _wire_example_basic_map_type_f32_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_f_32>)>();

  void wire_example_basic_map_type_f64_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_f_64> arg,
  ) {
    return _wire_example_basic_map_type_f64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_f64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_f_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_f64_twin_rust_async');
  late final _wire_example_basic_map_type_f64_twin_rust_async =
      _wire_example_basic_map_type_f64_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_f_64>)>();

  void wire_example_basic_map_type_i16_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_i_16> arg,
  ) {
    return _wire_example_basic_map_type_i16_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_i16_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_i_16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i16_twin_rust_async');
  late final _wire_example_basic_map_type_i16_twin_rust_async =
      _wire_example_basic_map_type_i16_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_i_16>)>();

  void wire_example_basic_map_type_i32_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_i_32> arg,
  ) {
    return _wire_example_basic_map_type_i32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_i32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i32_twin_rust_async');
  late final _wire_example_basic_map_type_i32_twin_rust_async =
      _wire_example_basic_map_type_i32_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_i_32>)>();

  void wire_example_basic_map_type_i64_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_i_64> arg,
  ) {
    return _wire_example_basic_map_type_i64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_i64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_i_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i64_twin_rust_async');
  late final _wire_example_basic_map_type_i64_twin_rust_async =
      _wire_example_basic_map_type_i64_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_i_64>)>();

  void wire_example_basic_map_type_i8_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_i_8> arg,
  ) {
    return _wire_example_basic_map_type_i8_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_i8_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_i_8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i8_twin_rust_async');
  late final _wire_example_basic_map_type_i8_twin_rust_async =
      _wire_example_basic_map_type_i8_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_i_8>)>();

  void wire_example_basic_map_type_isize_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_isize> arg,
  ) {
    return _wire_example_basic_map_type_isize_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_isize_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_isize>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_isize_twin_rust_async');
  late final _wire_example_basic_map_type_isize_twin_rust_async =
      _wire_example_basic_map_type_isize_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_isize>)>();

  void wire_example_basic_map_type_string_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_string> arg,
  ) {
    return _wire_example_basic_map_type_string_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_string_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_string>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_string_twin_rust_async');
  late final _wire_example_basic_map_type_string_twin_rust_async =
      _wire_example_basic_map_type_string_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_string>)>();

  void wire_example_basic_map_type_u16_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_u_16> arg,
  ) {
    return _wire_example_basic_map_type_u16_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_u16_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_u_16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u16_twin_rust_async');
  late final _wire_example_basic_map_type_u16_twin_rust_async =
      _wire_example_basic_map_type_u16_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_u_16>)>();

  void wire_example_basic_map_type_u32_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_u_32> arg,
  ) {
    return _wire_example_basic_map_type_u32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_u32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_u_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u32_twin_rust_async');
  late final _wire_example_basic_map_type_u32_twin_rust_async =
      _wire_example_basic_map_type_u32_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_u_32>)>();

  void wire_example_basic_map_type_u64_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_u_64> arg,
  ) {
    return _wire_example_basic_map_type_u64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_u64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_u_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u64_twin_rust_async');
  late final _wire_example_basic_map_type_u64_twin_rust_async =
      _wire_example_basic_map_type_u64_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_u_64>)>();

  void wire_example_basic_map_type_u8_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_u_8> arg,
  ) {
    return _wire_example_basic_map_type_u8_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_u8_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u8_twin_rust_async');
  late final _wire_example_basic_map_type_u8_twin_rust_async =
      _wire_example_basic_map_type_u8_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_u_8>)>();

  void wire_example_basic_map_type_usize_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_usize> arg,
  ) {
    return _wire_example_basic_map_type_usize_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_map_type_usize_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_usize>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_usize_twin_rust_async');
  late final _wire_example_basic_map_type_usize_twin_rust_async =
      _wire_example_basic_map_type_usize_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_usize>)>();

  void
      wire_example_basic_map_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse');
  late final _wire_example_basic_map_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse =
      _wire_example_basic_map_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse');
  late final _wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse =
      _wire_example_basic_map_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_example_basic_map_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_basic_struct_twin_rust_async_sse_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse');
  late final _wire_example_basic_map_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse =
      _wire_example_basic_map_type_basic_struct_twin_rust_async_sse_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_bool_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_bool_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_bool_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_bool_twin_rust_async_sse');
  late final _wire_example_basic_map_type_bool_twin_rust_async_sse =
      _wire_example_basic_map_type_bool_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_bytes_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_bytes_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_bytes_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_bytes_twin_rust_async_sse');
  late final _wire_example_basic_map_type_bytes_twin_rust_async_sse =
      _wire_example_basic_map_type_bytes_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_f32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_f32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_f32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_f32_twin_rust_async_sse');
  late final _wire_example_basic_map_type_f32_twin_rust_async_sse =
      _wire_example_basic_map_type_f32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_f64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_f64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_f64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_f64_twin_rust_async_sse');
  late final _wire_example_basic_map_type_f64_twin_rust_async_sse =
      _wire_example_basic_map_type_f64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_i16_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_i16_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_i16_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i16_twin_rust_async_sse');
  late final _wire_example_basic_map_type_i16_twin_rust_async_sse =
      _wire_example_basic_map_type_i16_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_i32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_i32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_i32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i32_twin_rust_async_sse');
  late final _wire_example_basic_map_type_i32_twin_rust_async_sse =
      _wire_example_basic_map_type_i32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_i64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_i64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_i64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i64_twin_rust_async_sse');
  late final _wire_example_basic_map_type_i64_twin_rust_async_sse =
      _wire_example_basic_map_type_i64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_i8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_i8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_i8_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i8_twin_rust_async_sse');
  late final _wire_example_basic_map_type_i8_twin_rust_async_sse =
      _wire_example_basic_map_type_i8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_isize_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_isize_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_isize_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_isize_twin_rust_async_sse');
  late final _wire_example_basic_map_type_isize_twin_rust_async_sse =
      _wire_example_basic_map_type_isize_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_string_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_string_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_string_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_string_twin_rust_async_sse');
  late final _wire_example_basic_map_type_string_twin_rust_async_sse =
      _wire_example_basic_map_type_string_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_u16_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_u16_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_u16_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u16_twin_rust_async_sse');
  late final _wire_example_basic_map_type_u16_twin_rust_async_sse =
      _wire_example_basic_map_type_u16_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_u32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_u32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_u32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u32_twin_rust_async_sse');
  late final _wire_example_basic_map_type_u32_twin_rust_async_sse =
      _wire_example_basic_map_type_u32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_u64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_u64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_u64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u64_twin_rust_async_sse');
  late final _wire_example_basic_map_type_u64_twin_rust_async_sse =
      _wire_example_basic_map_type_u64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_u8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_u8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_u8_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u8_twin_rust_async_sse');
  late final _wire_example_basic_map_type_u8_twin_rust_async_sse =
      _wire_example_basic_map_type_u8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_usize_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_usize_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_usize_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_usize_twin_rust_async_sse');
  late final _wire_example_basic_map_type_usize_twin_rust_async_sse =
      _wire_example_basic_map_type_usize_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_basic_general_enum_twin_sse_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_basic_general_enum_twin_sse_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_basic_general_enum_twin_sse_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_general_enum_twin_sse_twin_sse');
  late final _wire_example_basic_map_type_basic_general_enum_twin_sse_twin_sse =
      _wire_example_basic_map_type_basic_general_enum_twin_sse_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_basic_primitive_enum_twin_sse_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_basic_primitive_enum_twin_sse_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_basic_primitive_enum_twin_sse_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_primitive_enum_twin_sse_twin_sse');
  late final _wire_example_basic_map_type_basic_primitive_enum_twin_sse_twin_sse =
      _wire_example_basic_map_type_basic_primitive_enum_twin_sse_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_basic_struct_twin_sse_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_basic_struct_twin_sse_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_basic_struct_twin_sse_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_struct_twin_sse_twin_sse');
  late final _wire_example_basic_map_type_basic_struct_twin_sse_twin_sse =
      _wire_example_basic_map_type_basic_struct_twin_sse_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_bool_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_bool_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_bool_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_bool_twin_sse');
  late final _wire_example_basic_map_type_bool_twin_sse =
      _wire_example_basic_map_type_bool_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_bytes_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_bytes_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_bytes_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_bytes_twin_sse');
  late final _wire_example_basic_map_type_bytes_twin_sse =
      _wire_example_basic_map_type_bytes_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_f32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_f32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_f32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_f32_twin_sse');
  late final _wire_example_basic_map_type_f32_twin_sse =
      _wire_example_basic_map_type_f32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_f64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_f64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_f64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_f64_twin_sse');
  late final _wire_example_basic_map_type_f64_twin_sse =
      _wire_example_basic_map_type_f64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_i16_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_i16_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_i16_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i16_twin_sse');
  late final _wire_example_basic_map_type_i16_twin_sse =
      _wire_example_basic_map_type_i16_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_i32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_i32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_i32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i32_twin_sse');
  late final _wire_example_basic_map_type_i32_twin_sse =
      _wire_example_basic_map_type_i32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_i64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_i64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_i64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i64_twin_sse');
  late final _wire_example_basic_map_type_i64_twin_sse =
      _wire_example_basic_map_type_i64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_i8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_i8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_i8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i8_twin_sse');
  late final _wire_example_basic_map_type_i8_twin_sse =
      _wire_example_basic_map_type_i8_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_isize_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_isize_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_isize_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_isize_twin_sse');
  late final _wire_example_basic_map_type_isize_twin_sse =
      _wire_example_basic_map_type_isize_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_string_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_string_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_string_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_string_twin_sse');
  late final _wire_example_basic_map_type_string_twin_sse =
      _wire_example_basic_map_type_string_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_u16_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_u16_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_u16_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u16_twin_sse');
  late final _wire_example_basic_map_type_u16_twin_sse =
      _wire_example_basic_map_type_u16_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_u32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_u32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_u32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u32_twin_sse');
  late final _wire_example_basic_map_type_u32_twin_sse =
      _wire_example_basic_map_type_u32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_u64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_u64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_u64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u64_twin_sse');
  late final _wire_example_basic_map_type_u64_twin_sse =
      _wire_example_basic_map_type_u64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_u8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_u8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_u8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u8_twin_sse');
  late final _wire_example_basic_map_type_u8_twin_sse =
      _wire_example_basic_map_type_u8_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_map_type_usize_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_usize_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_usize_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_usize_twin_sse');
  late final _wire_example_basic_map_type_usize_twin_sse =
      _wire_example_basic_map_type_usize_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco
      wire_example_basic_map_type_basic_general_enum_twin_sync_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_basic_general_enum_twin_sync> arg,
  ) {
    return _wire_example_basic_map_type_basic_general_enum_twin_sync_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_basic_general_enum_twin_sync_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<
                          wire_cst_list_record_i_32_basic_general_enum_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_general_enum_twin_sync_twin_sync');
  late final _wire_example_basic_map_type_basic_general_enum_twin_sync_twin_sync =
      _wire_example_basic_map_type_basic_general_enum_twin_sync_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_list_record_i_32_basic_general_enum_twin_sync>)>();

  WireSyncRust2DartDco
      wire_example_basic_map_type_basic_primitive_enum_twin_sync_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_basic_primitive_enum_twin_sync> arg,
  ) {
    return _wire_example_basic_map_type_basic_primitive_enum_twin_sync_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_basic_primitive_enum_twin_sync_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<
                          wire_cst_list_record_i_32_basic_primitive_enum_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_primitive_enum_twin_sync_twin_sync');
  late final _wire_example_basic_map_type_basic_primitive_enum_twin_sync_twin_sync =
      _wire_example_basic_map_type_basic_primitive_enum_twin_sync_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_list_record_i_32_basic_primitive_enum_twin_sync>)>();

  WireSyncRust2DartDco
      wire_example_basic_map_type_basic_struct_twin_sync_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_sync> arg,
  ) {
    return _wire_example_basic_map_type_basic_struct_twin_sync_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_basic_struct_twin_sync_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<
                          wire_cst_list_record_i_32_basic_struct_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_struct_twin_sync_twin_sync');
  late final _wire_example_basic_map_type_basic_struct_twin_sync_twin_sync =
      _wire_example_basic_map_type_basic_struct_twin_sync_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_list_record_i_32_basic_struct_twin_sync>)>();

  WireSyncRust2DartDco wire_example_basic_map_type_bool_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_bool> arg,
  ) {
    return _wire_example_basic_map_type_bool_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_bool_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_bool>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_bool_twin_sync');
  late final _wire_example_basic_map_type_bool_twin_sync =
      _wire_example_basic_map_type_bool_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_bool>)>();

  WireSyncRust2DartDco wire_example_basic_map_type_bytes_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_list_prim_u_8_strict> arg,
  ) {
    return _wire_example_basic_map_type_bytes_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_bytes_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_list_record_i_32_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_bytes_twin_sync');
  late final _wire_example_basic_map_type_bytes_twin_sync =
      _wire_example_basic_map_type_bytes_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_example_basic_map_type_f32_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_f_32> arg,
  ) {
    return _wire_example_basic_map_type_f32_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_f32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_f_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_f32_twin_sync');
  late final _wire_example_basic_map_type_f32_twin_sync =
      _wire_example_basic_map_type_f32_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_f_32>)>();

  WireSyncRust2DartDco wire_example_basic_map_type_f64_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_f_64> arg,
  ) {
    return _wire_example_basic_map_type_f64_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_f64_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_f_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_f64_twin_sync');
  late final _wire_example_basic_map_type_f64_twin_sync =
      _wire_example_basic_map_type_f64_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_f_64>)>();

  WireSyncRust2DartDco wire_example_basic_map_type_i16_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_i_16> arg,
  ) {
    return _wire_example_basic_map_type_i16_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_i16_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_i_16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i16_twin_sync');
  late final _wire_example_basic_map_type_i16_twin_sync =
      _wire_example_basic_map_type_i16_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_i_16>)>();

  WireSyncRust2DartDco wire_example_basic_map_type_i32_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_i_32> arg,
  ) {
    return _wire_example_basic_map_type_i32_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_i32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i32_twin_sync');
  late final _wire_example_basic_map_type_i32_twin_sync =
      _wire_example_basic_map_type_i32_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_i_32>)>();

  WireSyncRust2DartDco wire_example_basic_map_type_i64_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_i_64> arg,
  ) {
    return _wire_example_basic_map_type_i64_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_i64_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_i_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i64_twin_sync');
  late final _wire_example_basic_map_type_i64_twin_sync =
      _wire_example_basic_map_type_i64_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_i_64>)>();

  WireSyncRust2DartDco wire_example_basic_map_type_i8_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_i_8> arg,
  ) {
    return _wire_example_basic_map_type_i8_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_i8_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_i_8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i8_twin_sync');
  late final _wire_example_basic_map_type_i8_twin_sync =
      _wire_example_basic_map_type_i8_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_i_8>)>();

  WireSyncRust2DartDco wire_example_basic_map_type_isize_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_isize> arg,
  ) {
    return _wire_example_basic_map_type_isize_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_isize_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_isize>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_isize_twin_sync');
  late final _wire_example_basic_map_type_isize_twin_sync =
      _wire_example_basic_map_type_isize_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_isize>)>();

  WireSyncRust2DartDco wire_example_basic_map_type_string_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_string> arg,
  ) {
    return _wire_example_basic_map_type_string_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_string_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_string>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_string_twin_sync');
  late final _wire_example_basic_map_type_string_twin_sync =
      _wire_example_basic_map_type_string_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_string>)>();

  WireSyncRust2DartDco wire_example_basic_map_type_u16_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_u_16> arg,
  ) {
    return _wire_example_basic_map_type_u16_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_u16_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_u_16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u16_twin_sync');
  late final _wire_example_basic_map_type_u16_twin_sync =
      _wire_example_basic_map_type_u16_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_u_16>)>();

  WireSyncRust2DartDco wire_example_basic_map_type_u32_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_u_32> arg,
  ) {
    return _wire_example_basic_map_type_u32_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_u32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_u_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u32_twin_sync');
  late final _wire_example_basic_map_type_u32_twin_sync =
      _wire_example_basic_map_type_u32_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_u_32>)>();

  WireSyncRust2DartDco wire_example_basic_map_type_u64_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_u_64> arg,
  ) {
    return _wire_example_basic_map_type_u64_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_u64_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_u_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u64_twin_sync');
  late final _wire_example_basic_map_type_u64_twin_sync =
      _wire_example_basic_map_type_u64_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_u_64>)>();

  WireSyncRust2DartDco wire_example_basic_map_type_u8_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_u_8> arg,
  ) {
    return _wire_example_basic_map_type_u8_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_u8_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u8_twin_sync');
  late final _wire_example_basic_map_type_u8_twin_sync =
      _wire_example_basic_map_type_u8_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_u_8>)>();

  WireSyncRust2DartDco wire_example_basic_map_type_usize_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_usize> arg,
  ) {
    return _wire_example_basic_map_type_usize_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_map_type_usize_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_usize>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_usize_twin_sync');
  late final _wire_example_basic_map_type_usize_twin_sync =
      _wire_example_basic_map_type_usize_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_usize>)>();

  WireSyncRust2DartSse
      wire_example_basic_map_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_basic_general_enum_twin_sync_sse_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_general_enum_twin_sync_sse_twin_sync_sse');
  late final _wire_example_basic_map_type_basic_general_enum_twin_sync_sse_twin_sync_sse =
      _wire_example_basic_map_type_basic_general_enum_twin_sync_sse_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_example_basic_map_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_basic_primitive_enum_twin_sync_sse_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse');
  late final _wire_example_basic_map_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse =
      _wire_example_basic_map_type_basic_primitive_enum_twin_sync_sse_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_example_basic_map_type_basic_struct_twin_sync_sse_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_basic_struct_twin_sync_sse_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_basic_struct_twin_sync_sse_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_map_type_basic_struct_twin_sync_sse_twin_sync_sse');
  late final _wire_example_basic_map_type_basic_struct_twin_sync_sse_twin_sync_sse =
      _wire_example_basic_map_type_basic_struct_twin_sync_sse_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_map_type_bool_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_bool_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_bool_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_bool_twin_sync_sse');
  late final _wire_example_basic_map_type_bool_twin_sync_sse =
      _wire_example_basic_map_type_bool_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_map_type_bytes_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_bytes_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_bytes_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_bytes_twin_sync_sse');
  late final _wire_example_basic_map_type_bytes_twin_sync_sse =
      _wire_example_basic_map_type_bytes_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_map_type_f32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_f32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_f32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_f32_twin_sync_sse');
  late final _wire_example_basic_map_type_f32_twin_sync_sse =
      _wire_example_basic_map_type_f32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_map_type_f64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_f64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_f64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_f64_twin_sync_sse');
  late final _wire_example_basic_map_type_f64_twin_sync_sse =
      _wire_example_basic_map_type_f64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_map_type_i16_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_i16_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_i16_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i16_twin_sync_sse');
  late final _wire_example_basic_map_type_i16_twin_sync_sse =
      _wire_example_basic_map_type_i16_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_map_type_i32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_i32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_i32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i32_twin_sync_sse');
  late final _wire_example_basic_map_type_i32_twin_sync_sse =
      _wire_example_basic_map_type_i32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_map_type_i64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_i64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_i64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i64_twin_sync_sse');
  late final _wire_example_basic_map_type_i64_twin_sync_sse =
      _wire_example_basic_map_type_i64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_map_type_i8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_i8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_i8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_i8_twin_sync_sse');
  late final _wire_example_basic_map_type_i8_twin_sync_sse =
      _wire_example_basic_map_type_i8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_map_type_isize_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_isize_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_isize_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_isize_twin_sync_sse');
  late final _wire_example_basic_map_type_isize_twin_sync_sse =
      _wire_example_basic_map_type_isize_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_map_type_string_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_string_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_string_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_string_twin_sync_sse');
  late final _wire_example_basic_map_type_string_twin_sync_sse =
      _wire_example_basic_map_type_string_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_map_type_u16_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_u16_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_u16_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u16_twin_sync_sse');
  late final _wire_example_basic_map_type_u16_twin_sync_sse =
      _wire_example_basic_map_type_u16_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_map_type_u32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_u32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_u32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u32_twin_sync_sse');
  late final _wire_example_basic_map_type_u32_twin_sync_sse =
      _wire_example_basic_map_type_u32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_map_type_u64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_u64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_u64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u64_twin_sync_sse');
  late final _wire_example_basic_map_type_u64_twin_sync_sse =
      _wire_example_basic_map_type_u64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_map_type_u8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_u8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_u8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_u8_twin_sync_sse');
  late final _wire_example_basic_map_type_u8_twin_sync_sse =
      _wire_example_basic_map_type_u8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_map_type_usize_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_map_type_usize_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_map_type_usize_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_map_type_usize_twin_sync_sse');
  late final _wire_example_basic_map_type_usize_twin_sync_sse =
      _wire_example_basic_map_type_usize_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_example_basic_optional_type_basic_general_enum_twin_normal_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_basic_general_enum_twin_normal> arg,
  ) {
    return _wire_example_basic_optional_type_basic_general_enum_twin_normal_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_basic_general_enum_twin_normal_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_basic_general_enum_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_general_enum_twin_normal_twin_normal');
  late final _wire_example_basic_optional_type_basic_general_enum_twin_normal_twin_normal =
      _wire_example_basic_optional_type_basic_general_enum_twin_normal_twin_normalPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_basic_general_enum_twin_normal>)>();

  void
      wire_example_basic_optional_type_basic_primitive_enum_twin_normal_twin_normal(
    int port_,
    ffi.Pointer<ffi.Int32> arg,
  ) {
    return _wire_example_basic_optional_type_basic_primitive_enum_twin_normal_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_basic_primitive_enum_twin_normal_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int32>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_primitive_enum_twin_normal_twin_normal');
  late final _wire_example_basic_optional_type_basic_primitive_enum_twin_normal_twin_normal =
      _wire_example_basic_optional_type_basic_primitive_enum_twin_normal_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int32>)>();

  void wire_example_basic_optional_type_basic_struct_twin_normal_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_basic_struct_twin_normal> arg,
  ) {
    return _wire_example_basic_optional_type_basic_struct_twin_normal_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_basic_struct_twin_normal_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_basic_struct_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_struct_twin_normal_twin_normal');
  late final _wire_example_basic_optional_type_basic_struct_twin_normal_twin_normal =
      _wire_example_basic_optional_type_basic_struct_twin_normal_twin_normalPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_basic_struct_twin_normal>)>();

  void wire_example_basic_optional_type_bool_twin_normal(
    int port_,
    ffi.Pointer<ffi.Bool> arg,
  ) {
    return _wire_example_basic_optional_type_bool_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_bool_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Bool>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_bool_twin_normal');
  late final _wire_example_basic_optional_type_bool_twin_normal =
      _wire_example_basic_optional_type_bool_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Bool>)>();

  void wire_example_basic_optional_type_bytes_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> arg,
  ) {
    return _wire_example_basic_optional_type_bytes_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_bytes_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_bytes_twin_normal');
  late final _wire_example_basic_optional_type_bytes_twin_normal =
      _wire_example_basic_optional_type_bytes_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_example_basic_optional_type_f32_twin_normal(
    int port_,
    ffi.Pointer<ffi.Float> arg,
  ) {
    return _wire_example_basic_optional_type_f32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_f32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Float>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_f32_twin_normal');
  late final _wire_example_basic_optional_type_f32_twin_normal =
      _wire_example_basic_optional_type_f32_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Float>)>();

  void wire_example_basic_optional_type_f64_twin_normal(
    int port_,
    ffi.Pointer<ffi.Double> arg,
  ) {
    return _wire_example_basic_optional_type_f64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_f64_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Double>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_f64_twin_normal');
  late final _wire_example_basic_optional_type_f64_twin_normal =
      _wire_example_basic_optional_type_f64_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Double>)>();

  void wire_example_basic_optional_type_i16_twin_normal(
    int port_,
    ffi.Pointer<ffi.Int16> arg,
  ) {
    return _wire_example_basic_optional_type_i16_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_i16_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i16_twin_normal');
  late final _wire_example_basic_optional_type_i16_twin_normal =
      _wire_example_basic_optional_type_i16_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int16>)>();

  void wire_example_basic_optional_type_i32_twin_normal(
    int port_,
    ffi.Pointer<ffi.Int32> arg,
  ) {
    return _wire_example_basic_optional_type_i32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_i32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i32_twin_normal');
  late final _wire_example_basic_optional_type_i32_twin_normal =
      _wire_example_basic_optional_type_i32_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int32>)>();

  void wire_example_basic_optional_type_i64_twin_normal(
    int port_,
    ffi.Pointer<ffi.Int64> arg,
  ) {
    return _wire_example_basic_optional_type_i64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_i64_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i64_twin_normal');
  late final _wire_example_basic_optional_type_i64_twin_normal =
      _wire_example_basic_optional_type_i64_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int64>)>();

  void wire_example_basic_optional_type_i8_twin_normal(
    int port_,
    ffi.Pointer<ffi.Int8> arg,
  ) {
    return _wire_example_basic_optional_type_i8_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_i8_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i8_twin_normal');
  late final _wire_example_basic_optional_type_i8_twin_normal =
      _wire_example_basic_optional_type_i8_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int8>)>();

  void wire_example_basic_optional_type_isize_twin_normal(
    int port_,
    ffi.Pointer<ffi.IntPtr> arg,
  ) {
    return _wire_example_basic_optional_type_isize_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_isize_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.IntPtr>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_isize_twin_normal');
  late final _wire_example_basic_optional_type_isize_twin_normal =
      _wire_example_basic_optional_type_isize_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.IntPtr>)>();

  void wire_example_basic_optional_type_string_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> arg,
  ) {
    return _wire_example_basic_optional_type_string_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_string_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_string_twin_normal');
  late final _wire_example_basic_optional_type_string_twin_normal =
      _wire_example_basic_optional_type_string_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_example_basic_optional_type_u16_twin_normal(
    int port_,
    ffi.Pointer<ffi.Uint16> arg,
  ) {
    return _wire_example_basic_optional_type_u16_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_u16_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u16_twin_normal');
  late final _wire_example_basic_optional_type_u16_twin_normal =
      _wire_example_basic_optional_type_u16_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint16>)>();

  void wire_example_basic_optional_type_u32_twin_normal(
    int port_,
    ffi.Pointer<ffi.Uint32> arg,
  ) {
    return _wire_example_basic_optional_type_u32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_u32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u32_twin_normal');
  late final _wire_example_basic_optional_type_u32_twin_normal =
      _wire_example_basic_optional_type_u32_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint32>)>();

  void wire_example_basic_optional_type_u64_twin_normal(
    int port_,
    ffi.Pointer<ffi.Uint64> arg,
  ) {
    return _wire_example_basic_optional_type_u64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_u64_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u64_twin_normal');
  late final _wire_example_basic_optional_type_u64_twin_normal =
      _wire_example_basic_optional_type_u64_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint64>)>();

  void wire_example_basic_optional_type_u8_twin_normal(
    int port_,
    ffi.Pointer<ffi.Uint8> arg,
  ) {
    return _wire_example_basic_optional_type_u8_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_u8_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u8_twin_normal');
  late final _wire_example_basic_optional_type_u8_twin_normal =
      _wire_example_basic_optional_type_u8_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>)>();

  void wire_example_basic_optional_type_usize_twin_normal(
    int port_,
    ffi.Pointer<ffi.UintPtr> arg,
  ) {
    return _wire_example_basic_optional_type_usize_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_usize_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.UintPtr>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_usize_twin_normal');
  late final _wire_example_basic_optional_type_usize_twin_normal =
      _wire_example_basic_optional_type_usize_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.UintPtr>)>();

  void
      wire_example_basic_optional_type_basic_general_enum_twin_rust_async_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_basic_general_enum_twin_rust_async> arg,
  ) {
    return _wire_example_basic_optional_type_basic_general_enum_twin_rust_async_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_basic_general_enum_twin_rust_async_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_basic_general_enum_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_general_enum_twin_rust_async_twin_rust_async');
  late final _wire_example_basic_optional_type_basic_general_enum_twin_rust_async_twin_rust_async =
      _wire_example_basic_optional_type_basic_general_enum_twin_rust_async_twin_rust_asyncPtr
          .asFunction<
              void Function(int,
                  ffi.Pointer<wire_cst_basic_general_enum_twin_rust_async>)>();

  void
      wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Int32> arg,
  ) {
    return _wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int32>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_twin_rust_async');
  late final _wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_twin_rust_async =
      _wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int32>)>();

  void
      wire_example_basic_optional_type_basic_struct_twin_rust_async_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_basic_struct_twin_rust_async> arg,
  ) {
    return _wire_example_basic_optional_type_basic_struct_twin_rust_async_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_basic_struct_twin_rust_async_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_basic_struct_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_struct_twin_rust_async_twin_rust_async');
  late final _wire_example_basic_optional_type_basic_struct_twin_rust_async_twin_rust_async =
      _wire_example_basic_optional_type_basic_struct_twin_rust_async_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_basic_struct_twin_rust_async>)>();

  void wire_example_basic_optional_type_bool_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Bool> arg,
  ) {
    return _wire_example_basic_optional_type_bool_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_bool_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Bool>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_bool_twin_rust_async');
  late final _wire_example_basic_optional_type_bool_twin_rust_async =
      _wire_example_basic_optional_type_bool_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Bool>)>();

  void wire_example_basic_optional_type_bytes_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> arg,
  ) {
    return _wire_example_basic_optional_type_bytes_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_bytes_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_bytes_twin_rust_async');
  late final _wire_example_basic_optional_type_bytes_twin_rust_async =
      _wire_example_basic_optional_type_bytes_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_example_basic_optional_type_f32_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Float> arg,
  ) {
    return _wire_example_basic_optional_type_f32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_f32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Float>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_f32_twin_rust_async');
  late final _wire_example_basic_optional_type_f32_twin_rust_async =
      _wire_example_basic_optional_type_f32_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Float>)>();

  void wire_example_basic_optional_type_f64_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Double> arg,
  ) {
    return _wire_example_basic_optional_type_f64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_f64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Double>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_f64_twin_rust_async');
  late final _wire_example_basic_optional_type_f64_twin_rust_async =
      _wire_example_basic_optional_type_f64_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Double>)>();

  void wire_example_basic_optional_type_i16_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Int16> arg,
  ) {
    return _wire_example_basic_optional_type_i16_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_i16_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i16_twin_rust_async');
  late final _wire_example_basic_optional_type_i16_twin_rust_async =
      _wire_example_basic_optional_type_i16_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int16>)>();

  void wire_example_basic_optional_type_i32_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Int32> arg,
  ) {
    return _wire_example_basic_optional_type_i32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_i32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i32_twin_rust_async');
  late final _wire_example_basic_optional_type_i32_twin_rust_async =
      _wire_example_basic_optional_type_i32_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int32>)>();

  void wire_example_basic_optional_type_i64_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Int64> arg,
  ) {
    return _wire_example_basic_optional_type_i64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_i64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i64_twin_rust_async');
  late final _wire_example_basic_optional_type_i64_twin_rust_async =
      _wire_example_basic_optional_type_i64_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int64>)>();

  void wire_example_basic_optional_type_i8_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Int8> arg,
  ) {
    return _wire_example_basic_optional_type_i8_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_i8_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i8_twin_rust_async');
  late final _wire_example_basic_optional_type_i8_twin_rust_async =
      _wire_example_basic_optional_type_i8_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int8>)>();

  void wire_example_basic_optional_type_isize_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.IntPtr> arg,
  ) {
    return _wire_example_basic_optional_type_isize_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_isize_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.IntPtr>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_isize_twin_rust_async');
  late final _wire_example_basic_optional_type_isize_twin_rust_async =
      _wire_example_basic_optional_type_isize_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.IntPtr>)>();

  void wire_example_basic_optional_type_string_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> arg,
  ) {
    return _wire_example_basic_optional_type_string_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_string_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_string_twin_rust_async');
  late final _wire_example_basic_optional_type_string_twin_rust_async =
      _wire_example_basic_optional_type_string_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_example_basic_optional_type_u16_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Uint16> arg,
  ) {
    return _wire_example_basic_optional_type_u16_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_u16_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u16_twin_rust_async');
  late final _wire_example_basic_optional_type_u16_twin_rust_async =
      _wire_example_basic_optional_type_u16_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint16>)>();

  void wire_example_basic_optional_type_u32_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Uint32> arg,
  ) {
    return _wire_example_basic_optional_type_u32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_u32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u32_twin_rust_async');
  late final _wire_example_basic_optional_type_u32_twin_rust_async =
      _wire_example_basic_optional_type_u32_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint32>)>();

  void wire_example_basic_optional_type_u64_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Uint64> arg,
  ) {
    return _wire_example_basic_optional_type_u64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_u64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u64_twin_rust_async');
  late final _wire_example_basic_optional_type_u64_twin_rust_async =
      _wire_example_basic_optional_type_u64_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint64>)>();

  void wire_example_basic_optional_type_u8_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Uint8> arg,
  ) {
    return _wire_example_basic_optional_type_u8_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_u8_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u8_twin_rust_async');
  late final _wire_example_basic_optional_type_u8_twin_rust_async =
      _wire_example_basic_optional_type_u8_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>)>();

  void wire_example_basic_optional_type_usize_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.UintPtr> arg,
  ) {
    return _wire_example_basic_optional_type_usize_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_optional_type_usize_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.UintPtr>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_usize_twin_rust_async');
  late final _wire_example_basic_optional_type_usize_twin_rust_async =
      _wire_example_basic_optional_type_usize_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.UintPtr>)>();

  void
      wire_example_basic_optional_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse =
      _wire_example_basic_optional_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse =
      _wire_example_basic_optional_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_example_basic_optional_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_basic_struct_twin_rust_async_sse_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse =
      _wire_example_basic_optional_type_basic_struct_twin_rust_async_sse_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_bool_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_bool_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_bool_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_bool_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_bool_twin_rust_async_sse =
      _wire_example_basic_optional_type_bool_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_bytes_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_bytes_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_bytes_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_bytes_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_bytes_twin_rust_async_sse =
      _wire_example_basic_optional_type_bytes_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_f32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_f32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_f32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_f32_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_f32_twin_rust_async_sse =
      _wire_example_basic_optional_type_f32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_f64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_f64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_f64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_f64_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_f64_twin_rust_async_sse =
      _wire_example_basic_optional_type_f64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_i16_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_i16_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_i16_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i16_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_i16_twin_rust_async_sse =
      _wire_example_basic_optional_type_i16_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_i32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_i32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_i32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i32_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_i32_twin_rust_async_sse =
      _wire_example_basic_optional_type_i32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_i64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_i64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_i64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i64_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_i64_twin_rust_async_sse =
      _wire_example_basic_optional_type_i64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_i8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_i8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_i8_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i8_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_i8_twin_rust_async_sse =
      _wire_example_basic_optional_type_i8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_isize_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_isize_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_isize_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_isize_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_isize_twin_rust_async_sse =
      _wire_example_basic_optional_type_isize_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_string_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_string_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_string_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_string_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_string_twin_rust_async_sse =
      _wire_example_basic_optional_type_string_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_u16_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_u16_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_u16_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u16_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_u16_twin_rust_async_sse =
      _wire_example_basic_optional_type_u16_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_u32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_u32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_u32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u32_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_u32_twin_rust_async_sse =
      _wire_example_basic_optional_type_u32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_u64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_u64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_u64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u64_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_u64_twin_rust_async_sse =
      _wire_example_basic_optional_type_u64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_u8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_u8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_u8_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u8_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_u8_twin_rust_async_sse =
      _wire_example_basic_optional_type_u8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_usize_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_usize_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_usize_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_usize_twin_rust_async_sse');
  late final _wire_example_basic_optional_type_usize_twin_rust_async_sse =
      _wire_example_basic_optional_type_usize_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_basic_general_enum_twin_sse_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_basic_general_enum_twin_sse_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_basic_general_enum_twin_sse_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_general_enum_twin_sse_twin_sse');
  late final _wire_example_basic_optional_type_basic_general_enum_twin_sse_twin_sse =
      _wire_example_basic_optional_type_basic_general_enum_twin_sse_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_basic_primitive_enum_twin_sse_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_basic_primitive_enum_twin_sse_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_basic_primitive_enum_twin_sse_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_primitive_enum_twin_sse_twin_sse');
  late final _wire_example_basic_optional_type_basic_primitive_enum_twin_sse_twin_sse =
      _wire_example_basic_optional_type_basic_primitive_enum_twin_sse_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_basic_struct_twin_sse_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_basic_struct_twin_sse_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_basic_struct_twin_sse_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_struct_twin_sse_twin_sse');
  late final _wire_example_basic_optional_type_basic_struct_twin_sse_twin_sse =
      _wire_example_basic_optional_type_basic_struct_twin_sse_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_bool_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_bool_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_bool_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_bool_twin_sse');
  late final _wire_example_basic_optional_type_bool_twin_sse =
      _wire_example_basic_optional_type_bool_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_bytes_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_bytes_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_bytes_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_bytes_twin_sse');
  late final _wire_example_basic_optional_type_bytes_twin_sse =
      _wire_example_basic_optional_type_bytes_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_f32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_f32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_f32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_f32_twin_sse');
  late final _wire_example_basic_optional_type_f32_twin_sse =
      _wire_example_basic_optional_type_f32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_f64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_f64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_f64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_f64_twin_sse');
  late final _wire_example_basic_optional_type_f64_twin_sse =
      _wire_example_basic_optional_type_f64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_i16_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_i16_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_i16_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i16_twin_sse');
  late final _wire_example_basic_optional_type_i16_twin_sse =
      _wire_example_basic_optional_type_i16_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_i32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_i32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_i32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i32_twin_sse');
  late final _wire_example_basic_optional_type_i32_twin_sse =
      _wire_example_basic_optional_type_i32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_i64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_i64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_i64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i64_twin_sse');
  late final _wire_example_basic_optional_type_i64_twin_sse =
      _wire_example_basic_optional_type_i64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_i8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_i8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_i8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i8_twin_sse');
  late final _wire_example_basic_optional_type_i8_twin_sse =
      _wire_example_basic_optional_type_i8_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_isize_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_isize_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_isize_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_isize_twin_sse');
  late final _wire_example_basic_optional_type_isize_twin_sse =
      _wire_example_basic_optional_type_isize_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_string_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_string_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_string_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_string_twin_sse');
  late final _wire_example_basic_optional_type_string_twin_sse =
      _wire_example_basic_optional_type_string_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_u16_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_u16_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_u16_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u16_twin_sse');
  late final _wire_example_basic_optional_type_u16_twin_sse =
      _wire_example_basic_optional_type_u16_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_u32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_u32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_u32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u32_twin_sse');
  late final _wire_example_basic_optional_type_u32_twin_sse =
      _wire_example_basic_optional_type_u32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_u64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_u64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_u64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u64_twin_sse');
  late final _wire_example_basic_optional_type_u64_twin_sse =
      _wire_example_basic_optional_type_u64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_u8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_u8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_u8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u8_twin_sse');
  late final _wire_example_basic_optional_type_u8_twin_sse =
      _wire_example_basic_optional_type_u8_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_optional_type_usize_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_usize_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_usize_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_usize_twin_sse');
  late final _wire_example_basic_optional_type_usize_twin_sse =
      _wire_example_basic_optional_type_usize_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco
      wire_example_basic_optional_type_basic_general_enum_twin_sync_twin_sync(
    ffi.Pointer<wire_cst_basic_general_enum_twin_sync> arg,
  ) {
    return _wire_example_basic_optional_type_basic_general_enum_twin_sync_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_basic_general_enum_twin_sync_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_basic_general_enum_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_general_enum_twin_sync_twin_sync');
  late final _wire_example_basic_optional_type_basic_general_enum_twin_sync_twin_sync =
      _wire_example_basic_optional_type_basic_general_enum_twin_sync_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_basic_general_enum_twin_sync>)>();

  WireSyncRust2DartDco
      wire_example_basic_optional_type_basic_primitive_enum_twin_sync_twin_sync(
    ffi.Pointer<ffi.Int32> arg,
  ) {
    return _wire_example_basic_optional_type_basic_primitive_enum_twin_sync_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_basic_primitive_enum_twin_sync_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int32>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_primitive_enum_twin_sync_twin_sync');
  late final _wire_example_basic_optional_type_basic_primitive_enum_twin_sync_twin_sync =
      _wire_example_basic_optional_type_basic_primitive_enum_twin_sync_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int32>)>();

  WireSyncRust2DartDco
      wire_example_basic_optional_type_basic_struct_twin_sync_twin_sync(
    ffi.Pointer<wire_cst_basic_struct_twin_sync> arg,
  ) {
    return _wire_example_basic_optional_type_basic_struct_twin_sync_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_basic_struct_twin_sync_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_basic_struct_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_struct_twin_sync_twin_sync');
  late final _wire_example_basic_optional_type_basic_struct_twin_sync_twin_sync =
      _wire_example_basic_optional_type_basic_struct_twin_sync_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_basic_struct_twin_sync>)>();

  WireSyncRust2DartDco wire_example_basic_optional_type_bool_twin_sync(
    ffi.Pointer<ffi.Bool> arg,
  ) {
    return _wire_example_basic_optional_type_bool_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_bool_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Bool>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_bool_twin_sync');
  late final _wire_example_basic_optional_type_bool_twin_sync =
      _wire_example_basic_optional_type_bool_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Bool>)>();

  WireSyncRust2DartDco wire_example_basic_optional_type_bytes_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> arg,
  ) {
    return _wire_example_basic_optional_type_bytes_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_bytes_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_bytes_twin_sync');
  late final _wire_example_basic_optional_type_bytes_twin_sync =
      _wire_example_basic_optional_type_bytes_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_example_basic_optional_type_f32_twin_sync(
    ffi.Pointer<ffi.Float> arg,
  ) {
    return _wire_example_basic_optional_type_f32_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_f32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Float>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_f32_twin_sync');
  late final _wire_example_basic_optional_type_f32_twin_sync =
      _wire_example_basic_optional_type_f32_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Float>)>();

  WireSyncRust2DartDco wire_example_basic_optional_type_f64_twin_sync(
    ffi.Pointer<ffi.Double> arg,
  ) {
    return _wire_example_basic_optional_type_f64_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_f64_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Double>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_f64_twin_sync');
  late final _wire_example_basic_optional_type_f64_twin_sync =
      _wire_example_basic_optional_type_f64_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Double>)>();

  WireSyncRust2DartDco wire_example_basic_optional_type_i16_twin_sync(
    ffi.Pointer<ffi.Int16> arg,
  ) {
    return _wire_example_basic_optional_type_i16_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_i16_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i16_twin_sync');
  late final _wire_example_basic_optional_type_i16_twin_sync =
      _wire_example_basic_optional_type_i16_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int16>)>();

  WireSyncRust2DartDco wire_example_basic_optional_type_i32_twin_sync(
    ffi.Pointer<ffi.Int32> arg,
  ) {
    return _wire_example_basic_optional_type_i32_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_i32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i32_twin_sync');
  late final _wire_example_basic_optional_type_i32_twin_sync =
      _wire_example_basic_optional_type_i32_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int32>)>();

  WireSyncRust2DartDco wire_example_basic_optional_type_i64_twin_sync(
    ffi.Pointer<ffi.Int64> arg,
  ) {
    return _wire_example_basic_optional_type_i64_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_i64_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i64_twin_sync');
  late final _wire_example_basic_optional_type_i64_twin_sync =
      _wire_example_basic_optional_type_i64_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int64>)>();

  WireSyncRust2DartDco wire_example_basic_optional_type_i8_twin_sync(
    ffi.Pointer<ffi.Int8> arg,
  ) {
    return _wire_example_basic_optional_type_i8_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_i8_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i8_twin_sync');
  late final _wire_example_basic_optional_type_i8_twin_sync =
      _wire_example_basic_optional_type_i8_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int8>)>();

  WireSyncRust2DartDco wire_example_basic_optional_type_isize_twin_sync(
    ffi.Pointer<ffi.IntPtr> arg,
  ) {
    return _wire_example_basic_optional_type_isize_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_isize_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.IntPtr>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_isize_twin_sync');
  late final _wire_example_basic_optional_type_isize_twin_sync =
      _wire_example_basic_optional_type_isize_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.IntPtr>)>();

  WireSyncRust2DartDco wire_example_basic_optional_type_string_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> arg,
  ) {
    return _wire_example_basic_optional_type_string_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_string_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_string_twin_sync');
  late final _wire_example_basic_optional_type_string_twin_sync =
      _wire_example_basic_optional_type_string_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_example_basic_optional_type_u16_twin_sync(
    ffi.Pointer<ffi.Uint16> arg,
  ) {
    return _wire_example_basic_optional_type_u16_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_u16_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u16_twin_sync');
  late final _wire_example_basic_optional_type_u16_twin_sync =
      _wire_example_basic_optional_type_u16_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint16>)>();

  WireSyncRust2DartDco wire_example_basic_optional_type_u32_twin_sync(
    ffi.Pointer<ffi.Uint32> arg,
  ) {
    return _wire_example_basic_optional_type_u32_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_u32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u32_twin_sync');
  late final _wire_example_basic_optional_type_u32_twin_sync =
      _wire_example_basic_optional_type_u32_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint32>)>();

  WireSyncRust2DartDco wire_example_basic_optional_type_u64_twin_sync(
    ffi.Pointer<ffi.Uint64> arg,
  ) {
    return _wire_example_basic_optional_type_u64_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_u64_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u64_twin_sync');
  late final _wire_example_basic_optional_type_u64_twin_sync =
      _wire_example_basic_optional_type_u64_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint64>)>();

  WireSyncRust2DartDco wire_example_basic_optional_type_u8_twin_sync(
    ffi.Pointer<ffi.Uint8> arg,
  ) {
    return _wire_example_basic_optional_type_u8_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_u8_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u8_twin_sync');
  late final _wire_example_basic_optional_type_u8_twin_sync =
      _wire_example_basic_optional_type_u8_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint8>)>();

  WireSyncRust2DartDco wire_example_basic_optional_type_usize_twin_sync(
    ffi.Pointer<ffi.UintPtr> arg,
  ) {
    return _wire_example_basic_optional_type_usize_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_optional_type_usize_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.UintPtr>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_usize_twin_sync');
  late final _wire_example_basic_optional_type_usize_twin_sync =
      _wire_example_basic_optional_type_usize_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<ffi.UintPtr>)>();

  WireSyncRust2DartSse
      wire_example_basic_optional_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_basic_general_enum_twin_sync_sse_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_general_enum_twin_sync_sse_twin_sync_sse');
  late final _wire_example_basic_optional_type_basic_general_enum_twin_sync_sse_twin_sync_sse =
      _wire_example_basic_optional_type_basic_general_enum_twin_sync_sse_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_example_basic_optional_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_basic_primitive_enum_twin_sync_sse_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse');
  late final _wire_example_basic_optional_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse =
      _wire_example_basic_optional_type_basic_primitive_enum_twin_sync_sse_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_example_basic_optional_type_basic_struct_twin_sync_sse_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_basic_struct_twin_sync_sse_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_basic_struct_twin_sync_sse_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_basic_struct_twin_sync_sse_twin_sync_sse');
  late final _wire_example_basic_optional_type_basic_struct_twin_sync_sse_twin_sync_sse =
      _wire_example_basic_optional_type_basic_struct_twin_sync_sse_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_optional_type_bool_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_bool_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_bool_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_bool_twin_sync_sse');
  late final _wire_example_basic_optional_type_bool_twin_sync_sse =
      _wire_example_basic_optional_type_bool_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_optional_type_bytes_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_bytes_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_bytes_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_bytes_twin_sync_sse');
  late final _wire_example_basic_optional_type_bytes_twin_sync_sse =
      _wire_example_basic_optional_type_bytes_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_optional_type_f32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_f32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_f32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_f32_twin_sync_sse');
  late final _wire_example_basic_optional_type_f32_twin_sync_sse =
      _wire_example_basic_optional_type_f32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_optional_type_f64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_f64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_f64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_f64_twin_sync_sse');
  late final _wire_example_basic_optional_type_f64_twin_sync_sse =
      _wire_example_basic_optional_type_f64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_optional_type_i16_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_i16_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_i16_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i16_twin_sync_sse');
  late final _wire_example_basic_optional_type_i16_twin_sync_sse =
      _wire_example_basic_optional_type_i16_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_optional_type_i32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_i32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_i32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i32_twin_sync_sse');
  late final _wire_example_basic_optional_type_i32_twin_sync_sse =
      _wire_example_basic_optional_type_i32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_optional_type_i64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_i64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_i64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i64_twin_sync_sse');
  late final _wire_example_basic_optional_type_i64_twin_sync_sse =
      _wire_example_basic_optional_type_i64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_optional_type_i8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_i8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_i8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_i8_twin_sync_sse');
  late final _wire_example_basic_optional_type_i8_twin_sync_sse =
      _wire_example_basic_optional_type_i8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_optional_type_isize_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_isize_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_isize_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_isize_twin_sync_sse');
  late final _wire_example_basic_optional_type_isize_twin_sync_sse =
      _wire_example_basic_optional_type_isize_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_optional_type_string_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_string_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_string_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_string_twin_sync_sse');
  late final _wire_example_basic_optional_type_string_twin_sync_sse =
      _wire_example_basic_optional_type_string_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_optional_type_u16_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_u16_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_u16_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u16_twin_sync_sse');
  late final _wire_example_basic_optional_type_u16_twin_sync_sse =
      _wire_example_basic_optional_type_u16_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_optional_type_u32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_u32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_u32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u32_twin_sync_sse');
  late final _wire_example_basic_optional_type_u32_twin_sync_sse =
      _wire_example_basic_optional_type_u32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_optional_type_u64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_u64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_u64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u64_twin_sync_sse');
  late final _wire_example_basic_optional_type_u64_twin_sync_sse =
      _wire_example_basic_optional_type_u64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_optional_type_u8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_u8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_u8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_u8_twin_sync_sse');
  late final _wire_example_basic_optional_type_u8_twin_sync_sse =
      _wire_example_basic_optional_type_u8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_optional_type_usize_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_optional_type_usize_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_optional_type_usize_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_optional_type_usize_twin_sync_sse');
  late final _wire_example_basic_optional_type_usize_twin_sync_sse =
      _wire_example_basic_optional_type_usize_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_example_basic_type_basic_general_enum_twin_rust_async_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_basic_general_enum_twin_rust_async> arg,
  ) {
    return _wire_example_basic_type_basic_general_enum_twin_rust_async_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_basic_general_enum_twin_rust_async_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_basic_general_enum_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_general_enum_twin_rust_async_twin_rust_async');
  late final _wire_example_basic_type_basic_general_enum_twin_rust_async_twin_rust_async =
      _wire_example_basic_type_basic_general_enum_twin_rust_async_twin_rust_asyncPtr
          .asFunction<
              void Function(int,
                  ffi.Pointer<wire_cst_basic_general_enum_twin_rust_async>)>();

  void
      wire_example_basic_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_basic_primitive_enum_twin_rust_async_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_primitive_enum_twin_rust_async_twin_rust_async');
  late final _wire_example_basic_type_basic_primitive_enum_twin_rust_async_twin_rust_async =
      _wire_example_basic_type_basic_primitive_enum_twin_rust_async_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_basic_struct_twin_rust_async_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_basic_struct_twin_rust_async> arg,
  ) {
    return _wire_example_basic_type_basic_struct_twin_rust_async_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_basic_struct_twin_rust_async_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_basic_struct_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_struct_twin_rust_async_twin_rust_async');
  late final _wire_example_basic_type_basic_struct_twin_rust_async_twin_rust_async =
      _wire_example_basic_type_basic_struct_twin_rust_async_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_basic_struct_twin_rust_async>)>();

  void wire_example_basic_type_bool_twin_rust_async(
    int port_,
    bool arg,
  ) {
    return _wire_example_basic_type_bool_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_bool_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_bool_twin_rust_async');
  late final _wire_example_basic_type_bool_twin_rust_async =
      _wire_example_basic_type_bool_twin_rust_asyncPtr
          .asFunction<void Function(int, bool)>();

  void wire_example_basic_type_bytes_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> arg,
  ) {
    return _wire_example_basic_type_bytes_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_bytes_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_bytes_twin_rust_async');
  late final _wire_example_basic_type_bytes_twin_rust_async =
      _wire_example_basic_type_bytes_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void wire_example_basic_type_f32_twin_rust_async(
    int port_,
    double arg,
  ) {
    return _wire_example_basic_type_f32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_f32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Float)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_f32_twin_rust_async');
  late final _wire_example_basic_type_f32_twin_rust_async =
      _wire_example_basic_type_f32_twin_rust_asyncPtr
          .asFunction<void Function(int, double)>();

  void wire_example_basic_type_f64_twin_rust_async(
    int port_,
    double arg,
  ) {
    return _wire_example_basic_type_f64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_f64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Double)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_f64_twin_rust_async');
  late final _wire_example_basic_type_f64_twin_rust_async =
      _wire_example_basic_type_f64_twin_rust_asyncPtr
          .asFunction<void Function(int, double)>();

  void wire_example_basic_type_i16_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_i16_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_i16_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int16)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i16_twin_rust_async');
  late final _wire_example_basic_type_i16_twin_rust_async =
      _wire_example_basic_type_i16_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_i32_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_i32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_i32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i32_twin_rust_async');
  late final _wire_example_basic_type_i32_twin_rust_async =
      _wire_example_basic_type_i32_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_i64_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_i64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_i64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i64_twin_rust_async');
  late final _wire_example_basic_type_i64_twin_rust_async =
      _wire_example_basic_type_i64_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_i8_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_i8_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_i8_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int8)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i8_twin_rust_async');
  late final _wire_example_basic_type_i8_twin_rust_async =
      _wire_example_basic_type_i8_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_isize_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_isize_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_isize_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.IntPtr)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_isize_twin_rust_async');
  late final _wire_example_basic_type_isize_twin_rust_async =
      _wire_example_basic_type_isize_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_string_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> arg,
  ) {
    return _wire_example_basic_type_string_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_string_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_string_twin_rust_async');
  late final _wire_example_basic_type_string_twin_rust_async =
      _wire_example_basic_type_string_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_example_basic_type_u16_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_u16_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_u16_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint16)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u16_twin_rust_async');
  late final _wire_example_basic_type_u16_twin_rust_async =
      _wire_example_basic_type_u16_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_u32_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_u32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_u32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u32_twin_rust_async');
  late final _wire_example_basic_type_u32_twin_rust_async =
      _wire_example_basic_type_u32_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_u64_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_u64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_u64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u64_twin_rust_async');
  late final _wire_example_basic_type_u64_twin_rust_async =
      _wire_example_basic_type_u64_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_u8_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_u8_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_u8_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint8)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u8_twin_rust_async');
  late final _wire_example_basic_type_u8_twin_rust_async =
      _wire_example_basic_type_u8_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_basic_type_usize_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_basic_type_usize_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_basic_type_usize_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_usize_twin_rust_async');
  late final _wire_example_basic_type_usize_twin_rust_async =
      _wire_example_basic_type_usize_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void
      wire_example_basic_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse');
  late final _wire_example_basic_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_sse =
      _wire_example_basic_type_basic_general_enum_twin_rust_async_sse_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_example_basic_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse');
  late final _wire_example_basic_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_sse =
      _wire_example_basic_type_basic_primitive_enum_twin_rust_async_sse_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_example_basic_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_basic_struct_twin_rust_async_sse_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse');
  late final _wire_example_basic_type_basic_struct_twin_rust_async_sse_twin_rust_async_sse =
      _wire_example_basic_type_basic_struct_twin_rust_async_sse_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_bool_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_bool_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_bool_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_bool_twin_rust_async_sse');
  late final _wire_example_basic_type_bool_twin_rust_async_sse =
      _wire_example_basic_type_bool_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_bytes_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_bytes_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_bytes_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_bytes_twin_rust_async_sse');
  late final _wire_example_basic_type_bytes_twin_rust_async_sse =
      _wire_example_basic_type_bytes_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_f32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_f32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_f32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_f32_twin_rust_async_sse');
  late final _wire_example_basic_type_f32_twin_rust_async_sse =
      _wire_example_basic_type_f32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_f64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_f64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_f64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_f64_twin_rust_async_sse');
  late final _wire_example_basic_type_f64_twin_rust_async_sse =
      _wire_example_basic_type_f64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_i16_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_i16_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_i16_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i16_twin_rust_async_sse');
  late final _wire_example_basic_type_i16_twin_rust_async_sse =
      _wire_example_basic_type_i16_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_i32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_i32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_i32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i32_twin_rust_async_sse');
  late final _wire_example_basic_type_i32_twin_rust_async_sse =
      _wire_example_basic_type_i32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_i64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_i64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_i64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i64_twin_rust_async_sse');
  late final _wire_example_basic_type_i64_twin_rust_async_sse =
      _wire_example_basic_type_i64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_i8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_i8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_i8_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i8_twin_rust_async_sse');
  late final _wire_example_basic_type_i8_twin_rust_async_sse =
      _wire_example_basic_type_i8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_isize_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_isize_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_isize_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_isize_twin_rust_async_sse');
  late final _wire_example_basic_type_isize_twin_rust_async_sse =
      _wire_example_basic_type_isize_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_string_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_string_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_string_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_string_twin_rust_async_sse');
  late final _wire_example_basic_type_string_twin_rust_async_sse =
      _wire_example_basic_type_string_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_u16_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_u16_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_u16_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u16_twin_rust_async_sse');
  late final _wire_example_basic_type_u16_twin_rust_async_sse =
      _wire_example_basic_type_u16_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_u32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_u32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_u32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u32_twin_rust_async_sse');
  late final _wire_example_basic_type_u32_twin_rust_async_sse =
      _wire_example_basic_type_u32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_u64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_u64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_u64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u64_twin_rust_async_sse');
  late final _wire_example_basic_type_u64_twin_rust_async_sse =
      _wire_example_basic_type_u64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_u8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_u8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_u8_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u8_twin_rust_async_sse');
  late final _wire_example_basic_type_u8_twin_rust_async_sse =
      _wire_example_basic_type_u8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_usize_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_usize_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_usize_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_usize_twin_rust_async_sse');
  late final _wire_example_basic_type_usize_twin_rust_async_sse =
      _wire_example_basic_type_usize_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_basic_general_enum_twin_sse_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_basic_general_enum_twin_sse_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_basic_general_enum_twin_sse_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_general_enum_twin_sse_twin_sse');
  late final _wire_example_basic_type_basic_general_enum_twin_sse_twin_sse =
      _wire_example_basic_type_basic_general_enum_twin_sse_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_basic_primitive_enum_twin_sse_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_basic_primitive_enum_twin_sse_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_basic_primitive_enum_twin_sse_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_primitive_enum_twin_sse_twin_sse');
  late final _wire_example_basic_type_basic_primitive_enum_twin_sse_twin_sse =
      _wire_example_basic_type_basic_primitive_enum_twin_sse_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_basic_struct_twin_sse_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_basic_struct_twin_sse_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_basic_struct_twin_sse_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_struct_twin_sse_twin_sse');
  late final _wire_example_basic_type_basic_struct_twin_sse_twin_sse =
      _wire_example_basic_type_basic_struct_twin_sse_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_bool_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_bool_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_bool_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_bool_twin_sse');
  late final _wire_example_basic_type_bool_twin_sse =
      _wire_example_basic_type_bool_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_bytes_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_bytes_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_bytes_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_bytes_twin_sse');
  late final _wire_example_basic_type_bytes_twin_sse =
      _wire_example_basic_type_bytes_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_f32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_f32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_f32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_f32_twin_sse');
  late final _wire_example_basic_type_f32_twin_sse =
      _wire_example_basic_type_f32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_f64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_f64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_f64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_f64_twin_sse');
  late final _wire_example_basic_type_f64_twin_sse =
      _wire_example_basic_type_f64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_i16_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_i16_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_i16_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i16_twin_sse');
  late final _wire_example_basic_type_i16_twin_sse =
      _wire_example_basic_type_i16_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_i32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_i32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_i32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i32_twin_sse');
  late final _wire_example_basic_type_i32_twin_sse =
      _wire_example_basic_type_i32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_i64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_i64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_i64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i64_twin_sse');
  late final _wire_example_basic_type_i64_twin_sse =
      _wire_example_basic_type_i64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_i8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_i8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_i8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i8_twin_sse');
  late final _wire_example_basic_type_i8_twin_sse =
      _wire_example_basic_type_i8_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_isize_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_isize_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_isize_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_isize_twin_sse');
  late final _wire_example_basic_type_isize_twin_sse =
      _wire_example_basic_type_isize_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_string_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_string_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_string_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_string_twin_sse');
  late final _wire_example_basic_type_string_twin_sse =
      _wire_example_basic_type_string_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_u16_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_u16_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_u16_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u16_twin_sse');
  late final _wire_example_basic_type_u16_twin_sse =
      _wire_example_basic_type_u16_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_u32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_u32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_u32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u32_twin_sse');
  late final _wire_example_basic_type_u32_twin_sse =
      _wire_example_basic_type_u32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_u64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_u64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_u64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u64_twin_sse');
  late final _wire_example_basic_type_u64_twin_sse =
      _wire_example_basic_type_u64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_u8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_u8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_u8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u8_twin_sse');
  late final _wire_example_basic_type_u8_twin_sse =
      _wire_example_basic_type_u8_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_basic_type_usize_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_usize_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_usize_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_usize_twin_sse');
  late final _wire_example_basic_type_usize_twin_sse =
      _wire_example_basic_type_usize_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco
      wire_example_basic_type_basic_general_enum_twin_sync_twin_sync(
    ffi.Pointer<wire_cst_basic_general_enum_twin_sync> arg,
  ) {
    return _wire_example_basic_type_basic_general_enum_twin_sync_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_basic_general_enum_twin_sync_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_basic_general_enum_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_general_enum_twin_sync_twin_sync');
  late final _wire_example_basic_type_basic_general_enum_twin_sync_twin_sync =
      _wire_example_basic_type_basic_general_enum_twin_sync_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_basic_general_enum_twin_sync>)>();

  WireSyncRust2DartDco
      wire_example_basic_type_basic_primitive_enum_twin_sync_twin_sync(
    int arg,
  ) {
    return _wire_example_basic_type_basic_primitive_enum_twin_sync_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_basic_primitive_enum_twin_sync_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_primitive_enum_twin_sync_twin_sync');
  late final _wire_example_basic_type_basic_primitive_enum_twin_sync_twin_sync =
      _wire_example_basic_type_basic_primitive_enum_twin_sync_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_basic_type_basic_struct_twin_sync_twin_sync(
    ffi.Pointer<wire_cst_basic_struct_twin_sync> arg,
  ) {
    return _wire_example_basic_type_basic_struct_twin_sync_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_basic_struct_twin_sync_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_basic_struct_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_struct_twin_sync_twin_sync');
  late final _wire_example_basic_type_basic_struct_twin_sync_twin_sync =
      _wire_example_basic_type_basic_struct_twin_sync_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_basic_struct_twin_sync>)>();

  WireSyncRust2DartDco wire_example_basic_type_bool_twin_sync(
    bool arg,
  ) {
    return _wire_example_basic_type_bool_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_bool_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_bool_twin_sync');
  late final _wire_example_basic_type_bool_twin_sync =
      _wire_example_basic_type_bool_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(bool)>();

  WireSyncRust2DartDco wire_example_basic_type_bytes_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_loose> arg,
  ) {
    return _wire_example_basic_type_bytes_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_bytes_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_bytes_twin_sync');
  late final _wire_example_basic_type_bytes_twin_sync =
      _wire_example_basic_type_bytes_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  WireSyncRust2DartDco wire_example_basic_type_f32_twin_sync(
    double arg,
  ) {
    return _wire_example_basic_type_f32_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_f32_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Float)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_f32_twin_sync');
  late final _wire_example_basic_type_f32_twin_sync =
      _wire_example_basic_type_f32_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(double)>();

  WireSyncRust2DartDco wire_example_basic_type_f64_twin_sync(
    double arg,
  ) {
    return _wire_example_basic_type_f64_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_f64_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Double)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_f64_twin_sync');
  late final _wire_example_basic_type_f64_twin_sync =
      _wire_example_basic_type_f64_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(double)>();

  WireSyncRust2DartDco wire_example_basic_type_i16_twin_sync(
    int arg,
  ) {
    return _wire_example_basic_type_i16_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_i16_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int16)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_i16_twin_sync');
  late final _wire_example_basic_type_i16_twin_sync =
      _wire_example_basic_type_i16_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_basic_type_i32_twin_sync(
    int arg,
  ) {
    return _wire_example_basic_type_i32_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_i32_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_i32_twin_sync');
  late final _wire_example_basic_type_i32_twin_sync =
      _wire_example_basic_type_i32_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_basic_type_i64_twin_sync(
    int arg,
  ) {
    return _wire_example_basic_type_i64_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_i64_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_i64_twin_sync');
  late final _wire_example_basic_type_i64_twin_sync =
      _wire_example_basic_type_i64_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_basic_type_i8_twin_sync(
    int arg,
  ) {
    return _wire_example_basic_type_i8_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_i8_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int8)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_i8_twin_sync');
  late final _wire_example_basic_type_i8_twin_sync =
      _wire_example_basic_type_i8_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_basic_type_isize_twin_sync(
    int arg,
  ) {
    return _wire_example_basic_type_isize_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_isize_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.IntPtr)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_isize_twin_sync');
  late final _wire_example_basic_type_isize_twin_sync =
      _wire_example_basic_type_isize_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_basic_type_string_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> arg,
  ) {
    return _wire_example_basic_type_string_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_string_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_string_twin_sync');
  late final _wire_example_basic_type_string_twin_sync =
      _wire_example_basic_type_string_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_example_basic_type_u16_twin_sync(
    int arg,
  ) {
    return _wire_example_basic_type_u16_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_u16_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint16)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_u16_twin_sync');
  late final _wire_example_basic_type_u16_twin_sync =
      _wire_example_basic_type_u16_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_basic_type_u32_twin_sync(
    int arg,
  ) {
    return _wire_example_basic_type_u32_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_u32_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_u32_twin_sync');
  late final _wire_example_basic_type_u32_twin_sync =
      _wire_example_basic_type_u32_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_basic_type_u64_twin_sync(
    int arg,
  ) {
    return _wire_example_basic_type_u64_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_u64_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint64)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_u64_twin_sync');
  late final _wire_example_basic_type_u64_twin_sync =
      _wire_example_basic_type_u64_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_basic_type_u8_twin_sync(
    int arg,
  ) {
    return _wire_example_basic_type_u8_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_u8_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint8)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_u8_twin_sync');
  late final _wire_example_basic_type_u8_twin_sync =
      _wire_example_basic_type_u8_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_basic_type_usize_twin_sync(
    int arg,
  ) {
    return _wire_example_basic_type_usize_twin_sync(
      arg,
    );
  }

  late final _wire_example_basic_type_usize_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_usize_twin_sync');
  late final _wire_example_basic_type_usize_twin_sync =
      _wire_example_basic_type_usize_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartSse
      wire_example_basic_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_basic_general_enum_twin_sync_sse_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_basic_general_enum_twin_sync_sse_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_general_enum_twin_sync_sse_twin_sync_sse');
  late final _wire_example_basic_type_basic_general_enum_twin_sync_sse_twin_sync_sse =
      _wire_example_basic_type_basic_general_enum_twin_sync_sse_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_example_basic_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_basic_primitive_enum_twin_sync_sse_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse');
  late final _wire_example_basic_type_basic_primitive_enum_twin_sync_sse_twin_sync_sse =
      _wire_example_basic_type_basic_primitive_enum_twin_sync_sse_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_example_basic_type_basic_struct_twin_sync_sse_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_basic_struct_twin_sync_sse_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_basic_struct_twin_sync_sse_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_basic_type_basic_struct_twin_sync_sse_twin_sync_sse');
  late final _wire_example_basic_type_basic_struct_twin_sync_sse_twin_sync_sse =
      _wire_example_basic_type_basic_struct_twin_sync_sse_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_type_bool_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_bool_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_bool_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_bool_twin_sync_sse');
  late final _wire_example_basic_type_bool_twin_sync_sse =
      _wire_example_basic_type_bool_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_type_bytes_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_bytes_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_bytes_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_bytes_twin_sync_sse');
  late final _wire_example_basic_type_bytes_twin_sync_sse =
      _wire_example_basic_type_bytes_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_type_f32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_f32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_f32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_f32_twin_sync_sse');
  late final _wire_example_basic_type_f32_twin_sync_sse =
      _wire_example_basic_type_f32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_type_f64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_f64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_f64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_f64_twin_sync_sse');
  late final _wire_example_basic_type_f64_twin_sync_sse =
      _wire_example_basic_type_f64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_type_i16_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_i16_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_i16_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i16_twin_sync_sse');
  late final _wire_example_basic_type_i16_twin_sync_sse =
      _wire_example_basic_type_i16_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_type_i32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_i32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_i32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i32_twin_sync_sse');
  late final _wire_example_basic_type_i32_twin_sync_sse =
      _wire_example_basic_type_i32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_type_i64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_i64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_i64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i64_twin_sync_sse');
  late final _wire_example_basic_type_i64_twin_sync_sse =
      _wire_example_basic_type_i64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_type_i8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_i8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_i8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_i8_twin_sync_sse');
  late final _wire_example_basic_type_i8_twin_sync_sse =
      _wire_example_basic_type_i8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_type_isize_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_isize_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_isize_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_isize_twin_sync_sse');
  late final _wire_example_basic_type_isize_twin_sync_sse =
      _wire_example_basic_type_isize_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_type_string_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_string_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_string_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_string_twin_sync_sse');
  late final _wire_example_basic_type_string_twin_sync_sse =
      _wire_example_basic_type_string_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_type_u16_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_u16_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_u16_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u16_twin_sync_sse');
  late final _wire_example_basic_type_u16_twin_sync_sse =
      _wire_example_basic_type_u16_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_type_u32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_u32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_u32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u32_twin_sync_sse');
  late final _wire_example_basic_type_u32_twin_sync_sse =
      _wire_example_basic_type_u32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_type_u64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_u64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_u64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u64_twin_sync_sse');
  late final _wire_example_basic_type_u64_twin_sync_sse =
      _wire_example_basic_type_u64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_type_u8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_u8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_u8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_u8_twin_sync_sse');
  late final _wire_example_basic_type_u8_twin_sync_sse =
      _wire_example_basic_type_u8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_basic_type_usize_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_basic_type_usize_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_basic_type_usize_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_basic_type_usize_twin_sync_sse');
  late final _wire_example_basic_type_usize_twin_sync_sse =
      _wire_example_basic_type_usize_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_input_json_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> raw,
  ) {
    return _wire_benchmark_binary_tree_input_json_twin_normal(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_binary_tree_input_json_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_json_twin_normal');
  late final _wire_benchmark_binary_tree_input_json_twin_normal =
      _wire_benchmark_binary_tree_input_json_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_benchmark_binary_tree_input_protobuf_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> raw,
  ) {
    return _wire_benchmark_binary_tree_input_protobuf_twin_normal(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_binary_tree_input_protobuf_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_protobuf_twin_normal');
  late final _wire_benchmark_binary_tree_input_protobuf_twin_normal =
      _wire_benchmark_binary_tree_input_protobuf_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void wire_benchmark_binary_tree_input_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal> tree,
  ) {
    return _wire_benchmark_binary_tree_input_twin_normal(
      port_,
      tree,
    );
  }

  late final _wire_benchmark_binary_tree_input_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_twin_normal');
  late final _wire_benchmark_binary_tree_input_twin_normal =
      _wire_benchmark_binary_tree_input_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>)>();

  void wire_benchmark_binary_tree_output_json_twin_normal(
    int port_,
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_json_twin_normal(
      port_,
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_json_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_json_twin_normal');
  late final _wire_benchmark_binary_tree_output_json_twin_normal =
      _wire_benchmark_binary_tree_output_json_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_binary_tree_output_protobuf_twin_normal(
    int port_,
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_protobuf_twin_normal(
      port_,
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_protobuf_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_protobuf_twin_normal');
  late final _wire_benchmark_binary_tree_output_protobuf_twin_normal =
      _wire_benchmark_binary_tree_output_protobuf_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_binary_tree_output_twin_normal(
    int port_,
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_twin_normal(
      port_,
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_twin_normal');
  late final _wire_benchmark_binary_tree_output_twin_normal =
      _wire_benchmark_binary_tree_output_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_blob_input_json_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> raw,
  ) {
    return _wire_benchmark_blob_input_json_twin_normal(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_blob_input_json_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_json_twin_normal');
  late final _wire_benchmark_blob_input_json_twin_normal =
      _wire_benchmark_blob_input_json_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_benchmark_blob_input_protobuf_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> raw,
  ) {
    return _wire_benchmark_blob_input_protobuf_twin_normal(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_blob_input_protobuf_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_protobuf_twin_normal');
  late final _wire_benchmark_blob_input_protobuf_twin_normal =
      _wire_benchmark_blob_input_protobuf_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void wire_benchmark_blob_input_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_benchmark_blob_twin_normal> blob,
  ) {
    return _wire_benchmark_blob_input_twin_normal(
      port_,
      blob,
    );
  }

  late final _wire_benchmark_blob_input_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_benchmark_blob_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_twin_normal');
  late final _wire_benchmark_blob_input_twin_normal =
      _wire_benchmark_blob_input_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_benchmark_blob_twin_normal>)>();

  void wire_benchmark_blob_output_json_twin_normal(
    int port_,
    int size,
  ) {
    return _wire_benchmark_blob_output_json_twin_normal(
      port_,
      size,
    );
  }

  late final _wire_benchmark_blob_output_json_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_json_twin_normal');
  late final _wire_benchmark_blob_output_json_twin_normal =
      _wire_benchmark_blob_output_json_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_blob_output_protobuf_twin_normal(
    int port_,
    int size,
  ) {
    return _wire_benchmark_blob_output_protobuf_twin_normal(
      port_,
      size,
    );
  }

  late final _wire_benchmark_blob_output_protobuf_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_protobuf_twin_normal');
  late final _wire_benchmark_blob_output_protobuf_twin_normal =
      _wire_benchmark_blob_output_protobuf_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_blob_output_twin_normal(
    int port_,
    int size,
  ) {
    return _wire_benchmark_blob_output_twin_normal(
      port_,
      size,
    );
  }

  late final _wire_benchmark_blob_output_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_twin_normal');
  late final _wire_benchmark_blob_output_twin_normal =
      _wire_benchmark_blob_output_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_input_bytes_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> bytes,
  ) {
    return _wire_benchmark_input_bytes_twin_normal(
      port_,
      bytes,
    );
  }

  late final _wire_benchmark_input_bytes_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_input_bytes_twin_normal');
  late final _wire_benchmark_input_bytes_twin_normal =
      _wire_benchmark_input_bytes_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void wire_benchmark_output_bytes_twin_normal(
    int port_,
    int size,
  ) {
    return _wire_benchmark_output_bytes_twin_normal(
      port_,
      size,
    );
  }

  late final _wire_benchmark_output_bytes_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_output_bytes_twin_normal');
  late final _wire_benchmark_output_bytes_twin_normal =
      _wire_benchmark_output_bytes_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_void_twin_normal(
    int port_,
  ) {
    return _wire_benchmark_void_twin_normal(
      port_,
    );
  }

  late final _wire_benchmark_void_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_void_twin_normal');
  late final _wire_benchmark_void_twin_normal =
      _wire_benchmark_void_twin_normalPtr.asFunction<void Function(int)>();

  void wire_benchmark_binary_tree_input_json_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> raw,
  ) {
    return _wire_benchmark_binary_tree_input_json_twin_rust_async(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_binary_tree_input_json_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_json_twin_rust_async');
  late final _wire_benchmark_binary_tree_input_json_twin_rust_async =
      _wire_benchmark_binary_tree_input_json_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_benchmark_binary_tree_input_protobuf_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> raw,
  ) {
    return _wire_benchmark_binary_tree_input_protobuf_twin_rust_async(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_binary_tree_input_protobuf_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_protobuf_twin_rust_async');
  late final _wire_benchmark_binary_tree_input_protobuf_twin_rust_async =
      _wire_benchmark_binary_tree_input_protobuf_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void wire_benchmark_binary_tree_input_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async> tree,
  ) {
    return _wire_benchmark_binary_tree_input_twin_rust_async(
      port_,
      tree,
    );
  }

  late final _wire_benchmark_binary_tree_input_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_benchmark_binary_tree_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_twin_rust_async');
  late final _wire_benchmark_binary_tree_input_twin_rust_async =
      _wire_benchmark_binary_tree_input_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>)>();

  void wire_benchmark_binary_tree_output_json_twin_rust_async(
    int port_,
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_json_twin_rust_async(
      port_,
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_json_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_json_twin_rust_async');
  late final _wire_benchmark_binary_tree_output_json_twin_rust_async =
      _wire_benchmark_binary_tree_output_json_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_binary_tree_output_protobuf_twin_rust_async(
    int port_,
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_protobuf_twin_rust_async(
      port_,
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_protobuf_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_protobuf_twin_rust_async');
  late final _wire_benchmark_binary_tree_output_protobuf_twin_rust_async =
      _wire_benchmark_binary_tree_output_protobuf_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_binary_tree_output_twin_rust_async(
    int port_,
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_twin_rust_async(
      port_,
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_twin_rust_async');
  late final _wire_benchmark_binary_tree_output_twin_rust_async =
      _wire_benchmark_binary_tree_output_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_blob_input_json_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> raw,
  ) {
    return _wire_benchmark_blob_input_json_twin_rust_async(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_blob_input_json_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_json_twin_rust_async');
  late final _wire_benchmark_blob_input_json_twin_rust_async =
      _wire_benchmark_blob_input_json_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_benchmark_blob_input_protobuf_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> raw,
  ) {
    return _wire_benchmark_blob_input_protobuf_twin_rust_async(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_blob_input_protobuf_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_protobuf_twin_rust_async');
  late final _wire_benchmark_blob_input_protobuf_twin_rust_async =
      _wire_benchmark_blob_input_protobuf_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void wire_benchmark_blob_input_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async> blob,
  ) {
    return _wire_benchmark_blob_input_twin_rust_async(
      port_,
      blob,
    );
  }

  late final _wire_benchmark_blob_input_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_twin_rust_async');
  late final _wire_benchmark_blob_input_twin_rust_async =
      _wire_benchmark_blob_input_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async>)>();

  void wire_benchmark_blob_output_json_twin_rust_async(
    int port_,
    int size,
  ) {
    return _wire_benchmark_blob_output_json_twin_rust_async(
      port_,
      size,
    );
  }

  late final _wire_benchmark_blob_output_json_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_json_twin_rust_async');
  late final _wire_benchmark_blob_output_json_twin_rust_async =
      _wire_benchmark_blob_output_json_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_blob_output_protobuf_twin_rust_async(
    int port_,
    int size,
  ) {
    return _wire_benchmark_blob_output_protobuf_twin_rust_async(
      port_,
      size,
    );
  }

  late final _wire_benchmark_blob_output_protobuf_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_protobuf_twin_rust_async');
  late final _wire_benchmark_blob_output_protobuf_twin_rust_async =
      _wire_benchmark_blob_output_protobuf_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_blob_output_twin_rust_async(
    int port_,
    int size,
  ) {
    return _wire_benchmark_blob_output_twin_rust_async(
      port_,
      size,
    );
  }

  late final _wire_benchmark_blob_output_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_twin_rust_async');
  late final _wire_benchmark_blob_output_twin_rust_async =
      _wire_benchmark_blob_output_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_input_bytes_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> bytes,
  ) {
    return _wire_benchmark_input_bytes_twin_rust_async(
      port_,
      bytes,
    );
  }

  late final _wire_benchmark_input_bytes_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_input_bytes_twin_rust_async');
  late final _wire_benchmark_input_bytes_twin_rust_async =
      _wire_benchmark_input_bytes_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void wire_benchmark_output_bytes_twin_rust_async(
    int port_,
    int size,
  ) {
    return _wire_benchmark_output_bytes_twin_rust_async(
      port_,
      size,
    );
  }

  late final _wire_benchmark_output_bytes_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_output_bytes_twin_rust_async');
  late final _wire_benchmark_output_bytes_twin_rust_async =
      _wire_benchmark_output_bytes_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_void_twin_rust_async(
    int port_,
  ) {
    return _wire_benchmark_void_twin_rust_async(
      port_,
    );
  }

  late final _wire_benchmark_void_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_void_twin_rust_async');
  late final _wire_benchmark_void_twin_rust_async =
      _wire_benchmark_void_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_benchmark_binary_tree_input_json_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_json_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_json_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_json_twin_rust_async_sse');
  late final _wire_benchmark_binary_tree_input_json_twin_rust_async_sse =
      _wire_benchmark_binary_tree_input_json_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_input_protobuf_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_protobuf_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_protobuf_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_protobuf_twin_rust_async_sse');
  late final _wire_benchmark_binary_tree_input_protobuf_twin_rust_async_sse =
      _wire_benchmark_binary_tree_input_protobuf_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_input_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_twin_rust_async_sse');
  late final _wire_benchmark_binary_tree_input_twin_rust_async_sse =
      _wire_benchmark_binary_tree_input_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_output_json_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_json_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_json_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_json_twin_rust_async_sse');
  late final _wire_benchmark_binary_tree_output_json_twin_rust_async_sse =
      _wire_benchmark_binary_tree_output_json_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_output_protobuf_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_protobuf_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_protobuf_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_protobuf_twin_rust_async_sse');
  late final _wire_benchmark_binary_tree_output_protobuf_twin_rust_async_sse =
      _wire_benchmark_binary_tree_output_protobuf_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_output_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_twin_rust_async_sse');
  late final _wire_benchmark_binary_tree_output_twin_rust_async_sse =
      _wire_benchmark_binary_tree_output_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_input_json_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_json_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_json_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_json_twin_rust_async_sse');
  late final _wire_benchmark_blob_input_json_twin_rust_async_sse =
      _wire_benchmark_blob_input_json_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_input_protobuf_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_protobuf_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_protobuf_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_protobuf_twin_rust_async_sse');
  late final _wire_benchmark_blob_input_protobuf_twin_rust_async_sse =
      _wire_benchmark_blob_input_protobuf_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_input_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_twin_rust_async_sse');
  late final _wire_benchmark_blob_input_twin_rust_async_sse =
      _wire_benchmark_blob_input_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_output_json_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_json_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_json_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_json_twin_rust_async_sse');
  late final _wire_benchmark_blob_output_json_twin_rust_async_sse =
      _wire_benchmark_blob_output_json_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_output_protobuf_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_protobuf_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_protobuf_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_protobuf_twin_rust_async_sse');
  late final _wire_benchmark_blob_output_protobuf_twin_rust_async_sse =
      _wire_benchmark_blob_output_protobuf_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_output_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_twin_rust_async_sse');
  late final _wire_benchmark_blob_output_twin_rust_async_sse =
      _wire_benchmark_blob_output_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_input_bytes_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_input_bytes_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_input_bytes_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_input_bytes_twin_rust_async_sse');
  late final _wire_benchmark_input_bytes_twin_rust_async_sse =
      _wire_benchmark_input_bytes_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_output_bytes_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_output_bytes_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_output_bytes_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_output_bytes_twin_rust_async_sse');
  late final _wire_benchmark_output_bytes_twin_rust_async_sse =
      _wire_benchmark_output_bytes_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_void_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_void_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_void_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_void_twin_rust_async_sse');
  late final _wire_benchmark_void_twin_rust_async_sse =
      _wire_benchmark_void_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_input_json_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_json_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_json_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_json_twin_sse');
  late final _wire_benchmark_binary_tree_input_json_twin_sse =
      _wire_benchmark_binary_tree_input_json_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_input_protobuf_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_protobuf_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_protobuf_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_protobuf_twin_sse');
  late final _wire_benchmark_binary_tree_input_protobuf_twin_sse =
      _wire_benchmark_binary_tree_input_protobuf_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_input_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_twin_sse');
  late final _wire_benchmark_binary_tree_input_twin_sse =
      _wire_benchmark_binary_tree_input_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_output_json_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_json_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_json_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_json_twin_sse');
  late final _wire_benchmark_binary_tree_output_json_twin_sse =
      _wire_benchmark_binary_tree_output_json_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_output_protobuf_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_protobuf_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_protobuf_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_protobuf_twin_sse');
  late final _wire_benchmark_binary_tree_output_protobuf_twin_sse =
      _wire_benchmark_binary_tree_output_protobuf_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_output_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_twin_sse');
  late final _wire_benchmark_binary_tree_output_twin_sse =
      _wire_benchmark_binary_tree_output_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_input_json_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_json_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_json_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_json_twin_sse');
  late final _wire_benchmark_blob_input_json_twin_sse =
      _wire_benchmark_blob_input_json_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_input_protobuf_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_protobuf_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_protobuf_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_protobuf_twin_sse');
  late final _wire_benchmark_blob_input_protobuf_twin_sse =
      _wire_benchmark_blob_input_protobuf_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_input_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_twin_sse');
  late final _wire_benchmark_blob_input_twin_sse =
      _wire_benchmark_blob_input_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_output_json_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_json_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_json_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_json_twin_sse');
  late final _wire_benchmark_blob_output_json_twin_sse =
      _wire_benchmark_blob_output_json_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_output_protobuf_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_protobuf_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_protobuf_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_protobuf_twin_sse');
  late final _wire_benchmark_blob_output_protobuf_twin_sse =
      _wire_benchmark_blob_output_protobuf_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_output_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_twin_sse');
  late final _wire_benchmark_blob_output_twin_sse =
      _wire_benchmark_blob_output_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_input_bytes_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_input_bytes_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_input_bytes_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_input_bytes_twin_sse');
  late final _wire_benchmark_input_bytes_twin_sse =
      _wire_benchmark_input_bytes_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_output_bytes_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_output_bytes_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_output_bytes_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_output_bytes_twin_sse');
  late final _wire_benchmark_output_bytes_twin_sse =
      _wire_benchmark_output_bytes_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_void_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_void_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_void_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_void_twin_sse');
  late final _wire_benchmark_void_twin_sse = _wire_benchmark_void_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_benchmark_binary_tree_input_json_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> raw,
  ) {
    return _wire_benchmark_binary_tree_input_json_twin_sync(
      raw,
    );
  }

  late final _wire_benchmark_binary_tree_input_json_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_json_twin_sync');
  late final _wire_benchmark_binary_tree_input_json_twin_sync =
      _wire_benchmark_binary_tree_input_json_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_benchmark_binary_tree_input_protobuf_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_loose> raw,
  ) {
    return _wire_benchmark_binary_tree_input_protobuf_twin_sync(
      raw,
    );
  }

  late final _wire_benchmark_binary_tree_input_protobuf_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_protobuf_twin_sync');
  late final _wire_benchmark_binary_tree_input_protobuf_twin_sync =
      _wire_benchmark_binary_tree_input_protobuf_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  WireSyncRust2DartDco wire_benchmark_binary_tree_input_twin_sync(
    ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync> tree,
  ) {
    return _wire_benchmark_binary_tree_input_twin_sync(
      tree,
    );
  }

  late final _wire_benchmark_binary_tree_input_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_twin_sync');
  late final _wire_benchmark_binary_tree_input_twin_sync =
      _wire_benchmark_binary_tree_input_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>)>();

  WireSyncRust2DartDco wire_benchmark_binary_tree_output_json_twin_sync(
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_json_twin_sync(
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_json_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_json_twin_sync');
  late final _wire_benchmark_binary_tree_output_json_twin_sync =
      _wire_benchmark_binary_tree_output_json_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_benchmark_binary_tree_output_protobuf_twin_sync(
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_protobuf_twin_sync(
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_protobuf_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_protobuf_twin_sync');
  late final _wire_benchmark_binary_tree_output_protobuf_twin_sync =
      _wire_benchmark_binary_tree_output_protobuf_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_benchmark_binary_tree_output_twin_sync(
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_twin_sync(
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_twin_sync');
  late final _wire_benchmark_binary_tree_output_twin_sync =
      _wire_benchmark_binary_tree_output_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_benchmark_blob_input_json_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> raw,
  ) {
    return _wire_benchmark_blob_input_json_twin_sync(
      raw,
    );
  }

  late final _wire_benchmark_blob_input_json_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_json_twin_sync');
  late final _wire_benchmark_blob_input_json_twin_sync =
      _wire_benchmark_blob_input_json_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_benchmark_blob_input_protobuf_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_loose> raw,
  ) {
    return _wire_benchmark_blob_input_protobuf_twin_sync(
      raw,
    );
  }

  late final _wire_benchmark_blob_input_protobuf_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_protobuf_twin_sync');
  late final _wire_benchmark_blob_input_protobuf_twin_sync =
      _wire_benchmark_blob_input_protobuf_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  WireSyncRust2DartDco wire_benchmark_blob_input_twin_sync(
    ffi.Pointer<wire_cst_benchmark_blob_twin_sync> blob,
  ) {
    return _wire_benchmark_blob_input_twin_sync(
      blob,
    );
  }

  late final _wire_benchmark_blob_input_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_benchmark_blob_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_twin_sync');
  late final _wire_benchmark_blob_input_twin_sync =
      _wire_benchmark_blob_input_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_benchmark_blob_twin_sync>)>();

  WireSyncRust2DartDco wire_benchmark_blob_output_json_twin_sync(
    int size,
  ) {
    return _wire_benchmark_blob_output_json_twin_sync(
      size,
    );
  }

  late final _wire_benchmark_blob_output_json_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_json_twin_sync');
  late final _wire_benchmark_blob_output_json_twin_sync =
      _wire_benchmark_blob_output_json_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_benchmark_blob_output_protobuf_twin_sync(
    int size,
  ) {
    return _wire_benchmark_blob_output_protobuf_twin_sync(
      size,
    );
  }

  late final _wire_benchmark_blob_output_protobuf_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_protobuf_twin_sync');
  late final _wire_benchmark_blob_output_protobuf_twin_sync =
      _wire_benchmark_blob_output_protobuf_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_benchmark_blob_output_twin_sync(
    int size,
  ) {
    return _wire_benchmark_blob_output_twin_sync(
      size,
    );
  }

  late final _wire_benchmark_blob_output_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_twin_sync');
  late final _wire_benchmark_blob_output_twin_sync =
      _wire_benchmark_blob_output_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_benchmark_input_bytes_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_loose> bytes,
  ) {
    return _wire_benchmark_input_bytes_twin_sync(
      bytes,
    );
  }

  late final _wire_benchmark_input_bytes_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_input_bytes_twin_sync');
  late final _wire_benchmark_input_bytes_twin_sync =
      _wire_benchmark_input_bytes_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  WireSyncRust2DartDco wire_benchmark_output_bytes_twin_sync(
    int size,
  ) {
    return _wire_benchmark_output_bytes_twin_sync(
      size,
    );
  }

  late final _wire_benchmark_output_bytes_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_output_bytes_twin_sync');
  late final _wire_benchmark_output_bytes_twin_sync =
      _wire_benchmark_output_bytes_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_benchmark_void_twin_sync() {
    return _wire_benchmark_void_twin_sync();
  }

  late final _wire_benchmark_void_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_void_twin_sync');
  late final _wire_benchmark_void_twin_sync = _wire_benchmark_void_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartSse wire_benchmark_binary_tree_input_json_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_json_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_json_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_json_twin_sync_sse');
  late final _wire_benchmark_binary_tree_input_json_twin_sync_sse =
      _wire_benchmark_binary_tree_input_json_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_binary_tree_input_protobuf_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_protobuf_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_protobuf_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_protobuf_twin_sync_sse');
  late final _wire_benchmark_binary_tree_input_protobuf_twin_sync_sse =
      _wire_benchmark_binary_tree_input_protobuf_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_binary_tree_input_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_twin_sync_sse');
  late final _wire_benchmark_binary_tree_input_twin_sync_sse =
      _wire_benchmark_binary_tree_input_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_binary_tree_output_json_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_json_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_json_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_json_twin_sync_sse');
  late final _wire_benchmark_binary_tree_output_json_twin_sync_sse =
      _wire_benchmark_binary_tree_output_json_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_binary_tree_output_protobuf_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_protobuf_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_protobuf_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_protobuf_twin_sync_sse');
  late final _wire_benchmark_binary_tree_output_protobuf_twin_sync_sse =
      _wire_benchmark_binary_tree_output_protobuf_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_binary_tree_output_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_twin_sync_sse');
  late final _wire_benchmark_binary_tree_output_twin_sync_sse =
      _wire_benchmark_binary_tree_output_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_blob_input_json_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_json_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_json_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_json_twin_sync_sse');
  late final _wire_benchmark_blob_input_json_twin_sync_sse =
      _wire_benchmark_blob_input_json_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_blob_input_protobuf_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_protobuf_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_protobuf_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_protobuf_twin_sync_sse');
  late final _wire_benchmark_blob_input_protobuf_twin_sync_sse =
      _wire_benchmark_blob_input_protobuf_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_blob_input_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_twin_sync_sse');
  late final _wire_benchmark_blob_input_twin_sync_sse =
      _wire_benchmark_blob_input_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_blob_output_json_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_json_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_json_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_json_twin_sync_sse');
  late final _wire_benchmark_blob_output_json_twin_sync_sse =
      _wire_benchmark_blob_output_json_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_blob_output_protobuf_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_protobuf_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_protobuf_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_protobuf_twin_sync_sse');
  late final _wire_benchmark_blob_output_protobuf_twin_sync_sse =
      _wire_benchmark_blob_output_protobuf_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_blob_output_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_twin_sync_sse');
  late final _wire_benchmark_blob_output_twin_sync_sse =
      _wire_benchmark_blob_output_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_input_bytes_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_input_bytes_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_input_bytes_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_input_bytes_twin_sync_sse');
  late final _wire_benchmark_input_bytes_twin_sync_sse =
      _wire_benchmark_input_bytes_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_output_bytes_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_output_bytes_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_output_bytes_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_output_bytes_twin_sync_sse');
  late final _wire_benchmark_output_bytes_twin_sync_sse =
      _wire_benchmark_output_bytes_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_void_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_void_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_void_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_void_twin_sync_sse');
  late final _wire_benchmark_void_twin_sync_sse =
      _wire_benchmark_void_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_datetime_local_twin_rust_async(
    int port_,
    int d,
  ) {
    return _wire_datetime_local_twin_rust_async(
      port_,
      d,
    );
  }

  late final _wire_datetime_local_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_datetime_local_twin_rust_async');
  late final _wire_datetime_local_twin_rust_async =
      _wire_datetime_local_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_datetime_utc_twin_rust_async(
    int port_,
    int d,
  ) {
    return _wire_datetime_utc_twin_rust_async(
      port_,
      d,
    );
  }

  late final _wire_datetime_utc_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_datetime_utc_twin_rust_async');
  late final _wire_datetime_utc_twin_rust_async =
      _wire_datetime_utc_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_duration_twin_rust_async(
    int port_,
    int d,
  ) {
    return _wire_duration_twin_rust_async(
      port_,
      d,
    );
  }

  late final _wire_duration_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_duration_twin_rust_async');
  late final _wire_duration_twin_rust_async =
      _wire_duration_twin_rust_asyncPtr.asFunction<void Function(int, int)>();

  void wire_handle_durations_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_Chrono_Duration> durations,
    int since,
  ) {
    return _wire_handle_durations_twin_rust_async(
      port_,
      durations,
      since,
    );
  }

  late final _wire_handle_durations_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_Chrono_Duration>, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_durations_twin_rust_async');
  late final _wire_handle_durations_twin_rust_async =
      _wire_handle_durations_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_Chrono_Duration>, int)>();

  void wire_handle_timestamps_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_Chrono_Naive> timestamps,
    int epoch,
  ) {
    return _wire_handle_timestamps_twin_rust_async(
      port_,
      timestamps,
      epoch,
    );
  }

  late final _wire_handle_timestamps_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_Chrono_Naive>, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_timestamps_twin_rust_async');
  late final _wire_handle_timestamps_twin_rust_async =
      _wire_handle_timestamps_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_Chrono_Naive>, int)>();

  void wire_how_long_does_it_take_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_feature_chrono_twin_rust_async> mine,
  ) {
    return _wire_how_long_does_it_take_twin_rust_async(
      port_,
      mine,
    );
  }

  late final _wire_how_long_does_it_take_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_feature_chrono_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_how_long_does_it_take_twin_rust_async');
  late final _wire_how_long_does_it_take_twin_rust_async =
      _wire_how_long_does_it_take_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_feature_chrono_twin_rust_async>)>();

  void wire_naivedatetime_twin_rust_async(
    int port_,
    int d,
  ) {
    return _wire_naivedatetime_twin_rust_async(
      port_,
      d,
    );
  }

  late final _wire_naivedatetime_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_naivedatetime_twin_rust_async');
  late final _wire_naivedatetime_twin_rust_async =
      _wire_naivedatetime_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_optional_empty_datetime_utc_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Int64> d,
  ) {
    return _wire_optional_empty_datetime_utc_twin_rust_async(
      port_,
      d,
    );
  }

  late final _wire_optional_empty_datetime_utc_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int64>)>>(
      'frbgen_frb_example_pure_dart_wire_optional_empty_datetime_utc_twin_rust_async');
  late final _wire_optional_empty_datetime_utc_twin_rust_async =
      _wire_optional_empty_datetime_utc_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int64>)>();

  void wire_test_chrono_twin_rust_async(
    int port_,
  ) {
    return _wire_test_chrono_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_chrono_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_chrono_twin_rust_async');
  late final _wire_test_chrono_twin_rust_async =
      _wire_test_chrono_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_test_precise_chrono_twin_rust_async(
    int port_,
  ) {
    return _wire_test_precise_chrono_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_precise_chrono_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_precise_chrono_twin_rust_async');
  late final _wire_test_precise_chrono_twin_rust_async =
      _wire_test_precise_chrono_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_datetime_local_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_datetime_local_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_datetime_local_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_datetime_local_twin_rust_async_sse');
  late final _wire_datetime_local_twin_rust_async_sse =
      _wire_datetime_local_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_datetime_utc_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_datetime_utc_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_datetime_utc_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_datetime_utc_twin_rust_async_sse');
  late final _wire_datetime_utc_twin_rust_async_sse =
      _wire_datetime_utc_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_duration_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_duration_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_duration_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_duration_twin_rust_async_sse');
  late final _wire_duration_twin_rust_async_sse =
      _wire_duration_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_durations_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_durations_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_durations_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_durations_twin_rust_async_sse');
  late final _wire_handle_durations_twin_rust_async_sse =
      _wire_handle_durations_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_timestamps_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_timestamps_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_timestamps_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_timestamps_twin_rust_async_sse');
  late final _wire_handle_timestamps_twin_rust_async_sse =
      _wire_handle_timestamps_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_how_long_does_it_take_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_how_long_does_it_take_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_how_long_does_it_take_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_how_long_does_it_take_twin_rust_async_sse');
  late final _wire_how_long_does_it_take_twin_rust_async_sse =
      _wire_how_long_does_it_take_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_naivedatetime_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_naivedatetime_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_naivedatetime_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_naivedatetime_twin_rust_async_sse');
  late final _wire_naivedatetime_twin_rust_async_sse =
      _wire_naivedatetime_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_optional_empty_datetime_utc_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_optional_empty_datetime_utc_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_optional_empty_datetime_utc_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_optional_empty_datetime_utc_twin_rust_async_sse');
  late final _wire_optional_empty_datetime_utc_twin_rust_async_sse =
      _wire_optional_empty_datetime_utc_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_chrono_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_chrono_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_chrono_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_chrono_twin_rust_async_sse');
  late final _wire_test_chrono_twin_rust_async_sse =
      _wire_test_chrono_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_precise_chrono_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_precise_chrono_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_precise_chrono_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_precise_chrono_twin_rust_async_sse');
  late final _wire_test_precise_chrono_twin_rust_async_sse =
      _wire_test_precise_chrono_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_datetime_local_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_datetime_local_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_datetime_local_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_datetime_local_twin_sse');
  late final _wire_datetime_local_twin_sse = _wire_datetime_local_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_datetime_utc_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_datetime_utc_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_datetime_utc_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_datetime_utc_twin_sse');
  late final _wire_datetime_utc_twin_sse = _wire_datetime_utc_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_duration_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_duration_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_duration_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_duration_twin_sse');
  late final _wire_duration_twin_sse = _wire_duration_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_durations_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_durations_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_durations_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_durations_twin_sse');
  late final _wire_handle_durations_twin_sse =
      _wire_handle_durations_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_timestamps_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_timestamps_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_timestamps_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_timestamps_twin_sse');
  late final _wire_handle_timestamps_twin_sse =
      _wire_handle_timestamps_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_how_long_does_it_take_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_how_long_does_it_take_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_how_long_does_it_take_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_how_long_does_it_take_twin_sse');
  late final _wire_how_long_does_it_take_twin_sse =
      _wire_how_long_does_it_take_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_naivedatetime_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_naivedatetime_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_naivedatetime_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_naivedatetime_twin_sse');
  late final _wire_naivedatetime_twin_sse = _wire_naivedatetime_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_optional_empty_datetime_utc_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_optional_empty_datetime_utc_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_optional_empty_datetime_utc_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_optional_empty_datetime_utc_twin_sse');
  late final _wire_optional_empty_datetime_utc_twin_sse =
      _wire_optional_empty_datetime_utc_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_chrono_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_chrono_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_chrono_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_chrono_twin_sse');
  late final _wire_test_chrono_twin_sse = _wire_test_chrono_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_precise_chrono_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_precise_chrono_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_precise_chrono_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_precise_chrono_twin_sse');
  late final _wire_test_precise_chrono_twin_sse =
      _wire_test_precise_chrono_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_datetime_local_twin_sync(
    int d,
  ) {
    return _wire_datetime_local_twin_sync(
      d,
    );
  }

  late final _wire_datetime_local_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_datetime_local_twin_sync');
  late final _wire_datetime_local_twin_sync = _wire_datetime_local_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_datetime_utc_twin_sync(
    int d,
  ) {
    return _wire_datetime_utc_twin_sync(
      d,
    );
  }

  late final _wire_datetime_utc_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_datetime_utc_twin_sync');
  late final _wire_datetime_utc_twin_sync = _wire_datetime_utc_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_duration_twin_sync(
    int d,
  ) {
    return _wire_duration_twin_sync(
      d,
    );
  }

  late final _wire_duration_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_duration_twin_sync');
  late final _wire_duration_twin_sync = _wire_duration_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_handle_durations_twin_sync(
    ffi.Pointer<wire_cst_list_Chrono_Duration> durations,
    int since,
  ) {
    return _wire_handle_durations_twin_sync(
      durations,
      since,
    );
  }

  late final _wire_handle_durations_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_Chrono_Duration>, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_durations_twin_sync');
  late final _wire_handle_durations_twin_sync =
      _wire_handle_durations_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_Chrono_Duration>, int)>();

  WireSyncRust2DartDco wire_handle_timestamps_twin_sync(
    ffi.Pointer<wire_cst_list_Chrono_Naive> timestamps,
    int epoch,
  ) {
    return _wire_handle_timestamps_twin_sync(
      timestamps,
      epoch,
    );
  }

  late final _wire_handle_timestamps_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_Chrono_Naive>, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_timestamps_twin_sync');
  late final _wire_handle_timestamps_twin_sync =
      _wire_handle_timestamps_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_Chrono_Naive>, int)>();

  WireSyncRust2DartDco wire_how_long_does_it_take_twin_sync(
    ffi.Pointer<wire_cst_feature_chrono_twin_sync> mine,
  ) {
    return _wire_how_long_does_it_take_twin_sync(
      mine,
    );
  }

  late final _wire_how_long_does_it_take_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_feature_chrono_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_how_long_does_it_take_twin_sync');
  late final _wire_how_long_does_it_take_twin_sync =
      _wire_how_long_does_it_take_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_feature_chrono_twin_sync>)>();

  WireSyncRust2DartDco wire_naivedatetime_twin_sync(
    int d,
  ) {
    return _wire_naivedatetime_twin_sync(
      d,
    );
  }

  late final _wire_naivedatetime_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_naivedatetime_twin_sync');
  late final _wire_naivedatetime_twin_sync = _wire_naivedatetime_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_optional_empty_datetime_utc_twin_sync(
    ffi.Pointer<ffi.Int64> d,
  ) {
    return _wire_optional_empty_datetime_utc_twin_sync(
      d,
    );
  }

  late final _wire_optional_empty_datetime_utc_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int64>)>>(
      'frbgen_frb_example_pure_dart_wire_optional_empty_datetime_utc_twin_sync');
  late final _wire_optional_empty_datetime_utc_twin_sync =
      _wire_optional_empty_datetime_utc_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int64>)>();

  WireSyncRust2DartDco wire_test_chrono_twin_sync() {
    return _wire_test_chrono_twin_sync();
  }

  late final _wire_test_chrono_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_test_chrono_twin_sync');
  late final _wire_test_chrono_twin_sync = _wire_test_chrono_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_test_precise_chrono_twin_sync() {
    return _wire_test_precise_chrono_twin_sync();
  }

  late final _wire_test_precise_chrono_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_test_precise_chrono_twin_sync');
  late final _wire_test_precise_chrono_twin_sync =
      _wire_test_precise_chrono_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartSse wire_datetime_local_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_datetime_local_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_datetime_local_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_datetime_local_twin_sync_sse');
  late final _wire_datetime_local_twin_sync_sse =
      _wire_datetime_local_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_datetime_utc_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_datetime_utc_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_datetime_utc_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_datetime_utc_twin_sync_sse');
  late final _wire_datetime_utc_twin_sync_sse =
      _wire_datetime_utc_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_duration_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_duration_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_duration_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_duration_twin_sync_sse');
  late final _wire_duration_twin_sync_sse =
      _wire_duration_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_durations_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_durations_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_durations_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_durations_twin_sync_sse');
  late final _wire_handle_durations_twin_sync_sse =
      _wire_handle_durations_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_timestamps_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_timestamps_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_timestamps_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_timestamps_twin_sync_sse');
  late final _wire_handle_timestamps_twin_sync_sse =
      _wire_handle_timestamps_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_how_long_does_it_take_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_how_long_does_it_take_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_how_long_does_it_take_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_how_long_does_it_take_twin_sync_sse');
  late final _wire_how_long_does_it_take_twin_sync_sse =
      _wire_how_long_does_it_take_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_naivedatetime_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_naivedatetime_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_naivedatetime_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_naivedatetime_twin_sync_sse');
  late final _wire_naivedatetime_twin_sync_sse =
      _wire_naivedatetime_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_optional_empty_datetime_utc_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_optional_empty_datetime_utc_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_optional_empty_datetime_utc_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_optional_empty_datetime_utc_twin_sync_sse');
  late final _wire_optional_empty_datetime_utc_twin_sync_sse =
      _wire_optional_empty_datetime_utc_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_chrono_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_chrono_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_chrono_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_chrono_twin_sync_sse');
  late final _wire_test_chrono_twin_sync_sse =
      _wire_test_chrono_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_precise_chrono_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_precise_chrono_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_precise_chrono_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_precise_chrono_twin_sync_sse');
  late final _wire_test_precise_chrono_twin_sync_sse =
      _wire_test_precise_chrono_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async> that,
  ) {
    return _wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_struct_with_comments_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_async');
  late final _wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_async =
      _wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_struct_with_comments_twin_rust_async>)>();

  void wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_async(
    int port_,
  ) {
    return _wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_async(
      port_,
    );
  }

  late final _wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_async');
  late final _wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_async =
      _wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_function_with_comments_slash_star_star_twin_rust_async(
    int port_,
  ) {
    return _wire_function_with_comments_slash_star_star_twin_rust_async(
      port_,
    );
  }

  late final _wire_function_with_comments_slash_star_star_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_slash_star_star_twin_rust_async');
  late final _wire_function_with_comments_slash_star_star_twin_rust_async =
      _wire_function_with_comments_slash_star_star_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_function_with_comments_triple_slash_multi_line_twin_rust_async(
    int port_,
  ) {
    return _wire_function_with_comments_triple_slash_multi_line_twin_rust_async(
      port_,
    );
  }

  late final _wire_function_with_comments_triple_slash_multi_line_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_multi_line_twin_rust_async');
  late final _wire_function_with_comments_triple_slash_multi_line_twin_rust_async =
      _wire_function_with_comments_triple_slash_multi_line_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_function_with_comments_triple_slash_single_line_twin_rust_async(
    int port_,
  ) {
    return _wire_function_with_comments_triple_slash_single_line_twin_rust_async(
      port_,
    );
  }

  late final _wire_function_with_comments_triple_slash_single_line_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_single_line_twin_rust_async');
  late final _wire_function_with_comments_triple_slash_single_line_twin_rust_async =
      _wire_function_with_comments_triple_slash_single_line_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void
      wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_sse');
  late final _wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_sse =
      _wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_sse');
  late final _wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_sse =
      _wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_function_with_comments_slash_star_star_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_slash_star_star_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_slash_star_star_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_slash_star_star_twin_rust_async_sse');
  late final _wire_function_with_comments_slash_star_star_twin_rust_async_sse =
      _wire_function_with_comments_slash_star_star_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_function_with_comments_triple_slash_multi_line_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_triple_slash_multi_line_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_triple_slash_multi_line_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_multi_line_twin_rust_async_sse');
  late final _wire_function_with_comments_triple_slash_multi_line_twin_rust_async_sse =
      _wire_function_with_comments_triple_slash_multi_line_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_function_with_comments_triple_slash_single_line_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_triple_slash_single_line_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_triple_slash_single_line_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_single_line_twin_rust_async_sse');
  late final _wire_function_with_comments_triple_slash_single_line_twin_rust_async_sse =
      _wire_function_with_comments_triple_slash_single_line_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_StructWithCommentsTwinSse_instance_method_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_StructWithCommentsTwinSse_instance_method_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_StructWithCommentsTwinSse_instance_method_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinSse_instance_method_twin_sse');
  late final _wire_StructWithCommentsTwinSse_instance_method_twin_sse =
      _wire_StructWithCommentsTwinSse_instance_method_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_StructWithCommentsTwinSse_static_method_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_StructWithCommentsTwinSse_static_method_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_StructWithCommentsTwinSse_static_method_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinSse_static_method_twin_sse');
  late final _wire_StructWithCommentsTwinSse_static_method_twin_sse =
      _wire_StructWithCommentsTwinSse_static_method_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_function_with_comments_slash_star_star_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_slash_star_star_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_slash_star_star_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_function_with_comments_slash_star_star_twin_sse');
  late final _wire_function_with_comments_slash_star_star_twin_sse =
      _wire_function_with_comments_slash_star_star_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_function_with_comments_triple_slash_multi_line_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_triple_slash_multi_line_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_triple_slash_multi_line_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_multi_line_twin_sse');
  late final _wire_function_with_comments_triple_slash_multi_line_twin_sse =
      _wire_function_with_comments_triple_slash_multi_line_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_function_with_comments_triple_slash_single_line_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_triple_slash_single_line_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_triple_slash_single_line_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_single_line_twin_sse');
  late final _wire_function_with_comments_triple_slash_single_line_twin_sse =
      _wire_function_with_comments_triple_slash_single_line_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco
      wire_StructWithCommentsTwinSync_instance_method_twin_sync(
    ffi.Pointer<wire_cst_struct_with_comments_twin_sync> that,
  ) {
    return _wire_StructWithCommentsTwinSync_instance_method_twin_sync(
      that,
    );
  }

  late final _wire_StructWithCommentsTwinSync_instance_method_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_struct_with_comments_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinSync_instance_method_twin_sync');
  late final _wire_StructWithCommentsTwinSync_instance_method_twin_sync =
      _wire_StructWithCommentsTwinSync_instance_method_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_struct_with_comments_twin_sync>)>();

  WireSyncRust2DartDco
      wire_StructWithCommentsTwinSync_static_method_twin_sync() {
    return _wire_StructWithCommentsTwinSync_static_method_twin_sync();
  }

  late final _wire_StructWithCommentsTwinSync_static_method_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinSync_static_method_twin_sync');
  late final _wire_StructWithCommentsTwinSync_static_method_twin_sync =
      _wire_StructWithCommentsTwinSync_static_method_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_function_with_comments_slash_star_star_twin_sync() {
    return _wire_function_with_comments_slash_star_star_twin_sync();
  }

  late final _wire_function_with_comments_slash_star_star_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_function_with_comments_slash_star_star_twin_sync');
  late final _wire_function_with_comments_slash_star_star_twin_sync =
      _wire_function_with_comments_slash_star_star_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_function_with_comments_triple_slash_multi_line_twin_sync() {
    return _wire_function_with_comments_triple_slash_multi_line_twin_sync();
  }

  late final _wire_function_with_comments_triple_slash_multi_line_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_multi_line_twin_sync');
  late final _wire_function_with_comments_triple_slash_multi_line_twin_sync =
      _wire_function_with_comments_triple_slash_multi_line_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_function_with_comments_triple_slash_single_line_twin_sync() {
    return _wire_function_with_comments_triple_slash_single_line_twin_sync();
  }

  late final _wire_function_with_comments_triple_slash_single_line_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_single_line_twin_sync');
  late final _wire_function_with_comments_triple_slash_single_line_twin_sync =
      _wire_function_with_comments_triple_slash_single_line_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartSse
      wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_sse');
  late final _wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_sse =
      _wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_sse');
  late final _wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_sse =
      _wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_function_with_comments_slash_star_star_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_slash_star_star_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_slash_star_star_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_slash_star_star_twin_sync_sse');
  late final _wire_function_with_comments_slash_star_star_twin_sync_sse =
      _wire_function_with_comments_slash_star_star_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_function_with_comments_triple_slash_multi_line_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_triple_slash_multi_line_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_triple_slash_multi_line_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_multi_line_twin_sync_sse');
  late final _wire_function_with_comments_triple_slash_multi_line_twin_sync_sse =
      _wire_function_with_comments_triple_slash_multi_line_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_function_with_comments_triple_slash_single_line_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_triple_slash_single_line_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_triple_slash_single_line_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_single_line_twin_sync_sse');
  late final _wire_function_with_comments_triple_slash_single_line_twin_sync_sse =
      _wire_function_with_comments_triple_slash_single_line_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_dart_dynamic_twin_rust_async(
    int port_,
  ) {
    return _wire_return_dart_dynamic_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_dart_dynamic_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_dart_dynamic_twin_rust_async');
  late final _wire_return_dart_dynamic_twin_rust_async =
      _wire_return_dart_dynamic_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  WireSyncRust2DartDco wire_return_dart_dynamic_twin_sync() {
    return _wire_return_dart_dynamic_twin_sync();
  }

  late final _wire_return_dart_dynamic_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_return_dart_dynamic_twin_sync');
  late final _wire_return_dart_dynamic_twin_sync =
      _wire_return_dart_dynamic_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  void wire_rust_call_dart_loopback_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_loopback_twin_rust_async(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_loopback_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_loopback_twin_rust_async');
  late final _wire_rust_call_dart_loopback_twin_rust_async =
      _wire_rust_call_dart_loopback_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_multi_times_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> callback,
    int num_times,
  ) {
    return _wire_rust_call_dart_multi_times_twin_rust_async(
      port_,
      callback,
      num_times,
    );
  }

  late final _wire_rust_call_dart_multi_times_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_multi_times_twin_rust_async');
  late final _wire_rust_call_dart_multi_times_twin_rust_async =
      _wire_rust_call_dart_multi_times_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>, int)>();

  void wire_rust_call_dart_one_arg_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_one_arg_twin_rust_async(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_one_arg_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_one_arg_twin_rust_async');
  late final _wire_rust_call_dart_one_arg_twin_rust_async =
      _wire_rust_call_dart_one_arg_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_return_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_return_twin_rust_async(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_return_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_return_twin_rust_async');
  late final _wire_rust_call_dart_return_twin_rust_async =
      _wire_rust_call_dart_return_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_simple_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_simple_twin_rust_async(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_simple_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_simple_twin_rust_async');
  late final _wire_rust_call_dart_simple_twin_rust_async =
      _wire_rust_call_dart_simple_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_two_args_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_two_args_twin_rust_async(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_two_args_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_two_args_twin_rust_async');
  late final _wire_rust_call_dart_two_args_twin_rust_async =
      _wire_rust_call_dart_two_args_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> input,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async(
      port_,
      input,
      callback,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async');
  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async =
      _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_with_dart_opaque_result_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_result_twin_rust_async(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_result_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_result_twin_rust_async');
  late final _wire_rust_call_dart_with_dart_opaque_result_twin_rust_async =
      _wire_rust_call_dart_with_dart_opaque_result_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_loopback_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_loopback_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_loopback_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_loopback_twin_rust_async_sse');
  late final _wire_rust_call_dart_loopback_twin_rust_async_sse =
      _wire_rust_call_dart_loopback_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_multi_times_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_multi_times_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_multi_times_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_multi_times_twin_rust_async_sse');
  late final _wire_rust_call_dart_multi_times_twin_rust_async_sse =
      _wire_rust_call_dart_multi_times_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_one_arg_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_one_arg_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_one_arg_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_one_arg_twin_rust_async_sse');
  late final _wire_rust_call_dart_one_arg_twin_rust_async_sse =
      _wire_rust_call_dart_one_arg_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_return_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_return_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_return_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_return_twin_rust_async_sse');
  late final _wire_rust_call_dart_return_twin_rust_async_sse =
      _wire_rust_call_dart_return_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_simple_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_simple_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_simple_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_simple_twin_rust_async_sse');
  late final _wire_rust_call_dart_simple_twin_rust_async_sse =
      _wire_rust_call_dart_simple_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_two_args_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_two_args_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_two_args_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_two_args_twin_rust_async_sse');
  late final _wire_rust_call_dart_two_args_twin_rust_async_sse =
      _wire_rust_call_dart_two_args_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_sse');
  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_sse =
      _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_sse');
  late final _wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_sse =
      _wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_loopback_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_loopback_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_loopback_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_loopback_twin_sse');
  late final _wire_rust_call_dart_loopback_twin_sse =
      _wire_rust_call_dart_loopback_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_multi_times_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_multi_times_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_multi_times_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_multi_times_twin_sse');
  late final _wire_rust_call_dart_multi_times_twin_sse =
      _wire_rust_call_dart_multi_times_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_one_arg_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_one_arg_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_one_arg_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_one_arg_twin_sse');
  late final _wire_rust_call_dart_one_arg_twin_sse =
      _wire_rust_call_dart_one_arg_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_return_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_return_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_return_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_return_twin_sse');
  late final _wire_rust_call_dart_return_twin_sse =
      _wire_rust_call_dart_return_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_simple_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_simple_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_simple_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_simple_twin_sse');
  late final _wire_rust_call_dart_simple_twin_sse =
      _wire_rust_call_dart_simple_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_two_args_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_two_args_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_two_args_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_two_args_twin_sse');
  late final _wire_rust_call_dart_two_args_twin_sse =
      _wire_rust_call_dart_two_args_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_with_dart_opaque_arg_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_arg_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_arg_twin_sse');
  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_sse =
      _wire_rust_call_dart_with_dart_opaque_arg_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_with_dart_opaque_result_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_result_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_result_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_result_twin_sse');
  late final _wire_rust_call_dart_with_dart_opaque_result_twin_sse =
      _wire_rust_call_dart_with_dart_opaque_result_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_accept_dart_opaque_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_accept_dart_opaque_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_accept_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_accept_dart_opaque_twin_sse');
  late final _wire_sync_accept_dart_opaque_twin_sse =
      _wire_sync_accept_dart_opaque_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_loopback_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_loopback_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_loopback_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_loopback_twin_sse');
  late final _wire_sync_loopback_twin_sse =
      _wire_sync_loopback_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_option_dart_opaque_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_option_dart_opaque_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_option_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_option_dart_opaque_twin_sse');
  late final _wire_sync_option_dart_opaque_twin_sse =
      _wire_sync_option_dart_opaque_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_option_loopback_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_option_loopback_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_option_loopback_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_option_loopback_twin_sse');
  late final _wire_sync_option_loopback_twin_sse =
      _wire_sync_option_loopback_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_unwrap_dart_opaque_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_unwrap_dart_opaque_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_unwrap_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_dart_opaque_twin_sse');
  late final _wire_unwrap_dart_opaque_twin_sse =
      _wire_unwrap_dart_opaque_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_async_accept_dart_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_async_accept_dart_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_async_accept_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_async_accept_dart_opaque_twin_rust_async');
  late final _wire_async_accept_dart_opaque_twin_rust_async =
      _wire_async_accept_dart_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_clone_dart_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_clone_dart_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_clone_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_clone_dart_opaque_twin_rust_async');
  late final _wire_clone_dart_opaque_twin_rust_async =
      _wire_clone_dart_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_create_enum_dart_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_create_enum_dart_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_create_enum_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_create_enum_dart_opaque_twin_rust_async');
  late final _wire_create_enum_dart_opaque_twin_rust_async =
      _wire_create_enum_dart_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_create_nested_dart_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque1,
    ffi.Pointer<ffi.Void> opaque2,
  ) {
    return _wire_create_nested_dart_opaque_twin_rust_async(
      port_,
      opaque1,
      opaque2,
    );
  }

  late final _wire_create_nested_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_dart_opaque_twin_rust_async');
  late final _wire_create_nested_dart_opaque_twin_rust_async =
      _wire_create_nested_dart_opaque_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  void wire_drop_static_dart_opaque_twin_rust_async(
    int port_,
    int id,
  ) {
    return _wire_drop_static_dart_opaque_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_drop_static_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_drop_static_dart_opaque_twin_rust_async');
  late final _wire_drop_static_dart_opaque_twin_rust_async =
      _wire_drop_static_dart_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_get_enum_dart_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async> opaque,
  ) {
    return _wire_get_enum_dart_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_get_enum_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_get_enum_dart_opaque_twin_rust_async');
  late final _wire_get_enum_dart_opaque_twin_rust_async =
      _wire_get_enum_dart_opaque_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async>)>();

  void wire_get_nested_dart_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async> opaque,
  ) {
    return _wire_get_nested_dart_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_get_nested_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_get_nested_dart_opaque_twin_rust_async');
  late final _wire_get_nested_dart_opaque_twin_rust_async =
      _wire_get_nested_dart_opaque_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async>)>();

  void wire_loop_back_array_get_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_DartOpaque> opaque,
  ) {
    return _wire_loop_back_array_get_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_array_get_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_DartOpaque>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_get_twin_rust_async');
  late final _wire_loop_back_array_get_twin_rust_async =
      _wire_loop_back_array_get_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_DartOpaque>)>();

  void wire_loop_back_array_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_array_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_array_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_twin_rust_async');
  late final _wire_loop_back_array_twin_rust_async =
      _wire_loop_back_array_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_loop_back_option_get_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Pointer<ffi.Void>> opaque,
  ) {
    return _wire_loop_back_option_get_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_option_get_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Pointer<ffi.Void>>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_get_twin_rust_async');
  late final _wire_loop_back_option_get_twin_rust_async =
      _wire_loop_back_option_get_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Pointer<ffi.Void>>)>();

  void wire_loop_back_option_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_option_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_option_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_twin_rust_async');
  late final _wire_loop_back_option_twin_rust_async =
      _wire_loop_back_option_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_loop_back_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_twin_rust_async');
  late final _wire_loop_back_twin_rust_async =
      _wire_loop_back_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_loop_back_vec_get_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_DartOpaque> opaque,
  ) {
    return _wire_loop_back_vec_get_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_vec_get_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_DartOpaque>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_get_twin_rust_async');
  late final _wire_loop_back_vec_get_twin_rust_async =
      _wire_loop_back_vec_get_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_DartOpaque>)>();

  void wire_loop_back_vec_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_vec_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_vec_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_twin_rust_async');
  late final _wire_loop_back_vec_twin_rust_async =
      _wire_loop_back_vec_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_panic_unwrap_dart_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_panic_unwrap_dart_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_panic_unwrap_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_panic_unwrap_dart_opaque_twin_rust_async');
  late final _wire_panic_unwrap_dart_opaque_twin_rust_async =
      _wire_panic_unwrap_dart_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_set_static_dart_opaque_twin_rust_async(
    int port_,
    int id,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_set_static_dart_opaque_twin_rust_async(
      port_,
      id,
      opaque,
    );
  }

  late final _wire_set_static_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Int32, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_set_static_dart_opaque_twin_rust_async');
  late final _wire_set_static_dart_opaque_twin_rust_async =
      _wire_set_static_dart_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, int, ffi.Pointer<ffi.Void>)>();

  void wire_async_accept_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_async_accept_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_async_accept_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_async_accept_dart_opaque_twin_rust_async_sse');
  late final _wire_async_accept_dart_opaque_twin_rust_async_sse =
      _wire_async_accept_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_clone_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_clone_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_clone_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_clone_dart_opaque_twin_rust_async_sse');
  late final _wire_clone_dart_opaque_twin_rust_async_sse =
      _wire_clone_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_enum_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_enum_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_enum_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_enum_dart_opaque_twin_rust_async_sse');
  late final _wire_create_enum_dart_opaque_twin_rust_async_sse =
      _wire_create_enum_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_nested_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_nested_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_nested_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_dart_opaque_twin_rust_async_sse');
  late final _wire_create_nested_dart_opaque_twin_rust_async_sse =
      _wire_create_nested_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_drop_static_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_drop_static_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_drop_static_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_drop_static_dart_opaque_twin_rust_async_sse');
  late final _wire_drop_static_dart_opaque_twin_rust_async_sse =
      _wire_drop_static_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_enum_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_enum_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_enum_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_enum_dart_opaque_twin_rust_async_sse');
  late final _wire_get_enum_dart_opaque_twin_rust_async_sse =
      _wire_get_enum_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_nested_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_nested_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_nested_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_nested_dart_opaque_twin_rust_async_sse');
  late final _wire_get_nested_dart_opaque_twin_rust_async_sse =
      _wire_get_nested_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_array_get_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_array_get_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_array_get_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_get_twin_rust_async_sse');
  late final _wire_loop_back_array_get_twin_rust_async_sse =
      _wire_loop_back_array_get_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_array_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_array_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_array_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_twin_rust_async_sse');
  late final _wire_loop_back_array_twin_rust_async_sse =
      _wire_loop_back_array_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_option_get_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_option_get_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_option_get_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_get_twin_rust_async_sse');
  late final _wire_loop_back_option_get_twin_rust_async_sse =
      _wire_loop_back_option_get_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_option_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_option_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_option_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_twin_rust_async_sse');
  late final _wire_loop_back_option_twin_rust_async_sse =
      _wire_loop_back_option_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_twin_rust_async_sse');
  late final _wire_loop_back_twin_rust_async_sse =
      _wire_loop_back_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_vec_get_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_vec_get_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_vec_get_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_get_twin_rust_async_sse');
  late final _wire_loop_back_vec_get_twin_rust_async_sse =
      _wire_loop_back_vec_get_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_vec_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_vec_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_vec_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_twin_rust_async_sse');
  late final _wire_loop_back_vec_twin_rust_async_sse =
      _wire_loop_back_vec_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_panic_unwrap_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_panic_unwrap_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_panic_unwrap_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_panic_unwrap_dart_opaque_twin_rust_async_sse');
  late final _wire_panic_unwrap_dart_opaque_twin_rust_async_sse =
      _wire_panic_unwrap_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_set_static_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_set_static_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_set_static_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_set_static_dart_opaque_twin_rust_async_sse');
  late final _wire_set_static_dart_opaque_twin_rust_async_sse =
      _wire_set_static_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_async_accept_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_async_accept_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_async_accept_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_async_accept_dart_opaque_twin_sse');
  late final _wire_async_accept_dart_opaque_twin_sse =
      _wire_async_accept_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_clone_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_clone_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_clone_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_clone_dart_opaque_twin_sse');
  late final _wire_clone_dart_opaque_twin_sse =
      _wire_clone_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_enum_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_enum_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_enum_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_enum_dart_opaque_twin_sse');
  late final _wire_create_enum_dart_opaque_twin_sse =
      _wire_create_enum_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_nested_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_nested_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_nested_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_dart_opaque_twin_sse');
  late final _wire_create_nested_dart_opaque_twin_sse =
      _wire_create_nested_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_drop_static_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_drop_static_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_drop_static_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_drop_static_dart_opaque_twin_sse');
  late final _wire_drop_static_dart_opaque_twin_sse =
      _wire_drop_static_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_enum_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_enum_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_enum_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_enum_dart_opaque_twin_sse');
  late final _wire_get_enum_dart_opaque_twin_sse =
      _wire_get_enum_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_nested_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_nested_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_nested_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_nested_dart_opaque_twin_sse');
  late final _wire_get_nested_dart_opaque_twin_sse =
      _wire_get_nested_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_array_get_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_array_get_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_array_get_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_get_twin_sse');
  late final _wire_loop_back_array_get_twin_sse =
      _wire_loop_back_array_get_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_array_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_array_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_array_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_twin_sse');
  late final _wire_loop_back_array_twin_sse = _wire_loop_back_array_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_option_get_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_option_get_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_option_get_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_get_twin_sse');
  late final _wire_loop_back_option_get_twin_sse =
      _wire_loop_back_option_get_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_option_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_option_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_option_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_twin_sse');
  late final _wire_loop_back_option_twin_sse =
      _wire_loop_back_option_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_twin_sse');
  late final _wire_loop_back_twin_sse = _wire_loop_back_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_vec_get_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_vec_get_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_vec_get_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_get_twin_sse');
  late final _wire_loop_back_vec_get_twin_sse =
      _wire_loop_back_vec_get_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_vec_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_vec_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_vec_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_twin_sse');
  late final _wire_loop_back_vec_twin_sse = _wire_loop_back_vec_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_panic_unwrap_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_panic_unwrap_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_panic_unwrap_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_panic_unwrap_dart_opaque_twin_sse');
  late final _wire_panic_unwrap_dart_opaque_twin_sse =
      _wire_panic_unwrap_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_set_static_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_set_static_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_set_static_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_set_static_dart_opaque_twin_sse');
  late final _wire_set_static_dart_opaque_twin_sse =
      _wire_set_static_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_async_accept_dart_opaque_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_async_accept_dart_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_async_accept_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_async_accept_dart_opaque_twin_sync');
  late final _wire_async_accept_dart_opaque_twin_sync =
      _wire_async_accept_dart_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_clone_dart_opaque_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_clone_dart_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_clone_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_clone_dart_opaque_twin_sync');
  late final _wire_clone_dart_opaque_twin_sync =
      _wire_clone_dart_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_create_enum_dart_opaque_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_create_enum_dart_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_create_enum_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_create_enum_dart_opaque_twin_sync');
  late final _wire_create_enum_dart_opaque_twin_sync =
      _wire_create_enum_dart_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_create_nested_dart_opaque_twin_sync(
    ffi.Pointer<ffi.Void> opaque1,
    ffi.Pointer<ffi.Void> opaque2,
  ) {
    return _wire_create_nested_dart_opaque_twin_sync(
      opaque1,
      opaque2,
    );
  }

  late final _wire_create_nested_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_dart_opaque_twin_sync');
  late final _wire_create_nested_dart_opaque_twin_sync =
      _wire_create_nested_dart_opaque_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_drop_static_dart_opaque_twin_sync(
    int id,
  ) {
    return _wire_drop_static_dart_opaque_twin_sync(
      id,
    );
  }

  late final _wire_drop_static_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_drop_static_dart_opaque_twin_sync');
  late final _wire_drop_static_dart_opaque_twin_sync =
      _wire_drop_static_dart_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_get_enum_dart_opaque_twin_sync(
    ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync> opaque,
  ) {
    return _wire_get_enum_dart_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_get_enum_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_get_enum_dart_opaque_twin_sync');
  late final _wire_get_enum_dart_opaque_twin_sync =
      _wire_get_enum_dart_opaque_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync>)>();

  WireSyncRust2DartDco wire_get_nested_dart_opaque_twin_sync(
    ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync> opaque,
  ) {
    return _wire_get_nested_dart_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_get_nested_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_get_nested_dart_opaque_twin_sync');
  late final _wire_get_nested_dart_opaque_twin_sync =
      _wire_get_nested_dart_opaque_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync>)>();

  WireSyncRust2DartDco wire_loop_back_array_get_twin_sync(
    ffi.Pointer<wire_cst_list_DartOpaque> opaque,
  ) {
    return _wire_loop_back_array_get_twin_sync(
      opaque,
    );
  }

  late final _wire_loop_back_array_get_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_DartOpaque>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_get_twin_sync');
  late final _wire_loop_back_array_get_twin_sync =
      _wire_loop_back_array_get_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_DartOpaque>)>();

  WireSyncRust2DartDco wire_loop_back_array_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_array_twin_sync(
      opaque,
    );
  }

  late final _wire_loop_back_array_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_twin_sync');
  late final _wire_loop_back_array_twin_sync =
      _wire_loop_back_array_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_loop_back_option_get_twin_sync(
    ffi.Pointer<ffi.Pointer<ffi.Void>> opaque,
  ) {
    return _wire_loop_back_option_get_twin_sync(
      opaque,
    );
  }

  late final _wire_loop_back_option_get_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Pointer<ffi.Void>>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_get_twin_sync');
  late final _wire_loop_back_option_get_twin_sync =
      _wire_loop_back_option_get_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<ffi.Pointer<ffi.Void>>)>();

  WireSyncRust2DartDco wire_loop_back_option_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_option_twin_sync(
      opaque,
    );
  }

  late final _wire_loop_back_option_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_twin_sync');
  late final _wire_loop_back_option_twin_sync =
      _wire_loop_back_option_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_loop_back_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_twin_sync(
      opaque,
    );
  }

  late final _wire_loop_back_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_twin_sync');
  late final _wire_loop_back_twin_sync = _wire_loop_back_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_loop_back_vec_get_twin_sync(
    ffi.Pointer<wire_cst_list_DartOpaque> opaque,
  ) {
    return _wire_loop_back_vec_get_twin_sync(
      opaque,
    );
  }

  late final _wire_loop_back_vec_get_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_DartOpaque>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_get_twin_sync');
  late final _wire_loop_back_vec_get_twin_sync =
      _wire_loop_back_vec_get_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_DartOpaque>)>();

  WireSyncRust2DartDco wire_loop_back_vec_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_vec_twin_sync(
      opaque,
    );
  }

  late final _wire_loop_back_vec_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_twin_sync');
  late final _wire_loop_back_vec_twin_sync = _wire_loop_back_vec_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_panic_unwrap_dart_opaque_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_panic_unwrap_dart_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_panic_unwrap_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_panic_unwrap_dart_opaque_twin_sync');
  late final _wire_panic_unwrap_dart_opaque_twin_sync =
      _wire_panic_unwrap_dart_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_set_static_dart_opaque_twin_sync(
    int id,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_set_static_dart_opaque_twin_sync(
      id,
      opaque,
    );
  }

  late final _wire_set_static_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Int32, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_set_static_dart_opaque_twin_sync');
  late final _wire_set_static_dart_opaque_twin_sync =
      _wire_set_static_dart_opaque_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(int, ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartSse wire_async_accept_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_async_accept_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_async_accept_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_async_accept_dart_opaque_twin_sync_sse');
  late final _wire_async_accept_dart_opaque_twin_sync_sse =
      _wire_async_accept_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_clone_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_clone_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_clone_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_clone_dart_opaque_twin_sync_sse');
  late final _wire_clone_dart_opaque_twin_sync_sse =
      _wire_clone_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_create_enum_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_enum_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_enum_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_enum_dart_opaque_twin_sync_sse');
  late final _wire_create_enum_dart_opaque_twin_sync_sse =
      _wire_create_enum_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_create_nested_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_nested_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_nested_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_dart_opaque_twin_sync_sse');
  late final _wire_create_nested_dart_opaque_twin_sync_sse =
      _wire_create_nested_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_drop_static_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_drop_static_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_drop_static_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_drop_static_dart_opaque_twin_sync_sse');
  late final _wire_drop_static_dart_opaque_twin_sync_sse =
      _wire_drop_static_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_enum_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_enum_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_enum_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_enum_dart_opaque_twin_sync_sse');
  late final _wire_get_enum_dart_opaque_twin_sync_sse =
      _wire_get_enum_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_nested_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_nested_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_nested_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_nested_dart_opaque_twin_sync_sse');
  late final _wire_get_nested_dart_opaque_twin_sync_sse =
      _wire_get_nested_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_loop_back_array_get_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_array_get_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_array_get_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_get_twin_sync_sse');
  late final _wire_loop_back_array_get_twin_sync_sse =
      _wire_loop_back_array_get_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_loop_back_array_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_array_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_array_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_twin_sync_sse');
  late final _wire_loop_back_array_twin_sync_sse =
      _wire_loop_back_array_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_loop_back_option_get_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_option_get_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_option_get_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_get_twin_sync_sse');
  late final _wire_loop_back_option_get_twin_sync_sse =
      _wire_loop_back_option_get_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_loop_back_option_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_option_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_option_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_twin_sync_sse');
  late final _wire_loop_back_option_twin_sync_sse =
      _wire_loop_back_option_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_loop_back_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_twin_sync_sse');
  late final _wire_loop_back_twin_sync_sse =
      _wire_loop_back_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_loop_back_vec_get_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_vec_get_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_vec_get_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_get_twin_sync_sse');
  late final _wire_loop_back_vec_get_twin_sync_sse =
      _wire_loop_back_vec_get_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_loop_back_vec_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_vec_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_vec_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_twin_sync_sse');
  late final _wire_loop_back_vec_twin_sync_sse =
      _wire_loop_back_vec_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_panic_unwrap_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_panic_unwrap_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_panic_unwrap_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_panic_unwrap_dart_opaque_twin_sync_sse');
  late final _wire_panic_unwrap_dart_opaque_twin_sync_sse =
      _wire_panic_unwrap_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_set_static_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_set_static_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_set_static_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_set_static_dart_opaque_twin_sync_sse');
  late final _wire_set_static_dart_opaque_twin_sync_sse =
      _wire_set_static_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_DroppableTwinRustAsync_create_stream_twin_rust_async(
    int port_,
    int that,
  ) {
    return _wire_DroppableTwinRustAsync_create_stream_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_DroppableTwinRustAsync_create_stream_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_DroppableTwinRustAsync_create_stream_twin_rust_async');
  late final _wire_DroppableTwinRustAsync_create_stream_twin_rust_async =
      _wire_DroppableTwinRustAsync_create_stream_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_DroppableTwinRustAsync_get_drop_count_twin_rust_async(
    int port_,
  ) {
    return _wire_DroppableTwinRustAsync_get_drop_count_twin_rust_async(
      port_,
    );
  }

  late final _wire_DroppableTwinRustAsync_get_drop_count_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_DroppableTwinRustAsync_get_drop_count_twin_rust_async');
  late final _wire_DroppableTwinRustAsync_get_drop_count_twin_rust_async =
      _wire_DroppableTwinRustAsync_get_drop_count_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_DroppableTwinRustAsync_new_twin_rust_async(
    int port_,
  ) {
    return _wire_DroppableTwinRustAsync_new_twin_rust_async(
      port_,
    );
  }

  late final _wire_DroppableTwinRustAsync_new_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinRustAsync_new_twin_rust_async');
  late final _wire_DroppableTwinRustAsync_new_twin_rust_async =
      _wire_DroppableTwinRustAsync_new_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_DroppableTwinRustAsync_simple_method_twin_rust_async(
    int port_,
    int that,
  ) {
    return _wire_DroppableTwinRustAsync_simple_method_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_DroppableTwinRustAsync_simple_method_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_DroppableTwinRustAsync_simple_method_twin_rust_async');
  late final _wire_DroppableTwinRustAsync_simple_method_twin_rust_async =
      _wire_DroppableTwinRustAsync_simple_method_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_DroppableTwinRustAsyncSse_create_stream_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_DroppableTwinRustAsyncSse_create_stream_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_DroppableTwinRustAsyncSse_create_stream_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_DroppableTwinRustAsyncSse_create_stream_twin_rust_async_sse');
  late final _wire_DroppableTwinRustAsyncSse_create_stream_twin_rust_async_sse =
      _wire_DroppableTwinRustAsyncSse_create_stream_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_DroppableTwinRustAsyncSse_get_drop_count_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_DroppableTwinRustAsyncSse_get_drop_count_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_DroppableTwinRustAsyncSse_get_drop_count_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_DroppableTwinRustAsyncSse_get_drop_count_twin_rust_async_sse');
  late final _wire_DroppableTwinRustAsyncSse_get_drop_count_twin_rust_async_sse =
      _wire_DroppableTwinRustAsyncSse_get_drop_count_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_DroppableTwinRustAsyncSse_new_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_DroppableTwinRustAsyncSse_new_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_DroppableTwinRustAsyncSse_new_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinRustAsyncSse_new_twin_rust_async_sse');
  late final _wire_DroppableTwinRustAsyncSse_new_twin_rust_async_sse =
      _wire_DroppableTwinRustAsyncSse_new_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_DroppableTwinRustAsyncSse_simple_method_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_DroppableTwinRustAsyncSse_simple_method_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_DroppableTwinRustAsyncSse_simple_method_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_DroppableTwinRustAsyncSse_simple_method_twin_rust_async_sse');
  late final _wire_DroppableTwinRustAsyncSse_simple_method_twin_rust_async_sse =
      _wire_DroppableTwinRustAsyncSse_simple_method_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_DroppableTwinSse_create_stream_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_DroppableTwinSse_create_stream_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_DroppableTwinSse_create_stream_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinSse_create_stream_twin_sse');
  late final _wire_DroppableTwinSse_create_stream_twin_sse =
      _wire_DroppableTwinSse_create_stream_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_DroppableTwinSse_get_drop_count_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_DroppableTwinSse_get_drop_count_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_DroppableTwinSse_get_drop_count_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinSse_get_drop_count_twin_sse');
  late final _wire_DroppableTwinSse_get_drop_count_twin_sse =
      _wire_DroppableTwinSse_get_drop_count_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_DroppableTwinSse_new_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_DroppableTwinSse_new_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_DroppableTwinSse_new_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinSse_new_twin_sse');
  late final _wire_DroppableTwinSse_new_twin_sse =
      _wire_DroppableTwinSse_new_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_DroppableTwinSse_simple_method_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_DroppableTwinSse_simple_method_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_DroppableTwinSse_simple_method_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinSse_simple_method_twin_sse');
  late final _wire_DroppableTwinSse_simple_method_twin_sse =
      _wire_DroppableTwinSse_simple_method_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_DroppableTwinSync_create_stream_twin_sync(
    int port_,
    int that,
  ) {
    return _wire_DroppableTwinSync_create_stream_twin_sync(
      port_,
      that,
    );
  }

  late final _wire_DroppableTwinSync_create_stream_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinSync_create_stream_twin_sync');
  late final _wire_DroppableTwinSync_create_stream_twin_sync =
      _wire_DroppableTwinSync_create_stream_twin_syncPtr
          .asFunction<void Function(int, int)>();

  WireSyncRust2DartDco wire_DroppableTwinSync_get_drop_count_twin_sync() {
    return _wire_DroppableTwinSync_get_drop_count_twin_sync();
  }

  late final _wire_DroppableTwinSync_get_drop_count_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinSync_get_drop_count_twin_sync');
  late final _wire_DroppableTwinSync_get_drop_count_twin_sync =
      _wire_DroppableTwinSync_get_drop_count_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_DroppableTwinSync_new_twin_sync() {
    return _wire_DroppableTwinSync_new_twin_sync();
  }

  late final _wire_DroppableTwinSync_new_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_DroppableTwinSync_new_twin_sync');
  late final _wire_DroppableTwinSync_new_twin_sync =
      _wire_DroppableTwinSync_new_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_DroppableTwinSync_simple_method_twin_sync(
    int that,
  ) {
    return _wire_DroppableTwinSync_simple_method_twin_sync(
      that,
    );
  }

  late final _wire_DroppableTwinSync_simple_method_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinSync_simple_method_twin_sync');
  late final _wire_DroppableTwinSync_simple_method_twin_sync =
      _wire_DroppableTwinSync_simple_method_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  void wire_DroppableTwinSyncSse_create_stream_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_DroppableTwinSyncSse_create_stream_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_DroppableTwinSyncSse_create_stream_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinSyncSse_create_stream_twin_sync_sse');
  late final _wire_DroppableTwinSyncSse_create_stream_twin_sync_sse =
      _wire_DroppableTwinSyncSse_create_stream_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_DroppableTwinSyncSse_get_drop_count_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_DroppableTwinSyncSse_get_drop_count_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_DroppableTwinSyncSse_get_drop_count_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinSyncSse_get_drop_count_twin_sync_sse');
  late final _wire_DroppableTwinSyncSse_get_drop_count_twin_sync_sse =
      _wire_DroppableTwinSyncSse_get_drop_count_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_DroppableTwinSyncSse_new_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_DroppableTwinSyncSse_new_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_DroppableTwinSyncSse_new_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinSyncSse_new_twin_sync_sse');
  late final _wire_DroppableTwinSyncSse_new_twin_sync_sse =
      _wire_DroppableTwinSyncSse_new_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_DroppableTwinSyncSse_simple_method_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_DroppableTwinSyncSse_simple_method_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_DroppableTwinSyncSse_simple_method_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_DroppableTwinSyncSse_simple_method_twin_sync_sse');
  late final _wire_DroppableTwinSyncSse_simple_method_twin_sync_sse =
      _wire_DroppableTwinSyncSse_simple_method_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_simple_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_func_enum_simple_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_simple_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_func_enum_simple_twin_rust_async');
  late final _wire_func_enum_simple_twin_rust_async =
      _wire_func_enum_simple_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_func_enum_with_discriminant_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_func_enum_with_discriminant_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_with_discriminant_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_discriminant_twin_rust_async');
  late final _wire_func_enum_with_discriminant_twin_rust_async =
      _wire_func_enum_with_discriminant_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_func_enum_with_item_mixed_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async> arg,
  ) {
    return _wire_func_enum_with_item_mixed_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_with_item_mixed_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_mixed_twin_rust_async');
  late final _wire_func_enum_with_item_mixed_twin_rust_async =
      _wire_func_enum_with_item_mixed_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async>)>();

  void wire_func_enum_with_item_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async> arg,
  ) {
    return _wire_func_enum_with_item_struct_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_with_item_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_enum_with_item_struct_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_struct_twin_rust_async');
  late final _wire_func_enum_with_item_struct_twin_rust_async =
      _wire_func_enum_with_item_struct_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async>)>();

  void wire_func_enum_with_item_tuple_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async> arg,
  ) {
    return _wire_func_enum_with_item_tuple_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_with_item_tuple_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_tuple_twin_rust_async');
  late final _wire_func_enum_with_item_tuple_twin_rust_async =
      _wire_func_enum_with_item_tuple_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async>)>();

  void wire_handle_enum_parameter_twin_rust_async(
    int port_,
    int weekday,
  ) {
    return _wire_handle_enum_parameter_twin_rust_async(
      port_,
      weekday,
    );
  }

  late final _wire_handle_enum_parameter_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_parameter_twin_rust_async');
  late final _wire_handle_enum_parameter_twin_rust_async =
      _wire_handle_enum_parameter_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_enum_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> val,
  ) {
    return _wire_handle_enum_struct_twin_rust_async(
      port_,
      val,
    );
  }

  late final _wire_handle_enum_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_struct_twin_rust_async');
  late final _wire_handle_enum_struct_twin_rust_async =
      _wire_handle_enum_struct_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async>)>();

  void wire_handle_return_enum_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> input,
  ) {
    return _wire_handle_return_enum_twin_rust_async(
      port_,
      input,
    );
  }

  late final _wire_handle_return_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_return_enum_twin_rust_async');
  late final _wire_handle_return_enum_twin_rust_async =
      _wire_handle_return_enum_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_multiply_by_ten_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_measure_twin_rust_async> measure,
  ) {
    return _wire_multiply_by_ten_twin_rust_async(
      port_,
      measure,
    );
  }

  late final _wire_multiply_by_ten_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_measure_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_multiply_by_ten_twin_rust_async');
  late final _wire_multiply_by_ten_twin_rust_async =
      _wire_multiply_by_ten_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_measure_twin_rust_async>)>();

  void wire_print_note_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_note_twin_rust_async> note,
  ) {
    return _wire_print_note_twin_rust_async(
      port_,
      note,
    );
  }

  late final _wire_print_note_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_note_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_print_note_twin_rust_async');
  late final _wire_print_note_twin_rust_async =
      _wire_print_note_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_note_twin_rust_async>)>();

  void wire_func_enum_simple_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_simple_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_simple_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_simple_twin_rust_async_sse');
  late final _wire_func_enum_simple_twin_rust_async_sse =
      _wire_func_enum_simple_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_with_discriminant_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_discriminant_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_discriminant_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_discriminant_twin_rust_async_sse');
  late final _wire_func_enum_with_discriminant_twin_rust_async_sse =
      _wire_func_enum_with_discriminant_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_with_item_mixed_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_mixed_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_mixed_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_mixed_twin_rust_async_sse');
  late final _wire_func_enum_with_item_mixed_twin_rust_async_sse =
      _wire_func_enum_with_item_mixed_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_with_item_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_struct_twin_rust_async_sse');
  late final _wire_func_enum_with_item_struct_twin_rust_async_sse =
      _wire_func_enum_with_item_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_with_item_tuple_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_tuple_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_tuple_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_tuple_twin_rust_async_sse');
  late final _wire_func_enum_with_item_tuple_twin_rust_async_sse =
      _wire_func_enum_with_item_tuple_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_enum_parameter_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_enum_parameter_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_enum_parameter_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_parameter_twin_rust_async_sse');
  late final _wire_handle_enum_parameter_twin_rust_async_sse =
      _wire_handle_enum_parameter_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_enum_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_enum_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_enum_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_struct_twin_rust_async_sse');
  late final _wire_handle_enum_struct_twin_rust_async_sse =
      _wire_handle_enum_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_return_enum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_return_enum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_return_enum_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_return_enum_twin_rust_async_sse');
  late final _wire_handle_return_enum_twin_rust_async_sse =
      _wire_handle_return_enum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_multiply_by_ten_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_multiply_by_ten_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_multiply_by_ten_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_multiply_by_ten_twin_rust_async_sse');
  late final _wire_multiply_by_ten_twin_rust_async_sse =
      _wire_multiply_by_ten_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_print_note_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_print_note_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_print_note_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_print_note_twin_rust_async_sse');
  late final _wire_print_note_twin_rust_async_sse =
      _wire_print_note_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_simple_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_simple_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_simple_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_simple_twin_sse');
  late final _wire_func_enum_simple_twin_sse =
      _wire_func_enum_simple_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_with_discriminant_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_discriminant_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_discriminant_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_discriminant_twin_sse');
  late final _wire_func_enum_with_discriminant_twin_sse =
      _wire_func_enum_with_discriminant_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_with_item_mixed_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_mixed_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_mixed_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_mixed_twin_sse');
  late final _wire_func_enum_with_item_mixed_twin_sse =
      _wire_func_enum_with_item_mixed_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_with_item_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_struct_twin_sse');
  late final _wire_func_enum_with_item_struct_twin_sse =
      _wire_func_enum_with_item_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_with_item_tuple_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_tuple_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_tuple_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_tuple_twin_sse');
  late final _wire_func_enum_with_item_tuple_twin_sse =
      _wire_func_enum_with_item_tuple_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_enum_parameter_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_enum_parameter_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_enum_parameter_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_parameter_twin_sse');
  late final _wire_handle_enum_parameter_twin_sse =
      _wire_handle_enum_parameter_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_enum_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_enum_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_enum_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_struct_twin_sse');
  late final _wire_handle_enum_struct_twin_sse =
      _wire_handle_enum_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_return_enum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_return_enum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_return_enum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_return_enum_twin_sse');
  late final _wire_handle_return_enum_twin_sse =
      _wire_handle_return_enum_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_multiply_by_ten_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_multiply_by_ten_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_multiply_by_ten_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_multiply_by_ten_twin_sse');
  late final _wire_multiply_by_ten_twin_sse = _wire_multiply_by_ten_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_print_note_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_print_note_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_print_note_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_print_note_twin_sse');
  late final _wire_print_note_twin_sse = _wire_print_note_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_func_enum_simple_twin_sync(
    int arg,
  ) {
    return _wire_func_enum_simple_twin_sync(
      arg,
    );
  }

  late final _wire_func_enum_simple_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_func_enum_simple_twin_sync');
  late final _wire_func_enum_simple_twin_sync =
      _wire_func_enum_simple_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_func_enum_with_discriminant_twin_sync(
    int arg,
  ) {
    return _wire_func_enum_with_discriminant_twin_sync(
      arg,
    );
  }

  late final _wire_func_enum_with_discriminant_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_discriminant_twin_sync');
  late final _wire_func_enum_with_discriminant_twin_sync =
      _wire_func_enum_with_discriminant_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_func_enum_with_item_mixed_twin_sync(
    ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync> arg,
  ) {
    return _wire_func_enum_with_item_mixed_twin_sync(
      arg,
    );
  }

  late final _wire_func_enum_with_item_mixed_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_mixed_twin_sync');
  late final _wire_func_enum_with_item_mixed_twin_sync =
      _wire_func_enum_with_item_mixed_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync>)>();

  WireSyncRust2DartDco wire_func_enum_with_item_struct_twin_sync(
    ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync> arg,
  ) {
    return _wire_func_enum_with_item_struct_twin_sync(
      arg,
    );
  }

  late final _wire_func_enum_with_item_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_struct_twin_sync');
  late final _wire_func_enum_with_item_struct_twin_sync =
      _wire_func_enum_with_item_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync>)>();

  WireSyncRust2DartDco wire_func_enum_with_item_tuple_twin_sync(
    ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync> arg,
  ) {
    return _wire_func_enum_with_item_tuple_twin_sync(
      arg,
    );
  }

  late final _wire_func_enum_with_item_tuple_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_tuple_twin_sync');
  late final _wire_func_enum_with_item_tuple_twin_sync =
      _wire_func_enum_with_item_tuple_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync>)>();

  WireSyncRust2DartDco wire_handle_enum_parameter_twin_sync(
    int weekday,
  ) {
    return _wire_handle_enum_parameter_twin_sync(
      weekday,
    );
  }

  late final _wire_handle_enum_parameter_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_handle_enum_parameter_twin_sync');
  late final _wire_handle_enum_parameter_twin_sync =
      _wire_handle_enum_parameter_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_handle_enum_struct_twin_sync(
    ffi.Pointer<wire_cst_kitchen_sink_twin_sync> val,
  ) {
    return _wire_handle_enum_struct_twin_sync(
      val,
    );
  }

  late final _wire_handle_enum_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_kitchen_sink_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_struct_twin_sync');
  late final _wire_handle_enum_struct_twin_sync =
      _wire_handle_enum_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_kitchen_sink_twin_sync>)>();

  WireSyncRust2DartDco wire_handle_return_enum_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> input,
  ) {
    return _wire_handle_return_enum_twin_sync(
      input,
    );
  }

  late final _wire_handle_return_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_return_enum_twin_sync');
  late final _wire_handle_return_enum_twin_sync =
      _wire_handle_return_enum_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_multiply_by_ten_twin_sync(
    ffi.Pointer<wire_cst_measure_twin_sync> measure,
  ) {
    return _wire_multiply_by_ten_twin_sync(
      measure,
    );
  }

  late final _wire_multiply_by_ten_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_measure_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_multiply_by_ten_twin_sync');
  late final _wire_multiply_by_ten_twin_sync =
      _wire_multiply_by_ten_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_measure_twin_sync>)>();

  WireSyncRust2DartDco wire_print_note_twin_sync(
    ffi.Pointer<wire_cst_note_twin_sync> note,
  ) {
    return _wire_print_note_twin_sync(
      note,
    );
  }

  late final _wire_print_note_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_note_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_print_note_twin_sync');
  late final _wire_print_note_twin_sync =
      _wire_print_note_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_note_twin_sync>)>();

  WireSyncRust2DartSse wire_func_enum_simple_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_simple_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_simple_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_simple_twin_sync_sse');
  late final _wire_func_enum_simple_twin_sync_sse =
      _wire_func_enum_simple_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_enum_with_discriminant_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_discriminant_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_discriminant_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_discriminant_twin_sync_sse');
  late final _wire_func_enum_with_discriminant_twin_sync_sse =
      _wire_func_enum_with_discriminant_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_enum_with_item_mixed_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_mixed_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_mixed_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_mixed_twin_sync_sse');
  late final _wire_func_enum_with_item_mixed_twin_sync_sse =
      _wire_func_enum_with_item_mixed_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_enum_with_item_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_struct_twin_sync_sse');
  late final _wire_func_enum_with_item_struct_twin_sync_sse =
      _wire_func_enum_with_item_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_enum_with_item_tuple_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_tuple_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_tuple_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_tuple_twin_sync_sse');
  late final _wire_func_enum_with_item_tuple_twin_sync_sse =
      _wire_func_enum_with_item_tuple_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_enum_parameter_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_enum_parameter_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_enum_parameter_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_parameter_twin_sync_sse');
  late final _wire_handle_enum_parameter_twin_sync_sse =
      _wire_handle_enum_parameter_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_enum_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_enum_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_enum_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_struct_twin_sync_sse');
  late final _wire_handle_enum_struct_twin_sync_sse =
      _wire_handle_enum_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_return_enum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_return_enum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_return_enum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_return_enum_twin_sync_sse');
  late final _wire_handle_return_enum_twin_sync_sse =
      _wire_handle_return_enum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_multiply_by_ten_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_multiply_by_ten_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_multiply_by_ten_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_multiply_by_ten_twin_sync_sse');
  late final _wire_multiply_by_ten_twin_sync_sse =
      _wire_multiply_by_ten_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_print_note_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_print_note_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_print_note_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_print_note_twin_sync_sse');
  late final _wire_print_note_twin_sync_sse =
      _wire_print_note_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_EventTwinRustAsync_as_string_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_event_twin_rust_async> that,
  ) {
    return _wire_EventTwinRustAsync_as_string_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_EventTwinRustAsync_as_string_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_event_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_EventTwinRustAsync_as_string_twin_rust_async');
  late final _wire_EventTwinRustAsync_as_string_twin_rust_async =
      _wire_EventTwinRustAsync_as_string_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_event_twin_rust_async>)>();

  void wire_close_event_listener_twin_rust_async(
    int port_,
  ) {
    return _wire_close_event_listener_twin_rust_async(
      port_,
    );
  }

  late final _wire_close_event_listener_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_close_event_listener_twin_rust_async');
  late final _wire_close_event_listener_twin_rust_async =
      _wire_close_event_listener_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_create_event_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> address,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> payload,
  ) {
    return _wire_create_event_twin_rust_async(
      port_,
      address,
      payload,
    );
  }

  late final _wire_create_event_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_create_event_twin_rust_async');
  late final _wire_create_event_twin_rust_async =
      _wire_create_event_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_register_event_listener_twin_rust_async(
    int port_,
  ) {
    return _wire_register_event_listener_twin_rust_async(
      port_,
    );
  }

  late final _wire_register_event_listener_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_register_event_listener_twin_rust_async');
  late final _wire_register_event_listener_twin_rust_async =
      _wire_register_event_listener_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_EventTwinRustAsyncSse_as_string_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_EventTwinRustAsyncSse_as_string_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_EventTwinRustAsyncSse_as_string_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_EventTwinRustAsyncSse_as_string_twin_rust_async_sse');
  late final _wire_EventTwinRustAsyncSse_as_string_twin_rust_async_sse =
      _wire_EventTwinRustAsyncSse_as_string_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_close_event_listener_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_close_event_listener_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_close_event_listener_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_close_event_listener_twin_rust_async_sse');
  late final _wire_close_event_listener_twin_rust_async_sse =
      _wire_close_event_listener_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_event_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_event_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_event_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_event_twin_rust_async_sse');
  late final _wire_create_event_twin_rust_async_sse =
      _wire_create_event_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_register_event_listener_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_register_event_listener_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_register_event_listener_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_register_event_listener_twin_rust_async_sse');
  late final _wire_register_event_listener_twin_rust_async_sse =
      _wire_register_event_listener_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_EventTwinSse_as_string_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_EventTwinSse_as_string_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_EventTwinSse_as_string_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_EventTwinSse_as_string_twin_sse');
  late final _wire_EventTwinSse_as_string_twin_sse =
      _wire_EventTwinSse_as_string_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_close_event_listener_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_close_event_listener_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_close_event_listener_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_close_event_listener_twin_sse');
  late final _wire_close_event_listener_twin_sse =
      _wire_close_event_listener_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_event_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_event_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_event_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_event_twin_sse');
  late final _wire_create_event_twin_sse = _wire_create_event_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_register_event_listener_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_register_event_listener_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_register_event_listener_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_register_event_listener_twin_sse');
  late final _wire_register_event_listener_twin_sse =
      _wire_register_event_listener_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_CustomStructTwinRustAsync_new_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> message,
  ) {
    return _wire_CustomStructTwinRustAsync_new_twin_rust_async(
      port_,
      message,
    );
  }

  late final _wire_CustomStructTwinRustAsync_new_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsync_new_twin_rust_async');
  late final _wire_CustomStructTwinRustAsync_new_twin_rust_async =
      _wire_CustomStructTwinRustAsync_new_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void
      wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_custom_struct_twin_rust_async> that,
  ) {
    return _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_custom_struct_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_async');
  late final _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_async =
      _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_custom_struct_twin_rust_async>)>();

  void
      wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_custom_struct_twin_rust_async> that,
  ) {
    return _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_custom_struct_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_async');
  late final _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_async =
      _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_custom_struct_twin_rust_async>)>();

  void
      wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_async(
    int port_,
  ) {
    return _wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_async');
  late final _wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_async =
      _wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void
      wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_async(
    int port_,
  ) {
    return _wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_async(
      port_,
    );
  }

  late final _wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_async');
  late final _wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_async =
      _wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_SomeStructTwinRustAsync_new_twin_rust_async(
    int port_,
    int value,
  ) {
    return _wire_SomeStructTwinRustAsync_new_twin_rust_async(
      port_,
      value,
    );
  }

  late final _wire_SomeStructTwinRustAsync_new_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsync_new_twin_rust_async');
  late final _wire_SomeStructTwinRustAsync_new_twin_rust_async =
      _wire_SomeStructTwinRustAsync_new_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void
      wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_some_struct_twin_rust_async> that,
  ) {
    return _wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_some_struct_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_async');
  late final _wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_async =
      _wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_some_struct_twin_rust_async>)>();

  void
      wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_some_struct_twin_rust_async> that,
  ) {
    return _wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_some_struct_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_async');
  late final _wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_async =
      _wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_some_struct_twin_rust_async>)>();

  void
      wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_async(
    int port_,
  ) {
    return _wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_async');
  late final _wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_async =
      _wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void
      wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_async(
    int port_,
  ) {
    return _wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_async');
  late final _wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_async =
      _wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_custom_enum_error_panic_twin_rust_async(
    int port_,
  ) {
    return _wire_custom_enum_error_panic_twin_rust_async(
      port_,
    );
  }

  late final _wire_custom_enum_error_panic_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_panic_twin_rust_async');
  late final _wire_custom_enum_error_panic_twin_rust_async =
      _wire_custom_enum_error_panic_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_custom_enum_error_return_error_twin_rust_async(
    int port_,
  ) {
    return _wire_custom_enum_error_return_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_custom_enum_error_return_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_error_twin_rust_async');
  late final _wire_custom_enum_error_return_error_twin_rust_async =
      _wire_custom_enum_error_return_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_custom_enum_error_return_ok_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_custom_enum_error_return_ok_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_custom_enum_error_return_ok_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_ok_twin_rust_async');
  late final _wire_custom_enum_error_return_ok_twin_rust_async =
      _wire_custom_enum_error_return_ok_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_custom_nested_error_return_error_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_custom_nested_error_outer_twin_rust_async> arg,
  ) {
    return _wire_custom_nested_error_return_error_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_custom_nested_error_return_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_custom_nested_error_outer_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_custom_nested_error_return_error_twin_rust_async');
  late final _wire_custom_nested_error_return_error_twin_rust_async =
      _wire_custom_nested_error_return_error_twin_rust_asyncPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_custom_nested_error_outer_twin_rust_async>)>();

  void wire_custom_struct_error_return_error_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async> arg,
  ) {
    return _wire_custom_struct_error_return_error_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_custom_struct_error_return_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_custom_struct_error_return_error_twin_rust_async');
  late final _wire_custom_struct_error_return_error_twin_rust_async =
      _wire_custom_struct_error_return_error_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async>)>();

  void wire_func_return_error_twin_rust_async(
    int port_,
  ) {
    return _wire_func_return_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_func_return_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_return_error_twin_rust_async');
  late final _wire_func_return_error_twin_rust_async =
      _wire_func_return_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_func_type_fallible_panic_twin_rust_async(
    int port_,
  ) {
    return _wire_func_type_fallible_panic_twin_rust_async(
      port_,
    );
  }

  late final _wire_func_type_fallible_panic_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_fallible_panic_twin_rust_async');
  late final _wire_func_type_fallible_panic_twin_rust_async =
      _wire_func_type_fallible_panic_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_func_type_infallible_panic_twin_rust_async(
    int port_,
  ) {
    return _wire_func_type_infallible_panic_twin_rust_async(
      port_,
    );
  }

  late final _wire_func_type_infallible_panic_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_infallible_panic_twin_rust_async');
  late final _wire_func_type_infallible_panic_twin_rust_async =
      _wire_func_type_infallible_panic_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_panic_with_custom_result_twin_rust_async(
    int port_,
  ) {
    return _wire_panic_with_custom_result_twin_rust_async(
      port_,
    );
  }

  late final _wire_panic_with_custom_result_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_panic_with_custom_result_twin_rust_async');
  late final _wire_panic_with_custom_result_twin_rust_async =
      _wire_panic_with_custom_result_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_nested_error_1_twin_rust_async(
    int port_,
  ) {
    return _wire_return_custom_nested_error_1_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_custom_nested_error_1_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_twin_rust_async');
  late final _wire_return_custom_nested_error_1_twin_rust_async =
      _wire_return_custom_nested_error_1_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_nested_error_1_variant1_twin_rust_async(
    int port_,
  ) {
    return _wire_return_custom_nested_error_1_variant1_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_custom_nested_error_1_variant1_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_variant1_twin_rust_async');
  late final _wire_return_custom_nested_error_1_variant1_twin_rust_async =
      _wire_return_custom_nested_error_1_variant1_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_nested_error_2_twin_rust_async(
    int port_,
  ) {
    return _wire_return_custom_nested_error_2_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_custom_nested_error_2_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_2_twin_rust_async');
  late final _wire_return_custom_nested_error_2_twin_rust_async =
      _wire_return_custom_nested_error_2_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_struct_error_twin_rust_async(
    int port_,
  ) {
    return _wire_return_custom_struct_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_custom_struct_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_error_twin_rust_async');
  late final _wire_return_custom_struct_error_twin_rust_async =
      _wire_return_custom_struct_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_struct_ok_twin_rust_async(
    int port_,
  ) {
    return _wire_return_custom_struct_ok_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_custom_struct_ok_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_ok_twin_rust_async');
  late final _wire_return_custom_struct_ok_twin_rust_async =
      _wire_return_custom_struct_ok_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_return_err_custom_error_twin_rust_async(
    int port_,
  ) {
    return _wire_return_err_custom_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_err_custom_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_err_custom_error_twin_rust_async');
  late final _wire_return_err_custom_error_twin_rust_async =
      _wire_return_err_custom_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_return_error_variant_twin_rust_async(
    int port_,
    int variant,
  ) {
    return _wire_return_error_variant_twin_rust_async(
      port_,
      variant,
    );
  }

  late final _wire_return_error_variant_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_return_error_variant_twin_rust_async');
  late final _wire_return_error_variant_twin_rust_async =
      _wire_return_error_variant_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_return_ok_custom_error_twin_rust_async(
    int port_,
  ) {
    return _wire_return_ok_custom_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_ok_custom_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_ok_custom_error_twin_rust_async');
  late final _wire_return_ok_custom_error_twin_rust_async =
      _wire_return_ok_custom_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_stream_sink_throw_anyhow_twin_rust_async(
    int port_,
  ) {
    return _wire_stream_sink_throw_anyhow_twin_rust_async(
      port_,
    );
  }

  late final _wire_stream_sink_throw_anyhow_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_stream_sink_throw_anyhow_twin_rust_async');
  late final _wire_stream_sink_throw_anyhow_twin_rust_async =
      _wire_stream_sink_throw_anyhow_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_throw_anyhow_twin_rust_async(
    int port_,
  ) {
    return _wire_throw_anyhow_twin_rust_async(
      port_,
    );
  }

  late final _wire_throw_anyhow_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_throw_anyhow_twin_rust_async');
  late final _wire_throw_anyhow_twin_rust_async =
      _wire_throw_anyhow_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_sse');
  late final _wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_sse =
      _wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_sse');
  late final _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_sse =
      _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_sse');
  late final _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_sse =
      _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_sse');
  late final _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_sse =
      _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_sse');
  late final _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_sse =
      _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_sse');
  late final _wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_sse =
      _wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_sse');
  late final _wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_sse =
      _wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_sse');
  late final _wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_sse =
      _wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_sse');
  late final _wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_sse =
      _wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_sse');
  late final _wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_sse =
      _wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_enum_error_panic_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_panic_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_panic_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_panic_twin_rust_async_sse');
  late final _wire_custom_enum_error_panic_twin_rust_async_sse =
      _wire_custom_enum_error_panic_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_enum_error_return_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_return_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_return_error_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_error_twin_rust_async_sse');
  late final _wire_custom_enum_error_return_error_twin_rust_async_sse =
      _wire_custom_enum_error_return_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_enum_error_return_ok_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_return_ok_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_return_ok_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_ok_twin_rust_async_sse');
  late final _wire_custom_enum_error_return_ok_twin_rust_async_sse =
      _wire_custom_enum_error_return_ok_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_nested_error_return_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_nested_error_return_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_nested_error_return_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_custom_nested_error_return_error_twin_rust_async_sse');
  late final _wire_custom_nested_error_return_error_twin_rust_async_sse =
      _wire_custom_nested_error_return_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_struct_error_return_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_struct_error_return_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_struct_error_return_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_custom_struct_error_return_error_twin_rust_async_sse');
  late final _wire_custom_struct_error_return_error_twin_rust_async_sse =
      _wire_custom_struct_error_return_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_return_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_return_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_return_error_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_return_error_twin_rust_async_sse');
  late final _wire_func_return_error_twin_rust_async_sse =
      _wire_func_return_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_type_fallible_panic_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_type_fallible_panic_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_type_fallible_panic_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_fallible_panic_twin_rust_async_sse');
  late final _wire_func_type_fallible_panic_twin_rust_async_sse =
      _wire_func_type_fallible_panic_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_type_infallible_panic_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_type_infallible_panic_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_type_infallible_panic_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_infallible_panic_twin_rust_async_sse');
  late final _wire_func_type_infallible_panic_twin_rust_async_sse =
      _wire_func_type_infallible_panic_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_panic_with_custom_result_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_panic_with_custom_result_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_panic_with_custom_result_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_panic_with_custom_result_twin_rust_async_sse');
  late final _wire_panic_with_custom_result_twin_rust_async_sse =
      _wire_panic_with_custom_result_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_nested_error_1_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_1_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_1_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_twin_rust_async_sse');
  late final _wire_return_custom_nested_error_1_twin_rust_async_sse =
      _wire_return_custom_nested_error_1_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_nested_error_1_variant1_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_1_variant1_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_1_variant1_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_variant1_twin_rust_async_sse');
  late final _wire_return_custom_nested_error_1_variant1_twin_rust_async_sse =
      _wire_return_custom_nested_error_1_variant1_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_nested_error_2_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_2_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_2_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_2_twin_rust_async_sse');
  late final _wire_return_custom_nested_error_2_twin_rust_async_sse =
      _wire_return_custom_nested_error_2_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_struct_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_struct_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_struct_error_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_error_twin_rust_async_sse');
  late final _wire_return_custom_struct_error_twin_rust_async_sse =
      _wire_return_custom_struct_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_struct_ok_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_struct_ok_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_struct_ok_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_ok_twin_rust_async_sse');
  late final _wire_return_custom_struct_ok_twin_rust_async_sse =
      _wire_return_custom_struct_ok_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_err_custom_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_err_custom_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_err_custom_error_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_err_custom_error_twin_rust_async_sse');
  late final _wire_return_err_custom_error_twin_rust_async_sse =
      _wire_return_err_custom_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_error_variant_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_error_variant_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_error_variant_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_error_variant_twin_rust_async_sse');
  late final _wire_return_error_variant_twin_rust_async_sse =
      _wire_return_error_variant_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_ok_custom_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_ok_custom_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_ok_custom_error_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_ok_custom_error_twin_rust_async_sse');
  late final _wire_return_ok_custom_error_twin_rust_async_sse =
      _wire_return_ok_custom_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_stream_sink_throw_anyhow_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_stream_sink_throw_anyhow_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_stream_sink_throw_anyhow_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_stream_sink_throw_anyhow_twin_rust_async_sse');
  late final _wire_stream_sink_throw_anyhow_twin_rust_async_sse =
      _wire_stream_sink_throw_anyhow_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_throw_anyhow_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_throw_anyhow_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_throw_anyhow_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_throw_anyhow_twin_rust_async_sse');
  late final _wire_throw_anyhow_twin_rust_async_sse =
      _wire_throw_anyhow_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_CustomStructTwinSse_new_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSse_new_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSse_new_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_CustomStructTwinSse_new_twin_sse');
  late final _wire_CustomStructTwinSse_new_twin_sse =
      _wire_CustomStructTwinSse_new_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_sse');
  late final _wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_sse =
      _wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_sse');
  late final _wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_sse =
      _wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_CustomStructTwinSse_static_return_custom_struct_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSse_static_return_custom_struct_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSse_static_return_custom_struct_error_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSse_static_return_custom_struct_error_twin_sse');
  late final _wire_CustomStructTwinSse_static_return_custom_struct_error_twin_sse =
      _wire_CustomStructTwinSse_static_return_custom_struct_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_sse');
  late final _wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_sse =
      _wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SomeStructTwinSse_new_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSse_new_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSse_new_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SomeStructTwinSse_new_twin_sse');
  late final _wire_SomeStructTwinSse_new_twin_sse =
      _wire_SomeStructTwinSse_new_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_sse');
  late final _wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_sse =
      _wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_sse');
  late final _wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_sse =
      _wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SomeStructTwinSse_static_return_err_custom_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSse_static_return_err_custom_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSse_static_return_err_custom_error_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSse_static_return_err_custom_error_twin_sse');
  late final _wire_SomeStructTwinSse_static_return_err_custom_error_twin_sse =
      _wire_SomeStructTwinSse_static_return_err_custom_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SomeStructTwinSse_static_return_ok_custom_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSse_static_return_ok_custom_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSse_static_return_ok_custom_error_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSse_static_return_ok_custom_error_twin_sse');
  late final _wire_SomeStructTwinSse_static_return_ok_custom_error_twin_sse =
      _wire_SomeStructTwinSse_static_return_ok_custom_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_enum_error_panic_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_panic_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_panic_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_panic_twin_sse');
  late final _wire_custom_enum_error_panic_twin_sse =
      _wire_custom_enum_error_panic_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_enum_error_return_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_return_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_return_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_error_twin_sse');
  late final _wire_custom_enum_error_return_error_twin_sse =
      _wire_custom_enum_error_return_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_enum_error_return_ok_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_return_ok_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_return_ok_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_ok_twin_sse');
  late final _wire_custom_enum_error_return_ok_twin_sse =
      _wire_custom_enum_error_return_ok_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_nested_error_return_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_nested_error_return_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_nested_error_return_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_nested_error_return_error_twin_sse');
  late final _wire_custom_nested_error_return_error_twin_sse =
      _wire_custom_nested_error_return_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_struct_error_return_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_struct_error_return_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_struct_error_return_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_struct_error_return_error_twin_sse');
  late final _wire_custom_struct_error_return_error_twin_sse =
      _wire_custom_struct_error_return_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_return_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_return_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_return_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_return_error_twin_sse');
  late final _wire_func_return_error_twin_sse =
      _wire_func_return_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_type_fallible_panic_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_type_fallible_panic_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_type_fallible_panic_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_fallible_panic_twin_sse');
  late final _wire_func_type_fallible_panic_twin_sse =
      _wire_func_type_fallible_panic_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_type_infallible_panic_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_type_infallible_panic_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_type_infallible_panic_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_infallible_panic_twin_sse');
  late final _wire_func_type_infallible_panic_twin_sse =
      _wire_func_type_infallible_panic_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_panic_with_custom_result_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_panic_with_custom_result_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_panic_with_custom_result_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_panic_with_custom_result_twin_sse');
  late final _wire_panic_with_custom_result_twin_sse =
      _wire_panic_with_custom_result_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_nested_error_1_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_1_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_1_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_twin_sse');
  late final _wire_return_custom_nested_error_1_twin_sse =
      _wire_return_custom_nested_error_1_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_nested_error_1_variant1_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_1_variant1_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_1_variant1_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_variant1_twin_sse');
  late final _wire_return_custom_nested_error_1_variant1_twin_sse =
      _wire_return_custom_nested_error_1_variant1_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_nested_error_2_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_2_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_2_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_2_twin_sse');
  late final _wire_return_custom_nested_error_2_twin_sse =
      _wire_return_custom_nested_error_2_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_struct_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_struct_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_struct_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_error_twin_sse');
  late final _wire_return_custom_struct_error_twin_sse =
      _wire_return_custom_struct_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_struct_ok_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_struct_ok_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_struct_ok_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_ok_twin_sse');
  late final _wire_return_custom_struct_ok_twin_sse =
      _wire_return_custom_struct_ok_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_err_custom_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_err_custom_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_err_custom_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_err_custom_error_twin_sse');
  late final _wire_return_err_custom_error_twin_sse =
      _wire_return_err_custom_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_error_variant_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_error_variant_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_error_variant_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_error_variant_twin_sse');
  late final _wire_return_error_variant_twin_sse =
      _wire_return_error_variant_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_ok_custom_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_ok_custom_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_ok_custom_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_ok_custom_error_twin_sse');
  late final _wire_return_ok_custom_error_twin_sse =
      _wire_return_ok_custom_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_stream_sink_throw_anyhow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_stream_sink_throw_anyhow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_stream_sink_throw_anyhow_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_stream_sink_throw_anyhow_twin_sse');
  late final _wire_stream_sink_throw_anyhow_twin_sse =
      _wire_stream_sink_throw_anyhow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_throw_anyhow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_throw_anyhow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_throw_anyhow_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_throw_anyhow_twin_sse');
  late final _wire_throw_anyhow_twin_sse = _wire_throw_anyhow_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_CustomStructTwinSync_new_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> message,
  ) {
    return _wire_CustomStructTwinSync_new_twin_sync(
      message,
    );
  }

  late final _wire_CustomStructTwinSync_new_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_CustomStructTwinSync_new_twin_sync');
  late final _wire_CustomStructTwinSync_new_twin_sync =
      _wire_CustomStructTwinSync_new_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco
      wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_sync(
    ffi.Pointer<wire_cst_custom_struct_twin_sync> that,
  ) {
    return _wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_sync(
      that,
    );
  }

  late final _wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_custom_struct_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_sync');
  late final _wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_sync =
      _wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_custom_struct_twin_sync>)>();

  WireSyncRust2DartDco
      wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_sync(
    ffi.Pointer<wire_cst_custom_struct_twin_sync> that,
  ) {
    return _wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_sync(
      that,
    );
  }

  late final _wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_custom_struct_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_sync');
  late final _wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_sync =
      _wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_custom_struct_twin_sync>)>();

  WireSyncRust2DartDco
      wire_CustomStructTwinSync_static_return_custom_struct_error_twin_sync() {
    return _wire_CustomStructTwinSync_static_return_custom_struct_error_twin_sync();
  }

  late final _wire_CustomStructTwinSync_static_return_custom_struct_error_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSync_static_return_custom_struct_error_twin_sync');
  late final _wire_CustomStructTwinSync_static_return_custom_struct_error_twin_sync =
      _wire_CustomStructTwinSync_static_return_custom_struct_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_sync() {
    return _wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_sync();
  }

  late final _wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_sync');
  late final _wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_sync =
      _wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_SomeStructTwinSync_new_twin_sync(
    int value,
  ) {
    return _wire_SomeStructTwinSync_new_twin_sync(
      value,
    );
  }

  late final _wire_SomeStructTwinSync_new_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSync_new_twin_sync');
  late final _wire_SomeStructTwinSync_new_twin_sync =
      _wire_SomeStructTwinSync_new_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_sync(
    ffi.Pointer<wire_cst_some_struct_twin_sync> that,
  ) {
    return _wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_sync(
      that,
    );
  }

  late final _wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_some_struct_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_sync');
  late final _wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_sync =
      _wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_some_struct_twin_sync>)>();

  WireSyncRust2DartDco
      wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_sync(
    ffi.Pointer<wire_cst_some_struct_twin_sync> that,
  ) {
    return _wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_sync(
      that,
    );
  }

  late final _wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_some_struct_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_sync');
  late final _wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_sync =
      _wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_some_struct_twin_sync>)>();

  WireSyncRust2DartDco
      wire_SomeStructTwinSync_static_return_err_custom_error_twin_sync() {
    return _wire_SomeStructTwinSync_static_return_err_custom_error_twin_sync();
  }

  late final _wire_SomeStructTwinSync_static_return_err_custom_error_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSync_static_return_err_custom_error_twin_sync');
  late final _wire_SomeStructTwinSync_static_return_err_custom_error_twin_sync =
      _wire_SomeStructTwinSync_static_return_err_custom_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_SomeStructTwinSync_static_return_ok_custom_error_twin_sync() {
    return _wire_SomeStructTwinSync_static_return_ok_custom_error_twin_sync();
  }

  late final _wire_SomeStructTwinSync_static_return_ok_custom_error_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSync_static_return_ok_custom_error_twin_sync');
  late final _wire_SomeStructTwinSync_static_return_ok_custom_error_twin_sync =
      _wire_SomeStructTwinSync_static_return_ok_custom_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_custom_enum_error_panic_twin_sync() {
    return _wire_custom_enum_error_panic_twin_sync();
  }

  late final _wire_custom_enum_error_panic_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_panic_twin_sync');
  late final _wire_custom_enum_error_panic_twin_sync =
      _wire_custom_enum_error_panic_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_custom_enum_error_return_error_twin_sync() {
    return _wire_custom_enum_error_return_error_twin_sync();
  }

  late final _wire_custom_enum_error_return_error_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_error_twin_sync');
  late final _wire_custom_enum_error_return_error_twin_sync =
      _wire_custom_enum_error_return_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_custom_enum_error_return_ok_twin_sync(
    int arg,
  ) {
    return _wire_custom_enum_error_return_ok_twin_sync(
      arg,
    );
  }

  late final _wire_custom_enum_error_return_ok_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_ok_twin_sync');
  late final _wire_custom_enum_error_return_ok_twin_sync =
      _wire_custom_enum_error_return_ok_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_custom_nested_error_return_error_twin_sync(
    ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync> arg,
  ) {
    return _wire_custom_nested_error_return_error_twin_sync(
      arg,
    );
  }

  late final _wire_custom_nested_error_return_error_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_custom_nested_error_return_error_twin_sync');
  late final _wire_custom_nested_error_return_error_twin_sync =
      _wire_custom_nested_error_return_error_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync>)>();

  WireSyncRust2DartDco wire_custom_struct_error_return_error_twin_sync(
    ffi.Pointer<wire_cst_custom_struct_error_twin_sync> arg,
  ) {
    return _wire_custom_struct_error_return_error_twin_sync(
      arg,
    );
  }

  late final _wire_custom_struct_error_return_error_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_custom_struct_error_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_custom_struct_error_return_error_twin_sync');
  late final _wire_custom_struct_error_return_error_twin_sync =
      _wire_custom_struct_error_return_error_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_custom_struct_error_twin_sync>)>();

  WireSyncRust2DartDco wire_func_return_error_twin_sync() {
    return _wire_func_return_error_twin_sync();
  }

  late final _wire_func_return_error_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_func_return_error_twin_sync');
  late final _wire_func_return_error_twin_sync =
      _wire_func_return_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_func_type_fallible_panic_twin_sync() {
    return _wire_func_type_fallible_panic_twin_sync();
  }

  late final _wire_func_type_fallible_panic_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_func_type_fallible_panic_twin_sync');
  late final _wire_func_type_fallible_panic_twin_sync =
      _wire_func_type_fallible_panic_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_func_type_infallible_panic_twin_sync() {
    return _wire_func_type_infallible_panic_twin_sync();
  }

  late final _wire_func_type_infallible_panic_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_func_type_infallible_panic_twin_sync');
  late final _wire_func_type_infallible_panic_twin_sync =
      _wire_func_type_infallible_panic_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_panic_with_custom_result_twin_sync() {
    return _wire_panic_with_custom_result_twin_sync();
  }

  late final _wire_panic_with_custom_result_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_panic_with_custom_result_twin_sync');
  late final _wire_panic_with_custom_result_twin_sync =
      _wire_panic_with_custom_result_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_return_custom_nested_error_1_twin_sync() {
    return _wire_return_custom_nested_error_1_twin_sync();
  }

  late final _wire_return_custom_nested_error_1_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_twin_sync');
  late final _wire_return_custom_nested_error_1_twin_sync =
      _wire_return_custom_nested_error_1_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_return_custom_nested_error_1_variant1_twin_sync() {
    return _wire_return_custom_nested_error_1_variant1_twin_sync();
  }

  late final _wire_return_custom_nested_error_1_variant1_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_variant1_twin_sync');
  late final _wire_return_custom_nested_error_1_variant1_twin_sync =
      _wire_return_custom_nested_error_1_variant1_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_return_custom_nested_error_2_twin_sync() {
    return _wire_return_custom_nested_error_2_twin_sync();
  }

  late final _wire_return_custom_nested_error_2_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_2_twin_sync');
  late final _wire_return_custom_nested_error_2_twin_sync =
      _wire_return_custom_nested_error_2_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_return_custom_struct_error_twin_sync() {
    return _wire_return_custom_struct_error_twin_sync();
  }

  late final _wire_return_custom_struct_error_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_error_twin_sync');
  late final _wire_return_custom_struct_error_twin_sync =
      _wire_return_custom_struct_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_return_custom_struct_ok_twin_sync() {
    return _wire_return_custom_struct_ok_twin_sync();
  }

  late final _wire_return_custom_struct_ok_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_ok_twin_sync');
  late final _wire_return_custom_struct_ok_twin_sync =
      _wire_return_custom_struct_ok_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_return_err_custom_error_twin_sync() {
    return _wire_return_err_custom_error_twin_sync();
  }

  late final _wire_return_err_custom_error_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_return_err_custom_error_twin_sync');
  late final _wire_return_err_custom_error_twin_sync =
      _wire_return_err_custom_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_return_error_variant_twin_sync(
    int variant,
  ) {
    return _wire_return_error_variant_twin_sync(
      variant,
    );
  }

  late final _wire_return_error_variant_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_return_error_variant_twin_sync');
  late final _wire_return_error_variant_twin_sync =
      _wire_return_error_variant_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_return_ok_custom_error_twin_sync() {
    return _wire_return_ok_custom_error_twin_sync();
  }

  late final _wire_return_ok_custom_error_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_return_ok_custom_error_twin_sync');
  late final _wire_return_ok_custom_error_twin_sync =
      _wire_return_ok_custom_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  void wire_stream_sink_throw_anyhow_twin_sync(
    int port_,
  ) {
    return _wire_stream_sink_throw_anyhow_twin_sync(
      port_,
    );
  }

  late final _wire_stream_sink_throw_anyhow_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_stream_sink_throw_anyhow_twin_sync');
  late final _wire_stream_sink_throw_anyhow_twin_sync =
      _wire_stream_sink_throw_anyhow_twin_syncPtr
          .asFunction<void Function(int)>();

  WireSyncRust2DartDco wire_throw_anyhow_twin_sync() {
    return _wire_throw_anyhow_twin_sync();
  }

  late final _wire_throw_anyhow_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_throw_anyhow_twin_sync');
  late final _wire_throw_anyhow_twin_sync = _wire_throw_anyhow_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartSse wire_CustomStructTwinSyncSse_new_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSyncSse_new_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSyncSse_new_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_CustomStructTwinSyncSse_new_twin_sync_sse');
  late final _wire_CustomStructTwinSyncSse_new_twin_sync_sse =
      _wire_CustomStructTwinSyncSse_new_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_sse');
  late final _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_sse =
      _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_sse');
  late final _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_sse =
      _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_sse');
  late final _wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_sse =
      _wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_sse');
  late final _wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_sse =
      _wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_SomeStructTwinSyncSse_new_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSyncSse_new_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSyncSse_new_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SomeStructTwinSyncSse_new_twin_sync_sse');
  late final _wire_SomeStructTwinSyncSse_new_twin_sync_sse =
      _wire_SomeStructTwinSyncSse_new_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_sse');
  late final _wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_sse =
      _wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_sse');
  late final _wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_sse =
      _wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_sse');
  late final _wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_sse =
      _wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_sse');
  late final _wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_sse =
      _wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_custom_enum_error_panic_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_panic_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_panic_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_panic_twin_sync_sse');
  late final _wire_custom_enum_error_panic_twin_sync_sse =
      _wire_custom_enum_error_panic_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_custom_enum_error_return_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_return_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_return_error_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_error_twin_sync_sse');
  late final _wire_custom_enum_error_return_error_twin_sync_sse =
      _wire_custom_enum_error_return_error_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_custom_enum_error_return_ok_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_return_ok_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_return_ok_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_ok_twin_sync_sse');
  late final _wire_custom_enum_error_return_ok_twin_sync_sse =
      _wire_custom_enum_error_return_ok_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_custom_nested_error_return_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_nested_error_return_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_nested_error_return_error_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_nested_error_return_error_twin_sync_sse');
  late final _wire_custom_nested_error_return_error_twin_sync_sse =
      _wire_custom_nested_error_return_error_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_custom_struct_error_return_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_struct_error_return_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_struct_error_return_error_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_struct_error_return_error_twin_sync_sse');
  late final _wire_custom_struct_error_return_error_twin_sync_sse =
      _wire_custom_struct_error_return_error_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_return_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_return_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_return_error_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_return_error_twin_sync_sse');
  late final _wire_func_return_error_twin_sync_sse =
      _wire_func_return_error_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_type_fallible_panic_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_type_fallible_panic_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_type_fallible_panic_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_fallible_panic_twin_sync_sse');
  late final _wire_func_type_fallible_panic_twin_sync_sse =
      _wire_func_type_fallible_panic_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_type_infallible_panic_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_type_infallible_panic_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_type_infallible_panic_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_infallible_panic_twin_sync_sse');
  late final _wire_func_type_infallible_panic_twin_sync_sse =
      _wire_func_type_infallible_panic_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_panic_with_custom_result_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_panic_with_custom_result_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_panic_with_custom_result_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_panic_with_custom_result_twin_sync_sse');
  late final _wire_panic_with_custom_result_twin_sync_sse =
      _wire_panic_with_custom_result_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_custom_nested_error_1_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_1_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_1_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_twin_sync_sse');
  late final _wire_return_custom_nested_error_1_twin_sync_sse =
      _wire_return_custom_nested_error_1_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_custom_nested_error_1_variant1_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_1_variant1_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_1_variant1_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_variant1_twin_sync_sse');
  late final _wire_return_custom_nested_error_1_variant1_twin_sync_sse =
      _wire_return_custom_nested_error_1_variant1_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_custom_nested_error_2_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_2_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_2_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_2_twin_sync_sse');
  late final _wire_return_custom_nested_error_2_twin_sync_sse =
      _wire_return_custom_nested_error_2_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_custom_struct_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_struct_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_struct_error_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_error_twin_sync_sse');
  late final _wire_return_custom_struct_error_twin_sync_sse =
      _wire_return_custom_struct_error_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_custom_struct_ok_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_struct_ok_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_struct_ok_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_ok_twin_sync_sse');
  late final _wire_return_custom_struct_ok_twin_sync_sse =
      _wire_return_custom_struct_ok_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_err_custom_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_err_custom_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_err_custom_error_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_err_custom_error_twin_sync_sse');
  late final _wire_return_err_custom_error_twin_sync_sse =
      _wire_return_err_custom_error_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_error_variant_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_error_variant_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_error_variant_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_error_variant_twin_sync_sse');
  late final _wire_return_error_variant_twin_sync_sse =
      _wire_return_error_variant_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_ok_custom_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_ok_custom_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_ok_custom_error_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_ok_custom_error_twin_sync_sse');
  late final _wire_return_ok_custom_error_twin_sync_sse =
      _wire_return_ok_custom_error_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_stream_sink_throw_anyhow_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_stream_sink_throw_anyhow_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_stream_sink_throw_anyhow_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_stream_sink_throw_anyhow_twin_sync_sse');
  late final _wire_stream_sink_throw_anyhow_twin_sync_sse =
      _wire_stream_sink_throw_anyhow_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_throw_anyhow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_throw_anyhow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_throw_anyhow_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_throw_anyhow_twin_sync_sse');
  late final _wire_throw_anyhow_twin_sync_sse =
      _wire_throw_anyhow_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_call_new_module_system_twin_rust_async(
    int port_,
  ) {
    return _wire_call_new_module_system_twin_rust_async(
      port_,
    );
  }

  late final _wire_call_new_module_system_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_call_new_module_system_twin_rust_async');
  late final _wire_call_new_module_system_twin_rust_async =
      _wire_call_new_module_system_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_call_old_module_system_twin_rust_async(
    int port_,
  ) {
    return _wire_call_old_module_system_twin_rust_async(
      port_,
    );
  }

  late final _wire_call_old_module_system_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_call_old_module_system_twin_rust_async');
  late final _wire_call_old_module_system_twin_rust_async =
      _wire_call_old_module_system_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_use_imported_enum_twin_rust_async(
    int port_,
    int my_enum,
  ) {
    return _wire_use_imported_enum_twin_rust_async(
      port_,
      my_enum,
    );
  }

  late final _wire_use_imported_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_enum_twin_rust_async');
  late final _wire_use_imported_enum_twin_rust_async =
      _wire_use_imported_enum_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_use_imported_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_my_struct> my_struct,
  ) {
    return _wire_use_imported_struct_twin_rust_async(
      port_,
      my_struct,
    );
  }

  late final _wire_use_imported_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_my_struct>)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_struct_twin_rust_async');
  late final _wire_use_imported_struct_twin_rust_async =
      _wire_use_imported_struct_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_my_struct>)>();

  void wire_call_new_module_system_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_call_new_module_system_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_call_new_module_system_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_call_new_module_system_twin_rust_async_sse');
  late final _wire_call_new_module_system_twin_rust_async_sse =
      _wire_call_new_module_system_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_call_old_module_system_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_call_old_module_system_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_call_old_module_system_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_call_old_module_system_twin_rust_async_sse');
  late final _wire_call_old_module_system_twin_rust_async_sse =
      _wire_call_old_module_system_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_imported_enum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_imported_enum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_imported_enum_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_enum_twin_rust_async_sse');
  late final _wire_use_imported_enum_twin_rust_async_sse =
      _wire_use_imported_enum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_imported_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_imported_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_imported_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_struct_twin_rust_async_sse');
  late final _wire_use_imported_struct_twin_rust_async_sse =
      _wire_use_imported_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_call_new_module_system_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_call_new_module_system_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_call_new_module_system_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_call_new_module_system_twin_sse');
  late final _wire_call_new_module_system_twin_sse =
      _wire_call_new_module_system_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_call_old_module_system_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_call_old_module_system_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_call_old_module_system_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_call_old_module_system_twin_sse');
  late final _wire_call_old_module_system_twin_sse =
      _wire_call_old_module_system_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_imported_enum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_imported_enum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_imported_enum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_enum_twin_sse');
  late final _wire_use_imported_enum_twin_sse =
      _wire_use_imported_enum_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_imported_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_imported_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_imported_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_struct_twin_sse');
  late final _wire_use_imported_struct_twin_sse =
      _wire_use_imported_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_call_new_module_system_twin_sync() {
    return _wire_call_new_module_system_twin_sync();
  }

  late final _wire_call_new_module_system_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_call_new_module_system_twin_sync');
  late final _wire_call_new_module_system_twin_sync =
      _wire_call_new_module_system_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_call_old_module_system_twin_sync() {
    return _wire_call_old_module_system_twin_sync();
  }

  late final _wire_call_old_module_system_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_call_old_module_system_twin_sync');
  late final _wire_call_old_module_system_twin_sync =
      _wire_call_old_module_system_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_use_imported_enum_twin_sync(
    int my_enum,
  ) {
    return _wire_use_imported_enum_twin_sync(
      my_enum,
    );
  }

  late final _wire_use_imported_enum_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_use_imported_enum_twin_sync');
  late final _wire_use_imported_enum_twin_sync =
      _wire_use_imported_enum_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_use_imported_struct_twin_sync(
    ffi.Pointer<wire_cst_my_struct> my_struct,
  ) {
    return _wire_use_imported_struct_twin_sync(
      my_struct,
    );
  }

  late final _wire_use_imported_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_my_struct>)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_struct_twin_sync');
  late final _wire_use_imported_struct_twin_sync =
      _wire_use_imported_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_my_struct>)>();

  WireSyncRust2DartSse wire_call_new_module_system_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_call_new_module_system_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_call_new_module_system_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_call_new_module_system_twin_sync_sse');
  late final _wire_call_new_module_system_twin_sync_sse =
      _wire_call_new_module_system_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_call_old_module_system_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_call_old_module_system_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_call_old_module_system_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_call_old_module_system_twin_sync_sse');
  late final _wire_call_old_module_system_twin_sync_sse =
      _wire_call_old_module_system_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_use_imported_enum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_imported_enum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_imported_enum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_enum_twin_sync_sse');
  late final _wire_use_imported_enum_twin_sync_sse =
      _wire_use_imported_enum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_use_imported_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_imported_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_imported_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_struct_twin_sync_sse');
  late final _wire_use_imported_struct_twin_sync_sse =
      _wire_use_imported_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_i32_i32_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_i_32> arg,
  ) {
    return _wire_func_hash_map_i32_i32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_i32_i32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_i32_i32_twin_rust_async');
  late final _wire_func_hash_map_i32_i32_twin_rust_async =
      _wire_func_hash_map_i32_i32_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_i_32>)>();

  void wire_func_hash_map_string_bytes_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_list_prim_u_8_strict> arg,
  ) {
    return _wire_func_hash_map_string_bytes_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_bytes_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_record_string_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_bytes_twin_rust_async');
  late final _wire_func_hash_map_string_bytes_twin_rust_async =
      _wire_func_hash_map_string_bytes_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_list_record_string_list_prim_u_8_strict>)>();

  void wire_func_hash_map_string_complex_enum_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_rust_async> arg,
  ) {
    return _wire_func_hash_map_string_complex_enum_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_complex_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_record_string_kitchen_sink_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_complex_enum_twin_rust_async');
  late final _wire_func_hash_map_string_complex_enum_twin_rust_async =
      _wire_func_hash_map_string_complex_enum_twin_rust_asyncPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_list_record_string_kitchen_sink_twin_rust_async>)>();

  void wire_func_hash_map_string_simple_enum_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_rust_async> arg,
  ) {
    return _wire_func_hash_map_string_simple_enum_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_simple_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_record_string_enum_simple_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_simple_enum_twin_rust_async');
  late final _wire_func_hash_map_string_simple_enum_twin_rust_async =
      _wire_func_hash_map_string_simple_enum_twin_rust_asyncPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_list_record_string_enum_simple_twin_rust_async>)>();

  void wire_func_hash_map_string_string_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_string> arg,
  ) {
    return _wire_func_hash_map_string_string_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_string_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_string_string>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_string_twin_rust_async');
  late final _wire_func_hash_map_string_string_twin_rust_async =
      _wire_func_hash_map_string_string_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_record_string_string>)>();

  void wire_func_hash_map_string_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_my_size> arg,
  ) {
    return _wire_func_hash_map_string_struct_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_record_string_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_struct_twin_rust_async');
  late final _wire_func_hash_map_string_struct_twin_rust_async =
      _wire_func_hash_map_string_struct_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_record_string_my_size>)>();

  void wire_func_hash_set_i32_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_32_strict> arg,
  ) {
    return _wire_func_hash_set_i32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_set_i32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_32_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_i32_twin_rust_async');
  late final _wire_func_hash_set_i32_twin_rust_async =
      _wire_func_hash_set_i32_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_32_strict>)>();

  void wire_func_hash_set_string_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_String> arg,
  ) {
    return _wire_func_hash_set_string_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_set_string_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_string_twin_rust_async');
  late final _wire_func_hash_set_string_twin_rust_async =
      _wire_func_hash_set_string_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_String>)>();

  void wire_func_hash_map_i32_i32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_i32_i32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_i32_i32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_i32_i32_twin_rust_async_sse');
  late final _wire_func_hash_map_i32_i32_twin_rust_async_sse =
      _wire_func_hash_map_i32_i32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_bytes_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_bytes_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_bytes_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_bytes_twin_rust_async_sse');
  late final _wire_func_hash_map_string_bytes_twin_rust_async_sse =
      _wire_func_hash_map_string_bytes_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_complex_enum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_complex_enum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_complex_enum_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_func_hash_map_string_complex_enum_twin_rust_async_sse');
  late final _wire_func_hash_map_string_complex_enum_twin_rust_async_sse =
      _wire_func_hash_map_string_complex_enum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_simple_enum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_simple_enum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_simple_enum_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_func_hash_map_string_simple_enum_twin_rust_async_sse');
  late final _wire_func_hash_map_string_simple_enum_twin_rust_async_sse =
      _wire_func_hash_map_string_simple_enum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_string_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_string_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_string_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_string_twin_rust_async_sse');
  late final _wire_func_hash_map_string_string_twin_rust_async_sse =
      _wire_func_hash_map_string_string_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_struct_twin_rust_async_sse');
  late final _wire_func_hash_map_string_struct_twin_rust_async_sse =
      _wire_func_hash_map_string_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_set_i32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_set_i32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_set_i32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_i32_twin_rust_async_sse');
  late final _wire_func_hash_set_i32_twin_rust_async_sse =
      _wire_func_hash_set_i32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_set_string_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_set_string_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_set_string_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_string_twin_rust_async_sse');
  late final _wire_func_hash_set_string_twin_rust_async_sse =
      _wire_func_hash_set_string_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_i32_i32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_i32_i32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_i32_i32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_i32_i32_twin_sse');
  late final _wire_func_hash_map_i32_i32_twin_sse =
      _wire_func_hash_map_i32_i32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_bytes_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_bytes_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_bytes_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_bytes_twin_sse');
  late final _wire_func_hash_map_string_bytes_twin_sse =
      _wire_func_hash_map_string_bytes_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_complex_enum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_complex_enum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_complex_enum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_complex_enum_twin_sse');
  late final _wire_func_hash_map_string_complex_enum_twin_sse =
      _wire_func_hash_map_string_complex_enum_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_simple_enum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_simple_enum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_simple_enum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_simple_enum_twin_sse');
  late final _wire_func_hash_map_string_simple_enum_twin_sse =
      _wire_func_hash_map_string_simple_enum_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_string_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_string_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_string_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_string_twin_sse');
  late final _wire_func_hash_map_string_string_twin_sse =
      _wire_func_hash_map_string_string_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_struct_twin_sse');
  late final _wire_func_hash_map_string_struct_twin_sse =
      _wire_func_hash_map_string_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_set_i32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_set_i32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_set_i32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_i32_twin_sse');
  late final _wire_func_hash_set_i32_twin_sse =
      _wire_func_hash_set_i32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_set_string_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_set_string_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_set_string_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_string_twin_sse');
  late final _wire_func_hash_set_string_twin_sse =
      _wire_func_hash_set_string_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_func_hash_map_i32_i32_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_i_32> arg,
  ) {
    return _wire_func_hash_map_i32_i32_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_map_i32_i32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_i32_i32_twin_sync');
  late final _wire_func_hash_map_i32_i32_twin_sync =
      _wire_func_hash_map_i32_i32_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_i_32>)>();

  WireSyncRust2DartDco wire_func_hash_map_string_bytes_twin_sync(
    ffi.Pointer<wire_cst_list_record_string_list_prim_u_8_strict> arg,
  ) {
    return _wire_func_hash_map_string_bytes_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_map_string_bytes_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_list_record_string_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_bytes_twin_sync');
  late final _wire_func_hash_map_string_bytes_twin_sync =
      _wire_func_hash_map_string_bytes_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_string_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_func_hash_map_string_complex_enum_twin_sync(
    ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync> arg,
  ) {
    return _wire_func_hash_map_string_complex_enum_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_map_string_complex_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_list_record_string_kitchen_sink_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_complex_enum_twin_sync');
  late final _wire_func_hash_map_string_complex_enum_twin_sync =
      _wire_func_hash_map_string_complex_enum_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<
                  wire_cst_list_record_string_kitchen_sink_twin_sync>)>();

  WireSyncRust2DartDco wire_func_hash_map_string_simple_enum_twin_sync(
    ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync> arg,
  ) {
    return _wire_func_hash_map_string_simple_enum_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_map_string_simple_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_list_record_string_enum_simple_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_simple_enum_twin_sync');
  late final _wire_func_hash_map_string_simple_enum_twin_sync =
      _wire_func_hash_map_string_simple_enum_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<
                  wire_cst_list_record_string_enum_simple_twin_sync>)>();

  WireSyncRust2DartDco wire_func_hash_map_string_string_twin_sync(
    ffi.Pointer<wire_cst_list_record_string_string> arg,
  ) {
    return _wire_func_hash_map_string_string_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_map_string_string_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_string_string>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_string_twin_sync');
  late final _wire_func_hash_map_string_string_twin_sync =
      _wire_func_hash_map_string_string_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_string_string>)>();

  WireSyncRust2DartDco wire_func_hash_map_string_struct_twin_sync(
    ffi.Pointer<wire_cst_list_record_string_my_size> arg,
  ) {
    return _wire_func_hash_map_string_struct_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_map_string_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_string_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_struct_twin_sync');
  late final _wire_func_hash_map_string_struct_twin_sync =
      _wire_func_hash_map_string_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_string_my_size>)>();

  WireSyncRust2DartDco wire_func_hash_set_i32_twin_sync(
    ffi.Pointer<wire_cst_list_prim_i_32_strict> arg,
  ) {
    return _wire_func_hash_set_i32_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_set_i32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_i_32_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_i32_twin_sync');
  late final _wire_func_hash_set_i32_twin_sync =
      _wire_func_hash_set_i32_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_i_32_strict>)>();

  WireSyncRust2DartDco wire_func_hash_set_string_twin_sync(
    ffi.Pointer<wire_cst_list_String> arg,
  ) {
    return _wire_func_hash_set_string_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_set_string_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_string_twin_sync');
  late final _wire_func_hash_set_string_twin_sync =
      _wire_func_hash_set_string_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_String>)>();

  WireSyncRust2DartSse wire_func_hash_map_i32_i32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_i32_i32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_i32_i32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_i32_i32_twin_sync_sse');
  late final _wire_func_hash_map_i32_i32_twin_sync_sse =
      _wire_func_hash_map_i32_i32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_hash_map_string_bytes_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_bytes_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_bytes_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_bytes_twin_sync_sse');
  late final _wire_func_hash_map_string_bytes_twin_sync_sse =
      _wire_func_hash_map_string_bytes_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_hash_map_string_complex_enum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_complex_enum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_complex_enum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_complex_enum_twin_sync_sse');
  late final _wire_func_hash_map_string_complex_enum_twin_sync_sse =
      _wire_func_hash_map_string_complex_enum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_hash_map_string_simple_enum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_simple_enum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_simple_enum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_simple_enum_twin_sync_sse');
  late final _wire_func_hash_map_string_simple_enum_twin_sync_sse =
      _wire_func_hash_map_string_simple_enum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_hash_map_string_string_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_string_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_string_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_string_twin_sync_sse');
  late final _wire_func_hash_map_string_string_twin_sync_sse =
      _wire_func_hash_map_string_string_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_hash_map_string_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_struct_twin_sync_sse');
  late final _wire_func_hash_map_string_struct_twin_sync_sse =
      _wire_func_hash_map_string_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_hash_set_i32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_set_i32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_set_i32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_i32_twin_sync_sse');
  late final _wire_func_hash_set_i32_twin_sync_sse =
      _wire_func_hash_set_i32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_hash_set_string_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_set_string_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_set_string_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_string_twin_sync_sse');
  late final _wire_func_hash_set_string_twin_sync_sse =
      _wire_func_hash_set_string_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> a,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> b,
  ) {
    return _wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_async(
      port_,
      a,
      b,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_async');
  late final _wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_async =
      _wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_asyncPtr
          .asFunction<
              void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_rust_async> that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> b,
  ) {
    return _wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_async(
      port_,
      that,
      b,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_async');
  late final _wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_async =
      _wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void
      wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_async(
    int port_,
  ) {
    return _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_async(
      port_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_async');
  late final _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_async =
      _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void
      wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_async(
    int port_,
    int key,
    int max,
  ) {
    return _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_async(
      port_,
      key,
      max,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_async');
  late final _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_async =
      _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void
      wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_rust_async> that,
  ) {
    return _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_async');
  late final _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_async =
      _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_asyncPtr
          .asFunction<
              void Function(int,
                  ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>)>();

  void
      wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_rust_async> that,
    int key,
    int max,
  ) {
    return _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_async(
      port_,
      that,
      key,
      max,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>,
                      ffi.Uint32,
                      ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_async');
  late final _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_async =
      _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>,
                  int,
                  int)>();

  void wire_ConcatenateWithTwinRustAsync_new_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> a,
  ) {
    return _wire_ConcatenateWithTwinRustAsync_new_twin_rust_async(
      port_,
      a,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsync_new_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsync_new_twin_rust_async');
  late final _wire_ConcatenateWithTwinRustAsync_new_twin_rust_async =
      _wire_ConcatenateWithTwinRustAsync_new_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_ConcatenateWithTwinRustAsync_simple_getter_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_rust_async> that,
  ) {
    return _wire_ConcatenateWithTwinRustAsync_simple_getter_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsync_simple_getter_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsync_simple_getter_twin_rust_async');
  late final _wire_ConcatenateWithTwinRustAsync_simple_getter_twin_rust_async =
      _wire_ConcatenateWithTwinRustAsync_simple_getter_twin_rust_asyncPtr
          .asFunction<
              void Function(int,
                  ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>)>();

  void wire_MyCallableTwinRustAsync_call(
    int port_,
    ffi.Pointer<wire_cst_my_callable_twin_rust_async> that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> two,
  ) {
    return _wire_MyCallableTwinRustAsync_call(
      port_,
      that,
      two,
    );
  }

  late final _wire_MyCallableTwinRustAsync_callPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_my_callable_twin_rust_async>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_MyCallableTwinRustAsync_call');
  late final _wire_MyCallableTwinRustAsync_call =
      _wire_MyCallableTwinRustAsync_callPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_my_callable_twin_rust_async>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_SimpleStructTwinRustAsync_arg_self_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_simple_struct_twin_rust_async> a,
    ffi.Pointer<wire_cst_simple_struct_twin_rust_async> b,
  ) {
    return _wire_SimpleStructTwinRustAsync_arg_self_twin_rust_async(
      port_,
      a,
      b,
    );
  }

  late final _wire_SimpleStructTwinRustAsync_arg_self_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_simple_struct_twin_rust_async>,
                  ffi.Pointer<wire_cst_simple_struct_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_SimpleStructTwinRustAsync_arg_self_twin_rust_async');
  late final _wire_SimpleStructTwinRustAsync_arg_self_twin_rust_async =
      _wire_SimpleStructTwinRustAsync_arg_self_twin_rust_asyncPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_simple_struct_twin_rust_async>,
              ffi.Pointer<wire_cst_simple_struct_twin_rust_async>)>();

  void wire_SimpleStructTwinRustAsync_return_self_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> one,
  ) {
    return _wire_SimpleStructTwinRustAsync_return_self_twin_rust_async(
      port_,
      one,
    );
  }

  late final _wire_SimpleStructTwinRustAsync_return_self_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_SimpleStructTwinRustAsync_return_self_twin_rust_async');
  late final _wire_SimpleStructTwinRustAsync_return_self_twin_rust_async =
      _wire_SimpleStructTwinRustAsync_return_self_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_SimpleStructTwinRustAsync_vec_self_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_simple_struct_twin_rust_async> arg,
  ) {
    return _wire_SimpleStructTwinRustAsync_vec_self_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_SimpleStructTwinRustAsync_vec_self_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_simple_struct_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_SimpleStructTwinRustAsync_vec_self_twin_rust_async');
  late final _wire_SimpleStructTwinRustAsync_vec_self_twin_rust_async =
      _wire_SimpleStructTwinRustAsync_vec_self_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_simple_struct_twin_rust_async>)>();

  void wire_SumWithTwinRustAsync_sum_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_sum_with_twin_rust_async> that,
    int y,
    int z,
  ) {
    return _wire_SumWithTwinRustAsync_sum_twin_rust_async(
      port_,
      that,
      y,
      z,
    );
  }

  late final _wire_SumWithTwinRustAsync_sum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_sum_with_twin_rust_async>,
                  ffi.Uint32,
                  ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_SumWithTwinRustAsync_sum_twin_rust_async');
  late final _wire_SumWithTwinRustAsync_sum_twin_rust_async =
      _wire_SumWithTwinRustAsync_sum_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_sum_with_twin_rust_async>, int, int)>();

  void wire_get_sum_array_twin_rust_async(
    int port_,
    int a,
    int b,
    int c,
  ) {
    return _wire_get_sum_array_twin_rust_async(
      port_,
      a,
      b,
      c,
    );
  }

  late final _wire_get_sum_array_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Uint32, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_array_twin_rust_async');
  late final _wire_get_sum_array_twin_rust_async =
      _wire_get_sum_array_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int, int)>();

  void wire_get_sum_struct_twin_rust_async(
    int port_,
  ) {
    return _wire_get_sum_struct_twin_rust_async(
      port_,
    );
  }

  late final _wire_get_sum_struct_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_sum_struct_twin_rust_async');
  late final _wire_get_sum_struct_twin_rust_async =
      _wire_get_sum_struct_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void
      wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_sse');
  late final _wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_sse =
      _wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_sse');
  late final _wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_sse =
      _wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_sse');
  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_sse =
      _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_sse');
  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_sse =
      _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_sse');
  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_sse =
      _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_sse');
  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_sse =
      _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_sse');
  late final _wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_sse =
      _wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinRustAsyncSse_simple_getter_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinRustAsyncSse_simple_getter_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsyncSse_simple_getter_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsyncSse_simple_getter_twin_rust_async_sse');
  late final _wire_ConcatenateWithTwinRustAsyncSse_simple_getter_twin_rust_async_sse =
      _wire_ConcatenateWithTwinRustAsyncSse_simple_getter_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_MyCallableTwinRustAsyncSse_call(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_MyCallableTwinRustAsyncSse_call(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_MyCallableTwinRustAsyncSse_callPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_MyCallableTwinRustAsyncSse_call');
  late final _wire_MyCallableTwinRustAsyncSse_call =
      _wire_MyCallableTwinRustAsyncSse_callPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SimpleStructTwinRustAsyncSse_arg_self_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SimpleStructTwinRustAsyncSse_arg_self_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SimpleStructTwinRustAsyncSse_arg_self_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SimpleStructTwinRustAsyncSse_arg_self_twin_rust_async_sse');
  late final _wire_SimpleStructTwinRustAsyncSse_arg_self_twin_rust_async_sse =
      _wire_SimpleStructTwinRustAsyncSse_arg_self_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SimpleStructTwinRustAsyncSse_return_self_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SimpleStructTwinRustAsyncSse_return_self_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SimpleStructTwinRustAsyncSse_return_self_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SimpleStructTwinRustAsyncSse_return_self_twin_rust_async_sse');
  late final _wire_SimpleStructTwinRustAsyncSse_return_self_twin_rust_async_sse =
      _wire_SimpleStructTwinRustAsyncSse_return_self_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SimpleStructTwinRustAsyncSse_vec_self_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SimpleStructTwinRustAsyncSse_vec_self_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SimpleStructTwinRustAsyncSse_vec_self_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SimpleStructTwinRustAsyncSse_vec_self_twin_rust_async_sse');
  late final _wire_SimpleStructTwinRustAsyncSse_vec_self_twin_rust_async_sse =
      _wire_SimpleStructTwinRustAsyncSse_vec_self_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_sse');
  late final _wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_sse =
      _wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_sum_array_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_sum_array_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_sum_array_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_array_twin_rust_async_sse');
  late final _wire_get_sum_array_twin_rust_async_sse =
      _wire_get_sum_array_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_sum_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_sum_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_sum_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_struct_twin_rust_async_sse');
  late final _wire_get_sum_struct_twin_rust_async_sse =
      _wire_get_sum_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinSse_concatenate_static_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSse_concatenate_static_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSse_concatenate_static_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSse_concatenate_static_twin_sse');
  late final _wire_ConcatenateWithTwinSse_concatenate_static_twin_sse =
      _wire_ConcatenateWithTwinSse_concatenate_static_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinSse_concatenate_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSse_concatenate_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSse_concatenate_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSse_concatenate_twin_sse');
  late final _wire_ConcatenateWithTwinSse_concatenate_twin_sse =
      _wire_ConcatenateWithTwinSse_concatenate_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_sse');
  late final _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_sse =
      _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_sse');
  late final _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_sse =
      _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_sse');
  late final _wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_sse =
      _wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_sse');
  late final _wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_sse =
      _wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinSse_new_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSse_new_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSse_new_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSse_new_twin_sse');
  late final _wire_ConcatenateWithTwinSse_new_twin_sse =
      _wire_ConcatenateWithTwinSse_new_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinSse_simple_getter_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSse_simple_getter_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSse_simple_getter_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSse_simple_getter_twin_sse');
  late final _wire_ConcatenateWithTwinSse_simple_getter_twin_sse =
      _wire_ConcatenateWithTwinSse_simple_getter_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_MyCallableTwinSse_call(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_MyCallableTwinSse_call(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_MyCallableTwinSse_callPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_MyCallableTwinSse_call');
  late final _wire_MyCallableTwinSse_call = _wire_MyCallableTwinSse_callPtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SimpleStructTwinSse_arg_self_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SimpleStructTwinSse_arg_self_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SimpleStructTwinSse_arg_self_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SimpleStructTwinSse_arg_self_twin_sse');
  late final _wire_SimpleStructTwinSse_arg_self_twin_sse =
      _wire_SimpleStructTwinSse_arg_self_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SimpleStructTwinSse_return_self_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SimpleStructTwinSse_return_self_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SimpleStructTwinSse_return_self_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SimpleStructTwinSse_return_self_twin_sse');
  late final _wire_SimpleStructTwinSse_return_self_twin_sse =
      _wire_SimpleStructTwinSse_return_self_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SimpleStructTwinSse_vec_self_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SimpleStructTwinSse_vec_self_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SimpleStructTwinSse_vec_self_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SimpleStructTwinSse_vec_self_twin_sse');
  late final _wire_SimpleStructTwinSse_vec_self_twin_sse =
      _wire_SimpleStructTwinSse_vec_self_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SumWithTwinSse_sum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SumWithTwinSse_sum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SumWithTwinSse_sum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SumWithTwinSse_sum_twin_sse');
  late final _wire_SumWithTwinSse_sum_twin_sse =
      _wire_SumWithTwinSse_sum_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_sum_array_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_sum_array_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_sum_array_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_array_twin_sse');
  late final _wire_get_sum_array_twin_sse = _wire_get_sum_array_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_sum_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_sum_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_sum_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_struct_twin_sse');
  late final _wire_get_sum_struct_twin_sse = _wire_get_sum_struct_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco
      wire_ConcatenateWithTwinSync_concatenate_static_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> a,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> b,
  ) {
    return _wire_ConcatenateWithTwinSync_concatenate_static_twin_sync(
      a,
      b,
    );
  }

  late final _wire_ConcatenateWithTwinSync_concatenate_static_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSync_concatenate_static_twin_sync');
  late final _wire_ConcatenateWithTwinSync_concatenate_static_twin_sync =
      _wire_ConcatenateWithTwinSync_concatenate_static_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_ConcatenateWithTwinSync_concatenate_twin_sync(
    ffi.Pointer<wire_cst_concatenate_with_twin_sync> that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> b,
  ) {
    return _wire_ConcatenateWithTwinSync_concatenate_twin_sync(
      that,
      b,
    );
  }

  late final _wire_ConcatenateWithTwinSync_concatenate_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_concatenate_with_twin_sync>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSync_concatenate_twin_sync');
  late final _wire_ConcatenateWithTwinSync_concatenate_twin_sync =
      _wire_ConcatenateWithTwinSync_concatenate_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_concatenate_with_twin_sync>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void
      wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_sync(
    int port_,
  ) {
    return _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_sync(
      port_,
    );
  }

  late final _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_sync');
  late final _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_sync =
      _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_syncPtr
          .asFunction<void Function(int)>();

  void wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_sync(
    int port_,
    int key,
    int max,
  ) {
    return _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_sync(
      port_,
      key,
      max,
    );
  }

  late final _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_sync');
  late final _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_sync =
      _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_syncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_sync(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_sync> that,
  ) {
    return _wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_sync(
      port_,
      that,
    );
  }

  late final _wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_concatenate_with_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_sync');
  late final _wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_sync =
      _wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_syncPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_concatenate_with_twin_sync>)>();

  void wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_sync(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_sync> that,
    int key,
    int max,
  ) {
    return _wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_sync(
      port_,
      that,
      key,
      max,
    );
  }

  late final _wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_concatenate_with_twin_sync>,
                      ffi.Uint32,
                      ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_sync');
  late final _wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_sync =
      _wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_syncPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<wire_cst_concatenate_with_twin_sync>,
                  int,
                  int)>();

  WireSyncRust2DartDco wire_ConcatenateWithTwinSync_new_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> a,
  ) {
    return _wire_ConcatenateWithTwinSync_new_twin_sync(
      a,
    );
  }

  late final _wire_ConcatenateWithTwinSync_new_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSync_new_twin_sync');
  late final _wire_ConcatenateWithTwinSync_new_twin_sync =
      _wire_ConcatenateWithTwinSync_new_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_ConcatenateWithTwinSync_simple_getter_twin_sync(
    ffi.Pointer<wire_cst_concatenate_with_twin_sync> that,
  ) {
    return _wire_ConcatenateWithTwinSync_simple_getter_twin_sync(
      that,
    );
  }

  late final _wire_ConcatenateWithTwinSync_simple_getter_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_concatenate_with_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSync_simple_getter_twin_sync');
  late final _wire_ConcatenateWithTwinSync_simple_getter_twin_sync =
      _wire_ConcatenateWithTwinSync_simple_getter_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_concatenate_with_twin_sync>)>();

  WireSyncRust2DartDco wire_MyCallableTwinSync_call(
    ffi.Pointer<wire_cst_my_callable_twin_sync> that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> two,
  ) {
    return _wire_MyCallableTwinSync_call(
      that,
      two,
    );
  }

  late final _wire_MyCallableTwinSync_callPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_my_callable_twin_sync>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_MyCallableTwinSync_call');
  late final _wire_MyCallableTwinSync_call =
      _wire_MyCallableTwinSync_callPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_my_callable_twin_sync>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_SimpleStructTwinSync_arg_self_twin_sync(
    ffi.Pointer<wire_cst_simple_struct_twin_sync> a,
    ffi.Pointer<wire_cst_simple_struct_twin_sync> b,
  ) {
    return _wire_SimpleStructTwinSync_arg_self_twin_sync(
      a,
      b,
    );
  }

  late final _wire_SimpleStructTwinSync_arg_self_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_simple_struct_twin_sync>,
                  ffi.Pointer<wire_cst_simple_struct_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_SimpleStructTwinSync_arg_self_twin_sync');
  late final _wire_SimpleStructTwinSync_arg_self_twin_sync =
      _wire_SimpleStructTwinSync_arg_self_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_simple_struct_twin_sync>,
              ffi.Pointer<wire_cst_simple_struct_twin_sync>)>();

  WireSyncRust2DartDco wire_SimpleStructTwinSync_return_self_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> one,
  ) {
    return _wire_SimpleStructTwinSync_return_self_twin_sync(
      one,
    );
  }

  late final _wire_SimpleStructTwinSync_return_self_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_SimpleStructTwinSync_return_self_twin_sync');
  late final _wire_SimpleStructTwinSync_return_self_twin_sync =
      _wire_SimpleStructTwinSync_return_self_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_SimpleStructTwinSync_vec_self_twin_sync(
    ffi.Pointer<wire_cst_list_simple_struct_twin_sync> arg,
  ) {
    return _wire_SimpleStructTwinSync_vec_self_twin_sync(
      arg,
    );
  }

  late final _wire_SimpleStructTwinSync_vec_self_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_simple_struct_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_SimpleStructTwinSync_vec_self_twin_sync');
  late final _wire_SimpleStructTwinSync_vec_self_twin_sync =
      _wire_SimpleStructTwinSync_vec_self_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_simple_struct_twin_sync>)>();

  WireSyncRust2DartDco wire_SumWithTwinSync_sum_twin_sync(
    ffi.Pointer<wire_cst_sum_with_twin_sync> that,
    int y,
    int z,
  ) {
    return _wire_SumWithTwinSync_sum_twin_sync(
      that,
      y,
      z,
    );
  }

  late final _wire_SumWithTwinSync_sum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_sum_with_twin_sync>,
                  ffi.Uint32,
                  ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_SumWithTwinSync_sum_twin_sync');
  late final _wire_SumWithTwinSync_sum_twin_sync =
      _wire_SumWithTwinSync_sum_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_sum_with_twin_sync>, int, int)>();

  WireSyncRust2DartDco wire_get_sum_array_twin_sync(
    int a,
    int b,
    int c,
  ) {
    return _wire_get_sum_array_twin_sync(
      a,
      b,
      c,
    );
  }

  late final _wire_get_sum_array_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Uint32, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_array_twin_sync');
  late final _wire_get_sum_array_twin_sync = _wire_get_sum_array_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int, int, int)>();

  WireSyncRust2DartDco wire_get_sum_struct_twin_sync() {
    return _wire_get_sum_struct_twin_sync();
  }

  late final _wire_get_sum_struct_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_get_sum_struct_twin_sync');
  late final _wire_get_sum_struct_twin_sync = _wire_get_sum_struct_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartSse
      wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_sse');
  late final _wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_sse =
      _wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_sse');
  late final _wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_sse =
      _wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_sse');
  late final _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_sse =
      _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_sse');
  late final _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_sse =
      _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_sse');
  late final _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_sse =
      _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_sse');
  late final _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_sse =
      _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_ConcatenateWithTwinSyncSse_new_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSyncSse_new_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSyncSse_new_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSyncSse_new_twin_sync_sse');
  late final _wire_ConcatenateWithTwinSyncSse_new_twin_sync_sse =
      _wire_ConcatenateWithTwinSyncSse_new_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_ConcatenateWithTwinSyncSse_simple_getter_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSyncSse_simple_getter_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSyncSse_simple_getter_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSyncSse_simple_getter_twin_sync_sse');
  late final _wire_ConcatenateWithTwinSyncSse_simple_getter_twin_sync_sse =
      _wire_ConcatenateWithTwinSyncSse_simple_getter_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_MyCallableTwinSyncSse_call(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_MyCallableTwinSyncSse_call(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_MyCallableTwinSyncSse_callPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_MyCallableTwinSyncSse_call');
  late final _wire_MyCallableTwinSyncSse_call =
      _wire_MyCallableTwinSyncSse_callPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_SimpleStructTwinSyncSse_arg_self_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SimpleStructTwinSyncSse_arg_self_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SimpleStructTwinSyncSse_arg_self_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SimpleStructTwinSyncSse_arg_self_twin_sync_sse');
  late final _wire_SimpleStructTwinSyncSse_arg_self_twin_sync_sse =
      _wire_SimpleStructTwinSyncSse_arg_self_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_SimpleStructTwinSyncSse_return_self_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SimpleStructTwinSyncSse_return_self_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SimpleStructTwinSyncSse_return_self_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SimpleStructTwinSyncSse_return_self_twin_sync_sse');
  late final _wire_SimpleStructTwinSyncSse_return_self_twin_sync_sse =
      _wire_SimpleStructTwinSyncSse_return_self_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_SimpleStructTwinSyncSse_vec_self_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SimpleStructTwinSyncSse_vec_self_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SimpleStructTwinSyncSse_vec_self_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SimpleStructTwinSyncSse_vec_self_twin_sync_sse');
  late final _wire_SimpleStructTwinSyncSse_vec_self_twin_sync_sse =
      _wire_SimpleStructTwinSyncSse_vec_self_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_SumWithTwinSyncSse_sum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SumWithTwinSyncSse_sum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SumWithTwinSyncSse_sum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SumWithTwinSyncSse_sum_twin_sync_sse');
  late final _wire_SumWithTwinSyncSse_sum_twin_sync_sse =
      _wire_SumWithTwinSyncSse_sum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_sum_array_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_sum_array_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_sum_array_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_array_twin_sync_sse');
  late final _wire_get_sum_array_twin_sync_sse =
      _wire_get_sum_array_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_sum_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_sum_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_sum_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_struct_twin_sync_sse');
  late final _wire_get_sum_struct_twin_sync_sse =
      _wire_get_sum_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_app_settings_stream_twin_rust_async(
    int port_,
  ) {
    return _wire_app_settings_stream_twin_rust_async(
      port_,
    );
  }

  late final _wire_app_settings_stream_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_stream_twin_rust_async');
  late final _wire_app_settings_stream_twin_rust_async =
      _wire_app_settings_stream_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_app_settings_vec_stream_twin_rust_async(
    int port_,
  ) {
    return _wire_app_settings_vec_stream_twin_rust_async(
      port_,
    );
  }

  late final _wire_app_settings_vec_stream_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_vec_stream_twin_rust_async');
  late final _wire_app_settings_vec_stream_twin_rust_async =
      _wire_app_settings_vec_stream_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_first_number_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_numbers> nums,
  ) {
    return _wire_first_number_twin_rust_async(
      port_,
      nums,
    );
  }

  late final _wire_first_number_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_numbers>)>>(
      'frbgen_frb_example_pure_dart_wire_first_number_twin_rust_async');
  late final _wire_first_number_twin_rust_async =
      _wire_first_number_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_numbers>)>();

  void wire_first_sequence_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_sequences> seqs,
  ) {
    return _wire_first_sequence_twin_rust_async(
      port_,
      seqs,
    );
  }

  late final _wire_first_sequence_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_sequences>)>>(
      'frbgen_frb_example_pure_dart_wire_first_sequence_twin_rust_async');
  late final _wire_first_sequence_twin_rust_async =
      _wire_first_sequence_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_sequences>)>();

  void wire_get_app_settings_twin_rust_async(
    int port_,
  ) {
    return _wire_get_app_settings_twin_rust_async(
      port_,
    );
  }

  late final _wire_get_app_settings_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_app_settings_twin_rust_async');
  late final _wire_get_app_settings_twin_rust_async =
      _wire_get_app_settings_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_get_fallible_app_settings_twin_rust_async(
    int port_,
  ) {
    return _wire_get_fallible_app_settings_twin_rust_async(
      port_,
    );
  }

  late final _wire_get_fallible_app_settings_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_get_fallible_app_settings_twin_rust_async');
  late final _wire_get_fallible_app_settings_twin_rust_async =
      _wire_get_fallible_app_settings_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_get_message_twin_rust_async(
    int port_,
  ) {
    return _wire_get_message_twin_rust_async(
      port_,
    );
  }

  late final _wire_get_message_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_message_twin_rust_async');
  late final _wire_get_message_twin_rust_async =
      _wire_get_message_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_is_app_embedded_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_application_settings> app_settings,
  ) {
    return _wire_is_app_embedded_twin_rust_async(
      port_,
      app_settings,
    );
  }

  late final _wire_is_app_embedded_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_application_settings>)>>(
      'frbgen_frb_example_pure_dart_wire_is_app_embedded_twin_rust_async');
  late final _wire_is_app_embedded_twin_rust_async =
      _wire_is_app_embedded_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_application_settings>)>();

  void wire_mirror_array_enum_stream_twin_rust_async(
    int port_,
  ) {
    return _wire_mirror_array_enum_stream_twin_rust_async(
      port_,
    );
  }

  late final _wire_mirror_array_enum_stream_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_array_enum_stream_twin_rust_async');
  late final _wire_mirror_array_enum_stream_twin_rust_async =
      _wire_mirror_array_enum_stream_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_mirror_enum_stream_twin_rust_async(
    int port_,
  ) {
    return _wire_mirror_enum_stream_twin_rust_async(
      port_,
    );
  }

  late final _wire_mirror_enum_stream_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_enum_stream_twin_rust_async');
  late final _wire_mirror_enum_stream_twin_rust_async =
      _wire_mirror_enum_stream_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_mirror_map_enum_stream_twin_rust_async(
    int port_,
  ) {
    return _wire_mirror_map_enum_stream_twin_rust_async(
      port_,
    );
  }

  late final _wire_mirror_map_enum_stream_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_map_enum_stream_twin_rust_async');
  late final _wire_mirror_map_enum_stream_twin_rust_async =
      _wire_mirror_map_enum_stream_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_mirror_option_enum_stream_twin_rust_async(
    int port_,
  ) {
    return _wire_mirror_option_enum_stream_twin_rust_async(
      port_,
    );
  }

  late final _wire_mirror_option_enum_stream_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_option_enum_stream_twin_rust_async');
  late final _wire_mirror_option_enum_stream_twin_rust_async =
      _wire_mirror_option_enum_stream_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_mirror_set_enum_stream_twin_rust_async(
    int port_,
  ) {
    return _wire_mirror_set_enum_stream_twin_rust_async(
      port_,
    );
  }

  late final _wire_mirror_set_enum_stream_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_set_enum_stream_twin_rust_async');
  late final _wire_mirror_set_enum_stream_twin_rust_async =
      _wire_mirror_set_enum_stream_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_mirror_struct_stream_twin_rust_async(
    int port_,
  ) {
    return _wire_mirror_struct_stream_twin_rust_async(
      port_,
    );
  }

  late final _wire_mirror_struct_stream_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_struct_stream_twin_rust_async');
  late final _wire_mirror_struct_stream_twin_rust_async =
      _wire_mirror_struct_stream_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_mirror_tuple_stream_twin_rust_async(
    int port_,
  ) {
    return _wire_mirror_tuple_stream_twin_rust_async(
      port_,
    );
  }

  late final _wire_mirror_tuple_stream_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_tuple_stream_twin_rust_async');
  late final _wire_mirror_tuple_stream_twin_rust_async =
      _wire_mirror_tuple_stream_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_mirror_vec_enum_stream_twin_rust_async(
    int port_,
  ) {
    return _wire_mirror_vec_enum_stream_twin_rust_async(
      port_,
    );
  }

  late final _wire_mirror_vec_enum_stream_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_vec_enum_stream_twin_rust_async');
  late final _wire_mirror_vec_enum_stream_twin_rust_async =
      _wire_mirror_vec_enum_stream_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_repeat_number_twin_rust_async(
    int port_,
    int num,
    int times,
  ) {
    return _wire_repeat_number_twin_rust_async(
      port_,
      num,
      times,
    );
  }

  late final _wire_repeat_number_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Int32, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_number_twin_rust_async');
  late final _wire_repeat_number_twin_rust_async =
      _wire_repeat_number_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_repeat_sequence_twin_rust_async(
    int port_,
    int seq,
    int times,
  ) {
    return _wire_repeat_sequence_twin_rust_async(
      port_,
      seq,
      times,
    );
  }

  late final _wire_repeat_sequence_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Int32, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_sequence_twin_rust_async');
  late final _wire_repeat_sequence_twin_rust_async =
      _wire_repeat_sequence_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_test_contains_mirrored_sub_struct_twin_rust_async(
    int port_,
  ) {
    return _wire_test_contains_mirrored_sub_struct_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_contains_mirrored_sub_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_contains_mirrored_sub_struct_twin_rust_async');
  late final _wire_test_contains_mirrored_sub_struct_twin_rust_async =
      _wire_test_contains_mirrored_sub_struct_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_test_fallible_of_raw_string_mirrored_twin_rust_async(
    int port_,
  ) {
    return _wire_test_fallible_of_raw_string_mirrored_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_fallible_of_raw_string_mirrored_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_fallible_of_raw_string_mirrored_twin_rust_async');
  late final _wire_test_fallible_of_raw_string_mirrored_twin_rust_async =
      _wire_test_fallible_of_raw_string_mirrored_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_test_hashmap_with_mirrored_value_twin_rust_async(
    int port_,
  ) {
    return _wire_test_hashmap_with_mirrored_value_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_hashmap_with_mirrored_value_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_hashmap_with_mirrored_value_twin_rust_async');
  late final _wire_test_hashmap_with_mirrored_value_twin_rust_async =
      _wire_test_hashmap_with_mirrored_value_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_test_list_of_nested_enums_mirrored_twin_rust_async(
    int port_,
  ) {
    return _wire_test_list_of_nested_enums_mirrored_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_list_of_nested_enums_mirrored_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_list_of_nested_enums_mirrored_twin_rust_async');
  late final _wire_test_list_of_nested_enums_mirrored_twin_rust_async =
      _wire_test_list_of_nested_enums_mirrored_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_test_list_of_raw_nested_string_mirrored_twin_rust_async(
    int port_,
  ) {
    return _wire_test_list_of_raw_nested_string_mirrored_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_list_of_raw_nested_string_mirrored_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_list_of_raw_nested_string_mirrored_twin_rust_async');
  late final _wire_test_list_of_raw_nested_string_mirrored_twin_rust_async =
      _wire_test_list_of_raw_nested_string_mirrored_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_test_nested_raw_string_mirrored_twin_rust_async(
    int port_,
  ) {
    return _wire_test_nested_raw_string_mirrored_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_nested_raw_string_mirrored_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_nested_raw_string_mirrored_twin_rust_async');
  late final _wire_test_nested_raw_string_mirrored_twin_rust_async =
      _wire_test_nested_raw_string_mirrored_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_test_raw_string_enum_mirrored_twin_rust_async(
    int port_,
    bool nested,
  ) {
    return _wire_test_raw_string_enum_mirrored_twin_rust_async(
      port_,
      nested,
    );
  }

  late final _wire_test_raw_string_enum_mirrored_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_enum_mirrored_twin_rust_async');
  late final _wire_test_raw_string_enum_mirrored_twin_rust_async =
      _wire_test_raw_string_enum_mirrored_twin_rust_asyncPtr
          .asFunction<void Function(int, bool)>();

  void wire_test_raw_string_mirrored_twin_rust_async(
    int port_,
  ) {
    return _wire_test_raw_string_mirrored_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_raw_string_mirrored_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_mirrored_twin_rust_async');
  late final _wire_test_raw_string_mirrored_twin_rust_async =
      _wire_test_raw_string_mirrored_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_app_settings_stream_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_app_settings_stream_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_app_settings_stream_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_stream_twin_rust_async_sse');
  late final _wire_app_settings_stream_twin_rust_async_sse =
      _wire_app_settings_stream_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_app_settings_vec_stream_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_app_settings_vec_stream_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_app_settings_vec_stream_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_vec_stream_twin_rust_async_sse');
  late final _wire_app_settings_vec_stream_twin_rust_async_sse =
      _wire_app_settings_vec_stream_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_first_number_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_first_number_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_first_number_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_first_number_twin_rust_async_sse');
  late final _wire_first_number_twin_rust_async_sse =
      _wire_first_number_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_first_sequence_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_first_sequence_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_first_sequence_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_first_sequence_twin_rust_async_sse');
  late final _wire_first_sequence_twin_rust_async_sse =
      _wire_first_sequence_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_app_settings_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_app_settings_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_app_settings_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_app_settings_twin_rust_async_sse');
  late final _wire_get_app_settings_twin_rust_async_sse =
      _wire_get_app_settings_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_fallible_app_settings_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_fallible_app_settings_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_fallible_app_settings_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_fallible_app_settings_twin_rust_async_sse');
  late final _wire_get_fallible_app_settings_twin_rust_async_sse =
      _wire_get_fallible_app_settings_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_message_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_message_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_message_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_message_twin_rust_async_sse');
  late final _wire_get_message_twin_rust_async_sse =
      _wire_get_message_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_is_app_embedded_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_is_app_embedded_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_is_app_embedded_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_is_app_embedded_twin_rust_async_sse');
  late final _wire_is_app_embedded_twin_rust_async_sse =
      _wire_is_app_embedded_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_array_enum_stream_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_array_enum_stream_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_array_enum_stream_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_array_enum_stream_twin_rust_async_sse');
  late final _wire_mirror_array_enum_stream_twin_rust_async_sse =
      _wire_mirror_array_enum_stream_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_enum_stream_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_enum_stream_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_enum_stream_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_enum_stream_twin_rust_async_sse');
  late final _wire_mirror_enum_stream_twin_rust_async_sse =
      _wire_mirror_enum_stream_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_map_enum_stream_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_map_enum_stream_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_map_enum_stream_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_map_enum_stream_twin_rust_async_sse');
  late final _wire_mirror_map_enum_stream_twin_rust_async_sse =
      _wire_mirror_map_enum_stream_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_option_enum_stream_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_option_enum_stream_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_option_enum_stream_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_option_enum_stream_twin_rust_async_sse');
  late final _wire_mirror_option_enum_stream_twin_rust_async_sse =
      _wire_mirror_option_enum_stream_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_set_enum_stream_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_set_enum_stream_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_set_enum_stream_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_set_enum_stream_twin_rust_async_sse');
  late final _wire_mirror_set_enum_stream_twin_rust_async_sse =
      _wire_mirror_set_enum_stream_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_struct_stream_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_struct_stream_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_struct_stream_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_struct_stream_twin_rust_async_sse');
  late final _wire_mirror_struct_stream_twin_rust_async_sse =
      _wire_mirror_struct_stream_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_tuple_stream_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_tuple_stream_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_tuple_stream_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_tuple_stream_twin_rust_async_sse');
  late final _wire_mirror_tuple_stream_twin_rust_async_sse =
      _wire_mirror_tuple_stream_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_vec_enum_stream_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_vec_enum_stream_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_vec_enum_stream_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_vec_enum_stream_twin_rust_async_sse');
  late final _wire_mirror_vec_enum_stream_twin_rust_async_sse =
      _wire_mirror_vec_enum_stream_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_repeat_number_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_repeat_number_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_repeat_number_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_number_twin_rust_async_sse');
  late final _wire_repeat_number_twin_rust_async_sse =
      _wire_repeat_number_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_repeat_sequence_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_repeat_sequence_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_repeat_sequence_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_sequence_twin_rust_async_sse');
  late final _wire_repeat_sequence_twin_rust_async_sse =
      _wire_repeat_sequence_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_contains_mirrored_sub_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_contains_mirrored_sub_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_contains_mirrored_sub_struct_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_test_contains_mirrored_sub_struct_twin_rust_async_sse');
  late final _wire_test_contains_mirrored_sub_struct_twin_rust_async_sse =
      _wire_test_contains_mirrored_sub_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_fallible_of_raw_string_mirrored_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_fallible_of_raw_string_mirrored_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_fallible_of_raw_string_mirrored_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_test_fallible_of_raw_string_mirrored_twin_rust_async_sse');
  late final _wire_test_fallible_of_raw_string_mirrored_twin_rust_async_sse =
      _wire_test_fallible_of_raw_string_mirrored_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_hashmap_with_mirrored_value_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_hashmap_with_mirrored_value_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_hashmap_with_mirrored_value_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_test_hashmap_with_mirrored_value_twin_rust_async_sse');
  late final _wire_test_hashmap_with_mirrored_value_twin_rust_async_sse =
      _wire_test_hashmap_with_mirrored_value_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_list_of_nested_enums_mirrored_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_list_of_nested_enums_mirrored_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_list_of_nested_enums_mirrored_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_test_list_of_nested_enums_mirrored_twin_rust_async_sse');
  late final _wire_test_list_of_nested_enums_mirrored_twin_rust_async_sse =
      _wire_test_list_of_nested_enums_mirrored_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_sse');
  late final _wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_sse =
      _wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_nested_raw_string_mirrored_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_nested_raw_string_mirrored_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_nested_raw_string_mirrored_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_nested_raw_string_mirrored_twin_rust_async_sse');
  late final _wire_test_nested_raw_string_mirrored_twin_rust_async_sse =
      _wire_test_nested_raw_string_mirrored_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_raw_string_enum_mirrored_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_enum_mirrored_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_enum_mirrored_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_enum_mirrored_twin_rust_async_sse');
  late final _wire_test_raw_string_enum_mirrored_twin_rust_async_sse =
      _wire_test_raw_string_enum_mirrored_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_raw_string_mirrored_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_mirrored_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_mirrored_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_mirrored_twin_rust_async_sse');
  late final _wire_test_raw_string_mirrored_twin_rust_async_sse =
      _wire_test_raw_string_mirrored_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_app_settings_stream_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_app_settings_stream_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_app_settings_stream_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_stream_twin_sse');
  late final _wire_app_settings_stream_twin_sse =
      _wire_app_settings_stream_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_app_settings_vec_stream_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_app_settings_vec_stream_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_app_settings_vec_stream_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_vec_stream_twin_sse');
  late final _wire_app_settings_vec_stream_twin_sse =
      _wire_app_settings_vec_stream_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_first_number_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_first_number_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_first_number_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_first_number_twin_sse');
  late final _wire_first_number_twin_sse = _wire_first_number_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_first_sequence_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_first_sequence_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_first_sequence_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_first_sequence_twin_sse');
  late final _wire_first_sequence_twin_sse = _wire_first_sequence_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_app_settings_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_app_settings_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_app_settings_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_app_settings_twin_sse');
  late final _wire_get_app_settings_twin_sse =
      _wire_get_app_settings_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_fallible_app_settings_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_fallible_app_settings_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_fallible_app_settings_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_fallible_app_settings_twin_sse');
  late final _wire_get_fallible_app_settings_twin_sse =
      _wire_get_fallible_app_settings_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_message_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_message_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_message_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_message_twin_sse');
  late final _wire_get_message_twin_sse = _wire_get_message_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_is_app_embedded_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_is_app_embedded_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_is_app_embedded_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_is_app_embedded_twin_sse');
  late final _wire_is_app_embedded_twin_sse = _wire_is_app_embedded_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_array_enum_stream_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_array_enum_stream_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_array_enum_stream_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_array_enum_stream_twin_sse');
  late final _wire_mirror_array_enum_stream_twin_sse =
      _wire_mirror_array_enum_stream_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_enum_stream_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_enum_stream_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_enum_stream_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_enum_stream_twin_sse');
  late final _wire_mirror_enum_stream_twin_sse =
      _wire_mirror_enum_stream_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_map_enum_stream_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_map_enum_stream_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_map_enum_stream_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_map_enum_stream_twin_sse');
  late final _wire_mirror_map_enum_stream_twin_sse =
      _wire_mirror_map_enum_stream_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_option_enum_stream_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_option_enum_stream_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_option_enum_stream_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_option_enum_stream_twin_sse');
  late final _wire_mirror_option_enum_stream_twin_sse =
      _wire_mirror_option_enum_stream_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_set_enum_stream_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_set_enum_stream_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_set_enum_stream_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_set_enum_stream_twin_sse');
  late final _wire_mirror_set_enum_stream_twin_sse =
      _wire_mirror_set_enum_stream_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_struct_stream_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_struct_stream_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_struct_stream_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_struct_stream_twin_sse');
  late final _wire_mirror_struct_stream_twin_sse =
      _wire_mirror_struct_stream_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_tuple_stream_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_tuple_stream_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_tuple_stream_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_tuple_stream_twin_sse');
  late final _wire_mirror_tuple_stream_twin_sse =
      _wire_mirror_tuple_stream_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_vec_enum_stream_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_vec_enum_stream_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_vec_enum_stream_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_vec_enum_stream_twin_sse');
  late final _wire_mirror_vec_enum_stream_twin_sse =
      _wire_mirror_vec_enum_stream_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_repeat_number_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_repeat_number_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_repeat_number_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_number_twin_sse');
  late final _wire_repeat_number_twin_sse = _wire_repeat_number_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_repeat_sequence_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_repeat_sequence_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_repeat_sequence_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_sequence_twin_sse');
  late final _wire_repeat_sequence_twin_sse = _wire_repeat_sequence_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_contains_mirrored_sub_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_contains_mirrored_sub_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_contains_mirrored_sub_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_contains_mirrored_sub_struct_twin_sse');
  late final _wire_test_contains_mirrored_sub_struct_twin_sse =
      _wire_test_contains_mirrored_sub_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_fallible_of_raw_string_mirrored_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_fallible_of_raw_string_mirrored_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_fallible_of_raw_string_mirrored_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_fallible_of_raw_string_mirrored_twin_sse');
  late final _wire_test_fallible_of_raw_string_mirrored_twin_sse =
      _wire_test_fallible_of_raw_string_mirrored_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_hashmap_with_mirrored_value_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_hashmap_with_mirrored_value_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_hashmap_with_mirrored_value_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_hashmap_with_mirrored_value_twin_sse');
  late final _wire_test_hashmap_with_mirrored_value_twin_sse =
      _wire_test_hashmap_with_mirrored_value_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_list_of_nested_enums_mirrored_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_list_of_nested_enums_mirrored_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_list_of_nested_enums_mirrored_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_list_of_nested_enums_mirrored_twin_sse');
  late final _wire_test_list_of_nested_enums_mirrored_twin_sse =
      _wire_test_list_of_nested_enums_mirrored_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_list_of_raw_nested_string_mirrored_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_list_of_raw_nested_string_mirrored_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_list_of_raw_nested_string_mirrored_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_list_of_raw_nested_string_mirrored_twin_sse');
  late final _wire_test_list_of_raw_nested_string_mirrored_twin_sse =
      _wire_test_list_of_raw_nested_string_mirrored_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_nested_raw_string_mirrored_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_nested_raw_string_mirrored_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_nested_raw_string_mirrored_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_nested_raw_string_mirrored_twin_sse');
  late final _wire_test_nested_raw_string_mirrored_twin_sse =
      _wire_test_nested_raw_string_mirrored_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_raw_string_enum_mirrored_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_enum_mirrored_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_enum_mirrored_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_enum_mirrored_twin_sse');
  late final _wire_test_raw_string_enum_mirrored_twin_sse =
      _wire_test_raw_string_enum_mirrored_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_raw_string_mirrored_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_mirrored_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_mirrored_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_mirrored_twin_sse');
  late final _wire_test_raw_string_mirrored_twin_sse =
      _wire_test_raw_string_mirrored_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_app_settings_stream_twin_sync(
    int port_,
  ) {
    return _wire_app_settings_stream_twin_sync(
      port_,
    );
  }

  late final _wire_app_settings_stream_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_app_settings_stream_twin_sync');
  late final _wire_app_settings_stream_twin_sync =
      _wire_app_settings_stream_twin_syncPtr.asFunction<void Function(int)>();

  void wire_app_settings_vec_stream_twin_sync(
    int port_,
  ) {
    return _wire_app_settings_vec_stream_twin_sync(
      port_,
    );
  }

  late final _wire_app_settings_vec_stream_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_vec_stream_twin_sync');
  late final _wire_app_settings_vec_stream_twin_sync =
      _wire_app_settings_vec_stream_twin_syncPtr
          .asFunction<void Function(int)>();

  WireSyncRust2DartDco wire_first_number_twin_sync(
    ffi.Pointer<wire_cst_numbers> nums,
  ) {
    return _wire_first_number_twin_sync(
      nums,
    );
  }

  late final _wire_first_number_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_numbers>)>>(
      'frbgen_frb_example_pure_dart_wire_first_number_twin_sync');
  late final _wire_first_number_twin_sync =
      _wire_first_number_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_numbers>)>();

  WireSyncRust2DartDco wire_first_sequence_twin_sync(
    ffi.Pointer<wire_cst_sequences> seqs,
  ) {
    return _wire_first_sequence_twin_sync(
      seqs,
    );
  }

  late final _wire_first_sequence_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_sequences>)>>(
      'frbgen_frb_example_pure_dart_wire_first_sequence_twin_sync');
  late final _wire_first_sequence_twin_sync =
      _wire_first_sequence_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_sequences>)>();

  WireSyncRust2DartDco wire_get_app_settings_twin_sync() {
    return _wire_get_app_settings_twin_sync();
  }

  late final _wire_get_app_settings_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_get_app_settings_twin_sync');
  late final _wire_get_app_settings_twin_sync =
      _wire_get_app_settings_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_get_fallible_app_settings_twin_sync() {
    return _wire_get_fallible_app_settings_twin_sync();
  }

  late final _wire_get_fallible_app_settings_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_get_fallible_app_settings_twin_sync');
  late final _wire_get_fallible_app_settings_twin_sync =
      _wire_get_fallible_app_settings_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_get_message_twin_sync() {
    return _wire_get_message_twin_sync();
  }

  late final _wire_get_message_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_get_message_twin_sync');
  late final _wire_get_message_twin_sync = _wire_get_message_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_is_app_embedded_twin_sync(
    ffi.Pointer<wire_cst_application_settings> app_settings,
  ) {
    return _wire_is_app_embedded_twin_sync(
      app_settings,
    );
  }

  late final _wire_is_app_embedded_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_application_settings>)>>(
      'frbgen_frb_example_pure_dart_wire_is_app_embedded_twin_sync');
  late final _wire_is_app_embedded_twin_sync =
      _wire_is_app_embedded_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_application_settings>)>();

  void wire_mirror_array_enum_stream_twin_sync(
    int port_,
  ) {
    return _wire_mirror_array_enum_stream_twin_sync(
      port_,
    );
  }

  late final _wire_mirror_array_enum_stream_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_array_enum_stream_twin_sync');
  late final _wire_mirror_array_enum_stream_twin_sync =
      _wire_mirror_array_enum_stream_twin_syncPtr
          .asFunction<void Function(int)>();

  void wire_mirror_enum_stream_twin_sync(
    int port_,
  ) {
    return _wire_mirror_enum_stream_twin_sync(
      port_,
    );
  }

  late final _wire_mirror_enum_stream_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_mirror_enum_stream_twin_sync');
  late final _wire_mirror_enum_stream_twin_sync =
      _wire_mirror_enum_stream_twin_syncPtr.asFunction<void Function(int)>();

  void wire_mirror_map_enum_stream_twin_sync(
    int port_,
  ) {
    return _wire_mirror_map_enum_stream_twin_sync(
      port_,
    );
  }

  late final _wire_mirror_map_enum_stream_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_mirror_map_enum_stream_twin_sync');
  late final _wire_mirror_map_enum_stream_twin_sync =
      _wire_mirror_map_enum_stream_twin_syncPtr
          .asFunction<void Function(int)>();

  void wire_mirror_option_enum_stream_twin_sync(
    int port_,
  ) {
    return _wire_mirror_option_enum_stream_twin_sync(
      port_,
    );
  }

  late final _wire_mirror_option_enum_stream_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_option_enum_stream_twin_sync');
  late final _wire_mirror_option_enum_stream_twin_sync =
      _wire_mirror_option_enum_stream_twin_syncPtr
          .asFunction<void Function(int)>();

  void wire_mirror_set_enum_stream_twin_sync(
    int port_,
  ) {
    return _wire_mirror_set_enum_stream_twin_sync(
      port_,
    );
  }

  late final _wire_mirror_set_enum_stream_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_mirror_set_enum_stream_twin_sync');
  late final _wire_mirror_set_enum_stream_twin_sync =
      _wire_mirror_set_enum_stream_twin_syncPtr
          .asFunction<void Function(int)>();

  void wire_mirror_struct_stream_twin_sync(
    int port_,
  ) {
    return _wire_mirror_struct_stream_twin_sync(
      port_,
    );
  }

  late final _wire_mirror_struct_stream_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_mirror_struct_stream_twin_sync');
  late final _wire_mirror_struct_stream_twin_sync =
      _wire_mirror_struct_stream_twin_syncPtr.asFunction<void Function(int)>();

  void wire_mirror_tuple_stream_twin_sync(
    int port_,
  ) {
    return _wire_mirror_tuple_stream_twin_sync(
      port_,
    );
  }

  late final _wire_mirror_tuple_stream_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_mirror_tuple_stream_twin_sync');
  late final _wire_mirror_tuple_stream_twin_sync =
      _wire_mirror_tuple_stream_twin_syncPtr.asFunction<void Function(int)>();

  void wire_mirror_vec_enum_stream_twin_sync(
    int port_,
  ) {
    return _wire_mirror_vec_enum_stream_twin_sync(
      port_,
    );
  }

  late final _wire_mirror_vec_enum_stream_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_mirror_vec_enum_stream_twin_sync');
  late final _wire_mirror_vec_enum_stream_twin_sync =
      _wire_mirror_vec_enum_stream_twin_syncPtr
          .asFunction<void Function(int)>();

  WireSyncRust2DartDco wire_repeat_number_twin_sync(
    int num,
    int times,
  ) {
    return _wire_repeat_number_twin_sync(
      num,
      times,
    );
  }

  late final _wire_repeat_number_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Int32, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_number_twin_sync');
  late final _wire_repeat_number_twin_sync = _wire_repeat_number_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_repeat_sequence_twin_sync(
    int seq,
    int times,
  ) {
    return _wire_repeat_sequence_twin_sync(
      seq,
      times,
    );
  }

  late final _wire_repeat_sequence_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Int32, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_sequence_twin_sync');
  late final _wire_repeat_sequence_twin_sync =
      _wire_repeat_sequence_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_test_contains_mirrored_sub_struct_twin_sync() {
    return _wire_test_contains_mirrored_sub_struct_twin_sync();
  }

  late final _wire_test_contains_mirrored_sub_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_test_contains_mirrored_sub_struct_twin_sync');
  late final _wire_test_contains_mirrored_sub_struct_twin_sync =
      _wire_test_contains_mirrored_sub_struct_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_test_fallible_of_raw_string_mirrored_twin_sync() {
    return _wire_test_fallible_of_raw_string_mirrored_twin_sync();
  }

  late final _wire_test_fallible_of_raw_string_mirrored_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_test_fallible_of_raw_string_mirrored_twin_sync');
  late final _wire_test_fallible_of_raw_string_mirrored_twin_sync =
      _wire_test_fallible_of_raw_string_mirrored_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_test_hashmap_with_mirrored_value_twin_sync() {
    return _wire_test_hashmap_with_mirrored_value_twin_sync();
  }

  late final _wire_test_hashmap_with_mirrored_value_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_test_hashmap_with_mirrored_value_twin_sync');
  late final _wire_test_hashmap_with_mirrored_value_twin_sync =
      _wire_test_hashmap_with_mirrored_value_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_test_list_of_nested_enums_mirrored_twin_sync() {
    return _wire_test_list_of_nested_enums_mirrored_twin_sync();
  }

  late final _wire_test_list_of_nested_enums_mirrored_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_test_list_of_nested_enums_mirrored_twin_sync');
  late final _wire_test_list_of_nested_enums_mirrored_twin_sync =
      _wire_test_list_of_nested_enums_mirrored_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_test_list_of_raw_nested_string_mirrored_twin_sync() {
    return _wire_test_list_of_raw_nested_string_mirrored_twin_sync();
  }

  late final _wire_test_list_of_raw_nested_string_mirrored_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_test_list_of_raw_nested_string_mirrored_twin_sync');
  late final _wire_test_list_of_raw_nested_string_mirrored_twin_sync =
      _wire_test_list_of_raw_nested_string_mirrored_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_test_nested_raw_string_mirrored_twin_sync() {
    return _wire_test_nested_raw_string_mirrored_twin_sync();
  }

  late final _wire_test_nested_raw_string_mirrored_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_test_nested_raw_string_mirrored_twin_sync');
  late final _wire_test_nested_raw_string_mirrored_twin_sync =
      _wire_test_nested_raw_string_mirrored_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_test_raw_string_enum_mirrored_twin_sync(
    bool nested,
  ) {
    return _wire_test_raw_string_enum_mirrored_twin_sync(
      nested,
    );
  }

  late final _wire_test_raw_string_enum_mirrored_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_enum_mirrored_twin_sync');
  late final _wire_test_raw_string_enum_mirrored_twin_sync =
      _wire_test_raw_string_enum_mirrored_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(bool)>();

  WireSyncRust2DartDco wire_test_raw_string_mirrored_twin_sync() {
    return _wire_test_raw_string_mirrored_twin_sync();
  }

  late final _wire_test_raw_string_mirrored_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_mirrored_twin_sync');
  late final _wire_test_raw_string_mirrored_twin_sync =
      _wire_test_raw_string_mirrored_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  void wire_app_settings_stream_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_app_settings_stream_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_app_settings_stream_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_stream_twin_sync_sse');
  late final _wire_app_settings_stream_twin_sync_sse =
      _wire_app_settings_stream_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_app_settings_vec_stream_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_app_settings_vec_stream_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_app_settings_vec_stream_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_vec_stream_twin_sync_sse');
  late final _wire_app_settings_vec_stream_twin_sync_sse =
      _wire_app_settings_vec_stream_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_first_number_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_first_number_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_first_number_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_first_number_twin_sync_sse');
  late final _wire_first_number_twin_sync_sse =
      _wire_first_number_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_first_sequence_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_first_sequence_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_first_sequence_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_first_sequence_twin_sync_sse');
  late final _wire_first_sequence_twin_sync_sse =
      _wire_first_sequence_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_app_settings_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_app_settings_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_app_settings_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_app_settings_twin_sync_sse');
  late final _wire_get_app_settings_twin_sync_sse =
      _wire_get_app_settings_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_fallible_app_settings_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_fallible_app_settings_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_fallible_app_settings_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_fallible_app_settings_twin_sync_sse');
  late final _wire_get_fallible_app_settings_twin_sync_sse =
      _wire_get_fallible_app_settings_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_message_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_message_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_message_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_message_twin_sync_sse');
  late final _wire_get_message_twin_sync_sse =
      _wire_get_message_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_is_app_embedded_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_is_app_embedded_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_is_app_embedded_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_is_app_embedded_twin_sync_sse');
  late final _wire_is_app_embedded_twin_sync_sse =
      _wire_is_app_embedded_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_array_enum_stream_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_array_enum_stream_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_array_enum_stream_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_array_enum_stream_twin_sync_sse');
  late final _wire_mirror_array_enum_stream_twin_sync_sse =
      _wire_mirror_array_enum_stream_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_enum_stream_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_enum_stream_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_enum_stream_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_enum_stream_twin_sync_sse');
  late final _wire_mirror_enum_stream_twin_sync_sse =
      _wire_mirror_enum_stream_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_map_enum_stream_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_map_enum_stream_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_map_enum_stream_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_map_enum_stream_twin_sync_sse');
  late final _wire_mirror_map_enum_stream_twin_sync_sse =
      _wire_mirror_map_enum_stream_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_option_enum_stream_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_option_enum_stream_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_option_enum_stream_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_option_enum_stream_twin_sync_sse');
  late final _wire_mirror_option_enum_stream_twin_sync_sse =
      _wire_mirror_option_enum_stream_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_set_enum_stream_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_set_enum_stream_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_set_enum_stream_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_set_enum_stream_twin_sync_sse');
  late final _wire_mirror_set_enum_stream_twin_sync_sse =
      _wire_mirror_set_enum_stream_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_struct_stream_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_struct_stream_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_struct_stream_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_struct_stream_twin_sync_sse');
  late final _wire_mirror_struct_stream_twin_sync_sse =
      _wire_mirror_struct_stream_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_tuple_stream_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_tuple_stream_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_tuple_stream_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_tuple_stream_twin_sync_sse');
  late final _wire_mirror_tuple_stream_twin_sync_sse =
      _wire_mirror_tuple_stream_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_vec_enum_stream_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_vec_enum_stream_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_vec_enum_stream_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_vec_enum_stream_twin_sync_sse');
  late final _wire_mirror_vec_enum_stream_twin_sync_sse =
      _wire_mirror_vec_enum_stream_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_repeat_number_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_repeat_number_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_repeat_number_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_number_twin_sync_sse');
  late final _wire_repeat_number_twin_sync_sse =
      _wire_repeat_number_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_repeat_sequence_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_repeat_sequence_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_repeat_sequence_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_sequence_twin_sync_sse');
  late final _wire_repeat_sequence_twin_sync_sse =
      _wire_repeat_sequence_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_contains_mirrored_sub_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_contains_mirrored_sub_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_contains_mirrored_sub_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_contains_mirrored_sub_struct_twin_sync_sse');
  late final _wire_test_contains_mirrored_sub_struct_twin_sync_sse =
      _wire_test_contains_mirrored_sub_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_fallible_of_raw_string_mirrored_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_fallible_of_raw_string_mirrored_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_fallible_of_raw_string_mirrored_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_fallible_of_raw_string_mirrored_twin_sync_sse');
  late final _wire_test_fallible_of_raw_string_mirrored_twin_sync_sse =
      _wire_test_fallible_of_raw_string_mirrored_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_hashmap_with_mirrored_value_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_hashmap_with_mirrored_value_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_hashmap_with_mirrored_value_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_hashmap_with_mirrored_value_twin_sync_sse');
  late final _wire_test_hashmap_with_mirrored_value_twin_sync_sse =
      _wire_test_hashmap_with_mirrored_value_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_list_of_nested_enums_mirrored_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_list_of_nested_enums_mirrored_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_list_of_nested_enums_mirrored_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_list_of_nested_enums_mirrored_twin_sync_sse');
  late final _wire_test_list_of_nested_enums_mirrored_twin_sync_sse =
      _wire_test_list_of_nested_enums_mirrored_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_test_list_of_raw_nested_string_mirrored_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_list_of_raw_nested_string_mirrored_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_list_of_raw_nested_string_mirrored_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_test_list_of_raw_nested_string_mirrored_twin_sync_sse');
  late final _wire_test_list_of_raw_nested_string_mirrored_twin_sync_sse =
      _wire_test_list_of_raw_nested_string_mirrored_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_nested_raw_string_mirrored_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_nested_raw_string_mirrored_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_nested_raw_string_mirrored_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_nested_raw_string_mirrored_twin_sync_sse');
  late final _wire_test_nested_raw_string_mirrored_twin_sync_sse =
      _wire_test_nested_raw_string_mirrored_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_raw_string_enum_mirrored_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_enum_mirrored_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_enum_mirrored_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_enum_mirrored_twin_sync_sse');
  late final _wire_test_raw_string_enum_mirrored_twin_sync_sse =
      _wire_test_raw_string_enum_mirrored_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_raw_string_mirrored_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_mirrored_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_mirrored_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_mirrored_twin_sync_sse');
  late final _wire_test_raw_string_mirrored_twin_sync_sse =
      _wire_test_raw_string_mirrored_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_big_buffers_twin_rust_async(
    int port_,
  ) {
    return _wire_handle_big_buffers_twin_rust_async(
      port_,
    );
  }

  late final _wire_handle_big_buffers_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_big_buffers_twin_rust_async');
  late final _wire_handle_big_buffers_twin_rust_async =
      _wire_handle_big_buffers_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_handle_complex_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_my_tree_node_twin_rust_async> s,
  ) {
    return _wire_handle_complex_struct_twin_rust_async(
      port_,
      s,
    );
  }

  late final _wire_handle_complex_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_my_tree_node_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_complex_struct_twin_rust_async');
  late final _wire_handle_complex_struct_twin_rust_async =
      _wire_handle_complex_struct_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_my_tree_node_twin_rust_async>)>();

  void wire_handle_nested_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async> s,
  ) {
    return _wire_handle_nested_struct_twin_rust_async(
      port_,
      s,
    );
  }

  late final _wire_handle_nested_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_struct_twin_rust_async');
  late final _wire_handle_nested_struct_twin_rust_async =
      _wire_handle_nested_struct_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async>)>();

  void wire_handle_string_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> s,
  ) {
    return _wire_handle_string_twin_rust_async(
      port_,
      s,
    );
  }

  late final _wire_handle_string_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_twin_rust_async');
  late final _wire_handle_string_twin_rust_async =
      _wire_handle_string_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_handle_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_my_size> arg,
    ffi.Pointer<wire_cst_my_size> boxed,
  ) {
    return _wire_handle_struct_twin_rust_async(
      port_,
      arg,
      boxed,
    );
  }

  late final _wire_handle_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_my_size>,
                  ffi.Pointer<wire_cst_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_struct_twin_rust_async');
  late final _wire_handle_struct_twin_rust_async =
      _wire_handle_struct_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_my_size>,
              ffi.Pointer<wire_cst_my_size>)>();

  void wire_handle_vec_u8_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> v,
  ) {
    return _wire_handle_vec_u8_twin_rust_async(
      port_,
      v,
    );
  }

  late final _wire_handle_vec_u8_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_u8_twin_rust_async');
  late final _wire_handle_vec_u8_twin_rust_async =
      _wire_handle_vec_u8_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void wire_list_of_primitive_enums_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_weekdays_twin_rust_async> weekdays,
  ) {
    return _wire_list_of_primitive_enums_twin_rust_async(
      port_,
      weekdays,
    );
  }

  late final _wire_list_of_primitive_enums_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_weekdays_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_list_of_primitive_enums_twin_rust_async');
  late final _wire_list_of_primitive_enums_twin_rust_async =
      _wire_list_of_primitive_enums_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_weekdays_twin_rust_async>)>();

  void wire_test_abc_enum_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_abc_twin_rust_async> abc,
  ) {
    return _wire_test_abc_enum_twin_rust_async(
      port_,
      abc,
    );
  }

  late final _wire_test_abc_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_abc_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_test_abc_enum_twin_rust_async');
  late final _wire_test_abc_enum_twin_rust_async =
      _wire_test_abc_enum_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_abc_twin_rust_async>)>();

  void wire_test_struct_with_enum_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async> se,
  ) {
    return _wire_test_struct_with_enum_twin_rust_async(
      port_,
      se,
    );
  }

  late final _wire_test_struct_with_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_test_struct_with_enum_twin_rust_async');
  late final _wire_test_struct_with_enum_twin_rust_async =
      _wire_test_struct_with_enum_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async>)>();

  void wire_handle_big_buffers_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_big_buffers_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_big_buffers_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_big_buffers_twin_rust_async_sse');
  late final _wire_handle_big_buffers_twin_rust_async_sse =
      _wire_handle_big_buffers_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_complex_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_complex_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_complex_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_complex_struct_twin_rust_async_sse');
  late final _wire_handle_complex_struct_twin_rust_async_sse =
      _wire_handle_complex_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_nested_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_nested_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_nested_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_struct_twin_rust_async_sse');
  late final _wire_handle_nested_struct_twin_rust_async_sse =
      _wire_handle_nested_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_string_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_string_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_string_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_twin_rust_async_sse');
  late final _wire_handle_string_twin_rust_async_sse =
      _wire_handle_string_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_struct_twin_rust_async_sse');
  late final _wire_handle_struct_twin_rust_async_sse =
      _wire_handle_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_vec_u8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_u8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_u8_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_u8_twin_rust_async_sse');
  late final _wire_handle_vec_u8_twin_rust_async_sse =
      _wire_handle_vec_u8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_list_of_primitive_enums_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_list_of_primitive_enums_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_list_of_primitive_enums_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_list_of_primitive_enums_twin_rust_async_sse');
  late final _wire_list_of_primitive_enums_twin_rust_async_sse =
      _wire_list_of_primitive_enums_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_abc_enum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_abc_enum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_abc_enum_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_abc_enum_twin_rust_async_sse');
  late final _wire_test_abc_enum_twin_rust_async_sse =
      _wire_test_abc_enum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_struct_with_enum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_struct_with_enum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_struct_with_enum_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_struct_with_enum_twin_rust_async_sse');
  late final _wire_test_struct_with_enum_twin_rust_async_sse =
      _wire_test_struct_with_enum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_big_buffers_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_big_buffers_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_big_buffers_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_big_buffers_twin_sse');
  late final _wire_handle_big_buffers_twin_sse =
      _wire_handle_big_buffers_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_complex_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_complex_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_complex_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_complex_struct_twin_sse');
  late final _wire_handle_complex_struct_twin_sse =
      _wire_handle_complex_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_nested_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_nested_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_nested_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_struct_twin_sse');
  late final _wire_handle_nested_struct_twin_sse =
      _wire_handle_nested_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_string_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_string_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_string_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_twin_sse');
  late final _wire_handle_string_twin_sse = _wire_handle_string_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_struct_twin_sse');
  late final _wire_handle_struct_twin_sse = _wire_handle_struct_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_vec_u8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_u8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_u8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_u8_twin_sse');
  late final _wire_handle_vec_u8_twin_sse = _wire_handle_vec_u8_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_list_of_primitive_enums_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_list_of_primitive_enums_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_list_of_primitive_enums_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_list_of_primitive_enums_twin_sse');
  late final _wire_list_of_primitive_enums_twin_sse =
      _wire_list_of_primitive_enums_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_abc_enum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_abc_enum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_abc_enum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_abc_enum_twin_sse');
  late final _wire_test_abc_enum_twin_sse = _wire_test_abc_enum_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_struct_with_enum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_struct_with_enum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_struct_with_enum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_struct_with_enum_twin_sse');
  late final _wire_test_struct_with_enum_twin_sse =
      _wire_test_struct_with_enum_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_handle_big_buffers_twin_sync() {
    return _wire_handle_big_buffers_twin_sync();
  }

  late final _wire_handle_big_buffers_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_handle_big_buffers_twin_sync');
  late final _wire_handle_big_buffers_twin_sync =
      _wire_handle_big_buffers_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_handle_complex_struct_twin_sync(
    ffi.Pointer<wire_cst_my_tree_node_twin_sync> s,
  ) {
    return _wire_handle_complex_struct_twin_sync(
      s,
    );
  }

  late final _wire_handle_complex_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_my_tree_node_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_complex_struct_twin_sync');
  late final _wire_handle_complex_struct_twin_sync =
      _wire_handle_complex_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_my_tree_node_twin_sync>)>();

  WireSyncRust2DartDco wire_handle_nested_struct_twin_sync(
    ffi.Pointer<wire_cst_my_nested_struct_twin_sync> s,
  ) {
    return _wire_handle_nested_struct_twin_sync(
      s,
    );
  }

  late final _wire_handle_nested_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_my_nested_struct_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_struct_twin_sync');
  late final _wire_handle_nested_struct_twin_sync =
      _wire_handle_nested_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_my_nested_struct_twin_sync>)>();

  WireSyncRust2DartDco wire_handle_string_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> s,
  ) {
    return _wire_handle_string_twin_sync(
      s,
    );
  }

  late final _wire_handle_string_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_twin_sync');
  late final _wire_handle_string_twin_sync =
      _wire_handle_string_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_handle_struct_twin_sync(
    ffi.Pointer<wire_cst_my_size> arg,
    ffi.Pointer<wire_cst_my_size> boxed,
  ) {
    return _wire_handle_struct_twin_sync(
      arg,
      boxed,
    );
  }

  late final _wire_handle_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_my_size>,
                  ffi.Pointer<wire_cst_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_struct_twin_sync');
  late final _wire_handle_struct_twin_sync =
      _wire_handle_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_my_size>, ffi.Pointer<wire_cst_my_size>)>();

  WireSyncRust2DartDco wire_handle_vec_u8_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_loose> v,
  ) {
    return _wire_handle_vec_u8_twin_sync(
      v,
    );
  }

  late final _wire_handle_vec_u8_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_u8_twin_sync');
  late final _wire_handle_vec_u8_twin_sync =
      _wire_handle_vec_u8_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  WireSyncRust2DartDco wire_list_of_primitive_enums_twin_sync(
    ffi.Pointer<wire_cst_list_weekdays_twin_sync> weekdays,
  ) {
    return _wire_list_of_primitive_enums_twin_sync(
      weekdays,
    );
  }

  late final _wire_list_of_primitive_enums_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_weekdays_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_list_of_primitive_enums_twin_sync');
  late final _wire_list_of_primitive_enums_twin_sync =
      _wire_list_of_primitive_enums_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_weekdays_twin_sync>)>();

  WireSyncRust2DartDco wire_test_abc_enum_twin_sync(
    ffi.Pointer<wire_cst_abc_twin_sync> abc,
  ) {
    return _wire_test_abc_enum_twin_sync(
      abc,
    );
  }

  late final _wire_test_abc_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_abc_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_test_abc_enum_twin_sync');
  late final _wire_test_abc_enum_twin_sync =
      _wire_test_abc_enum_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_abc_twin_sync>)>();

  WireSyncRust2DartDco wire_test_struct_with_enum_twin_sync(
    ffi.Pointer<wire_cst_struct_with_enum_twin_sync> se,
  ) {
    return _wire_test_struct_with_enum_twin_sync(
      se,
    );
  }

  late final _wire_test_struct_with_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_struct_with_enum_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_test_struct_with_enum_twin_sync');
  late final _wire_test_struct_with_enum_twin_sync =
      _wire_test_struct_with_enum_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_struct_with_enum_twin_sync>)>();

  WireSyncRust2DartSse wire_handle_big_buffers_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_big_buffers_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_big_buffers_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_big_buffers_twin_sync_sse');
  late final _wire_handle_big_buffers_twin_sync_sse =
      _wire_handle_big_buffers_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_complex_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_complex_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_complex_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_complex_struct_twin_sync_sse');
  late final _wire_handle_complex_struct_twin_sync_sse =
      _wire_handle_complex_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_nested_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_nested_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_nested_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_struct_twin_sync_sse');
  late final _wire_handle_nested_struct_twin_sync_sse =
      _wire_handle_nested_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_string_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_string_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_string_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_twin_sync_sse');
  late final _wire_handle_string_twin_sync_sse =
      _wire_handle_string_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_struct_twin_sync_sse');
  late final _wire_handle_struct_twin_sync_sse =
      _wire_handle_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_vec_u8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_u8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_u8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_u8_twin_sync_sse');
  late final _wire_handle_vec_u8_twin_sync_sse =
      _wire_handle_vec_u8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_list_of_primitive_enums_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_list_of_primitive_enums_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_list_of_primitive_enums_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_list_of_primitive_enums_twin_sync_sse');
  late final _wire_list_of_primitive_enums_twin_sync_sse =
      _wire_list_of_primitive_enums_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_abc_enum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_abc_enum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_abc_enum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_abc_enum_twin_sync_sse');
  late final _wire_test_abc_enum_twin_sync_sse =
      _wire_test_abc_enum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_struct_with_enum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_struct_with_enum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_struct_with_enum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_struct_with_enum_twin_sync_sse');
  late final _wire_test_struct_with_enum_twin_sync_sse =
      _wire_test_struct_with_enum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_empty_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_empty_twin_rust_async> empty,
  ) {
    return _wire_empty_struct_twin_rust_async(
      port_,
      empty,
    );
  }

  late final _wire_empty_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_empty_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_empty_struct_twin_rust_async');
  late final _wire_empty_struct_twin_rust_async =
      _wire_empty_struct_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_empty_twin_rust_async>)>();

  void wire_func_return_unit_twin_rust_async(
    int port_,
  ) {
    return _wire_func_return_unit_twin_rust_async(
      port_,
    );
  }

  late final _wire_func_return_unit_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_func_return_unit_twin_rust_async');
  late final _wire_func_return_unit_twin_rust_async =
      _wire_func_return_unit_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_handle_list_of_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_my_size> l,
  ) {
    return _wire_handle_list_of_struct_twin_rust_async(
      port_,
      l,
    );
  }

  late final _wire_handle_list_of_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_list_of_struct_twin_rust_async');
  late final _wire_handle_list_of_struct_twin_rust_async =
      _wire_handle_list_of_struct_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_my_size>)>();

  void wire_handle_string_list_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_String> names,
  ) {
    return _wire_handle_string_list_twin_rust_async(
      port_,
      names,
    );
  }

  late final _wire_handle_string_list_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_list_twin_rust_async');
  late final _wire_handle_string_list_twin_rust_async =
      _wire_handle_string_list_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_String>)>();

  void wire_empty_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_empty_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_empty_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_empty_struct_twin_rust_async_sse');
  late final _wire_empty_struct_twin_rust_async_sse =
      _wire_empty_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_return_unit_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_return_unit_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_return_unit_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_return_unit_twin_rust_async_sse');
  late final _wire_func_return_unit_twin_rust_async_sse =
      _wire_func_return_unit_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_list_of_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_list_of_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_list_of_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_list_of_struct_twin_rust_async_sse');
  late final _wire_handle_list_of_struct_twin_rust_async_sse =
      _wire_handle_list_of_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_string_list_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_string_list_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_string_list_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_list_twin_rust_async_sse');
  late final _wire_handle_string_list_twin_rust_async_sse =
      _wire_handle_string_list_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_empty_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_empty_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_empty_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_empty_struct_twin_sse');
  late final _wire_empty_struct_twin_sse = _wire_empty_struct_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_return_unit_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_return_unit_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_return_unit_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_return_unit_twin_sse');
  late final _wire_func_return_unit_twin_sse =
      _wire_func_return_unit_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_list_of_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_list_of_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_list_of_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_list_of_struct_twin_sse');
  late final _wire_handle_list_of_struct_twin_sse =
      _wire_handle_list_of_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_string_list_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_string_list_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_string_list_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_list_twin_sse');
  late final _wire_handle_string_list_twin_sse =
      _wire_handle_string_list_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_empty_struct_twin_sync(
    ffi.Pointer<wire_cst_empty_twin_sync> empty,
  ) {
    return _wire_empty_struct_twin_sync(
      empty,
    );
  }

  late final _wire_empty_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_empty_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_empty_struct_twin_sync');
  late final _wire_empty_struct_twin_sync =
      _wire_empty_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_empty_twin_sync>)>();

  WireSyncRust2DartDco wire_func_return_unit_twin_sync() {
    return _wire_func_return_unit_twin_sync();
  }

  late final _wire_func_return_unit_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_func_return_unit_twin_sync');
  late final _wire_func_return_unit_twin_sync =
      _wire_func_return_unit_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_handle_list_of_struct_twin_sync(
    ffi.Pointer<wire_cst_list_my_size> l,
  ) {
    return _wire_handle_list_of_struct_twin_sync(
      l,
    );
  }

  late final _wire_handle_list_of_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_list_of_struct_twin_sync');
  late final _wire_handle_list_of_struct_twin_sync =
      _wire_handle_list_of_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_my_size>)>();

  WireSyncRust2DartDco wire_handle_string_list_twin_sync(
    ffi.Pointer<wire_cst_list_String> names,
  ) {
    return _wire_handle_string_list_twin_sync(
      names,
    );
  }

  late final _wire_handle_string_list_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_list_twin_sync');
  late final _wire_handle_string_list_twin_sync =
      _wire_handle_string_list_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_String>)>();

  WireSyncRust2DartSse wire_empty_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_empty_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_empty_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_empty_struct_twin_sync_sse');
  late final _wire_empty_struct_twin_sync_sse =
      _wire_empty_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_return_unit_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_return_unit_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_return_unit_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_return_unit_twin_sync_sse');
  late final _wire_func_return_unit_twin_sync_sse =
      _wire_func_return_unit_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_list_of_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_list_of_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_list_of_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_list_of_struct_twin_sync_sse');
  late final _wire_handle_list_of_struct_twin_sync_sse =
      _wire_handle_list_of_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_string_list_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_string_list_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_string_list_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_list_twin_sync_sse');
  late final _wire_handle_string_list_twin_sync_sse =
      _wire_handle_string_list_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_newtype_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_new_type_int_twin_rust_async> arg,
  ) {
    return _wire_handle_newtype_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_handle_newtype_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_new_type_int_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_newtype_twin_rust_async');
  late final _wire_handle_newtype_twin_rust_async =
      _wire_handle_newtype_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_new_type_int_twin_rust_async>)>();

  void wire_handle_newtype_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_newtype_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_newtype_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_newtype_twin_rust_async_sse');
  late final _wire_handle_newtype_twin_rust_async_sse =
      _wire_handle_newtype_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_newtype_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_newtype_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_newtype_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_newtype_twin_sse');
  late final _wire_handle_newtype_twin_sse = _wire_handle_newtype_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_handle_newtype_twin_sync(
    ffi.Pointer<wire_cst_new_type_int_twin_sync> arg,
  ) {
    return _wire_handle_newtype_twin_sync(
      arg,
    );
  }

  late final _wire_handle_newtype_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_new_type_int_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_newtype_twin_sync');
  late final _wire_handle_newtype_twin_sync =
      _wire_handle_newtype_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_new_type_int_twin_sync>)>();

  WireSyncRust2DartSse wire_handle_newtype_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_newtype_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_newtype_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_newtype_twin_sync_sse');
  late final _wire_handle_newtype_twin_sync_sse =
      _wire_handle_newtype_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_primitive_optional_types_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Int32> my_i32,
    ffi.Pointer<ffi.Int64> my_i64,
    ffi.Pointer<ffi.Double> my_f64,
    ffi.Pointer<ffi.Bool> my_bool,
  ) {
    return _wire_primitive_optional_types_twin_rust_async(
      port_,
      my_i32,
      my_i64,
      my_f64,
      my_bool,
    );
  }

  late final _wire_primitive_optional_types_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int64>,
                  ffi.Pointer<ffi.Double>,
                  ffi.Pointer<ffi.Bool>)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_optional_types_twin_rust_async');
  late final _wire_primitive_optional_types_twin_rust_async =
      _wire_primitive_optional_types_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Int32>, ffi.Pointer<ffi.Int64>,
              ffi.Pointer<ffi.Double>, ffi.Pointer<ffi.Bool>)>();

  void wire_primitive_optional_types_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_optional_types_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_optional_types_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_optional_types_twin_rust_async_sse');
  late final _wire_primitive_optional_types_twin_rust_async_sse =
      _wire_primitive_optional_types_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_primitive_optional_types_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_optional_types_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_optional_types_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_optional_types_twin_sse');
  late final _wire_primitive_optional_types_twin_sse =
      _wire_primitive_optional_types_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_primitive_optional_types_twin_sync(
    ffi.Pointer<ffi.Int32> my_i32,
    ffi.Pointer<ffi.Int64> my_i64,
    ffi.Pointer<ffi.Double> my_f64,
    ffi.Pointer<ffi.Bool> my_bool,
  ) {
    return _wire_primitive_optional_types_twin_sync(
      my_i32,
      my_i64,
      my_f64,
      my_bool,
    );
  }

  late final _wire_primitive_optional_types_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int64>,
                  ffi.Pointer<ffi.Double>,
                  ffi.Pointer<ffi.Bool>)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_optional_types_twin_sync');
  late final _wire_primitive_optional_types_twin_sync =
      _wire_primitive_optional_types_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<ffi.Int64>,
              ffi.Pointer<ffi.Double>,
              ffi.Pointer<ffi.Bool>)>();

  WireSyncRust2DartSse wire_primitive_optional_types_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_optional_types_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_optional_types_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_optional_types_twin_sync_sse');
  late final _wire_primitive_optional_types_twin_sync_sse =
      _wire_primitive_optional_types_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_increment_boxed_optional_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Double> opt,
  ) {
    return _wire_handle_increment_boxed_optional_twin_rust_async(
      port_,
      opt,
    );
  }

  late final _wire_handle_increment_boxed_optional_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Double>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_increment_boxed_optional_twin_rust_async');
  late final _wire_handle_increment_boxed_optional_twin_rust_async =
      _wire_handle_increment_boxed_optional_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Double>)>();

  void wire_handle_option_box_arguments_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Int8> i8box,
    ffi.Pointer<ffi.Uint8> u8box,
    ffi.Pointer<ffi.Int32> i32box,
    ffi.Pointer<ffi.Int64> i64box,
    ffi.Pointer<ffi.Double> f64box,
    ffi.Pointer<ffi.Bool> boolbox,
    ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async> structbox,
  ) {
    return _wire_handle_option_box_arguments_twin_rust_async(
      port_,
      i8box,
      u8box,
      i32box,
      i64box,
      f64box,
      boolbox,
      structbox,
    );
  }

  late final _wire_handle_option_box_arguments_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<ffi.Int8>,
                  ffi.Pointer<ffi.Uint8>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int64>,
                  ffi.Pointer<ffi.Double>,
                  ffi.Pointer<ffi.Bool>,
                  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_option_box_arguments_twin_rust_async');
  late final _wire_handle_option_box_arguments_twin_rust_async =
      _wire_handle_option_box_arguments_twin_rust_asyncPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<ffi.Int8>,
              ffi.Pointer<ffi.Uint8>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<ffi.Int64>,
              ffi.Pointer<ffi.Double>,
              ffi.Pointer<ffi.Bool>,
              ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>)>();

  void wire_handle_optional_increment_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async> opt,
  ) {
    return _wire_handle_optional_increment_twin_rust_async(
      port_,
      opt,
    );
  }

  late final _wire_handle_optional_increment_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_increment_twin_rust_async');
  late final _wire_handle_optional_increment_twin_rust_async =
      _wire_handle_optional_increment_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>)>();

  void wire_handle_optional_return_twin_rust_async(
    int port_,
    double left,
    double right,
  ) {
    return _wire_handle_optional_return_twin_rust_async(
      port_,
      left,
      right,
    );
  }

  late final _wire_handle_optional_return_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Double, ffi.Double)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_return_twin_rust_async');
  late final _wire_handle_optional_return_twin_rust_async =
      _wire_handle_optional_return_twin_rust_asyncPtr
          .asFunction<void Function(int, double, double)>();

  void wire_handle_optional_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> document,
  ) {
    return _wire_handle_optional_struct_twin_rust_async(
      port_,
      document,
    );
  }

  late final _wire_handle_optional_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_struct_twin_rust_async');
  late final _wire_handle_optional_struct_twin_rust_async =
      _wire_handle_optional_struct_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_handle_vec_of_opts_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_opt_vecs_twin_rust_async> opt,
  ) {
    return _wire_handle_vec_of_opts_twin_rust_async(
      port_,
      opt,
    );
  }

  late final _wire_handle_vec_of_opts_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_opt_vecs_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_opts_twin_rust_async');
  late final _wire_handle_vec_of_opts_twin_rust_async =
      _wire_handle_vec_of_opts_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_opt_vecs_twin_rust_async>)>();

  void wire_handle_increment_boxed_optional_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_increment_boxed_optional_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_increment_boxed_optional_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_increment_boxed_optional_twin_rust_async_sse');
  late final _wire_handle_increment_boxed_optional_twin_rust_async_sse =
      _wire_handle_increment_boxed_optional_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_option_box_arguments_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_option_box_arguments_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_option_box_arguments_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_option_box_arguments_twin_rust_async_sse');
  late final _wire_handle_option_box_arguments_twin_rust_async_sse =
      _wire_handle_option_box_arguments_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_optional_increment_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_increment_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_increment_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_increment_twin_rust_async_sse');
  late final _wire_handle_optional_increment_twin_rust_async_sse =
      _wire_handle_optional_increment_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_optional_return_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_return_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_return_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_return_twin_rust_async_sse');
  late final _wire_handle_optional_return_twin_rust_async_sse =
      _wire_handle_optional_return_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_optional_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_struct_twin_rust_async_sse');
  late final _wire_handle_optional_struct_twin_rust_async_sse =
      _wire_handle_optional_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_vec_of_opts_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_of_opts_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_of_opts_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_opts_twin_rust_async_sse');
  late final _wire_handle_vec_of_opts_twin_rust_async_sse =
      _wire_handle_vec_of_opts_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_increment_boxed_optional_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_increment_boxed_optional_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_increment_boxed_optional_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_increment_boxed_optional_twin_sse');
  late final _wire_handle_increment_boxed_optional_twin_sse =
      _wire_handle_increment_boxed_optional_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_option_box_arguments_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_option_box_arguments_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_option_box_arguments_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_option_box_arguments_twin_sse');
  late final _wire_handle_option_box_arguments_twin_sse =
      _wire_handle_option_box_arguments_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_optional_increment_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_increment_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_increment_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_increment_twin_sse');
  late final _wire_handle_optional_increment_twin_sse =
      _wire_handle_optional_increment_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_optional_return_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_return_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_return_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_return_twin_sse');
  late final _wire_handle_optional_return_twin_sse =
      _wire_handle_optional_return_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_optional_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_struct_twin_sse');
  late final _wire_handle_optional_struct_twin_sse =
      _wire_handle_optional_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_vec_of_opts_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_of_opts_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_of_opts_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_opts_twin_sse');
  late final _wire_handle_vec_of_opts_twin_sse =
      _wire_handle_vec_of_opts_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_handle_increment_boxed_optional_twin_sync(
    ffi.Pointer<ffi.Double> opt,
  ) {
    return _wire_handle_increment_boxed_optional_twin_sync(
      opt,
    );
  }

  late final _wire_handle_increment_boxed_optional_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Double>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_increment_boxed_optional_twin_sync');
  late final _wire_handle_increment_boxed_optional_twin_sync =
      _wire_handle_increment_boxed_optional_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Double>)>();

  WireSyncRust2DartDco wire_handle_option_box_arguments_twin_sync(
    ffi.Pointer<ffi.Int8> i8box,
    ffi.Pointer<ffi.Uint8> u8box,
    ffi.Pointer<ffi.Int32> i32box,
    ffi.Pointer<ffi.Int64> i64box,
    ffi.Pointer<ffi.Double> f64box,
    ffi.Pointer<ffi.Bool> boolbox,
    ffi.Pointer<wire_cst_exotic_optionals_twin_sync> structbox,
  ) {
    return _wire_handle_option_box_arguments_twin_sync(
      i8box,
      u8box,
      i32box,
      i64box,
      f64box,
      boolbox,
      structbox,
    );
  }

  late final _wire_handle_option_box_arguments_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Int8>,
                  ffi.Pointer<ffi.Uint8>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int64>,
                  ffi.Pointer<ffi.Double>,
                  ffi.Pointer<ffi.Bool>,
                  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_option_box_arguments_twin_sync');
  late final _wire_handle_option_box_arguments_twin_sync =
      _wire_handle_option_box_arguments_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<ffi.Int8>,
              ffi.Pointer<ffi.Uint8>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<ffi.Int64>,
              ffi.Pointer<ffi.Double>,
              ffi.Pointer<ffi.Bool>,
              ffi.Pointer<wire_cst_exotic_optionals_twin_sync>)>();

  WireSyncRust2DartDco wire_handle_optional_increment_twin_sync(
    ffi.Pointer<wire_cst_exotic_optionals_twin_sync> opt,
  ) {
    return _wire_handle_optional_increment_twin_sync(
      opt,
    );
  }

  late final _wire_handle_optional_increment_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_increment_twin_sync');
  late final _wire_handle_optional_increment_twin_sync =
      _wire_handle_optional_increment_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_exotic_optionals_twin_sync>)>();

  WireSyncRust2DartDco wire_handle_optional_return_twin_sync(
    double left,
    double right,
  ) {
    return _wire_handle_optional_return_twin_sync(
      left,
      right,
    );
  }

  late final _wire_handle_optional_return_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Double, ffi.Double)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_return_twin_sync');
  late final _wire_handle_optional_return_twin_sync =
      _wire_handle_optional_return_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(double, double)>();

  WireSyncRust2DartDco wire_handle_optional_struct_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> document,
  ) {
    return _wire_handle_optional_struct_twin_sync(
      document,
    );
  }

  late final _wire_handle_optional_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_struct_twin_sync');
  late final _wire_handle_optional_struct_twin_sync =
      _wire_handle_optional_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_handle_vec_of_opts_twin_sync(
    ffi.Pointer<wire_cst_opt_vecs_twin_sync> opt,
  ) {
    return _wire_handle_vec_of_opts_twin_sync(
      opt,
    );
  }

  late final _wire_handle_vec_of_opts_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_opt_vecs_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_opts_twin_sync');
  late final _wire_handle_vec_of_opts_twin_sync =
      _wire_handle_vec_of_opts_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_opt_vecs_twin_sync>)>();

  WireSyncRust2DartSse wire_handle_increment_boxed_optional_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_increment_boxed_optional_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_increment_boxed_optional_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_increment_boxed_optional_twin_sync_sse');
  late final _wire_handle_increment_boxed_optional_twin_sync_sse =
      _wire_handle_increment_boxed_optional_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_option_box_arguments_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_option_box_arguments_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_option_box_arguments_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_option_box_arguments_twin_sync_sse');
  late final _wire_handle_option_box_arguments_twin_sync_sse =
      _wire_handle_option_box_arguments_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_optional_increment_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_increment_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_increment_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_increment_twin_sync_sse');
  late final _wire_handle_optional_increment_twin_sync_sse =
      _wire_handle_optional_increment_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_optional_return_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_return_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_return_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_return_twin_sync_sse');
  late final _wire_handle_optional_return_twin_sync_sse =
      _wire_handle_optional_return_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_optional_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_struct_twin_sync_sse');
  late final _wire_handle_optional_struct_twin_sync_sse =
      _wire_handle_optional_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_vec_of_opts_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_of_opts_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_of_opts_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_opts_twin_sync_sse');
  late final _wire_handle_vec_of_opts_twin_sync_sse =
      _wire_handle_vec_of_opts_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_vec_of_primitive_twin_rust_async(
    int port_,
    int n,
  ) {
    return _wire_handle_vec_of_primitive_twin_rust_async(
      port_,
      n,
    );
  }

  late final _wire_handle_vec_of_primitive_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_primitive_twin_rust_async');
  late final _wire_handle_vec_of_primitive_twin_rust_async =
      _wire_handle_vec_of_primitive_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_vec_of_primitive_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_of_primitive_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_of_primitive_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_primitive_twin_rust_async_sse');
  late final _wire_handle_vec_of_primitive_twin_rust_async_sse =
      _wire_handle_vec_of_primitive_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_vec_of_primitive_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_of_primitive_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_of_primitive_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_primitive_twin_sse');
  late final _wire_handle_vec_of_primitive_twin_sse =
      _wire_handle_vec_of_primitive_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_handle_vec_of_primitive_twin_sync(
    int n,
  ) {
    return _wire_handle_vec_of_primitive_twin_sync(
      n,
    );
  }

  late final _wire_handle_vec_of_primitive_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_primitive_twin_sync');
  late final _wire_handle_vec_of_primitive_twin_sync =
      _wire_handle_vec_of_primitive_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartSse wire_handle_vec_of_primitive_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_of_primitive_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_of_primitive_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_primitive_twin_sync_sse');
  late final _wire_handle_vec_of_primitive_twin_sync_sse =
      _wire_handle_vec_of_primitive_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_primitive_types_twin_rust_async(
    int port_,
    int my_i32,
    int my_i64,
    double my_f64,
    bool my_bool,
  ) {
    return _wire_primitive_types_twin_rust_async(
      port_,
      my_i32,
      my_i64,
      my_f64,
      my_bool,
    );
  }

  late final _wire_primitive_types_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Int32, ffi.Int64, ffi.Double, ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_types_twin_rust_async');
  late final _wire_primitive_types_twin_rust_async =
      _wire_primitive_types_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int, double, bool)>();

  void wire_primitive_u32_twin_rust_async(
    int port_,
    int my_u32,
  ) {
    return _wire_primitive_u32_twin_rust_async(
      port_,
      my_u32,
    );
  }

  late final _wire_primitive_u32_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_primitive_u32_twin_rust_async');
  late final _wire_primitive_u32_twin_rust_async =
      _wire_primitive_u32_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_primitive_types_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_types_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_types_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_types_twin_rust_async_sse');
  late final _wire_primitive_types_twin_rust_async_sse =
      _wire_primitive_types_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_primitive_u32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_u32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_u32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_u32_twin_rust_async_sse');
  late final _wire_primitive_u32_twin_rust_async_sse =
      _wire_primitive_u32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_primitive_types_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_types_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_types_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_types_twin_sse');
  late final _wire_primitive_types_twin_sse = _wire_primitive_types_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_primitive_u32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_u32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_u32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_u32_twin_sse');
  late final _wire_primitive_u32_twin_sse = _wire_primitive_u32_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_primitive_types_twin_sync(
    int my_i32,
    int my_i64,
    double my_f64,
    bool my_bool,
  ) {
    return _wire_primitive_types_twin_sync(
      my_i32,
      my_i64,
      my_f64,
      my_bool,
    );
  }

  late final _wire_primitive_types_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Int32, ffi.Int64, ffi.Double, ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_types_twin_sync');
  late final _wire_primitive_types_twin_sync =
      _wire_primitive_types_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int, int, double, bool)>();

  WireSyncRust2DartDco wire_primitive_u32_twin_sync(
    int my_u32,
  ) {
    return _wire_primitive_u32_twin_sync(
      my_u32,
    );
  }

  late final _wire_primitive_u32_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_primitive_u32_twin_sync');
  late final _wire_primitive_u32_twin_sync = _wire_primitive_u32_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartSse wire_primitive_types_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_types_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_types_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_types_twin_sync_sse');
  late final _wire_primitive_types_twin_sync_sse =
      _wire_primitive_types_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_primitive_u32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_u32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_u32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_u32_twin_sync_sse');
  late final _wire_primitive_u32_twin_sync_sse =
      _wire_primitive_u32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_more_than_just_one_raw_string_struct_twin_rust_async(
    int port_,
  ) {
    return _wire_test_more_than_just_one_raw_string_struct_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_more_than_just_one_raw_string_struct_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_more_than_just_one_raw_string_struct_twin_rust_async');
  late final _wire_test_more_than_just_one_raw_string_struct_twin_rust_async =
      _wire_test_more_than_just_one_raw_string_struct_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_test_raw_string_item_struct_twin_rust_async(
    int port_,
  ) {
    return _wire_test_raw_string_item_struct_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_raw_string_item_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_item_struct_twin_rust_async');
  late final _wire_test_raw_string_item_struct_twin_rust_async =
      _wire_test_raw_string_item_struct_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_test_more_than_just_one_raw_string_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_more_than_just_one_raw_string_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_more_than_just_one_raw_string_struct_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_test_more_than_just_one_raw_string_struct_twin_rust_async_sse');
  late final _wire_test_more_than_just_one_raw_string_struct_twin_rust_async_sse =
      _wire_test_more_than_just_one_raw_string_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_raw_string_item_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_item_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_item_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_item_struct_twin_rust_async_sse');
  late final _wire_test_raw_string_item_struct_twin_rust_async_sse =
      _wire_test_raw_string_item_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_more_than_just_one_raw_string_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_more_than_just_one_raw_string_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_more_than_just_one_raw_string_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_more_than_just_one_raw_string_struct_twin_sse');
  late final _wire_test_more_than_just_one_raw_string_struct_twin_sse =
      _wire_test_more_than_just_one_raw_string_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_raw_string_item_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_item_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_item_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_item_struct_twin_sse');
  late final _wire_test_raw_string_item_struct_twin_sse =
      _wire_test_raw_string_item_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco
      wire_test_more_than_just_one_raw_string_struct_twin_sync() {
    return _wire_test_more_than_just_one_raw_string_struct_twin_sync();
  }

  late final _wire_test_more_than_just_one_raw_string_struct_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_test_more_than_just_one_raw_string_struct_twin_sync');
  late final _wire_test_more_than_just_one_raw_string_struct_twin_sync =
      _wire_test_more_than_just_one_raw_string_struct_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_test_raw_string_item_struct_twin_sync() {
    return _wire_test_raw_string_item_struct_twin_sync();
  }

  late final _wire_test_raw_string_item_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_item_struct_twin_sync');
  late final _wire_test_raw_string_item_struct_twin_sync =
      _wire_test_raw_string_item_struct_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartSse
      wire_test_more_than_just_one_raw_string_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_more_than_just_one_raw_string_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_more_than_just_one_raw_string_struct_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_test_more_than_just_one_raw_string_struct_twin_sync_sse');
  late final _wire_test_more_than_just_one_raw_string_struct_twin_sync_sse =
      _wire_test_more_than_just_one_raw_string_struct_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_raw_string_item_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_item_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_item_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_item_struct_twin_sync_sse');
  late final _wire_test_raw_string_item_struct_twin_sync_sse =
      _wire_test_raw_string_item_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinMoi_instance_method_arg_borrow_twin_moi(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinMoi_instance_method_arg_borrow_twin_moi(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinMoi_instance_method_arg_borrow_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinMoi_instance_method_arg_borrow_twin_moi');
  late final _wire_NonCloneSimpleTwinMoi_instance_method_arg_borrow_twin_moi =
      _wire_NonCloneSimpleTwinMoi_instance_method_arg_borrow_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinMoi_instance_method_arg_mut_borrow_twin_moi(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinMoi_instance_method_arg_mut_borrow_twin_moi(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinMoi_instance_method_arg_mut_borrow_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinMoi_instance_method_arg_mut_borrow_twin_moi');
  late final _wire_NonCloneSimpleTwinMoi_instance_method_arg_mut_borrow_twin_moi =
      _wire_NonCloneSimpleTwinMoi_instance_method_arg_mut_borrow_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinMoi_instance_method_arg_own_twin_moi(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinMoi_instance_method_arg_own_twin_moi(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinMoi_instance_method_arg_own_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinMoi_instance_method_arg_own_twin_moi');
  late final _wire_NonCloneSimpleTwinMoi_instance_method_arg_own_twin_moi =
      _wire_NonCloneSimpleTwinMoi_instance_method_arg_own_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinMoi_instance_method_getter_twin_moi(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinMoi_instance_method_getter_twin_moi(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinMoi_instance_method_getter_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinMoi_instance_method_getter_twin_moi');
  late final _wire_NonCloneSimpleTwinMoi_instance_method_getter_twin_moi =
      _wire_NonCloneSimpleTwinMoi_instance_method_getter_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinMoi_instance_method_return_own_twin_moi(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinMoi_instance_method_return_own_twin_moi(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinMoi_instance_method_return_own_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinMoi_instance_method_return_own_twin_moi');
  late final _wire_NonCloneSimpleTwinMoi_instance_method_return_own_twin_moi =
      _wire_NonCloneSimpleTwinMoi_instance_method_return_own_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinMoi_new_custom_name_twin_moi(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinMoi_new_custom_name_twin_moi(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinMoi_new_custom_name_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinMoi_new_custom_name_twin_moi');
  late final _wire_NonCloneSimpleTwinMoi_new_custom_name_twin_moi =
      _wire_NonCloneSimpleTwinMoi_new_custom_name_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_NonCloneSimpleTwinMoi_new_twin_moi(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinMoi_new_twin_moi(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinMoi_new_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinMoi_new_twin_moi');
  late final _wire_NonCloneSimpleTwinMoi_new_twin_moi =
      _wire_NonCloneSimpleTwinMoi_new_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_NonCloneSimpleTwinMoi_new_with_result_twin_moi(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinMoi_new_with_result_twin_moi(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinMoi_new_with_result_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinMoi_new_with_result_twin_moi');
  late final _wire_NonCloneSimpleTwinMoi_new_with_result_twin_moi =
      _wire_NonCloneSimpleTwinMoi_new_with_result_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_NonCloneSimpleTwinMoi_static_method_arg_borrow_twin_moi(
    int port_,
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinMoi_static_method_arg_borrow_twin_moi(
      port_,
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinMoi_static_method_arg_borrow_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinMoi_static_method_arg_borrow_twin_moi');
  late final _wire_NonCloneSimpleTwinMoi_static_method_arg_borrow_twin_moi =
      _wire_NonCloneSimpleTwinMoi_static_method_arg_borrow_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinMoi_static_method_arg_mut_borrow_twin_moi(
    int port_,
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinMoi_static_method_arg_mut_borrow_twin_moi(
      port_,
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinMoi_static_method_arg_mut_borrow_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinMoi_static_method_arg_mut_borrow_twin_moi');
  late final _wire_NonCloneSimpleTwinMoi_static_method_arg_mut_borrow_twin_moi =
      _wire_NonCloneSimpleTwinMoi_static_method_arg_mut_borrow_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinMoi_static_method_arg_own_twin_moi(
    int port_,
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinMoi_static_method_arg_own_twin_moi(
      port_,
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinMoi_static_method_arg_own_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinMoi_static_method_arg_own_twin_moi');
  late final _wire_NonCloneSimpleTwinMoi_static_method_arg_own_twin_moi =
      _wire_NonCloneSimpleTwinMoi_static_method_arg_own_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinMoi_static_method_return_own_twin_moi(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinMoi_static_method_return_own_twin_moi(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinMoi_static_method_return_own_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinMoi_static_method_return_own_twin_moi');
  late final _wire_NonCloneSimpleTwinMoi_static_method_return_own_twin_moi =
      _wire_NonCloneSimpleTwinMoi_static_method_return_own_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_arg_borrow_twin_moi(
    int port_,
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_moi(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_moi');
  late final _wire_rust_auto_opaque_arg_borrow_twin_moi =
      _wire_rust_auto_opaque_arg_borrow_twin_moiPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_arg_mut_borrow_twin_moi(
    int port_,
    int arg,
    int expect,
    int adder,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_moi(
      port_,
      arg,
      expect,
      adder,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_moi');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_moi =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_moiPtr
          .asFunction<void Function(int, int, int, int)>();

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_moi(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_moi(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_moi');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_moi =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_arg_own_twin_moi(
    int port_,
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_moi(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_moi');
  late final _wire_rust_auto_opaque_arg_own_twin_moi =
      _wire_rust_auto_opaque_arg_own_twin_moiPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_arg_vec_own_twin_moi(
    int port_,
    ffi.Pointer<
            wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi>
        arg,
    ffi.Pointer<wire_cst_list_prim_i_32_loose> expect,
  ) {
    return _wire_rust_auto_opaque_arg_vec_own_twin_moi(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_vec_own_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi>,
                  ffi.Pointer<wire_cst_list_prim_i_32_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_vec_own_twin_moi');
  late final _wire_rust_auto_opaque_arg_vec_own_twin_moi =
      _wire_rust_auto_opaque_arg_vec_own_twin_moiPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi>,
              ffi.Pointer<wire_cst_list_prim_i_32_loose>)>();

  void wire_rust_auto_opaque_borrow_and_borrow_twin_moi(
    int port_,
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_borrow_and_borrow_twin_moi(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_borrow_twin_moi');
  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_moi =
      _wire_rust_auto_opaque_borrow_and_borrow_twin_moiPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_moi(
    int port_,
    int borrow,
    int mut_borrow,
  ) {
    return _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_moi(
      port_,
      borrow,
      mut_borrow,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_mut_borrow_twin_moi');
  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_moi =
      _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_moiPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_callable_arg_twin_moi(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_moi(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_moi');
  late final _wire_rust_auto_opaque_callable_arg_twin_moi =
      _wire_rust_auto_opaque_callable_arg_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_callable_return_twin_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_callable_return_twin_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_callable_return_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_moi');
  late final _wire_rust_auto_opaque_callable_return_twin_moi =
      _wire_rust_auto_opaque_callable_return_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_dummy_twin_moi(
    int port_,
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_dummy_twin_moi(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_dummy_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_dummy_twin_moi');
  late final _wire_rust_auto_opaque_dummy_twin_moi =
      _wire_rust_auto_opaque_dummy_twin_moiPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_enum_arg_borrow_twin_moi(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_enum_arg_borrow_twin_moi(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_arg_borrow_twin_moi');
  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_moi =
      _wire_rust_auto_opaque_enum_arg_borrow_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_enum_return_own_twin_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_enum_return_own_twin_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_enum_return_own_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_return_own_twin_moi');
  late final _wire_rust_auto_opaque_enum_return_own_twin_moi =
      _wire_rust_auto_opaque_enum_return_own_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_moi(
    int port_,
    ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_moi> arg,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_moi(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_enum_with_good_and_opaque_twin_moi>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_moiPtr
          .asFunction<
              void Function(int,
                  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_moi>)>();

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_moiPtr
          .asFunction<void Function(int)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_explicit_arg_twin_moi(
    int port_,
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_explicit_arg_twin_moi(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_explicit_arg_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_arg_twin_moi');
  late final _wire_rust_auto_opaque_explicit_arg_twin_moi =
      _wire_rust_auto_opaque_explicit_arg_twin_moiPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_explicit_return_twin_moi(
    int port_,
    int initial,
  ) {
    return _wire_rust_auto_opaque_explicit_return_twin_moi(
      port_,
      initial,
    );
  }

  late final _wire_rust_auto_opaque_explicit_return_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_return_twin_moi');
  late final _wire_rust_auto_opaque_explicit_return_twin_moi =
      _wire_rust_auto_opaque_explicit_return_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_explicit_struct_twin_moi(
    int port_,
    ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_moi> arg,
  ) {
    return _wire_rust_auto_opaque_explicit_struct_twin_moi(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_explicit_struct_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_struct_with_explicit_auto_opaque_field_twin_moi>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_struct_twin_moi');
  late final _wire_rust_auto_opaque_explicit_struct_twin_moi =
      _wire_rust_auto_opaque_explicit_struct_twin_moiPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_struct_with_explicit_auto_opaque_field_twin_moi>)>();

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_moi(
    int port_,
    int a,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> b,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_moi(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_moi');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_moi =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_moiPtr.asFunction<
          void Function(
              int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_plus_sign_arg_twin_moi(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_moi(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_moi');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_moi =
      _wire_rust_auto_opaque_plus_sign_arg_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_plus_sign_return_twin_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_return_twin_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_moi');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_moi =
      _wire_rust_auto_opaque_plus_sign_return_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_one_and_two_twin_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_one_and_two_twin_moi');
  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_moi =
      _wire_rust_auto_opaque_return_opaque_one_and_two_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_return_opaque_two_twin_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_two_twin_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_two_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_two_twin_moi');
  late final _wire_rust_auto_opaque_return_opaque_two_twin_moi =
      _wire_rust_auto_opaque_return_opaque_two_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_return_own_twin_moi(
    int port_,
    int initial,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_moi(
      port_,
      initial,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_moi');
  late final _wire_rust_auto_opaque_return_own_twin_moi =
      _wire_rust_auto_opaque_return_own_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_return_vec_own_twin_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_return_vec_own_twin_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_return_vec_own_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_vec_own_twin_moi');
  late final _wire_rust_auto_opaque_return_vec_own_twin_moi =
      _wire_rust_auto_opaque_return_vec_own_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_stream_sink_twin_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_stream_sink_twin_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_stream_sink_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_stream_sink_twin_moi');
  late final _wire_rust_auto_opaque_stream_sink_twin_moi =
      _wire_rust_auto_opaque_stream_sink_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_moi(
    int port_,
    ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_moi> arg,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_moi(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_struct_with_good_and_opaque_field_twin_moi>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_moi');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_moi =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_moiPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_struct_with_good_and_opaque_field_twin_moi>)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_moi');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_moi =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_moi(
    int port_,
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_moi(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_moi =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_moiPtr.asFunction<
          void Function(
              int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_moi(
    int port_,
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_moi(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.UintPtr,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_moi =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_moiPtr.asFunction<
          void Function(
              int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_trait_object_arg_own_twin_moi(
    int port_,
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_moi(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_moi =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_moiPtr.asFunction<
          void Function(
              int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_moi');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_moi =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_moi');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_moi =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_two_args_twin_moi(
    int port_,
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_moi(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_moi');
  late final _wire_rust_auto_opaque_two_args_twin_moi =
      _wire_rust_auto_opaque_two_args_twin_moiPtr
          .asFunction<void Function(int, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsync_instance_method_arg_borrow_twin_rust_async(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinRustAsync_instance_method_arg_borrow_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsync_instance_method_arg_borrow_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsync_instance_method_arg_borrow_twin_rust_async');
  late final _wire_NonCloneSimpleTwinRustAsync_instance_method_arg_borrow_twin_rust_async =
      _wire_NonCloneSimpleTwinRustAsync_instance_method_arg_borrow_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsync_instance_method_arg_mut_borrow_twin_rust_async(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinRustAsync_instance_method_arg_mut_borrow_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsync_instance_method_arg_mut_borrow_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsync_instance_method_arg_mut_borrow_twin_rust_async');
  late final _wire_NonCloneSimpleTwinRustAsync_instance_method_arg_mut_borrow_twin_rust_async =
      _wire_NonCloneSimpleTwinRustAsync_instance_method_arg_mut_borrow_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinRustAsync_instance_method_arg_own_twin_rust_async(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinRustAsync_instance_method_arg_own_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsync_instance_method_arg_own_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsync_instance_method_arg_own_twin_rust_async');
  late final _wire_NonCloneSimpleTwinRustAsync_instance_method_arg_own_twin_rust_async =
      _wire_NonCloneSimpleTwinRustAsync_instance_method_arg_own_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinRustAsync_instance_method_getter_twin_rust_async(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinRustAsync_instance_method_getter_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsync_instance_method_getter_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsync_instance_method_getter_twin_rust_async');
  late final _wire_NonCloneSimpleTwinRustAsync_instance_method_getter_twin_rust_async =
      _wire_NonCloneSimpleTwinRustAsync_instance_method_getter_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsync_instance_method_return_own_twin_rust_async(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinRustAsync_instance_method_return_own_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsync_instance_method_return_own_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsync_instance_method_return_own_twin_rust_async');
  late final _wire_NonCloneSimpleTwinRustAsync_instance_method_return_own_twin_rust_async =
      _wire_NonCloneSimpleTwinRustAsync_instance_method_return_own_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinRustAsync_new_custom_name_twin_rust_async(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsync_new_custom_name_twin_rust_async(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsync_new_custom_name_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsync_new_custom_name_twin_rust_async');
  late final _wire_NonCloneSimpleTwinRustAsync_new_custom_name_twin_rust_async =
      _wire_NonCloneSimpleTwinRustAsync_new_custom_name_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_NonCloneSimpleTwinRustAsync_new_twin_rust_async(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsync_new_twin_rust_async(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsync_new_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsync_new_twin_rust_async');
  late final _wire_NonCloneSimpleTwinRustAsync_new_twin_rust_async =
      _wire_NonCloneSimpleTwinRustAsync_new_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_NonCloneSimpleTwinRustAsync_new_with_result_twin_rust_async(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsync_new_with_result_twin_rust_async(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsync_new_with_result_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsync_new_with_result_twin_rust_async');
  late final _wire_NonCloneSimpleTwinRustAsync_new_with_result_twin_rust_async =
      _wire_NonCloneSimpleTwinRustAsync_new_with_result_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void
      wire_NonCloneSimpleTwinRustAsync_static_method_arg_borrow_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinRustAsync_static_method_arg_borrow_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsync_static_method_arg_borrow_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsync_static_method_arg_borrow_twin_rust_async');
  late final _wire_NonCloneSimpleTwinRustAsync_static_method_arg_borrow_twin_rust_async =
      _wire_NonCloneSimpleTwinRustAsync_static_method_arg_borrow_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsync_static_method_arg_mut_borrow_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinRustAsync_static_method_arg_mut_borrow_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsync_static_method_arg_mut_borrow_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsync_static_method_arg_mut_borrow_twin_rust_async');
  late final _wire_NonCloneSimpleTwinRustAsync_static_method_arg_mut_borrow_twin_rust_async =
      _wire_NonCloneSimpleTwinRustAsync_static_method_arg_mut_borrow_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinRustAsync_static_method_arg_own_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinRustAsync_static_method_arg_own_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsync_static_method_arg_own_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsync_static_method_arg_own_twin_rust_async');
  late final _wire_NonCloneSimpleTwinRustAsync_static_method_arg_own_twin_rust_async =
      _wire_NonCloneSimpleTwinRustAsync_static_method_arg_own_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsync_static_method_return_own_twin_rust_async(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsync_static_method_return_own_twin_rust_async(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsync_static_method_return_own_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsync_static_method_return_own_twin_rust_async');
  late final _wire_NonCloneSimpleTwinRustAsync_static_method_return_own_twin_rust_async =
      _wire_NonCloneSimpleTwinRustAsync_static_method_return_own_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_arg_borrow_twin_rust_async(
    int port_,
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_rust_async(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_rust_async');
  late final _wire_rust_auto_opaque_arg_borrow_twin_rust_async =
      _wire_rust_auto_opaque_arg_borrow_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async(
    int port_,
    int arg,
    int expect,
    int adder,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async(
      port_,
      arg,
      expect,
      adder,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int, int)>();

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_arg_own_twin_rust_async(
    int port_,
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_rust_async(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_rust_async');
  late final _wire_rust_auto_opaque_arg_own_twin_rust_async =
      _wire_rust_auto_opaque_arg_own_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_arg_vec_own_twin_rust_async(
    int port_,
    ffi.Pointer<
            wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync>
        arg,
    ffi.Pointer<wire_cst_list_prim_i_32_loose> expect,
  ) {
    return _wire_rust_auto_opaque_arg_vec_own_twin_rust_async(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_vec_own_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync>,
                  ffi.Pointer<wire_cst_list_prim_i_32_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_vec_own_twin_rust_async');
  late final _wire_rust_auto_opaque_arg_vec_own_twin_rust_async =
      _wire_rust_auto_opaque_arg_vec_own_twin_rust_asyncPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync>,
              ffi.Pointer<wire_cst_list_prim_i_32_loose>)>();

  void wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async(
    int port_,
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async');
  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async =
      _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async(
    int port_,
    int borrow,
    int mut_borrow,
  ) {
    return _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async(
      port_,
      borrow,
      mut_borrow,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async');
  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async =
      _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_callable_arg_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_rust_async');
  late final _wire_rust_auto_opaque_callable_arg_twin_rust_async =
      _wire_rust_auto_opaque_callable_arg_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_callable_return_twin_rust_async(
    int port_,
  ) {
    return _wire_rust_auto_opaque_callable_return_twin_rust_async(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_callable_return_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_rust_async');
  late final _wire_rust_auto_opaque_callable_return_twin_rust_async =
      _wire_rust_auto_opaque_callable_return_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_dummy_twin_rust_async(
    int port_,
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_dummy_twin_rust_async(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_dummy_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_dummy_twin_rust_async');
  late final _wire_rust_auto_opaque_dummy_twin_rust_async =
      _wire_rust_auto_opaque_dummy_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async');
  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async =
      _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_enum_return_own_twin_rust_async(
    int port_,
  ) {
    return _wire_rust_auto_opaque_enum_return_own_twin_rust_async(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_enum_return_own_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_return_own_twin_rust_async');
  late final _wire_rust_auto_opaque_enum_return_own_twin_rust_async =
      _wire_rust_auto_opaque_enum_return_own_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_rust_async> arg,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_enum_with_good_and_opaque_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_enum_with_good_and_opaque_twin_rust_async>)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async(
    int port_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async(
    int port_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_explicit_arg_twin_rust_async(
    int port_,
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_explicit_arg_twin_rust_async(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_explicit_arg_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_arg_twin_rust_async');
  late final _wire_rust_auto_opaque_explicit_arg_twin_rust_async =
      _wire_rust_auto_opaque_explicit_arg_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_explicit_return_twin_rust_async(
    int port_,
    int initial,
  ) {
    return _wire_rust_auto_opaque_explicit_return_twin_rust_async(
      port_,
      initial,
    );
  }

  late final _wire_rust_auto_opaque_explicit_return_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_return_twin_rust_async');
  late final _wire_rust_auto_opaque_explicit_return_twin_rust_async =
      _wire_rust_auto_opaque_explicit_return_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_explicit_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async>
        arg,
  ) {
    return _wire_rust_auto_opaque_explicit_struct_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_explicit_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_struct_twin_rust_async');
  late final _wire_rust_auto_opaque_explicit_struct_twin_rust_async =
      _wire_rust_auto_opaque_explicit_struct_twin_rust_asyncPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async>)>();

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async(
    int port_,
    int a,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> b,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.UintPtr,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_plus_sign_arg_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_rust_async');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_rust_async =
      _wire_rust_auto_opaque_plus_sign_arg_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_plus_sign_return_twin_rust_async(
    int port_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_return_twin_rust_async(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_rust_async');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_rust_async =
      _wire_rust_auto_opaque_plus_sign_return_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async(
    int port_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async');
  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async =
      _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_return_opaque_two_twin_rust_async(
    int port_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_two_twin_rust_async(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_two_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_two_twin_rust_async');
  late final _wire_rust_auto_opaque_return_opaque_two_twin_rust_async =
      _wire_rust_auto_opaque_return_opaque_two_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_return_own_twin_rust_async(
    int port_,
    int initial,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_rust_async(
      port_,
      initial,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_rust_async');
  late final _wire_rust_auto_opaque_return_own_twin_rust_async =
      _wire_rust_auto_opaque_return_own_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_return_vec_own_twin_rust_async(
    int port_,
  ) {
    return _wire_rust_auto_opaque_return_vec_own_twin_rust_async(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_return_vec_own_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_vec_own_twin_rust_async');
  late final _wire_rust_auto_opaque_return_vec_own_twin_rust_async =
      _wire_rust_auto_opaque_return_vec_own_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_stream_sink_twin_rust_async(
    int port_,
  ) {
    return _wire_rust_auto_opaque_stream_sink_twin_rust_async(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_stream_sink_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_stream_sink_twin_rust_async');
  late final _wire_rust_auto_opaque_stream_sink_twin_rust_async =
      _wire_rust_auto_opaque_stream_sink_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_rust_async> arg,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_struct_with_good_and_opaque_field_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_struct_with_good_and_opaque_field_twin_rust_async>)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async(
    int port_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async(
    int port_,
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.UintPtr,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async(
    int port_,
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.UintPtr,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async(
    int port_,
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.UintPtr,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_asyncPtr.asFunction<
          void Function(
              int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async(
    int port_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async(
    int port_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_two_args_twin_rust_async(
    int port_,
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_rust_async(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_rust_async');
  late final _wire_rust_auto_opaque_two_args_twin_rust_async =
      _wire_rust_auto_opaque_two_args_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_borrow_twin_rust_async_moi(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_borrow_twin_rust_async_moi(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_borrow_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_borrow_twin_rust_async_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_borrow_twin_rust_async_moi =
      _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_borrow_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_mut_borrow_twin_rust_async_moi(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_mut_borrow_twin_rust_async_moi(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_mut_borrow_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_mut_borrow_twin_rust_async_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_mut_borrow_twin_rust_async_moi =
      _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_mut_borrow_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_own_twin_rust_async_moi(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_own_twin_rust_async_moi(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_own_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_own_twin_rust_async_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_own_twin_rust_async_moi =
      _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_arg_own_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_getter_twin_rust_async_moi(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_getter_twin_rust_async_moi(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_getter_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_getter_twin_rust_async_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_getter_twin_rust_async_moi =
      _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_getter_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_return_own_twin_rust_async_moi(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_return_own_twin_rust_async_moi(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_return_own_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_return_own_twin_rust_async_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_return_own_twin_rust_async_moi =
      _wire_NonCloneSimpleTwinRustAsyncMoi_instance_method_return_own_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinRustAsyncMoi_new_custom_name_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncMoi_new_custom_name_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncMoi_new_custom_name_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncMoi_new_custom_name_twin_rust_async_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncMoi_new_custom_name_twin_rust_async_moi =
      _wire_NonCloneSimpleTwinRustAsyncMoi_new_custom_name_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_NonCloneSimpleTwinRustAsyncMoi_new_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncMoi_new_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncMoi_new_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncMoi_new_twin_rust_async_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncMoi_new_twin_rust_async_moi =
      _wire_NonCloneSimpleTwinRustAsyncMoi_new_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_NonCloneSimpleTwinRustAsyncMoi_new_with_result_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncMoi_new_with_result_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncMoi_new_with_result_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncMoi_new_with_result_twin_rust_async_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncMoi_new_with_result_twin_rust_async_moi =
      _wire_NonCloneSimpleTwinRustAsyncMoi_new_with_result_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_borrow_twin_rust_async_moi(
    int port_,
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_borrow_twin_rust_async_moi(
      port_,
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_borrow_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_borrow_twin_rust_async_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_borrow_twin_rust_async_moi =
      _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_borrow_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_mut_borrow_twin_rust_async_moi(
    int port_,
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_mut_borrow_twin_rust_async_moi(
      port_,
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_mut_borrow_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_mut_borrow_twin_rust_async_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_mut_borrow_twin_rust_async_moi =
      _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_mut_borrow_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_own_twin_rust_async_moi(
    int port_,
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_own_twin_rust_async_moi(
      port_,
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_own_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_own_twin_rust_async_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_own_twin_rust_async_moi =
      _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_arg_own_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncMoi_static_method_return_own_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_return_own_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_return_own_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncMoi_static_method_return_own_twin_rust_async_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_return_own_twin_rust_async_moi =
      _wire_NonCloneSimpleTwinRustAsyncMoi_static_method_return_own_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_arg_borrow_twin_rust_async_moi(
    int port_,
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_rust_async_moi(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_arg_borrow_twin_rust_async_moi =
      _wire_rust_auto_opaque_arg_borrow_twin_rust_async_moiPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_moi(
    int port_,
    int arg,
    int expect,
    int adder,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_moi(
      port_,
      arg,
      expect,
      adder,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_moi =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_moiPtr
          .asFunction<void Function(int, int, int, int)>();

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_moi(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_moi(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_moi =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_arg_own_twin_rust_async_moi(
    int port_,
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_rust_async_moi(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_arg_own_twin_rust_async_moi =
      _wire_rust_auto_opaque_arg_own_twin_rust_async_moiPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_arg_vec_own_twin_rust_async_moi(
    int port_,
    ffi.Pointer<
            wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi>
        arg,
    ffi.Pointer<wire_cst_list_prim_i_32_loose> expect,
  ) {
    return _wire_rust_auto_opaque_arg_vec_own_twin_rust_async_moi(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_vec_own_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi>,
                  ffi.Pointer<wire_cst_list_prim_i_32_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_vec_own_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_arg_vec_own_twin_rust_async_moi =
      _wire_rust_auto_opaque_arg_vec_own_twin_rust_async_moiPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi>,
              ffi.Pointer<wire_cst_list_prim_i_32_loose>)>();

  void wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_moi(
    int port_,
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_moi(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_moi =
      _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_moiPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_moi(
    int port_,
    int borrow,
    int mut_borrow,
  ) {
    return _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_moi(
      port_,
      borrow,
      mut_borrow,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_moi =
      _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_moiPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_callable_arg_twin_rust_async_moi(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_rust_async_moi(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_callable_arg_twin_rust_async_moi =
      _wire_rust_auto_opaque_callable_arg_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_callable_return_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_callable_return_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_callable_return_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_callable_return_twin_rust_async_moi =
      _wire_rust_auto_opaque_callable_return_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_dummy_twin_rust_async_moi(
    int port_,
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_dummy_twin_rust_async_moi(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_dummy_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_dummy_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_dummy_twin_rust_async_moi =
      _wire_rust_auto_opaque_dummy_twin_rust_async_moiPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_moi(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_moi(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_moi =
      _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_enum_return_own_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_enum_return_own_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_enum_return_own_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_return_own_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_enum_return_own_twin_rust_async_moi =
      _wire_rust_auto_opaque_enum_return_own_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_moi(
    int port_,
    ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_rust_async_moi> arg,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_moi(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_enum_with_good_and_opaque_twin_rust_async_moi>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_moiPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_enum_with_good_and_opaque_twin_rust_async_moi>)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_explicit_arg_twin_rust_async_moi(
    int port_,
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_explicit_arg_twin_rust_async_moi(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_explicit_arg_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_arg_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_explicit_arg_twin_rust_async_moi =
      _wire_rust_auto_opaque_explicit_arg_twin_rust_async_moiPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_explicit_return_twin_rust_async_moi(
    int port_,
    int initial,
  ) {
    return _wire_rust_auto_opaque_explicit_return_twin_rust_async_moi(
      port_,
      initial,
    );
  }

  late final _wire_rust_auto_opaque_explicit_return_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_return_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_explicit_return_twin_rust_async_moi =
      _wire_rust_auto_opaque_explicit_return_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_explicit_struct_twin_rust_async_moi(
    int port_,
    ffi.Pointer<
            wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async_moi>
        arg,
  ) {
    return _wire_rust_auto_opaque_explicit_struct_twin_rust_async_moi(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_explicit_struct_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async_moi>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_struct_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_explicit_struct_twin_rust_async_moi =
      _wire_rust_auto_opaque_explicit_struct_twin_rust_async_moiPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async_moi>)>();

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_moi(
    int port_,
    int a,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> b,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_moi(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.UintPtr,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_moi =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_moiPtr
          .asFunction<
              void Function(
                  int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_moi(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_moi(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_moi =
      _wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_plus_sign_return_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_return_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_rust_async_moi =
      _wire_rust_auto_opaque_plus_sign_return_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_moi =
      _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_return_opaque_two_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_two_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_two_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_two_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_return_opaque_two_twin_rust_async_moi =
      _wire_rust_auto_opaque_return_opaque_two_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_return_own_twin_rust_async_moi(
    int port_,
    int initial,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_rust_async_moi(
      port_,
      initial,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_return_own_twin_rust_async_moi =
      _wire_rust_auto_opaque_return_own_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_return_vec_own_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_return_vec_own_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_return_vec_own_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_vec_own_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_return_vec_own_twin_rust_async_moi =
      _wire_rust_auto_opaque_return_vec_own_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_stream_sink_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_stream_sink_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_stream_sink_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_stream_sink_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_stream_sink_twin_rust_async_moi =
      _wire_rust_auto_opaque_stream_sink_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_moi(
    int port_,
    ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_rust_async_moi>
        arg,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_moi(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_struct_with_good_and_opaque_field_twin_rust_async_moi>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_moi =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_moiPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_struct_with_good_and_opaque_field_twin_rust_async_moi>)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_moi =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_moi(
    int port_,
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_moi(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.UintPtr,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_moi =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_moiPtr
          .asFunction<
              void Function(
                  int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_moi(
    int port_,
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_moi(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.UintPtr,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_moi =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_moiPtr
          .asFunction<
              void Function(
                  int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_moi(
    int port_,
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_moi(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.UintPtr,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_moi =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_moiPtr
          .asFunction<
              void Function(
                  int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_moi =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_moi =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_two_args_twin_rust_async_moi(
    int port_,
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_rust_async_moi(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_rust_async_moi');
  late final _wire_rust_auto_opaque_two_args_twin_rust_async_moi =
      _wire_rust_auto_opaque_two_args_twin_rust_async_moiPtr
          .asFunction<void Function(int, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_borrow_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_borrow_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_borrow_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_borrow_twin_rust_async_sse');
  late final _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_borrow_twin_rust_async_sse =
      _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_borrow_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_mut_borrow_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_mut_borrow_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_mut_borrow_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_mut_borrow_twin_rust_async_sse');
  late final _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_mut_borrow_twin_rust_async_sse =
      _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_mut_borrow_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_own_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_own_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_own_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_own_twin_rust_async_sse');
  late final _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_own_twin_rust_async_sse =
      _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_arg_own_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSse_instance_method_getter_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_getter_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_getter_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSse_instance_method_getter_twin_rust_async_sse');
  late final _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_getter_twin_rust_async_sse =
      _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_getter_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSse_instance_method_return_own_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_return_own_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_return_own_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSse_instance_method_return_own_twin_rust_async_sse');
  late final _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_return_own_twin_rust_async_sse =
      _wire_NonCloneSimpleTwinRustAsyncSse_instance_method_return_own_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinRustAsyncSse_new_custom_name_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSse_new_custom_name_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSse_new_custom_name_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSse_new_custom_name_twin_rust_async_sse');
  late final _wire_NonCloneSimpleTwinRustAsyncSse_new_custom_name_twin_rust_async_sse =
      _wire_NonCloneSimpleTwinRustAsyncSse_new_custom_name_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinRustAsyncSse_new_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSse_new_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSse_new_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSse_new_twin_rust_async_sse');
  late final _wire_NonCloneSimpleTwinRustAsyncSse_new_twin_rust_async_sse =
      _wire_NonCloneSimpleTwinRustAsyncSse_new_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinRustAsyncSse_new_with_result_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSse_new_with_result_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSse_new_with_result_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSse_new_with_result_twin_rust_async_sse');
  late final _wire_NonCloneSimpleTwinRustAsyncSse_new_with_result_twin_rust_async_sse =
      _wire_NonCloneSimpleTwinRustAsyncSse_new_with_result_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_borrow_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_borrow_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_borrow_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_borrow_twin_rust_async_sse');
  late final _wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_borrow_twin_rust_async_sse =
      _wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_borrow_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_mut_borrow_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_mut_borrow_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_mut_borrow_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_mut_borrow_twin_rust_async_sse');
  late final _wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_mut_borrow_twin_rust_async_sse =
      _wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_mut_borrow_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_own_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_own_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_own_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_own_twin_rust_async_sse');
  late final _wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_own_twin_rust_async_sse =
      _wire_NonCloneSimpleTwinRustAsyncSse_static_method_arg_own_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSse_static_method_return_own_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSse_static_method_return_own_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSse_static_method_return_own_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSse_static_method_return_own_twin_rust_async_sse');
  late final _wire_NonCloneSimpleTwinRustAsyncSse_static_method_return_own_twin_rust_async_sse =
      _wire_NonCloneSimpleTwinRustAsyncSse_static_method_return_own_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse =
      _wire_rust_auto_opaque_arg_borrow_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_own_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_arg_own_twin_rust_async_sse =
      _wire_rust_auto_opaque_arg_own_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_vec_own_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse =
      _wire_rust_auto_opaque_arg_vec_own_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse =
      _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse =
      _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_callable_arg_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_callable_arg_twin_rust_async_sse =
      _wire_rust_auto_opaque_callable_arg_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_callable_return_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_return_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_return_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_callable_return_twin_rust_async_sse =
      _wire_rust_auto_opaque_callable_return_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_dummy_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_dummy_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_dummy_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_dummy_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_dummy_twin_rust_async_sse =
      _wire_rust_auto_opaque_dummy_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse =
      _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_return_own_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse =
      _wire_rust_auto_opaque_enum_return_own_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_arg_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse =
      _wire_rust_auto_opaque_explicit_arg_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_explicit_return_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_return_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_return_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_return_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_explicit_return_twin_rust_async_sse =
      _wire_rust_auto_opaque_explicit_return_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_struct_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse =
      _wire_rust_auto_opaque_explicit_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse =
      _wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse =
      _wire_rust_auto_opaque_plus_sign_return_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse =
      _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_two_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse =
      _wire_rust_auto_opaque_return_opaque_two_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_own_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_return_own_twin_rust_async_sse =
      _wire_rust_auto_opaque_return_own_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_vec_own_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse =
      _wire_rust_auto_opaque_return_vec_own_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_stream_sink_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_stream_sink_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_stream_sink_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_stream_sink_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_stream_sink_twin_rust_async_sse =
      _wire_rust_auto_opaque_stream_sink_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_two_args_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_rust_async_sse');
  late final _wire_rust_auto_opaque_two_args_twin_rust_async_sse =
      _wire_rust_auto_opaque_two_args_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_borrow_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_borrow_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_borrow_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_borrow_twin_rust_async_sse_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_borrow_twin_rust_async_sse_moi =
      _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_borrow_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_mut_borrow_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_mut_borrow_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_mut_borrow_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_mut_borrow_twin_rust_async_sse_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_mut_borrow_twin_rust_async_sse_moi =
      _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_mut_borrow_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_own_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_own_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_own_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_own_twin_rust_async_sse_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_own_twin_rust_async_sse_moi =
      _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_arg_own_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_getter_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_getter_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_getter_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_getter_twin_rust_async_sse_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_getter_twin_rust_async_sse_moi =
      _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_getter_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_return_own_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_return_own_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_return_own_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_return_own_twin_rust_async_sse_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_return_own_twin_rust_async_sse_moi =
      _wire_NonCloneSimpleTwinRustAsyncSseMoi_instance_method_return_own_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_new_custom_name_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSseMoi_new_custom_name_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_new_custom_name_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSseMoi_new_custom_name_twin_rust_async_sse_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_new_custom_name_twin_rust_async_sse_moi =
      _wire_NonCloneSimpleTwinRustAsyncSseMoi_new_custom_name_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinRustAsyncSseMoi_new_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSseMoi_new_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_new_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSseMoi_new_twin_rust_async_sse_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_new_twin_rust_async_sse_moi =
      _wire_NonCloneSimpleTwinRustAsyncSseMoi_new_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_new_with_result_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSseMoi_new_with_result_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_new_with_result_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSseMoi_new_with_result_twin_rust_async_sse_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_new_with_result_twin_rust_async_sse_moi =
      _wire_NonCloneSimpleTwinRustAsyncSseMoi_new_with_result_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_borrow_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_borrow_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_borrow_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_borrow_twin_rust_async_sse_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_borrow_twin_rust_async_sse_moi =
      _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_borrow_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_mut_borrow_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_mut_borrow_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_mut_borrow_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_mut_borrow_twin_rust_async_sse_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_mut_borrow_twin_rust_async_sse_moi =
      _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_mut_borrow_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_own_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_own_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_own_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_own_twin_rust_async_sse_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_own_twin_rust_async_sse_moi =
      _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_arg_own_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_return_own_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_return_own_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_return_own_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_return_own_twin_rust_async_sse_moi');
  late final _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_return_own_twin_rust_async_sse_moi =
      _wire_NonCloneSimpleTwinRustAsyncSseMoi_static_method_return_own_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_arg_borrow_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_own_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_arg_own_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_arg_own_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_arg_vec_own_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_borrow_and_borrow_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_callable_arg_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_callable_arg_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_callable_arg_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_callable_return_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_return_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_return_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_callable_return_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_callable_return_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_dummy_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_dummy_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_dummy_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_dummy_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_dummy_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_dummy_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_enum_arg_borrow_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_enum_return_own_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_explicit_arg_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_explicit_return_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_return_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_return_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_return_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_explicit_return_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_explicit_return_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_explicit_struct_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_plus_sign_arg_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_plus_sign_return_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_return_opaque_one_and_two_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_return_opaque_two_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_own_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_return_own_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_return_own_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_return_vec_own_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_stream_sink_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_stream_sink_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_stream_sink_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_stream_sink_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_stream_sink_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_stream_sink_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_two_args_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_rust_async_sse_moi');
  late final _wire_rust_auto_opaque_two_args_twin_rust_async_sse_moi =
      _wire_rust_auto_opaque_two_args_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_sse =
      _wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_sse =
      _wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_sse =
      _wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_instance_method_getter_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_instance_method_getter_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_instance_method_getter_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_instance_method_getter_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_instance_method_getter_twin_sse =
      _wire_NonCloneSimpleTwinSse_instance_method_getter_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_sse =
      _wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_new_custom_name_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_new_custom_name_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_new_custom_name_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_new_custom_name_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_new_custom_name_twin_sse =
      _wire_NonCloneSimpleTwinSse_new_custom_name_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_new_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_new_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_new_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_new_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_new_twin_sse =
      _wire_NonCloneSimpleTwinSse_new_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_new_with_result_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_new_with_result_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_new_with_result_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_new_with_result_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_new_with_result_twin_sse =
      _wire_NonCloneSimpleTwinSse_new_with_result_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_sse =
      _wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_sse =
      _wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_sse =
      _wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_static_method_return_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_static_method_return_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_static_method_return_own_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_static_method_return_own_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_static_method_return_own_twin_sse =
      _wire_NonCloneSimpleTwinSse_static_method_return_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_sse');
  late final _wire_rust_auto_opaque_arg_borrow_twin_sse =
      _wire_rust_auto_opaque_arg_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_mut_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_sse');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_sse =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_sse');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_sse =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_sse');
  late final _wire_rust_auto_opaque_arg_own_twin_sse =
      _wire_rust_auto_opaque_arg_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_vec_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_vec_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_vec_own_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_vec_own_twin_sse');
  late final _wire_rust_auto_opaque_arg_vec_own_twin_sse =
      _wire_rust_auto_opaque_arg_vec_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_borrow_and_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_borrow_and_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_borrow_twin_sse');
  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_sse =
      _wire_rust_auto_opaque_borrow_and_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse');
  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse =
      _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_callable_arg_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_sse');
  late final _wire_rust_auto_opaque_callable_arg_twin_sse =
      _wire_rust_auto_opaque_callable_arg_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_callable_return_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_return_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_return_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_sse');
  late final _wire_rust_auto_opaque_callable_return_twin_sse =
      _wire_rust_auto_opaque_callable_return_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_dummy_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_dummy_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_dummy_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_dummy_twin_sse');
  late final _wire_rust_auto_opaque_dummy_twin_sse =
      _wire_rust_auto_opaque_dummy_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_enum_arg_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_arg_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_arg_borrow_twin_sse');
  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_sse =
      _wire_rust_auto_opaque_enum_arg_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_enum_return_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_return_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_return_own_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_return_own_twin_sse');
  late final _wire_rust_auto_opaque_enum_return_own_twin_sse =
      _wire_rust_auto_opaque_enum_return_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_explicit_arg_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_arg_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_arg_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_arg_twin_sse');
  late final _wire_rust_auto_opaque_explicit_arg_twin_sse =
      _wire_rust_auto_opaque_explicit_arg_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_explicit_return_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_return_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_return_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_return_twin_sse');
  late final _wire_rust_auto_opaque_explicit_return_twin_sse =
      _wire_rust_auto_opaque_explicit_return_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_explicit_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_struct_twin_sse');
  late final _wire_rust_auto_opaque_explicit_struct_twin_sse =
      _wire_rust_auto_opaque_explicit_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_plus_sign_arg_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_sse');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_sse =
      _wire_rust_auto_opaque_plus_sign_arg_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_plus_sign_return_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_return_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_sse');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_sse =
      _wire_rust_auto_opaque_plus_sign_return_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse');
  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse =
      _wire_rust_auto_opaque_return_opaque_one_and_two_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_opaque_two_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_two_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_two_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_two_twin_sse');
  late final _wire_rust_auto_opaque_return_opaque_two_twin_sse =
      _wire_rust_auto_opaque_return_opaque_two_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_sse');
  late final _wire_rust_auto_opaque_return_own_twin_sse =
      _wire_rust_auto_opaque_return_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_vec_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_vec_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_vec_own_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_vec_own_twin_sse');
  late final _wire_rust_auto_opaque_return_vec_own_twin_sse =
      _wire_rust_auto_opaque_return_vec_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_stream_sink_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_stream_sink_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_stream_sink_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_stream_sink_twin_sse');
  late final _wire_rust_auto_opaque_stream_sink_twin_sse =
      _wire_rust_auto_opaque_stream_sink_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_arg_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_sse');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_sse =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_sse');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_sse =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_sse');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_sse =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_two_args_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_sse');
  late final _wire_rust_auto_opaque_two_args_twin_sse =
      _wire_rust_auto_opaque_two_args_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSseMoi_instance_method_arg_borrow_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSseMoi_instance_method_arg_borrow_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSseMoi_instance_method_arg_borrow_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSseMoi_instance_method_arg_borrow_twin_sse_moi');
  late final _wire_NonCloneSimpleTwinSseMoi_instance_method_arg_borrow_twin_sse_moi =
      _wire_NonCloneSimpleTwinSseMoi_instance_method_arg_borrow_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_NonCloneSimpleTwinSseMoi_instance_method_arg_mut_borrow_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSseMoi_instance_method_arg_mut_borrow_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSseMoi_instance_method_arg_mut_borrow_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSseMoi_instance_method_arg_mut_borrow_twin_sse_moi');
  late final _wire_NonCloneSimpleTwinSseMoi_instance_method_arg_mut_borrow_twin_sse_moi =
      _wire_NonCloneSimpleTwinSseMoi_instance_method_arg_mut_borrow_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSseMoi_instance_method_arg_own_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSseMoi_instance_method_arg_own_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSseMoi_instance_method_arg_own_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSseMoi_instance_method_arg_own_twin_sse_moi');
  late final _wire_NonCloneSimpleTwinSseMoi_instance_method_arg_own_twin_sse_moi =
      _wire_NonCloneSimpleTwinSseMoi_instance_method_arg_own_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSseMoi_instance_method_getter_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSseMoi_instance_method_getter_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSseMoi_instance_method_getter_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSseMoi_instance_method_getter_twin_sse_moi');
  late final _wire_NonCloneSimpleTwinSseMoi_instance_method_getter_twin_sse_moi =
      _wire_NonCloneSimpleTwinSseMoi_instance_method_getter_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSseMoi_instance_method_return_own_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSseMoi_instance_method_return_own_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSseMoi_instance_method_return_own_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSseMoi_instance_method_return_own_twin_sse_moi');
  late final _wire_NonCloneSimpleTwinSseMoi_instance_method_return_own_twin_sse_moi =
      _wire_NonCloneSimpleTwinSseMoi_instance_method_return_own_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSseMoi_new_custom_name_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSseMoi_new_custom_name_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSseMoi_new_custom_name_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSseMoi_new_custom_name_twin_sse_moi');
  late final _wire_NonCloneSimpleTwinSseMoi_new_custom_name_twin_sse_moi =
      _wire_NonCloneSimpleTwinSseMoi_new_custom_name_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSseMoi_new_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSseMoi_new_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSseMoi_new_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSseMoi_new_twin_sse_moi');
  late final _wire_NonCloneSimpleTwinSseMoi_new_twin_sse_moi =
      _wire_NonCloneSimpleTwinSseMoi_new_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSseMoi_new_with_result_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSseMoi_new_with_result_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSseMoi_new_with_result_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSseMoi_new_with_result_twin_sse_moi');
  late final _wire_NonCloneSimpleTwinSseMoi_new_with_result_twin_sse_moi =
      _wire_NonCloneSimpleTwinSseMoi_new_with_result_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSseMoi_static_method_arg_borrow_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSseMoi_static_method_arg_borrow_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSseMoi_static_method_arg_borrow_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSseMoi_static_method_arg_borrow_twin_sse_moi');
  late final _wire_NonCloneSimpleTwinSseMoi_static_method_arg_borrow_twin_sse_moi =
      _wire_NonCloneSimpleTwinSseMoi_static_method_arg_borrow_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSseMoi_static_method_arg_mut_borrow_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSseMoi_static_method_arg_mut_borrow_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSseMoi_static_method_arg_mut_borrow_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSseMoi_static_method_arg_mut_borrow_twin_sse_moi');
  late final _wire_NonCloneSimpleTwinSseMoi_static_method_arg_mut_borrow_twin_sse_moi =
      _wire_NonCloneSimpleTwinSseMoi_static_method_arg_mut_borrow_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSseMoi_static_method_arg_own_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSseMoi_static_method_arg_own_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSseMoi_static_method_arg_own_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSseMoi_static_method_arg_own_twin_sse_moi');
  late final _wire_NonCloneSimpleTwinSseMoi_static_method_arg_own_twin_sse_moi =
      _wire_NonCloneSimpleTwinSseMoi_static_method_arg_own_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSseMoi_static_method_return_own_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSseMoi_static_method_return_own_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSseMoi_static_method_return_own_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSseMoi_static_method_return_own_twin_sse_moi');
  late final _wire_NonCloneSimpleTwinSseMoi_static_method_return_own_twin_sse_moi =
      _wire_NonCloneSimpleTwinSseMoi_static_method_return_own_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_borrow_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_sse_moi');
  late final _wire_rust_auto_opaque_arg_borrow_twin_sse_moi =
      _wire_rust_auto_opaque_arg_borrow_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_mut_borrow_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_sse_moi');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_sse_moi =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_sse_moi');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_sse_moi =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_own_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_sse_moi');
  late final _wire_rust_auto_opaque_arg_own_twin_sse_moi =
      _wire_rust_auto_opaque_arg_own_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_vec_own_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_vec_own_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_vec_own_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_vec_own_twin_sse_moi');
  late final _wire_rust_auto_opaque_arg_vec_own_twin_sse_moi =
      _wire_rust_auto_opaque_arg_vec_own_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_borrow_and_borrow_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_borrow_and_borrow_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_borrow_twin_sse_moi');
  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_sse_moi =
      _wire_rust_auto_opaque_borrow_and_borrow_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse_moi');
  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse_moi =
      _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_callable_arg_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_sse_moi');
  late final _wire_rust_auto_opaque_callable_arg_twin_sse_moi =
      _wire_rust_auto_opaque_callable_arg_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_callable_return_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_return_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_return_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_sse_moi');
  late final _wire_rust_auto_opaque_callable_return_twin_sse_moi =
      _wire_rust_auto_opaque_callable_return_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_dummy_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_dummy_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_dummy_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_dummy_twin_sse_moi');
  late final _wire_rust_auto_opaque_dummy_twin_sse_moi =
      _wire_rust_auto_opaque_dummy_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_enum_arg_borrow_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_arg_borrow_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_arg_borrow_twin_sse_moi');
  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_sse_moi =
      _wire_rust_auto_opaque_enum_arg_borrow_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_enum_return_own_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_return_own_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_return_own_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_return_own_twin_sse_moi');
  late final _wire_rust_auto_opaque_enum_return_own_twin_sse_moi =
      _wire_rust_auto_opaque_enum_return_own_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_explicit_arg_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_arg_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_arg_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_arg_twin_sse_moi');
  late final _wire_rust_auto_opaque_explicit_arg_twin_sse_moi =
      _wire_rust_auto_opaque_explicit_arg_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_explicit_return_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_return_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_return_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_return_twin_sse_moi');
  late final _wire_rust_auto_opaque_explicit_return_twin_sse_moi =
      _wire_rust_auto_opaque_explicit_return_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_explicit_struct_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_struct_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_struct_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_struct_twin_sse_moi');
  late final _wire_rust_auto_opaque_explicit_struct_twin_sse_moi =
      _wire_rust_auto_opaque_explicit_struct_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse_moi');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse_moi =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_plus_sign_arg_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_sse_moi');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_sse_moi =
      _wire_rust_auto_opaque_plus_sign_arg_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_plus_sign_return_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_return_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_sse_moi');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_sse_moi =
      _wire_rust_auto_opaque_plus_sign_return_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse_moi');
  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse_moi =
      _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_opaque_two_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_two_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_two_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_two_twin_sse_moi');
  late final _wire_rust_auto_opaque_return_opaque_two_twin_sse_moi =
      _wire_rust_auto_opaque_return_opaque_two_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_own_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_sse_moi');
  late final _wire_rust_auto_opaque_return_own_twin_sse_moi =
      _wire_rust_auto_opaque_return_own_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_vec_own_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_vec_own_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_vec_own_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_vec_own_twin_sse_moi');
  late final _wire_rust_auto_opaque_return_vec_own_twin_sse_moi =
      _wire_rust_auto_opaque_return_vec_own_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_stream_sink_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_stream_sink_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_stream_sink_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_stream_sink_twin_sse_moi');
  late final _wire_rust_auto_opaque_stream_sink_twin_sse_moi =
      _wire_rust_auto_opaque_stream_sink_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse_moi');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse_moi =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse_moi');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse_moi =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse_moi =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse_moi =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_arg_own_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_sse_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_sse_moi =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_sse_moi');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_sse_moi =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_sse_moi');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_sse_moi =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_two_args_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_sse_moi');
  late final _wire_rust_auto_opaque_two_args_twin_sse_moi =
      _wire_rust_auto_opaque_two_args_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_sync(
    int that,
  ) {
    return _wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_sync(
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_sync =
      _wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_sync(
    int that,
  ) {
    return _wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_sync(
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_sync =
      _wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_sync(
    int that,
  ) {
    return _wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_sync(
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_sync =
      _wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_instance_method_getter_twin_sync(
    int that,
  ) {
    return _wire_NonCloneSimpleTwinSync_instance_method_getter_twin_sync(
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinSync_instance_method_getter_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_instance_method_getter_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_instance_method_getter_twin_sync =
      _wire_NonCloneSimpleTwinSync_instance_method_getter_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_sync(
    int that,
  ) {
    return _wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_sync(
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_sync =
      _wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_NonCloneSimpleTwinSync_new_custom_name_twin_sync() {
    return _wire_NonCloneSimpleTwinSync_new_custom_name_twin_sync();
  }

  late final _wire_NonCloneSimpleTwinSync_new_custom_name_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_new_custom_name_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_new_custom_name_twin_sync =
      _wire_NonCloneSimpleTwinSync_new_custom_name_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_NonCloneSimpleTwinSync_new_twin_sync() {
    return _wire_NonCloneSimpleTwinSync_new_twin_sync();
  }

  late final _wire_NonCloneSimpleTwinSync_new_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_new_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_new_twin_sync =
      _wire_NonCloneSimpleTwinSync_new_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_NonCloneSimpleTwinSync_new_with_result_twin_sync() {
    return _wire_NonCloneSimpleTwinSync_new_with_result_twin_sync();
  }

  late final _wire_NonCloneSimpleTwinSync_new_with_result_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_new_with_result_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_new_with_result_twin_sync =
      _wire_NonCloneSimpleTwinSync_new_with_result_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_sync(
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_sync(
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_sync =
      _wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_sync(
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_sync(
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_sync =
      _wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_sync(
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_sync(
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_sync =
      _wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_static_method_return_own_twin_sync() {
    return _wire_NonCloneSimpleTwinSync_static_method_return_own_twin_sync();
  }

  late final _wire_NonCloneSimpleTwinSync_static_method_return_own_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_static_method_return_own_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_static_method_return_own_twin_sync =
      _wire_NonCloneSimpleTwinSync_static_method_return_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_arg_borrow_twin_sync(
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_sync(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_sync');
  late final _wire_rust_auto_opaque_arg_borrow_twin_sync =
      _wire_rust_auto_opaque_arg_borrow_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_arg_mut_borrow_twin_sync(
    int arg,
    int expect,
    int adder,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_sync(
      arg,
      expect,
      adder,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_sync');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_sync =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int, int, int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_arg_own_and_return_own_twin_sync(
    int arg,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_sync');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_arg_own_twin_sync(
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_sync(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_sync');
  late final _wire_rust_auto_opaque_arg_own_twin_sync =
      _wire_rust_auto_opaque_arg_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_arg_vec_own_twin_sync(
    ffi.Pointer<
            wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync>
        arg,
    ffi.Pointer<wire_cst_list_prim_i_32_loose> expect,
  ) {
    return _wire_rust_auto_opaque_arg_vec_own_twin_sync(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_vec_own_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync>,
                  ffi.Pointer<wire_cst_list_prim_i_32_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_vec_own_twin_sync');
  late final _wire_rust_auto_opaque_arg_vec_own_twin_sync =
      _wire_rust_auto_opaque_arg_vec_own_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<
                  wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync>,
              ffi.Pointer<wire_cst_list_prim_i_32_loose>)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_borrow_and_borrow_twin_sync(
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_borrow_and_borrow_twin_sync(
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_borrow_twin_sync');
  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_sync =
      _wire_rust_auto_opaque_borrow_and_borrow_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync(
    int borrow,
    int mut_borrow,
  ) {
    return _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync(
      borrow,
      mut_borrow,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync');
  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync =
      _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_callable_arg_twin_sync(
    int arg,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_sync(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_sync');
  late final _wire_rust_auto_opaque_callable_arg_twin_sync =
      _wire_rust_auto_opaque_callable_arg_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_callable_return_twin_sync() {
    return _wire_rust_auto_opaque_callable_return_twin_sync();
  }

  late final _wire_rust_auto_opaque_callable_return_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_sync');
  late final _wire_rust_auto_opaque_callable_return_twin_sync =
      _wire_rust_auto_opaque_callable_return_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_dummy_twin_sync(
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_dummy_twin_sync(
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_dummy_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_dummy_twin_sync');
  late final _wire_rust_auto_opaque_dummy_twin_sync =
      _wire_rust_auto_opaque_dummy_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_enum_arg_borrow_twin_sync(
    int arg,
  ) {
    return _wire_rust_auto_opaque_enum_arg_borrow_twin_sync(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_arg_borrow_twin_sync');
  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_sync =
      _wire_rust_auto_opaque_enum_arg_borrow_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_enum_return_own_twin_sync() {
    return _wire_rust_auto_opaque_enum_return_own_twin_sync();
  }

  late final _wire_rust_auto_opaque_enum_return_own_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_return_own_twin_sync');
  late final _wire_rust_auto_opaque_enum_return_own_twin_sync =
      _wire_rust_auto_opaque_enum_return_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync(
    ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_sync> arg,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<
                          wire_cst_enum_with_good_and_opaque_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_sync>)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync() {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync();
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync() {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync();
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_explicit_arg_twin_sync(
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_explicit_arg_twin_sync(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_explicit_arg_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_arg_twin_sync');
  late final _wire_rust_auto_opaque_explicit_arg_twin_sync =
      _wire_rust_auto_opaque_explicit_arg_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_explicit_return_twin_sync(
    int initial,
  ) {
    return _wire_rust_auto_opaque_explicit_return_twin_sync(
      initial,
    );
  }

  late final _wire_rust_auto_opaque_explicit_return_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_return_twin_sync');
  late final _wire_rust_auto_opaque_explicit_return_twin_sync =
      _wire_rust_auto_opaque_explicit_return_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_explicit_struct_twin_sync(
    ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_sync> arg,
  ) {
    return _wire_rust_auto_opaque_explicit_struct_twin_sync(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_explicit_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_struct_with_explicit_auto_opaque_field_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_struct_twin_sync');
  late final _wire_rust_auto_opaque_explicit_struct_twin_sync =
      _wire_rust_auto_opaque_explicit_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<
                  wire_cst_struct_with_explicit_auto_opaque_field_twin_sync>)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync(
    int a,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> b,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync(
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_plus_sign_arg_twin_sync(
    int arg,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_sync(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_sync');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_sync =
      _wire_rust_auto_opaque_plus_sign_arg_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_plus_sign_return_twin_sync() {
    return _wire_rust_auto_opaque_plus_sign_return_twin_sync();
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_sync');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_sync =
      _wire_rust_auto_opaque_plus_sign_return_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync() {
    return _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync();
  }

  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync');
  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync =
      _wire_rust_auto_opaque_return_opaque_one_and_two_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_return_opaque_two_twin_sync() {
    return _wire_rust_auto_opaque_return_opaque_two_twin_sync();
  }

  late final _wire_rust_auto_opaque_return_opaque_two_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_two_twin_sync');
  late final _wire_rust_auto_opaque_return_opaque_two_twin_sync =
      _wire_rust_auto_opaque_return_opaque_two_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_return_own_twin_sync(
    int initial,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_sync(
      initial,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_sync');
  late final _wire_rust_auto_opaque_return_own_twin_sync =
      _wire_rust_auto_opaque_return_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_return_vec_own_twin_sync() {
    return _wire_rust_auto_opaque_return_vec_own_twin_sync();
  }

  late final _wire_rust_auto_opaque_return_vec_own_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_vec_own_twin_sync');
  late final _wire_rust_auto_opaque_return_vec_own_twin_sync =
      _wire_rust_auto_opaque_return_vec_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  void wire_rust_auto_opaque_stream_sink_twin_sync(
    int port_,
  ) {
    return _wire_rust_auto_opaque_stream_sink_twin_sync(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_stream_sink_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_stream_sink_twin_sync');
  late final _wire_rust_auto_opaque_stream_sink_twin_sync =
      _wire_rust_auto_opaque_stream_sink_twin_syncPtr
          .asFunction<void Function(int)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync(
    ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_sync> arg,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<
                          wire_cst_struct_with_good_and_opaque_field_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_struct_with_good_and_opaque_field_twin_sync>)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync() {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync();
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync(
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync(
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.UintPtr,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_trait_object_arg_own_twin_sync(
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_sync(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_sync');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_sync =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_trait_object_return_own_one_twin_sync() {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync();
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_sync');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_trait_object_return_own_two_twin_sync() {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync();
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_sync');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_two_args_twin_sync(
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_sync(
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_sync');
  late final _wire_rust_auto_opaque_two_args_twin_sync =
      _wire_rust_auto_opaque_two_args_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_borrow_twin_sync_moi(
    int that,
  ) {
    return _wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_borrow_twin_sync_moi(
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_borrow_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_borrow_twin_sync_moi');
  late final _wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_borrow_twin_sync_moi =
      _wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_borrow_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_mut_borrow_twin_sync_moi(
    int that,
  ) {
    return _wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_mut_borrow_twin_sync_moi(
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_mut_borrow_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_mut_borrow_twin_sync_moi');
  late final _wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_mut_borrow_twin_sync_moi =
      _wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_mut_borrow_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_own_twin_sync_moi(
    int that,
  ) {
    return _wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_own_twin_sync_moi(
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_own_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_own_twin_sync_moi');
  late final _wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_own_twin_sync_moi =
      _wire_NonCloneSimpleTwinSyncMoi_instance_method_arg_own_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSyncMoi_instance_method_getter_twin_sync_moi(
    int that,
  ) {
    return _wire_NonCloneSimpleTwinSyncMoi_instance_method_getter_twin_sync_moi(
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncMoi_instance_method_getter_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncMoi_instance_method_getter_twin_sync_moi');
  late final _wire_NonCloneSimpleTwinSyncMoi_instance_method_getter_twin_sync_moi =
      _wire_NonCloneSimpleTwinSyncMoi_instance_method_getter_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSyncMoi_instance_method_return_own_twin_sync_moi(
    int that,
  ) {
    return _wire_NonCloneSimpleTwinSyncMoi_instance_method_return_own_twin_sync_moi(
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncMoi_instance_method_return_own_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncMoi_instance_method_return_own_twin_sync_moi');
  late final _wire_NonCloneSimpleTwinSyncMoi_instance_method_return_own_twin_sync_moi =
      _wire_NonCloneSimpleTwinSyncMoi_instance_method_return_own_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSyncMoi_new_custom_name_twin_sync_moi() {
    return _wire_NonCloneSimpleTwinSyncMoi_new_custom_name_twin_sync_moi();
  }

  late final _wire_NonCloneSimpleTwinSyncMoi_new_custom_name_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncMoi_new_custom_name_twin_sync_moi');
  late final _wire_NonCloneSimpleTwinSyncMoi_new_custom_name_twin_sync_moi =
      _wire_NonCloneSimpleTwinSyncMoi_new_custom_name_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_NonCloneSimpleTwinSyncMoi_new_twin_sync_moi() {
    return _wire_NonCloneSimpleTwinSyncMoi_new_twin_sync_moi();
  }

  late final _wire_NonCloneSimpleTwinSyncMoi_new_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncMoi_new_twin_sync_moi');
  late final _wire_NonCloneSimpleTwinSyncMoi_new_twin_sync_moi =
      _wire_NonCloneSimpleTwinSyncMoi_new_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSyncMoi_new_with_result_twin_sync_moi() {
    return _wire_NonCloneSimpleTwinSyncMoi_new_with_result_twin_sync_moi();
  }

  late final _wire_NonCloneSimpleTwinSyncMoi_new_with_result_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncMoi_new_with_result_twin_sync_moi');
  late final _wire_NonCloneSimpleTwinSyncMoi_new_with_result_twin_sync_moi =
      _wire_NonCloneSimpleTwinSyncMoi_new_with_result_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSyncMoi_static_method_arg_borrow_twin_sync_moi(
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinSyncMoi_static_method_arg_borrow_twin_sync_moi(
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncMoi_static_method_arg_borrow_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncMoi_static_method_arg_borrow_twin_sync_moi');
  late final _wire_NonCloneSimpleTwinSyncMoi_static_method_arg_borrow_twin_sync_moi =
      _wire_NonCloneSimpleTwinSyncMoi_static_method_arg_borrow_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSyncMoi_static_method_arg_mut_borrow_twin_sync_moi(
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinSyncMoi_static_method_arg_mut_borrow_twin_sync_moi(
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncMoi_static_method_arg_mut_borrow_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncMoi_static_method_arg_mut_borrow_twin_sync_moi');
  late final _wire_NonCloneSimpleTwinSyncMoi_static_method_arg_mut_borrow_twin_sync_moi =
      _wire_NonCloneSimpleTwinSyncMoi_static_method_arg_mut_borrow_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSyncMoi_static_method_arg_own_twin_sync_moi(
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinSyncMoi_static_method_arg_own_twin_sync_moi(
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncMoi_static_method_arg_own_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncMoi_static_method_arg_own_twin_sync_moi');
  late final _wire_NonCloneSimpleTwinSyncMoi_static_method_arg_own_twin_sync_moi =
      _wire_NonCloneSimpleTwinSyncMoi_static_method_arg_own_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSyncMoi_static_method_return_own_twin_sync_moi() {
    return _wire_NonCloneSimpleTwinSyncMoi_static_method_return_own_twin_sync_moi();
  }

  late final _wire_NonCloneSimpleTwinSyncMoi_static_method_return_own_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncMoi_static_method_return_own_twin_sync_moi');
  late final _wire_NonCloneSimpleTwinSyncMoi_static_method_return_own_twin_sync_moi =
      _wire_NonCloneSimpleTwinSyncMoi_static_method_return_own_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_arg_borrow_twin_sync_moi(
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_sync_moi(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_sync_moi');
  late final _wire_rust_auto_opaque_arg_borrow_twin_sync_moi =
      _wire_rust_auto_opaque_arg_borrow_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_arg_mut_borrow_twin_sync_moi(
    int arg,
    int expect,
    int adder,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_moi(
      arg,
      expect,
      adder,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_sync_moi');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_moi =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int, int, int)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_moi(
    int arg,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_moi(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_moi');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_moi =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_arg_own_twin_sync_moi(
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_sync_moi(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_sync_moi');
  late final _wire_rust_auto_opaque_arg_own_twin_sync_moi =
      _wire_rust_auto_opaque_arg_own_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_arg_vec_own_twin_sync_moi(
    ffi.Pointer<
            wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi>
        arg,
    ffi.Pointer<wire_cst_list_prim_i_32_loose> expect,
  ) {
    return _wire_rust_auto_opaque_arg_vec_own_twin_sync_moi(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_vec_own_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi>,
                  ffi.Pointer<wire_cst_list_prim_i_32_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_vec_own_twin_sync_moi');
  late final _wire_rust_auto_opaque_arg_vec_own_twin_sync_moi =
      _wire_rust_auto_opaque_arg_vec_own_twin_sync_moiPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<
                  wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi>,
              ffi.Pointer<wire_cst_list_prim_i_32_loose>)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_borrow_and_borrow_twin_sync_moi(
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_borrow_and_borrow_twin_sync_moi(
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_borrow_twin_sync_moi');
  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_sync_moi =
      _wire_rust_auto_opaque_borrow_and_borrow_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_moi(
    int borrow,
    int mut_borrow,
  ) {
    return _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_moi(
      borrow,
      mut_borrow,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.UintPtr, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_moi');
  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_moi =
      _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_callable_arg_twin_sync_moi(
    int arg,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_sync_moi(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_sync_moi');
  late final _wire_rust_auto_opaque_callable_arg_twin_sync_moi =
      _wire_rust_auto_opaque_callable_arg_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_callable_return_twin_sync_moi() {
    return _wire_rust_auto_opaque_callable_return_twin_sync_moi();
  }

  late final _wire_rust_auto_opaque_callable_return_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_sync_moi');
  late final _wire_rust_auto_opaque_callable_return_twin_sync_moi =
      _wire_rust_auto_opaque_callable_return_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_dummy_twin_sync_moi(
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_dummy_twin_sync_moi(
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_dummy_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_dummy_twin_sync_moi');
  late final _wire_rust_auto_opaque_dummy_twin_sync_moi =
      _wire_rust_auto_opaque_dummy_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_enum_arg_borrow_twin_sync_moi(
    int arg,
  ) {
    return _wire_rust_auto_opaque_enum_arg_borrow_twin_sync_moi(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_arg_borrow_twin_sync_moi');
  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_sync_moi =
      _wire_rust_auto_opaque_enum_arg_borrow_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_enum_return_own_twin_sync_moi() {
    return _wire_rust_auto_opaque_enum_return_own_twin_sync_moi();
  }

  late final _wire_rust_auto_opaque_enum_return_own_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_return_own_twin_sync_moi');
  late final _wire_rust_auto_opaque_enum_return_own_twin_sync_moi =
      _wire_rust_auto_opaque_enum_return_own_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_moi(
    ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_sync_moi> arg,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_moi(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<
                          wire_cst_enum_with_good_and_opaque_twin_sync_moi>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_moiPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_enum_with_good_and_opaque_twin_sync_moi>)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_moi() {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_moi();
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_moi() {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_moi();
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_explicit_arg_twin_sync_moi(
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_explicit_arg_twin_sync_moi(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_explicit_arg_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_arg_twin_sync_moi');
  late final _wire_rust_auto_opaque_explicit_arg_twin_sync_moi =
      _wire_rust_auto_opaque_explicit_arg_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_explicit_return_twin_sync_moi(
    int initial,
  ) {
    return _wire_rust_auto_opaque_explicit_return_twin_sync_moi(
      initial,
    );
  }

  late final _wire_rust_auto_opaque_explicit_return_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_return_twin_sync_moi');
  late final _wire_rust_auto_opaque_explicit_return_twin_sync_moi =
      _wire_rust_auto_opaque_explicit_return_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_explicit_struct_twin_sync_moi(
    ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_sync_moi>
        arg,
  ) {
    return _wire_rust_auto_opaque_explicit_struct_twin_sync_moi(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_explicit_struct_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_struct_with_explicit_auto_opaque_field_twin_sync_moi>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_struct_twin_sync_moi');
  late final _wire_rust_auto_opaque_explicit_struct_twin_sync_moi =
      _wire_rust_auto_opaque_explicit_struct_twin_sync_moiPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<
                  wire_cst_struct_with_explicit_auto_opaque_field_twin_sync_moi>)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_moi(
    int a,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> b,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_moi(
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.UintPtr,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_moi');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_moi =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_moiPtr.asFunction<
          WireSyncRust2DartDco Function(
              int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_plus_sign_arg_twin_sync_moi(
    int arg,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_sync_moi(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_sync_moi');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_sync_moi =
      _wire_rust_auto_opaque_plus_sign_arg_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_plus_sign_return_twin_sync_moi() {
    return _wire_rust_auto_opaque_plus_sign_return_twin_sync_moi();
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_sync_moi');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_sync_moi =
      _wire_rust_auto_opaque_plus_sign_return_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_moi() {
    return _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_moi();
  }

  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_moi');
  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_moi =
      _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_return_opaque_two_twin_sync_moi() {
    return _wire_rust_auto_opaque_return_opaque_two_twin_sync_moi();
  }

  late final _wire_rust_auto_opaque_return_opaque_two_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_two_twin_sync_moi');
  late final _wire_rust_auto_opaque_return_opaque_two_twin_sync_moi =
      _wire_rust_auto_opaque_return_opaque_two_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_return_own_twin_sync_moi(
    int initial,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_sync_moi(
      initial,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_sync_moi');
  late final _wire_rust_auto_opaque_return_own_twin_sync_moi =
      _wire_rust_auto_opaque_return_own_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_return_vec_own_twin_sync_moi() {
    return _wire_rust_auto_opaque_return_vec_own_twin_sync_moi();
  }

  late final _wire_rust_auto_opaque_return_vec_own_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_vec_own_twin_sync_moi');
  late final _wire_rust_auto_opaque_return_vec_own_twin_sync_moi =
      _wire_rust_auto_opaque_return_vec_own_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  void wire_rust_auto_opaque_stream_sink_twin_sync_moi(
    int port_,
  ) {
    return _wire_rust_auto_opaque_stream_sink_twin_sync_moi(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_stream_sink_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_stream_sink_twin_sync_moi');
  late final _wire_rust_auto_opaque_stream_sink_twin_sync_moi =
      _wire_rust_auto_opaque_stream_sink_twin_sync_moiPtr
          .asFunction<void Function(int)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_moi(
    ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_sync_moi> arg,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_moi(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<
                          wire_cst_struct_with_good_and_opaque_field_twin_sync_moi>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_moi');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_moi =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_moiPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_struct_with_good_and_opaque_field_twin_sync_moi>)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_moi() {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_moi();
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_moi');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_moi =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_moi(
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_moi(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.UintPtr,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_moi =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_moiPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_moi(
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_moi(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.UintPtr,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_moi =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_moiPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_trait_object_arg_own_twin_sync_moi(
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_moi(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_sync_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_moi =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_moiPtr.asFunction<
          WireSyncRust2DartDco Function(
              int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_moi() {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_moi();
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_moi');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_moi =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_moi() {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_moi();
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_moi');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_moi =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_two_args_twin_sync_moi(
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_sync_moi(
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_sync_moi');
  late final _wire_rust_auto_opaque_two_args_twin_sync_moi =
      _wire_rust_auto_opaque_two_args_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_instance_method_getter_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_instance_method_getter_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_getter_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_instance_method_getter_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_getter_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_instance_method_getter_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_NonCloneSimpleTwinSyncSse_new_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_new_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_new_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_new_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_new_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_new_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_arg_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_sync_sse');
  late final _wire_rust_auto_opaque_arg_borrow_twin_sync_sse =
      _wire_rust_auto_opaque_arg_borrow_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_arg_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_arg_own_twin_sync_sse =
      _wire_rust_auto_opaque_arg_own_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_arg_vec_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_vec_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_vec_own_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_vec_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_arg_vec_own_twin_sync_sse =
      _wire_rust_auto_opaque_arg_vec_own_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse');
  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse =
      _wire_rust_auto_opaque_borrow_and_borrow_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse');
  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse =
      _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_callable_arg_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_sync_sse');
  late final _wire_rust_auto_opaque_callable_arg_twin_sync_sse =
      _wire_rust_auto_opaque_callable_arg_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_callable_return_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_return_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_return_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_sync_sse');
  late final _wire_rust_auto_opaque_callable_return_twin_sync_sse =
      _wire_rust_auto_opaque_callable_return_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_dummy_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_dummy_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_dummy_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_dummy_twin_sync_sse');
  late final _wire_rust_auto_opaque_dummy_twin_sync_sse =
      _wire_rust_auto_opaque_dummy_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse');
  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse =
      _wire_rust_auto_opaque_enum_arg_borrow_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_enum_return_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_return_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_return_own_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_return_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_enum_return_own_twin_sync_sse =
      _wire_rust_auto_opaque_enum_return_own_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_explicit_arg_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_arg_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_arg_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_arg_twin_sync_sse');
  late final _wire_rust_auto_opaque_explicit_arg_twin_sync_sse =
      _wire_rust_auto_opaque_explicit_arg_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_explicit_return_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_return_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_return_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_return_twin_sync_sse');
  late final _wire_rust_auto_opaque_explicit_return_twin_sync_sse =
      _wire_rust_auto_opaque_explicit_return_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_explicit_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_struct_twin_sync_sse');
  late final _wire_rust_auto_opaque_explicit_struct_twin_sync_sse =
      _wire_rust_auto_opaque_explicit_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse =
      _wire_rust_auto_opaque_plus_sign_arg_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_plus_sign_return_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_return_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_sync_sse');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_sync_sse =
      _wire_rust_auto_opaque_plus_sign_return_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse');
  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse =
      _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_return_opaque_two_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_two_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_two_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_two_twin_sync_sse');
  late final _wire_rust_auto_opaque_return_opaque_two_twin_sync_sse =
      _wire_rust_auto_opaque_return_opaque_two_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_return_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_return_own_twin_sync_sse =
      _wire_rust_auto_opaque_return_own_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_return_vec_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_vec_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_vec_own_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_vec_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_return_vec_own_twin_sync_sse =
      _wire_rust_auto_opaque_return_vec_own_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_stream_sink_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_stream_sink_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_stream_sink_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_stream_sink_twin_sync_sse');
  late final _wire_rust_auto_opaque_stream_sink_twin_sync_sse =
      _wire_rust_auto_opaque_stream_sink_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_two_args_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_sync_sse');
  late final _wire_rust_auto_opaque_two_args_twin_sync_sse =
      _wire_rust_auto_opaque_two_args_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_borrow_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_borrow_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_borrow_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_borrow_twin_sync_sse_moi');
  late final _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_borrow_twin_sync_sse_moi =
      _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_borrow_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_mut_borrow_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_mut_borrow_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_mut_borrow_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_mut_borrow_twin_sync_sse_moi');
  late final _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_mut_borrow_twin_sync_sse_moi =
      _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_mut_borrow_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_own_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_own_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_own_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_own_twin_sync_sse_moi');
  late final _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_own_twin_sync_sse_moi =
      _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_arg_own_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSseMoi_instance_method_getter_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_getter_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_getter_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSseMoi_instance_method_getter_twin_sync_sse_moi');
  late final _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_getter_twin_sync_sse_moi =
      _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_getter_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSseMoi_instance_method_return_own_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_return_own_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_return_own_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSseMoi_instance_method_return_own_twin_sync_sse_moi');
  late final _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_return_own_twin_sync_sse_moi =
      _wire_NonCloneSimpleTwinSyncSseMoi_instance_method_return_own_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSseMoi_new_custom_name_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSseMoi_new_custom_name_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSseMoi_new_custom_name_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSseMoi_new_custom_name_twin_sync_sse_moi');
  late final _wire_NonCloneSimpleTwinSyncSseMoi_new_custom_name_twin_sync_sse_moi =
      _wire_NonCloneSimpleTwinSyncSseMoi_new_custom_name_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_NonCloneSimpleTwinSyncSseMoi_new_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSseMoi_new_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSseMoi_new_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSseMoi_new_twin_sync_sse_moi');
  late final _wire_NonCloneSimpleTwinSyncSseMoi_new_twin_sync_sse_moi =
      _wire_NonCloneSimpleTwinSyncSseMoi_new_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSseMoi_new_with_result_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSseMoi_new_with_result_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSseMoi_new_with_result_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSseMoi_new_with_result_twin_sync_sse_moi');
  late final _wire_NonCloneSimpleTwinSyncSseMoi_new_with_result_twin_sync_sse_moi =
      _wire_NonCloneSimpleTwinSyncSseMoi_new_with_result_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_borrow_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_borrow_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_borrow_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_borrow_twin_sync_sse_moi');
  late final _wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_borrow_twin_sync_sse_moi =
      _wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_borrow_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_mut_borrow_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_mut_borrow_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_mut_borrow_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_mut_borrow_twin_sync_sse_moi');
  late final _wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_mut_borrow_twin_sync_sse_moi =
      _wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_mut_borrow_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_own_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_own_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_own_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_own_twin_sync_sse_moi');
  late final _wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_own_twin_sync_sse_moi =
      _wire_NonCloneSimpleTwinSyncSseMoi_static_method_arg_own_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSseMoi_static_method_return_own_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSseMoi_static_method_return_own_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSseMoi_static_method_return_own_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSseMoi_static_method_return_own_twin_sync_sse_moi');
  late final _wire_NonCloneSimpleTwinSyncSseMoi_static_method_return_own_twin_sync_sse_moi =
      _wire_NonCloneSimpleTwinSyncSseMoi_static_method_return_own_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_arg_borrow_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_arg_borrow_twin_sync_sse_moi =
      _wire_rust_auto_opaque_arg_borrow_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse_moi =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse_moi =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_arg_own_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_arg_own_twin_sync_sse_moi =
      _wire_rust_auto_opaque_arg_own_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_arg_vec_own_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_vec_own_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_vec_own_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_vec_own_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_arg_vec_own_twin_sync_sse_moi =
      _wire_rust_auto_opaque_arg_vec_own_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse_moi =
      _wire_rust_auto_opaque_borrow_and_borrow_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse_moi =
      _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_callable_arg_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_callable_arg_twin_sync_sse_moi =
      _wire_rust_auto_opaque_callable_arg_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_callable_return_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_return_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_return_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_callable_return_twin_sync_sse_moi =
      _wire_rust_auto_opaque_callable_return_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_dummy_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_dummy_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_dummy_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_dummy_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_dummy_twin_sync_sse_moi =
      _wire_rust_auto_opaque_dummy_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse_moi =
      _wire_rust_auto_opaque_enum_arg_borrow_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_enum_return_own_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_return_own_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_return_own_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_return_own_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_enum_return_own_twin_sync_sse_moi =
      _wire_rust_auto_opaque_enum_return_own_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse_moi =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_explicit_arg_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_arg_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_arg_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_arg_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_explicit_arg_twin_sync_sse_moi =
      _wire_rust_auto_opaque_explicit_arg_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_explicit_return_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_return_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_return_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_return_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_explicit_return_twin_sync_sse_moi =
      _wire_rust_auto_opaque_explicit_return_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_explicit_struct_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_explicit_struct_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_explicit_struct_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_struct_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_explicit_struct_twin_sync_sse_moi =
      _wire_rust_auto_opaque_explicit_struct_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse_moi =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse_moi =
      _wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_plus_sign_return_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_return_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_sync_sse_moi =
      _wire_rust_auto_opaque_plus_sign_return_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse_moi =
      _wire_rust_auto_opaque_return_opaque_one_and_two_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_return_opaque_two_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_two_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_two_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_two_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_return_opaque_two_twin_sync_sse_moi =
      _wire_rust_auto_opaque_return_opaque_two_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_return_own_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_return_own_twin_sync_sse_moi =
      _wire_rust_auto_opaque_return_own_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_return_vec_own_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_vec_own_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_vec_own_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_vec_own_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_return_vec_own_twin_sync_sse_moi =
      _wire_rust_auto_opaque_return_vec_own_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_stream_sink_twin_sync_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_stream_sink_twin_sync_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_stream_sink_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_stream_sink_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_stream_sink_twin_sync_sse_moi =
      _wire_rust_auto_opaque_stream_sink_twin_sync_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse_moi =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse_moi =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse_moi =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse_moi =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse_moi =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse_moi =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse_moi =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse_moiPtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_two_args_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_sync_sse_moi');
  late final _wire_rust_auto_opaque_two_args_twin_sync_sse_moi =
      _wire_rust_auto_opaque_two_args_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_frb_sync_generator_test_twin_moi() {
    return _wire_frb_sync_generator_test_twin_moi();
  }

  late final _wire_frb_sync_generator_test_twin_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_frb_sync_generator_test_twin_moi');
  late final _wire_frb_sync_generator_test_twin_moi =
      _wire_frb_sync_generator_test_twin_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_sync_create_non_clone_twin_moi() {
    return _wire_sync_create_non_clone_twin_moi();
  }

  late final _wire_sync_create_non_clone_twin_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_sync_create_non_clone_twin_moi');
  late final _wire_sync_create_non_clone_twin_moi =
      _wire_sync_create_non_clone_twin_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_sync_create_opaque_twin_moi() {
    return _wire_sync_create_opaque_twin_moi();
  }

  late final _wire_sync_create_opaque_twin_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_sync_create_opaque_twin_moi');
  late final _wire_sync_create_opaque_twin_moi =
      _wire_sync_create_opaque_twin_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_sync_option_rust_opaque_twin_moi() {
    return _wire_sync_option_rust_opaque_twin_moi();
  }

  late final _wire_sync_option_rust_opaque_twin_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_sync_option_rust_opaque_twin_moi');
  late final _wire_sync_option_rust_opaque_twin_moi =
      _wire_sync_option_rust_opaque_twin_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartSse wire_frb_sync_generator_test_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_frb_sync_generator_test_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_frb_sync_generator_test_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_frb_sync_generator_test_twin_sse');
  late final _wire_frb_sync_generator_test_twin_sse =
      _wire_frb_sync_generator_test_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_create_non_clone_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_create_non_clone_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_create_non_clone_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_create_non_clone_twin_sse');
  late final _wire_sync_create_non_clone_twin_sse =
      _wire_sync_create_non_clone_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_create_opaque_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_create_opaque_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_create_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_create_opaque_twin_sse');
  late final _wire_sync_create_opaque_twin_sse =
      _wire_sync_create_opaque_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_option_rust_opaque_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_option_rust_opaque_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_option_rust_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_option_rust_opaque_twin_sse');
  late final _wire_sync_option_rust_opaque_twin_sse =
      _wire_sync_option_rust_opaque_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_frb_sync_generator_test_twin_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_frb_sync_generator_test_twin_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_frb_sync_generator_test_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_frb_sync_generator_test_twin_sse_moi');
  late final _wire_frb_sync_generator_test_twin_sse_moi =
      _wire_frb_sync_generator_test_twin_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_create_non_clone_twin_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_create_non_clone_twin_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_create_non_clone_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_create_non_clone_twin_sse_moi');
  late final _wire_sync_create_non_clone_twin_sse_moi =
      _wire_sync_create_non_clone_twin_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_create_opaque_twin_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_create_opaque_twin_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_create_opaque_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_create_opaque_twin_sse_moi');
  late final _wire_sync_create_opaque_twin_sse_moi =
      _wire_sync_create_opaque_twin_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_option_rust_opaque_twin_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_option_rust_opaque_twin_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_option_rust_opaque_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_option_rust_opaque_twin_sse_moi');
  late final _wire_sync_option_rust_opaque_twin_sse_moi =
      _wire_sync_option_rust_opaque_twin_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_array_opaque_enum_twin_moi(
    int port_,
  ) {
    return _wire_create_array_opaque_enum_twin_moi(
      port_,
    );
  }

  late final _wire_create_array_opaque_enum_twin_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_moi');
  late final _wire_create_array_opaque_enum_twin_moi =
      _wire_create_array_opaque_enum_twin_moiPtr
          .asFunction<void Function(int)>();

  void wire_create_nested_opaque_twin_moi(
    int port_,
  ) {
    return _wire_create_nested_opaque_twin_moi(
      port_,
    );
  }

  late final _wire_create_nested_opaque_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_moi');
  late final _wire_create_nested_opaque_twin_moi =
      _wire_create_nested_opaque_twin_moiPtr.asFunction<void Function(int)>();

  void wire_create_opaque_twin_moi(
    int port_,
  ) {
    return _wire_create_opaque_twin_moi(
      port_,
    );
  }

  late final _wire_create_opaque_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_create_opaque_twin_moi');
  late final _wire_create_opaque_twin_moi =
      _wire_create_opaque_twin_moiPtr.asFunction<void Function(int)>();

  void wire_create_option_opaque_twin_moi(
    int port_,
    ffi.Pointer<ffi.UintPtr> opaque,
  ) {
    return _wire_create_option_opaque_twin_moi(
      port_,
      opaque,
    );
  }

  late final _wire_create_option_opaque_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.UintPtr>)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_moi');
  late final _wire_create_option_opaque_twin_moi =
      _wire_create_option_opaque_twin_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.UintPtr>)>();

  void wire_frb_generator_test_twin_moi(
    int port_,
  ) {
    return _wire_frb_generator_test_twin_moi(
      port_,
    );
  }

  late final _wire_frb_generator_test_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_moi');
  late final _wire_frb_generator_test_twin_moi =
      _wire_frb_generator_test_twin_moiPtr.asFunction<void Function(int)>();

  void wire_opaque_array_run_twin_moi(
    int port_,
    ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinMoi> data,
  ) {
    return _wire_opaque_array_run_twin_moi(
      port_,
      data,
    );
  }

  late final _wire_opaque_array_run_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinMoi>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_moi');
  late final _wire_opaque_array_run_twin_moi =
      _wire_opaque_array_run_twin_moiPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinMoi>)>();

  void wire_opaque_array_twin_moi(
    int port_,
  ) {
    return _wire_opaque_array_twin_moi(
      port_,
    );
  }

  late final _wire_opaque_array_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_opaque_array_twin_moi');
  late final _wire_opaque_array_twin_moi =
      _wire_opaque_array_twin_moiPtr.asFunction<void Function(int)>();

  void wire_opaque_vec_run_twin_moi(
    int port_,
    ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinMoi> data,
  ) {
    return _wire_opaque_vec_run_twin_moi(
      port_,
      data,
    );
  }

  late final _wire_opaque_vec_run_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinMoi>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_moi');
  late final _wire_opaque_vec_run_twin_moi =
      _wire_opaque_vec_run_twin_moiPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinMoi>)>();

  void wire_opaque_vec_twin_moi(
    int port_,
  ) {
    return _wire_opaque_vec_twin_moi(
      port_,
    );
  }

  late final _wire_opaque_vec_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_moi');
  late final _wire_opaque_vec_twin_moi =
      _wire_opaque_vec_twin_moiPtr.asFunction<void Function(int)>();

  void wire_run_enum_opaque_twin_moi(
    int port_,
    ffi.Pointer<wire_cst_enum_opaque_twin_moi> opaque,
  ) {
    return _wire_run_enum_opaque_twin_moi(
      port_,
      opaque,
    );
  }

  late final _wire_run_enum_opaque_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_enum_opaque_twin_moi>)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_moi');
  late final _wire_run_enum_opaque_twin_moi =
      _wire_run_enum_opaque_twin_moiPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_enum_opaque_twin_moi>)>();

  void wire_run_nested_opaque_twin_moi(
    int port_,
    ffi.Pointer<wire_cst_opaque_nested_twin_moi> opaque,
  ) {
    return _wire_run_nested_opaque_twin_moi(
      port_,
      opaque,
    );
  }

  late final _wire_run_nested_opaque_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_opaque_nested_twin_moi>)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_moi');
  late final _wire_run_nested_opaque_twin_moi =
      _wire_run_nested_opaque_twin_moiPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_opaque_nested_twin_moi>)>();

  void wire_run_non_clone_twin_moi(
    int port_,
    int clone,
  ) {
    return _wire_run_non_clone_twin_moi(
      port_,
      clone,
    );
  }

  late final _wire_run_non_clone_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_moi');
  late final _wire_run_non_clone_twin_moi =
      _wire_run_non_clone_twin_moiPtr.asFunction<void Function(int, int)>();

  void wire_run_opaque_twin_moi(
    int port_,
    int opaque,
  ) {
    return _wire_run_opaque_twin_moi(
      port_,
      opaque,
    );
  }

  late final _wire_run_opaque_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_run_opaque_twin_moi');
  late final _wire_run_opaque_twin_moi =
      _wire_run_opaque_twin_moiPtr.asFunction<void Function(int, int)>();

  void wire_run_opaque_with_delay_twin_moi(
    int port_,
    int opaque,
  ) {
    return _wire_run_opaque_with_delay_twin_moi(
      port_,
      opaque,
    );
  }

  late final _wire_run_opaque_with_delay_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_moi');
  late final _wire_run_opaque_with_delay_twin_moi =
      _wire_run_opaque_with_delay_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_unwrap_rust_opaque_twin_moi(
    int port_,
    int opaque,
  ) {
    return _wire_unwrap_rust_opaque_twin_moi(
      port_,
      opaque,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_moi');
  late final _wire_unwrap_rust_opaque_twin_moi =
      _wire_unwrap_rust_opaque_twin_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_create_array_opaque_enum_twin_rust_async(
    int port_,
  ) {
    return _wire_create_array_opaque_enum_twin_rust_async(
      port_,
    );
  }

  late final _wire_create_array_opaque_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_rust_async');
  late final _wire_create_array_opaque_enum_twin_rust_async =
      _wire_create_array_opaque_enum_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_create_nested_opaque_twin_rust_async(
    int port_,
  ) {
    return _wire_create_nested_opaque_twin_rust_async(
      port_,
    );
  }

  late final _wire_create_nested_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_rust_async');
  late final _wire_create_nested_opaque_twin_rust_async =
      _wire_create_nested_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_create_opaque_twin_rust_async(
    int port_,
  ) {
    return _wire_create_opaque_twin_rust_async(
      port_,
    );
  }

  late final _wire_create_opaque_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_create_opaque_twin_rust_async');
  late final _wire_create_opaque_twin_rust_async =
      _wire_create_opaque_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_create_option_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.UintPtr> opaque,
  ) {
    return _wire_create_option_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_create_option_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.UintPtr>)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_rust_async');
  late final _wire_create_option_opaque_twin_rust_async =
      _wire_create_option_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.UintPtr>)>();

  void wire_frb_generator_test_twin_rust_async(
    int port_,
  ) {
    return _wire_frb_generator_test_twin_rust_async(
      port_,
    );
  }

  late final _wire_frb_generator_test_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_rust_async');
  late final _wire_frb_generator_test_twin_rust_async =
      _wire_frb_generator_test_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_opaque_array_run_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsync> data,
  ) {
    return _wire_opaque_array_run_twin_rust_async(
      port_,
      data,
    );
  }

  late final _wire_opaque_array_run_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_RustOpaque_HideDataTwinRustAsync>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_rust_async');
  late final _wire_opaque_array_run_twin_rust_async =
      _wire_opaque_array_run_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsync>)>();

  void wire_opaque_array_twin_rust_async(
    int port_,
  ) {
    return _wire_opaque_array_twin_rust_async(
      port_,
    );
  }

  late final _wire_opaque_array_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_opaque_array_twin_rust_async');
  late final _wire_opaque_array_twin_rust_async =
      _wire_opaque_array_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_opaque_vec_run_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsync> data,
  ) {
    return _wire_opaque_vec_run_twin_rust_async(
      port_,
      data,
    );
  }

  late final _wire_opaque_vec_run_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_RustOpaque_HideDataTwinRustAsync>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_rust_async');
  late final _wire_opaque_vec_run_twin_rust_async =
      _wire_opaque_vec_run_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsync>)>();

  void wire_opaque_vec_twin_rust_async(
    int port_,
  ) {
    return _wire_opaque_vec_twin_rust_async(
      port_,
    );
  }

  late final _wire_opaque_vec_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_rust_async');
  late final _wire_opaque_vec_twin_rust_async =
      _wire_opaque_vec_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_run_enum_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_enum_opaque_twin_rust_async> opaque,
  ) {
    return _wire_run_enum_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_run_enum_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_opaque_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_rust_async');
  late final _wire_run_enum_opaque_twin_rust_async =
      _wire_run_enum_opaque_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_enum_opaque_twin_rust_async>)>();

  void wire_run_nested_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_opaque_nested_twin_rust_async> opaque,
  ) {
    return _wire_run_nested_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_run_nested_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_opaque_nested_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_rust_async');
  late final _wire_run_nested_opaque_twin_rust_async =
      _wire_run_nested_opaque_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_opaque_nested_twin_rust_async>)>();

  void wire_run_non_clone_twin_rust_async(
    int port_,
    int clone,
  ) {
    return _wire_run_non_clone_twin_rust_async(
      port_,
      clone,
    );
  }

  late final _wire_run_non_clone_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_rust_async');
  late final _wire_run_non_clone_twin_rust_async =
      _wire_run_non_clone_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_run_opaque_twin_rust_async(
    int port_,
    int opaque,
  ) {
    return _wire_run_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_run_opaque_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_run_opaque_twin_rust_async');
  late final _wire_run_opaque_twin_rust_async =
      _wire_run_opaque_twin_rust_asyncPtr.asFunction<void Function(int, int)>();

  void wire_run_opaque_with_delay_twin_rust_async(
    int port_,
    int opaque,
  ) {
    return _wire_run_opaque_with_delay_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_run_opaque_with_delay_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_rust_async');
  late final _wire_run_opaque_with_delay_twin_rust_async =
      _wire_run_opaque_with_delay_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_unwrap_rust_opaque_twin_rust_async(
    int port_,
    int opaque,
  ) {
    return _wire_unwrap_rust_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_rust_async');
  late final _wire_unwrap_rust_opaque_twin_rust_async =
      _wire_unwrap_rust_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_create_array_opaque_enum_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_create_array_opaque_enum_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_create_array_opaque_enum_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_rust_async_moi');
  late final _wire_create_array_opaque_enum_twin_rust_async_moi =
      _wire_create_array_opaque_enum_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_create_nested_opaque_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_create_nested_opaque_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_create_nested_opaque_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_rust_async_moi');
  late final _wire_create_nested_opaque_twin_rust_async_moi =
      _wire_create_nested_opaque_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_create_opaque_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_create_opaque_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_create_opaque_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_create_opaque_twin_rust_async_moi');
  late final _wire_create_opaque_twin_rust_async_moi =
      _wire_create_opaque_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_create_option_opaque_twin_rust_async_moi(
    int port_,
    ffi.Pointer<ffi.UintPtr> opaque,
  ) {
    return _wire_create_option_opaque_twin_rust_async_moi(
      port_,
      opaque,
    );
  }

  late final _wire_create_option_opaque_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.UintPtr>)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_rust_async_moi');
  late final _wire_create_option_opaque_twin_rust_async_moi =
      _wire_create_option_opaque_twin_rust_async_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.UintPtr>)>();

  void wire_frb_generator_test_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_frb_generator_test_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_frb_generator_test_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_rust_async_moi');
  late final _wire_frb_generator_test_twin_rust_async_moi =
      _wire_frb_generator_test_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_opaque_array_run_twin_rust_async_moi(
    int port_,
    ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsyncMoi> data,
  ) {
    return _wire_opaque_array_run_twin_rust_async_moi(
      port_,
      data,
    );
  }

  late final _wire_opaque_array_run_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_RustOpaque_HideDataTwinRustAsyncMoi>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_rust_async_moi');
  late final _wire_opaque_array_run_twin_rust_async_moi =
      _wire_opaque_array_run_twin_rust_async_moiPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_list_RustOpaque_HideDataTwinRustAsyncMoi>)>();

  void wire_opaque_array_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_opaque_array_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_opaque_array_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_opaque_array_twin_rust_async_moi');
  late final _wire_opaque_array_twin_rust_async_moi =
      _wire_opaque_array_twin_rust_async_moiPtr
          .asFunction<void Function(int)>();

  void wire_opaque_vec_run_twin_rust_async_moi(
    int port_,
    ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsyncMoi> data,
  ) {
    return _wire_opaque_vec_run_twin_rust_async_moi(
      port_,
      data,
    );
  }

  late final _wire_opaque_vec_run_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_RustOpaque_HideDataTwinRustAsyncMoi>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_rust_async_moi');
  late final _wire_opaque_vec_run_twin_rust_async_moi =
      _wire_opaque_vec_run_twin_rust_async_moiPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_list_RustOpaque_HideDataTwinRustAsyncMoi>)>();

  void wire_opaque_vec_twin_rust_async_moi(
    int port_,
  ) {
    return _wire_opaque_vec_twin_rust_async_moi(
      port_,
    );
  }

  late final _wire_opaque_vec_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_rust_async_moi');
  late final _wire_opaque_vec_twin_rust_async_moi =
      _wire_opaque_vec_twin_rust_async_moiPtr.asFunction<void Function(int)>();

  void wire_run_enum_opaque_twin_rust_async_moi(
    int port_,
    ffi.Pointer<wire_cst_enum_opaque_twin_rust_async_moi> opaque,
  ) {
    return _wire_run_enum_opaque_twin_rust_async_moi(
      port_,
      opaque,
    );
  }

  late final _wire_run_enum_opaque_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_opaque_twin_rust_async_moi>)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_rust_async_moi');
  late final _wire_run_enum_opaque_twin_rust_async_moi =
      _wire_run_enum_opaque_twin_rust_async_moiPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_enum_opaque_twin_rust_async_moi>)>();

  void wire_run_nested_opaque_twin_rust_async_moi(
    int port_,
    ffi.Pointer<wire_cst_opaque_nested_twin_rust_async_moi> opaque,
  ) {
    return _wire_run_nested_opaque_twin_rust_async_moi(
      port_,
      opaque,
    );
  }

  late final _wire_run_nested_opaque_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_opaque_nested_twin_rust_async_moi>)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_rust_async_moi');
  late final _wire_run_nested_opaque_twin_rust_async_moi =
      _wire_run_nested_opaque_twin_rust_async_moiPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_opaque_nested_twin_rust_async_moi>)>();

  void wire_run_non_clone_twin_rust_async_moi(
    int port_,
    int clone,
  ) {
    return _wire_run_non_clone_twin_rust_async_moi(
      port_,
      clone,
    );
  }

  late final _wire_run_non_clone_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_rust_async_moi');
  late final _wire_run_non_clone_twin_rust_async_moi =
      _wire_run_non_clone_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_run_opaque_twin_rust_async_moi(
    int port_,
    int opaque,
  ) {
    return _wire_run_opaque_twin_rust_async_moi(
      port_,
      opaque,
    );
  }

  late final _wire_run_opaque_twin_rust_async_moiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_run_opaque_twin_rust_async_moi');
  late final _wire_run_opaque_twin_rust_async_moi =
      _wire_run_opaque_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_run_opaque_with_delay_twin_rust_async_moi(
    int port_,
    int opaque,
  ) {
    return _wire_run_opaque_with_delay_twin_rust_async_moi(
      port_,
      opaque,
    );
  }

  late final _wire_run_opaque_with_delay_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_rust_async_moi');
  late final _wire_run_opaque_with_delay_twin_rust_async_moi =
      _wire_run_opaque_with_delay_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_unwrap_rust_opaque_twin_rust_async_moi(
    int port_,
    int opaque,
  ) {
    return _wire_unwrap_rust_opaque_twin_rust_async_moi(
      port_,
      opaque,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_rust_async_moi');
  late final _wire_unwrap_rust_opaque_twin_rust_async_moi =
      _wire_unwrap_rust_opaque_twin_rust_async_moiPtr
          .asFunction<void Function(int, int)>();

  void wire_create_array_opaque_enum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_array_opaque_enum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_array_opaque_enum_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_rust_async_sse');
  late final _wire_create_array_opaque_enum_twin_rust_async_sse =
      _wire_create_array_opaque_enum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_nested_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_nested_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_nested_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_rust_async_sse');
  late final _wire_create_nested_opaque_twin_rust_async_sse =
      _wire_create_nested_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_opaque_twin_rust_async_sse');
  late final _wire_create_opaque_twin_rust_async_sse =
      _wire_create_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_option_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_option_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_option_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_rust_async_sse');
  late final _wire_create_option_opaque_twin_rust_async_sse =
      _wire_create_option_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_frb_generator_test_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_frb_generator_test_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_frb_generator_test_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_rust_async_sse');
  late final _wire_frb_generator_test_twin_rust_async_sse =
      _wire_frb_generator_test_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_array_run_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_run_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_run_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_rust_async_sse');
  late final _wire_opaque_array_run_twin_rust_async_sse =
      _wire_opaque_array_run_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_array_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_twin_rust_async_sse');
  late final _wire_opaque_array_twin_rust_async_sse =
      _wire_opaque_array_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_vec_run_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_run_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_run_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_rust_async_sse');
  late final _wire_opaque_vec_run_twin_rust_async_sse =
      _wire_opaque_vec_run_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_vec_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_rust_async_sse');
  late final _wire_opaque_vec_twin_rust_async_sse =
      _wire_opaque_vec_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_enum_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_enum_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_enum_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_rust_async_sse');
  late final _wire_run_enum_opaque_twin_rust_async_sse =
      _wire_run_enum_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_nested_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_nested_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_nested_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_rust_async_sse');
  late final _wire_run_nested_opaque_twin_rust_async_sse =
      _wire_run_nested_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_non_clone_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_non_clone_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_non_clone_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_rust_async_sse');
  late final _wire_run_non_clone_twin_rust_async_sse =
      _wire_run_non_clone_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_twin_rust_async_sse');
  late final _wire_run_opaque_twin_rust_async_sse =
      _wire_run_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_opaque_with_delay_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_with_delay_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_with_delay_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_rust_async_sse');
  late final _wire_run_opaque_with_delay_twin_rust_async_sse =
      _wire_run_opaque_with_delay_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_unwrap_rust_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_unwrap_rust_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_rust_async_sse');
  late final _wire_unwrap_rust_opaque_twin_rust_async_sse =
      _wire_unwrap_rust_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_array_opaque_enum_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_array_opaque_enum_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_array_opaque_enum_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_rust_async_sse_moi');
  late final _wire_create_array_opaque_enum_twin_rust_async_sse_moi =
      _wire_create_array_opaque_enum_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_nested_opaque_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_nested_opaque_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_nested_opaque_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_rust_async_sse_moi');
  late final _wire_create_nested_opaque_twin_rust_async_sse_moi =
      _wire_create_nested_opaque_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_opaque_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_opaque_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_opaque_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_opaque_twin_rust_async_sse_moi');
  late final _wire_create_opaque_twin_rust_async_sse_moi =
      _wire_create_opaque_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_option_opaque_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_option_opaque_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_option_opaque_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_rust_async_sse_moi');
  late final _wire_create_option_opaque_twin_rust_async_sse_moi =
      _wire_create_option_opaque_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_frb_generator_test_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_frb_generator_test_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_frb_generator_test_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_rust_async_sse_moi');
  late final _wire_frb_generator_test_twin_rust_async_sse_moi =
      _wire_frb_generator_test_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_array_run_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_run_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_run_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_rust_async_sse_moi');
  late final _wire_opaque_array_run_twin_rust_async_sse_moi =
      _wire_opaque_array_run_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_array_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_twin_rust_async_sse_moi');
  late final _wire_opaque_array_twin_rust_async_sse_moi =
      _wire_opaque_array_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_vec_run_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_run_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_run_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_rust_async_sse_moi');
  late final _wire_opaque_vec_run_twin_rust_async_sse_moi =
      _wire_opaque_vec_run_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_vec_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_rust_async_sse_moi');
  late final _wire_opaque_vec_twin_rust_async_sse_moi =
      _wire_opaque_vec_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_enum_opaque_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_enum_opaque_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_enum_opaque_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_rust_async_sse_moi');
  late final _wire_run_enum_opaque_twin_rust_async_sse_moi =
      _wire_run_enum_opaque_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_nested_opaque_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_nested_opaque_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_nested_opaque_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_rust_async_sse_moi');
  late final _wire_run_nested_opaque_twin_rust_async_sse_moi =
      _wire_run_nested_opaque_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_non_clone_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_non_clone_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_non_clone_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_rust_async_sse_moi');
  late final _wire_run_non_clone_twin_rust_async_sse_moi =
      _wire_run_non_clone_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_opaque_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_twin_rust_async_sse_moi');
  late final _wire_run_opaque_twin_rust_async_sse_moi =
      _wire_run_opaque_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_opaque_with_delay_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_with_delay_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_with_delay_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_rust_async_sse_moi');
  late final _wire_run_opaque_with_delay_twin_rust_async_sse_moi =
      _wire_run_opaque_with_delay_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_unwrap_rust_opaque_twin_rust_async_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_unwrap_rust_opaque_twin_rust_async_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_rust_async_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_rust_async_sse_moi');
  late final _wire_unwrap_rust_opaque_twin_rust_async_sse_moi =
      _wire_unwrap_rust_opaque_twin_rust_async_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_array_opaque_enum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_array_opaque_enum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_array_opaque_enum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_sse');
  late final _wire_create_array_opaque_enum_twin_sse =
      _wire_create_array_opaque_enum_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_nested_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_nested_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_nested_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_sse');
  late final _wire_create_nested_opaque_twin_sse =
      _wire_create_nested_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_opaque_twin_sse');
  late final _wire_create_opaque_twin_sse = _wire_create_opaque_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_option_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_option_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_option_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_sse');
  late final _wire_create_option_opaque_twin_sse =
      _wire_create_option_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_frb_generator_test_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_frb_generator_test_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_frb_generator_test_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_sse');
  late final _wire_frb_generator_test_twin_sse =
      _wire_frb_generator_test_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_array_run_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_run_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_run_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_sse');
  late final _wire_opaque_array_run_twin_sse =
      _wire_opaque_array_run_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_array_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_twin_sse');
  late final _wire_opaque_array_twin_sse = _wire_opaque_array_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_vec_run_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_run_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_run_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_sse');
  late final _wire_opaque_vec_run_twin_sse = _wire_opaque_vec_run_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_vec_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_sse');
  late final _wire_opaque_vec_twin_sse = _wire_opaque_vec_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_enum_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_enum_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_enum_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_sse');
  late final _wire_run_enum_opaque_twin_sse = _wire_run_enum_opaque_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_nested_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_nested_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_nested_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_sse');
  late final _wire_run_nested_opaque_twin_sse =
      _wire_run_nested_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_non_clone_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_non_clone_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_non_clone_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_sse');
  late final _wire_run_non_clone_twin_sse = _wire_run_non_clone_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_twin_sse');
  late final _wire_run_opaque_twin_sse = _wire_run_opaque_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_opaque_with_delay_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_with_delay_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_with_delay_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_sse');
  late final _wire_run_opaque_with_delay_twin_sse =
      _wire_run_opaque_with_delay_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_unwrap_rust_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_unwrap_rust_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_sse');
  late final _wire_unwrap_rust_opaque_twin_sse =
      _wire_unwrap_rust_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_array_opaque_enum_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_array_opaque_enum_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_array_opaque_enum_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_sse_moi');
  late final _wire_create_array_opaque_enum_twin_sse_moi =
      _wire_create_array_opaque_enum_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_nested_opaque_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_nested_opaque_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_nested_opaque_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_sse_moi');
  late final _wire_create_nested_opaque_twin_sse_moi =
      _wire_create_nested_opaque_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_opaque_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_opaque_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_opaque_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_opaque_twin_sse_moi');
  late final _wire_create_opaque_twin_sse_moi =
      _wire_create_opaque_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_option_opaque_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_option_opaque_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_option_opaque_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_sse_moi');
  late final _wire_create_option_opaque_twin_sse_moi =
      _wire_create_option_opaque_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_frb_generator_test_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_frb_generator_test_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_frb_generator_test_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_sse_moi');
  late final _wire_frb_generator_test_twin_sse_moi =
      _wire_frb_generator_test_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_array_run_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_run_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_run_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_sse_moi');
  late final _wire_opaque_array_run_twin_sse_moi =
      _wire_opaque_array_run_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_array_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_twin_sse_moi');
  late final _wire_opaque_array_twin_sse_moi =
      _wire_opaque_array_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_vec_run_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_run_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_run_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_sse_moi');
  late final _wire_opaque_vec_run_twin_sse_moi =
      _wire_opaque_vec_run_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_vec_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_sse_moi');
  late final _wire_opaque_vec_twin_sse_moi = _wire_opaque_vec_twin_sse_moiPtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_enum_opaque_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_enum_opaque_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_enum_opaque_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_sse_moi');
  late final _wire_run_enum_opaque_twin_sse_moi =
      _wire_run_enum_opaque_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_nested_opaque_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_nested_opaque_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_nested_opaque_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_sse_moi');
  late final _wire_run_nested_opaque_twin_sse_moi =
      _wire_run_nested_opaque_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_non_clone_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_non_clone_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_non_clone_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_sse_moi');
  late final _wire_run_non_clone_twin_sse_moi =
      _wire_run_non_clone_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_opaque_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_twin_sse_moi');
  late final _wire_run_opaque_twin_sse_moi = _wire_run_opaque_twin_sse_moiPtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_opaque_with_delay_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_with_delay_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_with_delay_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_sse_moi');
  late final _wire_run_opaque_with_delay_twin_sse_moi =
      _wire_run_opaque_with_delay_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_unwrap_rust_opaque_twin_sse_moi(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_unwrap_rust_opaque_twin_sse_moi(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_sse_moi');
  late final _wire_unwrap_rust_opaque_twin_sse_moi =
      _wire_unwrap_rust_opaque_twin_sse_moiPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_create_array_opaque_enum_twin_sync() {
    return _wire_create_array_opaque_enum_twin_sync();
  }

  late final _wire_create_array_opaque_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_sync');
  late final _wire_create_array_opaque_enum_twin_sync =
      _wire_create_array_opaque_enum_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_create_nested_opaque_twin_sync() {
    return _wire_create_nested_opaque_twin_sync();
  }

  late final _wire_create_nested_opaque_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_sync');
  late final _wire_create_nested_opaque_twin_sync =
      _wire_create_nested_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_create_opaque_twin_sync() {
    return _wire_create_opaque_twin_sync();
  }

  late final _wire_create_opaque_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_create_opaque_twin_sync');
  late final _wire_create_opaque_twin_sync = _wire_create_opaque_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_create_option_opaque_twin_sync(
    ffi.Pointer<ffi.UintPtr> opaque,
  ) {
    return _wire_create_option_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_create_option_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.UintPtr>)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_sync');
  late final _wire_create_option_opaque_twin_sync =
      _wire_create_option_opaque_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<ffi.UintPtr>)>();

  WireSyncRust2DartDco wire_frb_generator_test_twin_sync() {
    return _wire_frb_generator_test_twin_sync();
  }

  late final _wire_frb_generator_test_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_sync');
  late final _wire_frb_generator_test_twin_sync =
      _wire_frb_generator_test_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_opaque_array_run_twin_sync(
    ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSync> data,
  ) {
    return _wire_opaque_array_run_twin_sync(
      data,
    );
  }

  late final _wire_opaque_array_run_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSync>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_sync');
  late final _wire_opaque_array_run_twin_sync =
      _wire_opaque_array_run_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSync>)>();

  WireSyncRust2DartDco wire_opaque_array_twin_sync() {
    return _wire_opaque_array_twin_sync();
  }

  late final _wire_opaque_array_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_opaque_array_twin_sync');
  late final _wire_opaque_array_twin_sync = _wire_opaque_array_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_opaque_vec_run_twin_sync(
    ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSync> data,
  ) {
    return _wire_opaque_vec_run_twin_sync(
      data,
    );
  }

  late final _wire_opaque_vec_run_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSync>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_sync');
  late final _wire_opaque_vec_run_twin_sync =
      _wire_opaque_vec_run_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSync>)>();

  WireSyncRust2DartDco wire_opaque_vec_twin_sync() {
    return _wire_opaque_vec_twin_sync();
  }

  late final _wire_opaque_vec_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_sync');
  late final _wire_opaque_vec_twin_sync = _wire_opaque_vec_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_run_enum_opaque_twin_sync(
    ffi.Pointer<wire_cst_enum_opaque_twin_sync> opaque,
  ) {
    return _wire_run_enum_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_run_enum_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_enum_opaque_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_sync');
  late final _wire_run_enum_opaque_twin_sync =
      _wire_run_enum_opaque_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_enum_opaque_twin_sync>)>();

  WireSyncRust2DartDco wire_run_nested_opaque_twin_sync(
    ffi.Pointer<wire_cst_opaque_nested_twin_sync> opaque,
  ) {
    return _wire_run_nested_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_run_nested_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_opaque_nested_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_sync');
  late final _wire_run_nested_opaque_twin_sync =
      _wire_run_nested_opaque_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_opaque_nested_twin_sync>)>();

  WireSyncRust2DartDco wire_run_non_clone_twin_sync(
    int clone,
  ) {
    return _wire_run_non_clone_twin_sync(
      clone,
    );
  }

  late final _wire_run_non_clone_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_sync');
  late final _wire_run_non_clone_twin_sync = _wire_run_non_clone_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_run_opaque_twin_sync(
    int opaque,
  ) {
    return _wire_run_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_run_opaque_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_run_opaque_twin_sync');
  late final _wire_run_opaque_twin_sync = _wire_run_opaque_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_run_opaque_with_delay_twin_sync(
    int opaque,
  ) {
    return _wire_run_opaque_with_delay_twin_sync(
      opaque,
    );
  }

  late final _wire_run_opaque_with_delay_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_sync');
  late final _wire_run_opaque_with_delay_twin_sync =
      _wire_run_opaque_with_delay_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_unwrap_rust_opaque_twin_sync(
    int opaque,
  ) {
    return _wire_unwrap_rust_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_sync');
  late final _wire_unwrap_rust_opaque_twin_sync =
      _wire_unwrap_rust_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_create_array_opaque_enum_twin_sync_moi() {
    return _wire_create_array_opaque_enum_twin_sync_moi();
  }

  late final _wire_create_array_opaque_enum_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_sync_moi');
  late final _wire_create_array_opaque_enum_twin_sync_moi =
      _wire_create_array_opaque_enum_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_create_nested_opaque_twin_sync_moi() {
    return _wire_create_nested_opaque_twin_sync_moi();
  }

  late final _wire_create_nested_opaque_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_sync_moi');
  late final _wire_create_nested_opaque_twin_sync_moi =
      _wire_create_nested_opaque_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_create_opaque_twin_sync_moi() {
    return _wire_create_opaque_twin_sync_moi();
  }

  late final _wire_create_opaque_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_create_opaque_twin_sync_moi');
  late final _wire_create_opaque_twin_sync_moi =
      _wire_create_opaque_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_create_option_opaque_twin_sync_moi(
    ffi.Pointer<ffi.UintPtr> opaque,
  ) {
    return _wire_create_option_opaque_twin_sync_moi(
      opaque,
    );
  }

  late final _wire_create_option_opaque_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.UintPtr>)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_sync_moi');
  late final _wire_create_option_opaque_twin_sync_moi =
      _wire_create_option_opaque_twin_sync_moiPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<ffi.UintPtr>)>();

  WireSyncRust2DartDco wire_frb_generator_test_twin_sync_moi() {
    return _wire_frb_generator_test_twin_sync_moi();
  }

  late final _wire_frb_generator_test_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_sync_moi');
  late final _wire_frb_generator_test_twin_sync_moi =
      _wire_frb_generator_test_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_opaque_array_run_twin_sync_moi(
    ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSyncMoi> data,
  ) {
    return _wire_opaque_array_run_twin_sync_moi(
      data,
    );
  }

  late final _wire_opaque_array_run_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSyncMoi>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_sync_moi');
  late final _wire_opaque_array_run_twin_sync_moi =
      _wire_opaque_array_run_twin_sync_moiPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSyncMoi>)>();

  WireSyncRust2DartDco wire_opaque_array_twin_sync_moi() {
    return _wire_opaque_array_twin_sync_moi();
  }

  late final _wire_opaque_array_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_opaque_array_twin_sync_moi');
  late final _wire_opaque_array_twin_sync_moi =
      _wire_opaque_array_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_opaque_vec_run_twin_sync_moi(
    ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSyncMoi> data,
  ) {
    return _wire_opaque_vec_run_twin_sync_moi(
      data,
    );
  }

  late final _wire_opaque_vec_run_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSyncMoi>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_sync_moi');
  late final _wire_opaque_vec_run_twin_sync_moi =
      _wire_opaque_vec_run_twin_sync_moiPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSyncMoi>)>();

  WireSyncRust2DartDco wire_opaque_vec_twin_sync_moi() {
    return _wire_opaque_vec_twin_sync_moi();
  }

  late final _wire_opaque_vec_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_sync_moi');
  late final _wire_opaque_vec_twin_sync_moi = _wire_opaque_vec_twin_sync_moiPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_run_enum_opaque_twin_sync_moi(
    ffi.Pointer<wire_cst_enum_opaque_twin_sync_moi> opaque,
  ) {
    return _wire_run_enum_opaque_twin_sync_moi(
      opaque,
    );
  }

  late final _wire_run_enum_opaque_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_enum_opaque_twin_sync_moi>)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_sync_moi');
  late final _wire_run_enum_opaque_twin_sync_moi =
      _wire_run_enum_opaque_twin_sync_moiPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_enum_opaque_twin_sync_moi>)>();

  WireSyncRust2DartDco wire_run_nested_opaque_twin_sync_moi(
    ffi.Pointer<wire_cst_opaque_nested_twin_sync_moi> opaque,
  ) {
    return _wire_run_nested_opaque_twin_sync_moi(
      opaque,
    );
  }

  late final _wire_run_nested_opaque_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_opaque_nested_twin_sync_moi>)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_sync_moi');
  late final _wire_run_nested_opaque_twin_sync_moi =
      _wire_run_nested_opaque_twin_sync_moiPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_opaque_nested_twin_sync_moi>)>();

  WireSyncRust2DartDco wire_run_non_clone_twin_sync_moi(
    int clone,
  ) {
    return _wire_run_non_clone_twin_sync_moi(
      clone,
    );
  }

  late final _wire_run_non_clone_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_sync_moi');
  late final _wire_run_non_clone_twin_sync_moi =
      _wire_run_non_clone_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_run_opaque_twin_sync_moi(
    int opaque,
  ) {
    return _wire_run_opaque_twin_sync_moi(
      opaque,
    );
  }

  late final _wire_run_opaque_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_run_opaque_twin_sync_moi');
  late final _wire_run_opaque_twin_sync_moi = _wire_run_opaque_twin_sync_moiPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_run_opaque_with_delay_twin_sync_moi(
    int opaque,
  ) {
    return _wire_run_opaque_with_delay_twin_sync_moi(
      opaque,
    );
  }

  late final _wire_run_opaque_with_delay_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_sync_moi');
  late final _wire_run_opaque_with_delay_twin_sync_moi =
      _wire_run_opaque_with_delay_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_unwrap_rust_opaque_twin_sync_moi(
    int opaque,
  ) {
    return _wire_unwrap_rust_opaque_twin_sync_moi(
      opaque,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_sync_moiPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_sync_moi');
  late final _wire_unwrap_rust_opaque_twin_sync_moi =
      _wire_unwrap_rust_opaque_twin_sync_moiPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartSse wire_create_array_opaque_enum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_array_opaque_enum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_array_opaque_enum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_sync_sse');
  late final _wire_create_array_opaque_enum_twin_sync_sse =
      _wire_create_array_opaque_enum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_create_nested_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_nested_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_nested_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_sync_sse');
  late final _wire_create_nested_opaque_twin_sync_sse =
      _wire_create_nested_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_create_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_opaque_twin_sync_sse');
  late final _wire_create_opaque_twin_sync_sse =
      _wire_create_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_create_option_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_option_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_option_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_sync_sse');
  late final _wire_create_option_opaque_twin_sync_sse =
      _wire_create_option_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_frb_generator_test_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_frb_generator_test_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_frb_generator_test_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_sync_sse');
  late final _wire_frb_generator_test_twin_sync_sse =
      _wire_frb_generator_test_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_opaque_array_run_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_run_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_run_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_sync_sse');
  late final _wire_opaque_array_run_twin_sync_sse =
      _wire_opaque_array_run_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_opaque_array_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_twin_sync_sse');
  late final _wire_opaque_array_twin_sync_sse =
      _wire_opaque_array_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_opaque_vec_run_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_run_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_run_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_sync_sse');
  late final _wire_opaque_vec_run_twin_sync_sse =
      _wire_opaque_vec_run_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_opaque_vec_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_sync_sse');
  late final _wire_opaque_vec_twin_sync_sse =
      _wire_opaque_vec_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_run_enum_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_enum_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_enum_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_sync_sse');
  late final _wire_run_enum_opaque_twin_sync_sse =
      _wire_run_enum_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_run_nested_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_nested_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_nested_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_sync_sse');
  late final _wire_run_nested_opaque_twin_sync_sse =
      _wire_run_nested_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_run_non_clone_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_non_clone_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_non_clone_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_sync_sse');
  late final _wire_run_non_clone_twin_sync_sse =
      _wire_run_non_clone_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_run_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_twin_sync_sse');
  late final _wire_run_opaque_twin_sync_sse =
      _wire_run_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_run_opaque_with_delay_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_with_delay_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_with_delay_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_sync_sse');
  late final _wire_run_opaque_with_delay_twin_sync_sse =
      _wire_run_opaque_with_delay_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_unwrap_rust_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_unwrap_rust_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_sync_sse');
  late final _wire_unwrap_rust_opaque_twin_sync_sse =
      _wire_unwrap_rust_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_create_array_opaque_enum_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_array_opaque_enum_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_array_opaque_enum_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_sync_sse_moi');
  late final _wire_create_array_opaque_enum_twin_sync_sse_moi =
      _wire_create_array_opaque_enum_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_create_nested_opaque_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_nested_opaque_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_nested_opaque_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_sync_sse_moi');
  late final _wire_create_nested_opaque_twin_sync_sse_moi =
      _wire_create_nested_opaque_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_create_opaque_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_opaque_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_opaque_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_opaque_twin_sync_sse_moi');
  late final _wire_create_opaque_twin_sync_sse_moi =
      _wire_create_opaque_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_create_option_opaque_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_option_opaque_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_option_opaque_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_sync_sse_moi');
  late final _wire_create_option_opaque_twin_sync_sse_moi =
      _wire_create_option_opaque_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_frb_generator_test_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_frb_generator_test_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_frb_generator_test_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_sync_sse_moi');
  late final _wire_frb_generator_test_twin_sync_sse_moi =
      _wire_frb_generator_test_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_opaque_array_run_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_run_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_run_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_sync_sse_moi');
  late final _wire_opaque_array_run_twin_sync_sse_moi =
      _wire_opaque_array_run_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_opaque_array_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_twin_sync_sse_moi');
  late final _wire_opaque_array_twin_sync_sse_moi =
      _wire_opaque_array_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_opaque_vec_run_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_run_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_run_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_sync_sse_moi');
  late final _wire_opaque_vec_run_twin_sync_sse_moi =
      _wire_opaque_vec_run_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_opaque_vec_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_sync_sse_moi');
  late final _wire_opaque_vec_twin_sync_sse_moi =
      _wire_opaque_vec_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_run_enum_opaque_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_enum_opaque_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_enum_opaque_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_sync_sse_moi');
  late final _wire_run_enum_opaque_twin_sync_sse_moi =
      _wire_run_enum_opaque_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_run_nested_opaque_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_nested_opaque_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_nested_opaque_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_sync_sse_moi');
  late final _wire_run_nested_opaque_twin_sync_sse_moi =
      _wire_run_nested_opaque_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_run_non_clone_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_non_clone_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_non_clone_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_sync_sse_moi');
  late final _wire_run_non_clone_twin_sync_sse_moi =
      _wire_run_non_clone_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_run_opaque_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_twin_sync_sse_moi');
  late final _wire_run_opaque_twin_sync_sse_moi =
      _wire_run_opaque_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_run_opaque_with_delay_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_with_delay_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_with_delay_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_sync_sse_moi');
  late final _wire_run_opaque_with_delay_twin_sync_sse_moi =
      _wire_run_opaque_with_delay_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_unwrap_rust_opaque_twin_sync_sse_moi(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_unwrap_rust_opaque_twin_sync_sse_moi(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_sync_sse_moiPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_sync_sse_moi');
  late final _wire_unwrap_rust_opaque_twin_sync_sse_moi =
      _wire_unwrap_rust_opaque_twin_sync_sse_moiPtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_simple_adder_twin_rust_async(
    int port_,
    int a,
    int b,
  ) {
    return _wire_simple_adder_twin_rust_async(
      port_,
      a,
      b,
    );
  }

  late final _wire_simple_adder_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_simple_adder_twin_rust_async');
  late final _wire_simple_adder_twin_rust_async =
      _wire_simple_adder_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_simple_adder_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_simple_adder_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_simple_adder_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_simple_adder_twin_rust_async_sse');
  late final _wire_simple_adder_twin_rust_async_sse =
      _wire_simple_adder_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_simple_adder_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_simple_adder_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_simple_adder_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_simple_adder_twin_sse');
  late final _wire_simple_adder_twin_sse = _wire_simple_adder_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_simple_adder_twin_sync(
    int a,
    int b,
  ) {
    return _wire_simple_adder_twin_sync(
      a,
      b,
    );
  }

  late final _wire_simple_adder_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<WireSyncRust2DartDco Function(ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_simple_adder_twin_sync');
  late final _wire_simple_adder_twin_sync = _wire_simple_adder_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartSse wire_simple_adder_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_simple_adder_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_simple_adder_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_simple_adder_twin_sync_sse');
  late final _wire_simple_adder_twin_sync_sse =
      _wire_simple_adder_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_stream_realistic_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_stream_realistic_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_stream_realistic_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_realistic_twin_sse');
  late final _wire_func_stream_realistic_twin_sse =
      _wire_func_stream_realistic_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_stream_return_error_twin_rust_async(
    int port_,
  ) {
    return _wire_func_stream_return_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_func_stream_return_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_error_twin_rust_async');
  late final _wire_func_stream_return_error_twin_rust_async =
      _wire_func_stream_return_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_func_stream_return_panic_twin_rust_async(
    int port_,
  ) {
    return _wire_func_stream_return_panic_twin_rust_async(
      port_,
    );
  }

  late final _wire_func_stream_return_panic_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_panic_twin_rust_async');
  late final _wire_func_stream_return_panic_twin_rust_async =
      _wire_func_stream_return_panic_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_func_stream_sink_arg_position_twin_rust_async(
    int port_,
    int a,
    int b,
  ) {
    return _wire_func_stream_sink_arg_position_twin_rust_async(
      port_,
      a,
      b,
    );
  }

  late final _wire_func_stream_sink_arg_position_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_sink_arg_position_twin_rust_async');
  late final _wire_func_stream_sink_arg_position_twin_rust_async =
      _wire_func_stream_sink_arg_position_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_handle_stream_of_struct_twin_rust_async(
    int port_,
  ) {
    return _wire_handle_stream_of_struct_twin_rust_async(
      port_,
    );
  }

  late final _wire_handle_stream_of_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_of_struct_twin_rust_async');
  late final _wire_handle_stream_of_struct_twin_rust_async =
      _wire_handle_stream_of_struct_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_handle_stream_sink_at_1_twin_rust_async(
    int port_,
    int key,
    int max,
  ) {
    return _wire_handle_stream_sink_at_1_twin_rust_async(
      port_,
      key,
      max,
    );
  }

  late final _wire_handle_stream_sink_at_1_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_1_twin_rust_async');
  late final _wire_handle_stream_sink_at_1_twin_rust_async =
      _wire_handle_stream_sink_at_1_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_handle_stream_sink_at_2_twin_rust_async(
    int port_,
    int key,
    int max,
  ) {
    return _wire_handle_stream_sink_at_2_twin_rust_async(
      port_,
      key,
      max,
    );
  }

  late final _wire_handle_stream_sink_at_2_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_2_twin_rust_async');
  late final _wire_handle_stream_sink_at_2_twin_rust_async =
      _wire_handle_stream_sink_at_2_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_handle_stream_sink_at_3_twin_rust_async(
    int port_,
    int key,
    int max,
  ) {
    return _wire_handle_stream_sink_at_3_twin_rust_async(
      port_,
      key,
      max,
    );
  }

  late final _wire_handle_stream_sink_at_3_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_3_twin_rust_async');
  late final _wire_handle_stream_sink_at_3_twin_rust_async =
      _wire_handle_stream_sink_at_3_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_stream_sink_fixed_sized_primitive_array_twin_rust_async(
    int port_,
  ) {
    return _wire_stream_sink_fixed_sized_primitive_array_twin_rust_async(
      port_,
    );
  }

  late final _wire_stream_sink_fixed_sized_primitive_array_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_stream_sink_fixed_sized_primitive_array_twin_rust_async');
  late final _wire_stream_sink_fixed_sized_primitive_array_twin_rust_async =
      _wire_stream_sink_fixed_sized_primitive_array_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_func_stream_return_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_stream_return_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_stream_return_error_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_error_twin_rust_async_sse');
  late final _wire_func_stream_return_error_twin_rust_async_sse =
      _wire_func_stream_return_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_stream_return_panic_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_stream_return_panic_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_stream_return_panic_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_panic_twin_rust_async_sse');
  late final _wire_func_stream_return_panic_twin_rust_async_sse =
      _wire_func_stream_return_panic_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_stream_sink_arg_position_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_stream_sink_arg_position_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_stream_sink_arg_position_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_sink_arg_position_twin_rust_async_sse');
  late final _wire_func_stream_sink_arg_position_twin_rust_async_sse =
      _wire_func_stream_sink_arg_position_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_of_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_of_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_of_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_of_struct_twin_rust_async_sse');
  late final _wire_handle_stream_of_struct_twin_rust_async_sse =
      _wire_handle_stream_of_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_sink_at_1_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_sink_at_1_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_sink_at_1_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_1_twin_rust_async_sse');
  late final _wire_handle_stream_sink_at_1_twin_rust_async_sse =
      _wire_handle_stream_sink_at_1_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_sink_at_2_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_sink_at_2_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_sink_at_2_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_2_twin_rust_async_sse');
  late final _wire_handle_stream_sink_at_2_twin_rust_async_sse =
      _wire_handle_stream_sink_at_2_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_sink_at_3_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_sink_at_3_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_sink_at_3_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_3_twin_rust_async_sse');
  late final _wire_handle_stream_sink_at_3_twin_rust_async_sse =
      _wire_handle_stream_sink_at_3_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_stream_sink_fixed_sized_primitive_array_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_stream_sink_fixed_sized_primitive_array_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_stream_sink_fixed_sized_primitive_array_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_stream_sink_fixed_sized_primitive_array_twin_rust_async_sse');
  late final _wire_stream_sink_fixed_sized_primitive_array_twin_rust_async_sse =
      _wire_stream_sink_fixed_sized_primitive_array_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_stream_return_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_stream_return_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_stream_return_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_error_twin_sse');
  late final _wire_func_stream_return_error_twin_sse =
      _wire_func_stream_return_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_stream_return_panic_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_stream_return_panic_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_stream_return_panic_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_panic_twin_sse');
  late final _wire_func_stream_return_panic_twin_sse =
      _wire_func_stream_return_panic_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_stream_sink_arg_position_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_stream_sink_arg_position_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_stream_sink_arg_position_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_sink_arg_position_twin_sse');
  late final _wire_func_stream_sink_arg_position_twin_sse =
      _wire_func_stream_sink_arg_position_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_of_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_of_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_of_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_of_struct_twin_sse');
  late final _wire_handle_stream_of_struct_twin_sse =
      _wire_handle_stream_of_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_sink_at_1_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_sink_at_1_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_sink_at_1_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_1_twin_sse');
  late final _wire_handle_stream_sink_at_1_twin_sse =
      _wire_handle_stream_sink_at_1_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_sink_at_2_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_sink_at_2_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_sink_at_2_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_2_twin_sse');
  late final _wire_handle_stream_sink_at_2_twin_sse =
      _wire_handle_stream_sink_at_2_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_sink_at_3_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_sink_at_3_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_sink_at_3_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_3_twin_sse');
  late final _wire_handle_stream_sink_at_3_twin_sse =
      _wire_handle_stream_sink_at_3_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_stream_sink_fixed_sized_primitive_array_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_stream_sink_fixed_sized_primitive_array_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_stream_sink_fixed_sized_primitive_array_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_stream_sink_fixed_sized_primitive_array_twin_sse');
  late final _wire_stream_sink_fixed_sized_primitive_array_twin_sse =
      _wire_stream_sink_fixed_sized_primitive_array_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_struct_with_one_field_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async> arg,
  ) {
    return _wire_func_struct_with_one_field_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_struct_with_one_field_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_struct_with_one_field_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_one_field_twin_rust_async');
  late final _wire_func_struct_with_one_field_twin_rust_async =
      _wire_func_struct_with_one_field_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async>)>();

  void wire_func_struct_with_two_field_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async> arg,
  ) {
    return _wire_func_struct_with_two_field_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_struct_with_two_field_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_struct_with_two_field_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_two_field_twin_rust_async');
  late final _wire_func_struct_with_two_field_twin_rust_async =
      _wire_func_struct_with_two_field_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async>)>();

  void wire_func_struct_with_zero_field_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_struct_with_zero_field_twin_rust_async> arg,
  ) {
    return _wire_func_struct_with_zero_field_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_struct_with_zero_field_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_struct_with_zero_field_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_zero_field_twin_rust_async');
  late final _wire_func_struct_with_zero_field_twin_rust_async =
      _wire_func_struct_with_zero_field_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_struct_with_zero_field_twin_rust_async>)>();

  void wire_func_tuple_struct_with_one_field_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_rust_async> arg,
  ) {
    return _wire_func_tuple_struct_with_one_field_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_tuple_struct_with_one_field_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_tuple_struct_with_one_field_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_one_field_twin_rust_async');
  late final _wire_func_tuple_struct_with_one_field_twin_rust_async =
      _wire_func_tuple_struct_with_one_field_twin_rust_asyncPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_tuple_struct_with_one_field_twin_rust_async>)>();

  void wire_func_tuple_struct_with_two_field_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_rust_async> arg,
  ) {
    return _wire_func_tuple_struct_with_two_field_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_tuple_struct_with_two_field_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_tuple_struct_with_two_field_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_two_field_twin_rust_async');
  late final _wire_func_tuple_struct_with_two_field_twin_rust_async =
      _wire_func_tuple_struct_with_two_field_twin_rust_asyncPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_tuple_struct_with_two_field_twin_rust_async>)>();

  void wire_func_struct_with_one_field_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_one_field_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_one_field_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_one_field_twin_rust_async_sse');
  late final _wire_func_struct_with_one_field_twin_rust_async_sse =
      _wire_func_struct_with_one_field_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_struct_with_two_field_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_two_field_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_two_field_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_two_field_twin_rust_async_sse');
  late final _wire_func_struct_with_two_field_twin_rust_async_sse =
      _wire_func_struct_with_two_field_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_struct_with_zero_field_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_zero_field_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_zero_field_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_zero_field_twin_rust_async_sse');
  late final _wire_func_struct_with_zero_field_twin_rust_async_sse =
      _wire_func_struct_with_zero_field_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_tuple_struct_with_one_field_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_tuple_struct_with_one_field_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_tuple_struct_with_one_field_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_one_field_twin_rust_async_sse');
  late final _wire_func_tuple_struct_with_one_field_twin_rust_async_sse =
      _wire_func_tuple_struct_with_one_field_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_tuple_struct_with_two_field_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_tuple_struct_with_two_field_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_tuple_struct_with_two_field_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_two_field_twin_rust_async_sse');
  late final _wire_func_tuple_struct_with_two_field_twin_rust_async_sse =
      _wire_func_tuple_struct_with_two_field_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_struct_with_one_field_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_one_field_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_one_field_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_one_field_twin_sse');
  late final _wire_func_struct_with_one_field_twin_sse =
      _wire_func_struct_with_one_field_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_struct_with_two_field_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_two_field_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_two_field_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_two_field_twin_sse');
  late final _wire_func_struct_with_two_field_twin_sse =
      _wire_func_struct_with_two_field_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_struct_with_zero_field_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_zero_field_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_zero_field_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_zero_field_twin_sse');
  late final _wire_func_struct_with_zero_field_twin_sse =
      _wire_func_struct_with_zero_field_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_tuple_struct_with_one_field_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_tuple_struct_with_one_field_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_tuple_struct_with_one_field_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_one_field_twin_sse');
  late final _wire_func_tuple_struct_with_one_field_twin_sse =
      _wire_func_tuple_struct_with_one_field_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_tuple_struct_with_two_field_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_tuple_struct_with_two_field_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_tuple_struct_with_two_field_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_two_field_twin_sse');
  late final _wire_func_tuple_struct_with_two_field_twin_sse =
      _wire_func_tuple_struct_with_two_field_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_func_struct_with_one_field_twin_sync(
    ffi.Pointer<wire_cst_struct_with_one_field_twin_sync> arg,
  ) {
    return _wire_func_struct_with_one_field_twin_sync(
      arg,
    );
  }

  late final _wire_func_struct_with_one_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_struct_with_one_field_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_one_field_twin_sync');
  late final _wire_func_struct_with_one_field_twin_sync =
      _wire_func_struct_with_one_field_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_struct_with_one_field_twin_sync>)>();

  WireSyncRust2DartDco wire_func_struct_with_two_field_twin_sync(
    ffi.Pointer<wire_cst_struct_with_two_field_twin_sync> arg,
  ) {
    return _wire_func_struct_with_two_field_twin_sync(
      arg,
    );
  }

  late final _wire_func_struct_with_two_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_struct_with_two_field_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_two_field_twin_sync');
  late final _wire_func_struct_with_two_field_twin_sync =
      _wire_func_struct_with_two_field_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_struct_with_two_field_twin_sync>)>();

  WireSyncRust2DartDco wire_func_struct_with_zero_field_twin_sync(
    ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync> arg,
  ) {
    return _wire_func_struct_with_zero_field_twin_sync(
      arg,
    );
  }

  late final _wire_func_struct_with_zero_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_zero_field_twin_sync');
  late final _wire_func_struct_with_zero_field_twin_sync =
      _wire_func_struct_with_zero_field_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync>)>();

  WireSyncRust2DartDco wire_func_tuple_struct_with_one_field_twin_sync(
    ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync> arg,
  ) {
    return _wire_func_tuple_struct_with_one_field_twin_sync(
      arg,
    );
  }

  late final _wire_func_tuple_struct_with_one_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_tuple_struct_with_one_field_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_one_field_twin_sync');
  late final _wire_func_tuple_struct_with_one_field_twin_sync =
      _wire_func_tuple_struct_with_one_field_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync>)>();

  WireSyncRust2DartDco wire_func_tuple_struct_with_two_field_twin_sync(
    ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync> arg,
  ) {
    return _wire_func_tuple_struct_with_two_field_twin_sync(
      arg,
    );
  }

  late final _wire_func_tuple_struct_with_two_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_tuple_struct_with_two_field_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_two_field_twin_sync');
  late final _wire_func_tuple_struct_with_two_field_twin_sync =
      _wire_func_tuple_struct_with_two_field_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync>)>();

  WireSyncRust2DartSse wire_func_struct_with_one_field_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_one_field_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_one_field_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_one_field_twin_sync_sse');
  late final _wire_func_struct_with_one_field_twin_sync_sse =
      _wire_func_struct_with_one_field_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_struct_with_two_field_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_two_field_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_two_field_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_two_field_twin_sync_sse');
  late final _wire_func_struct_with_two_field_twin_sync_sse =
      _wire_func_struct_with_two_field_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_struct_with_zero_field_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_zero_field_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_zero_field_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_zero_field_twin_sync_sse');
  late final _wire_func_struct_with_zero_field_twin_sync_sse =
      _wire_func_struct_with_zero_field_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_tuple_struct_with_one_field_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_tuple_struct_with_one_field_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_tuple_struct_with_one_field_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_one_field_twin_sync_sse');
  late final _wire_func_tuple_struct_with_one_field_twin_sync_sse =
      _wire_func_tuple_struct_with_one_field_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_tuple_struct_with_two_field_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_tuple_struct_with_two_field_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_tuple_struct_with_two_field_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_two_field_twin_sync_sse');
  late final _wire_func_tuple_struct_with_two_field_twin_sync_sse =
      _wire_func_tuple_struct_with_two_field_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_tuple_2_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_i_32> value,
  ) {
    return _wire_test_tuple_2_twin_rust_async(
      port_,
      value,
    );
  }

  late final _wire_test_tuple_2_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_string_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_2_twin_rust_async');
  late final _wire_test_tuple_2_twin_rust_async =
      _wire_test_tuple_2_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_string_i_32>)>();

  void wire_test_tuple_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_record_string_i_32> value,
  ) {
    return _wire_test_tuple_twin_rust_async(
      port_,
      value,
    );
  }

  late final _wire_test_tuple_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_record_string_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_twin_rust_async');
  late final _wire_test_tuple_twin_rust_async =
      _wire_test_tuple_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_record_string_i_32>)>();

  void wire_test_tuple_2_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_tuple_2_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_tuple_2_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_2_twin_rust_async_sse');
  late final _wire_test_tuple_2_twin_rust_async_sse =
      _wire_test_tuple_2_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_tuple_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_tuple_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_tuple_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_twin_rust_async_sse');
  late final _wire_test_tuple_twin_rust_async_sse =
      _wire_test_tuple_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_tuple_2_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_tuple_2_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_tuple_2_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_2_twin_sse');
  late final _wire_test_tuple_2_twin_sse = _wire_test_tuple_2_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_tuple_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_tuple_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_tuple_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_twin_sse');
  late final _wire_test_tuple_twin_sse = _wire_test_tuple_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_test_tuple_2_twin_sync(
    ffi.Pointer<wire_cst_list_record_string_i_32> value,
  ) {
    return _wire_test_tuple_2_twin_sync(
      value,
    );
  }

  late final _wire_test_tuple_2_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_string_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_2_twin_sync');
  late final _wire_test_tuple_2_twin_sync =
      _wire_test_tuple_2_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_string_i_32>)>();

  WireSyncRust2DartDco wire_test_tuple_twin_sync(
    ffi.Pointer<wire_cst_record_string_i_32> value,
  ) {
    return _wire_test_tuple_twin_sync(
      value,
    );
  }

  late final _wire_test_tuple_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_record_string_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_twin_sync');
  late final _wire_test_tuple_twin_sync =
      _wire_test_tuple_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_record_string_i_32>)>();

  WireSyncRust2DartSse wire_test_tuple_2_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_tuple_2_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_tuple_2_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_2_twin_sync_sse');
  late final _wire_test_tuple_2_twin_sync_sse =
      _wire_test_tuple_2_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_tuple_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_tuple_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_tuple_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_twin_sync_sse');
  late final _wire_test_tuple_twin_sync_sse =
      _wire_test_tuple_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_type_alias_id_twin_rust_async(
    int port_,
    int input,
  ) {
    return _wire_handle_type_alias_id_twin_rust_async(
      port_,
      input,
    );
  }

  late final _wire_handle_type_alias_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_id_twin_rust_async');
  late final _wire_handle_type_alias_id_twin_rust_async =
      _wire_handle_type_alias_id_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_type_alias_model_twin_rust_async(
    int port_,
    int input,
  ) {
    return _wire_handle_type_alias_model_twin_rust_async(
      port_,
      input,
    );
  }

  late final _wire_handle_type_alias_model_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_model_twin_rust_async');
  late final _wire_handle_type_alias_model_twin_rust_async =
      _wire_handle_type_alias_model_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_type_nest_alias_id_twin_rust_async(
    int port_,
    int input,
  ) {
    return _wire_handle_type_nest_alias_id_twin_rust_async(
      port_,
      input,
    );
  }

  late final _wire_handle_type_nest_alias_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_nest_alias_id_twin_rust_async');
  late final _wire_handle_type_nest_alias_id_twin_rust_async =
      _wire_handle_type_nest_alias_id_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_type_alias_id_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_alias_id_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_alias_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_id_twin_rust_async_sse');
  late final _wire_handle_type_alias_id_twin_rust_async_sse =
      _wire_handle_type_alias_id_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_type_alias_model_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_alias_model_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_alias_model_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_model_twin_rust_async_sse');
  late final _wire_handle_type_alias_model_twin_rust_async_sse =
      _wire_handle_type_alias_model_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_type_nest_alias_id_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_nest_alias_id_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_nest_alias_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_nest_alias_id_twin_rust_async_sse');
  late final _wire_handle_type_nest_alias_id_twin_rust_async_sse =
      _wire_handle_type_nest_alias_id_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_type_alias_id_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_alias_id_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_alias_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_id_twin_sse');
  late final _wire_handle_type_alias_id_twin_sse =
      _wire_handle_type_alias_id_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_type_alias_model_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_alias_model_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_alias_model_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_model_twin_sse');
  late final _wire_handle_type_alias_model_twin_sse =
      _wire_handle_type_alias_model_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_type_nest_alias_id_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_nest_alias_id_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_nest_alias_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_nest_alias_id_twin_sse');
  late final _wire_handle_type_nest_alias_id_twin_sse =
      _wire_handle_type_nest_alias_id_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_handle_type_alias_id_twin_sync(
    int input,
  ) {
    return _wire_handle_type_alias_id_twin_sync(
      input,
    );
  }

  late final _wire_handle_type_alias_id_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint64)>>(
          'frbgen_frb_example_pure_dart_wire_handle_type_alias_id_twin_sync');
  late final _wire_handle_type_alias_id_twin_sync =
      _wire_handle_type_alias_id_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_handle_type_alias_model_twin_sync(
    int input,
  ) {
    return _wire_handle_type_alias_model_twin_sync(
      input,
    );
  }

  late final _wire_handle_type_alias_model_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_model_twin_sync');
  late final _wire_handle_type_alias_model_twin_sync =
      _wire_handle_type_alias_model_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_handle_type_nest_alias_id_twin_sync(
    int input,
  ) {
    return _wire_handle_type_nest_alias_id_twin_sync(
      input,
    );
  }

  late final _wire_handle_type_nest_alias_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_nest_alias_id_twin_sync');
  late final _wire_handle_type_nest_alias_id_twin_sync =
      _wire_handle_type_nest_alias_id_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartSse wire_handle_type_alias_id_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_alias_id_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_alias_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_id_twin_sync_sse');
  late final _wire_handle_type_alias_id_twin_sync_sse =
      _wire_handle_type_alias_id_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_type_alias_model_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_alias_model_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_alias_model_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_model_twin_sync_sse');
  late final _wire_handle_type_alias_model_twin_sync_sse =
      _wire_handle_type_alias_model_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_type_nest_alias_id_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_nest_alias_id_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_nest_alias_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_nest_alias_id_twin_sync_sse');
  late final _wire_handle_type_nest_alias_id_twin_sync_sse =
      _wire_handle_type_nest_alias_id_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_nested_uuids_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_feature_uuid_twin_rust_async> ids,
  ) {
    return _wire_handle_nested_uuids_twin_rust_async(
      port_,
      ids,
    );
  }

  late final _wire_handle_nested_uuids_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_feature_uuid_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_uuids_twin_rust_async');
  late final _wire_handle_nested_uuids_twin_rust_async =
      _wire_handle_nested_uuids_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_feature_uuid_twin_rust_async>)>();

  void wire_handle_uuid_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
  ) {
    return _wire_handle_uuid_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_handle_uuid_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_uuid_twin_rust_async');
  late final _wire_handle_uuid_twin_rust_async =
      _wire_handle_uuid_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_handle_uuids_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_Uuid> ids,
  ) {
    return _wire_handle_uuids_twin_rust_async(
      port_,
      ids,
    );
  }

  late final _wire_handle_uuids_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_Uuid>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_uuids_twin_rust_async');
  late final _wire_handle_uuids_twin_rust_async =
      _wire_handle_uuids_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_Uuid>)>();

  void wire_handle_nested_uuids_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_nested_uuids_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_nested_uuids_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_uuids_twin_rust_async_sse');
  late final _wire_handle_nested_uuids_twin_rust_async_sse =
      _wire_handle_nested_uuids_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_uuid_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_uuid_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_uuid_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_uuid_twin_rust_async_sse');
  late final _wire_handle_uuid_twin_rust_async_sse =
      _wire_handle_uuid_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_uuids_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_uuids_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_uuids_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_uuids_twin_rust_async_sse');
  late final _wire_handle_uuids_twin_rust_async_sse =
      _wire_handle_uuids_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_nested_uuids_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_nested_uuids_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_nested_uuids_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_uuids_twin_sse');
  late final _wire_handle_nested_uuids_twin_sse =
      _wire_handle_nested_uuids_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_uuid_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_uuid_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_uuid_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_uuid_twin_sse');
  late final _wire_handle_uuid_twin_sse = _wire_handle_uuid_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_uuids_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_uuids_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_uuids_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_uuids_twin_sse');
  late final _wire_handle_uuids_twin_sse = _wire_handle_uuids_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_handle_nested_uuids_twin_sync(
    ffi.Pointer<wire_cst_feature_uuid_twin_sync> ids,
  ) {
    return _wire_handle_nested_uuids_twin_sync(
      ids,
    );
  }

  late final _wire_handle_nested_uuids_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_feature_uuid_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_uuids_twin_sync');
  late final _wire_handle_nested_uuids_twin_sync =
      _wire_handle_nested_uuids_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_feature_uuid_twin_sync>)>();

  WireSyncRust2DartDco wire_handle_uuid_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
  ) {
    return _wire_handle_uuid_twin_sync(
      id,
    );
  }

  late final _wire_handle_uuid_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_uuid_twin_sync');
  late final _wire_handle_uuid_twin_sync =
      _wire_handle_uuid_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_handle_uuids_twin_sync(
    ffi.Pointer<wire_cst_list_Uuid> ids,
  ) {
    return _wire_handle_uuids_twin_sync(
      ids,
    );
  }

  late final _wire_handle_uuids_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_Uuid>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_uuids_twin_sync');
  late final _wire_handle_uuids_twin_sync =
      _wire_handle_uuids_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_Uuid>)>();

  WireSyncRust2DartSse wire_handle_nested_uuids_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_nested_uuids_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_nested_uuids_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_uuids_twin_sync_sse');
  late final _wire_handle_nested_uuids_twin_sync_sse =
      _wire_handle_nested_uuids_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_uuid_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_uuid_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_uuid_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_uuid_twin_sync_sse');
  late final _wire_handle_uuid_twin_sync_sse =
      _wire_handle_uuid_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_uuids_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_uuids_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_uuids_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_uuids_twin_sync_sse');
  late final _wire_handle_uuids_twin_sync_sse =
      _wire_handle_uuids_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_more_than_just_one_raw_string_struct_twin_normal(
    int port_,
  ) {
    return _wire_test_more_than_just_one_raw_string_struct_twin_normal(
      port_,
    );
  }

  late final _wire_test_more_than_just_one_raw_string_struct_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_more_than_just_one_raw_string_struct_twin_normal');
  late final _wire_test_more_than_just_one_raw_string_struct_twin_normal =
      _wire_test_more_than_just_one_raw_string_struct_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_test_raw_string_item_struct_twin_normal(
    int port_,
  ) {
    return _wire_test_raw_string_item_struct_twin_normal(
      port_,
    );
  }

  late final _wire_test_raw_string_item_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_item_struct_twin_normal');
  late final _wire_test_raw_string_item_struct_twin_normal =
      _wire_test_raw_string_item_struct_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normal(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normal =
      _wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normal(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normal =
      _wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normal(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normal =
      _wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinNormal_instance_method_getter_twin_normal(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinNormal_instance_method_getter_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_instance_method_getter_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_instance_method_getter_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_instance_method_getter_twin_normal =
      _wire_NonCloneSimpleTwinNormal_instance_method_getter_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normal(
    int port_,
    int that,
  ) {
    return _wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normal =
      _wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normal(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normal(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normal =
      _wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_NonCloneSimpleTwinNormal_new_twin_normal(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinNormal_new_twin_normal(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_new_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_new_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_new_twin_normal =
      _wire_NonCloneSimpleTwinNormal_new_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_NonCloneSimpleTwinNormal_new_with_result_twin_normal(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinNormal_new_with_result_twin_normal(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_new_with_result_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_new_with_result_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_new_with_result_twin_normal =
      _wire_NonCloneSimpleTwinNormal_new_with_result_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normal =
      _wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normal =
      _wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normal =
      _wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normal(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normal(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normal =
      _wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_arg_borrow_twin_normal(
    int port_,
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_normal(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_normal');
  late final _wire_rust_auto_opaque_arg_borrow_twin_normal =
      _wire_rust_auto_opaque_arg_borrow_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_arg_mut_borrow_twin_normal(
    int port_,
    int arg,
    int expect,
    int adder,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_normal(
      port_,
      arg,
      expect,
      adder,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_normal');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_normal =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_normalPtr
          .asFunction<void Function(int, int, int, int)>();

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_normal');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_normal =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_arg_own_twin_normal(
    int port_,
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_normal(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_normal');
  late final _wire_rust_auto_opaque_arg_own_twin_normal =
      _wire_rust_auto_opaque_arg_own_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_arg_vec_own_twin_normal(
    int port_,
    ffi.Pointer<
            wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal>
        arg,
    ffi.Pointer<wire_cst_list_prim_i_32_loose> expect,
  ) {
    return _wire_rust_auto_opaque_arg_vec_own_twin_normal(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_vec_own_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal>,
                  ffi.Pointer<wire_cst_list_prim_i_32_loose>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_vec_own_twin_normal');
  late final _wire_rust_auto_opaque_arg_vec_own_twin_normal =
      _wire_rust_auto_opaque_arg_vec_own_twin_normalPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal>,
              ffi.Pointer<wire_cst_list_prim_i_32_loose>)>();

  void wire_rust_auto_opaque_borrow_and_borrow_twin_normal(
    int port_,
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_borrow_and_borrow_twin_normal(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_borrow_twin_normal');
  late final _wire_rust_auto_opaque_borrow_and_borrow_twin_normal =
      _wire_rust_auto_opaque_borrow_and_borrow_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_borrow_and_mut_borrow_twin_normal(
    int port_,
    int borrow,
    int mut_borrow,
  ) {
    return _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_normal(
      port_,
      borrow,
      mut_borrow,
    );
  }

  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_borrow_and_mut_borrow_twin_normal');
  late final _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_normal =
      _wire_rust_auto_opaque_borrow_and_mut_borrow_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_callable_arg_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_normal');
  late final _wire_rust_auto_opaque_callable_arg_twin_normal =
      _wire_rust_auto_opaque_callable_arg_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_callable_return_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_callable_return_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_callable_return_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_normal');
  late final _wire_rust_auto_opaque_callable_return_twin_normal =
      _wire_rust_auto_opaque_callable_return_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_dummy_twin_normal(
    int port_,
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_dummy_twin_normal(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_dummy_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_dummy_twin_normal');
  late final _wire_rust_auto_opaque_dummy_twin_normal =
      _wire_rust_auto_opaque_dummy_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_enum_arg_borrow_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_enum_arg_borrow_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_arg_borrow_twin_normal');
  late final _wire_rust_auto_opaque_enum_arg_borrow_twin_normal =
      _wire_rust_auto_opaque_enum_arg_borrow_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_enum_return_own_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_enum_return_own_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_enum_return_own_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_return_own_twin_normal');
  late final _wire_rust_auto_opaque_enum_return_own_twin_normal =
      _wire_rust_auto_opaque_enum_return_own_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_normal> arg,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_enum_with_good_and_opaque_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_normal');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_normal =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_arg_own_twin_normalPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_enum_with_good_and_opaque_twin_normal>)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_normal');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_normal =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_good_twin_normalPtr
          .asFunction<void Function(int)>();

  void
      wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_normal');
  late final _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_normal =
      _wire_rust_auto_opaque_enum_with_good_and_opaque_return_own_opaque_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_explicit_arg_twin_normal(
    int port_,
    int arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_explicit_arg_twin_normal(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_explicit_arg_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_arg_twin_normal');
  late final _wire_rust_auto_opaque_explicit_arg_twin_normal =
      _wire_rust_auto_opaque_explicit_arg_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_rust_auto_opaque_explicit_return_twin_normal(
    int port_,
    int initial,
  ) {
    return _wire_rust_auto_opaque_explicit_return_twin_normal(
      port_,
      initial,
    );
  }

  late final _wire_rust_auto_opaque_explicit_return_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_return_twin_normal');
  late final _wire_rust_auto_opaque_explicit_return_twin_normal =
      _wire_rust_auto_opaque_explicit_return_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_explicit_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_normal>
        arg,
  ) {
    return _wire_rust_auto_opaque_explicit_struct_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_explicit_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_struct_with_explicit_auto_opaque_field_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_explicit_struct_twin_normal');
  late final _wire_rust_auto_opaque_explicit_struct_twin_normal =
      _wire_rust_auto_opaque_explicit_struct_twin_normalPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_struct_with_explicit_auto_opaque_field_twin_normal>)>();

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_normal(
    int port_,
    int a,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> b,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_normal(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_normal');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_normal =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_normalPtr.asFunction<
          void Function(
              int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_plus_sign_arg_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_normal');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_normal =
      _wire_rust_auto_opaque_plus_sign_arg_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_plus_sign_return_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_return_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_normal');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_normal =
      _wire_rust_auto_opaque_plus_sign_return_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_return_opaque_one_and_two_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_one_and_two_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_one_and_two_twin_normal');
  late final _wire_rust_auto_opaque_return_opaque_one_and_two_twin_normal =
      _wire_rust_auto_opaque_return_opaque_one_and_two_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_return_opaque_two_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_return_opaque_two_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_return_opaque_two_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_opaque_two_twin_normal');
  late final _wire_rust_auto_opaque_return_opaque_two_twin_normal =
      _wire_rust_auto_opaque_return_opaque_two_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_return_own_twin_normal(
    int port_,
    int initial,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_normal(
      port_,
      initial,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_normal');
  late final _wire_rust_auto_opaque_return_own_twin_normal =
      _wire_rust_auto_opaque_return_own_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_rust_auto_opaque_return_vec_own_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_return_vec_own_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_return_vec_own_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_vec_own_twin_normal');
  late final _wire_rust_auto_opaque_return_vec_own_twin_normal =
      _wire_rust_auto_opaque_return_vec_own_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_stream_sink_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_stream_sink_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_stream_sink_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_stream_sink_twin_normal');
  late final _wire_rust_auto_opaque_stream_sink_twin_normal =
      _wire_rust_auto_opaque_stream_sink_twin_normalPtr
          .asFunction<void Function(int)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_normal> arg,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_struct_with_good_and_opaque_field_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normal');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normal =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normalPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_struct_with_good_and_opaque_field_twin_normal>)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normal');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normal =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_normal(
    int port_,
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_normal(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.UintPtr,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_normal');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_normal =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_normalPtr.asFunction<
          void Function(
              int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normal(
    int port_,
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normal(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.UintPtr,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normal');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normal =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normalPtr
          .asFunction<
              void Function(
                  int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_trait_object_arg_own_twin_normal(
    int port_,
    int arg,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_normal(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_normal');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_normal =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_normalPtr.asFunction<
          void Function(
              int, int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_normal');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_normal =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_normal');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_normal =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_two_args_twin_normal(
    int port_,
    int a,
    int b,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_normal(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_normal');
  late final _wire_rust_auto_opaque_two_args_twin_normal =
      _wire_rust_auto_opaque_two_args_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_create_array_opaque_enum_twin_normal(
    int port_,
  ) {
    return _wire_create_array_opaque_enum_twin_normal(
      port_,
    );
  }

  late final _wire_create_array_opaque_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_normal');
  late final _wire_create_array_opaque_enum_twin_normal =
      _wire_create_array_opaque_enum_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_create_nested_opaque_twin_normal(
    int port_,
  ) {
    return _wire_create_nested_opaque_twin_normal(
      port_,
    );
  }

  late final _wire_create_nested_opaque_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_normal');
  late final _wire_create_nested_opaque_twin_normal =
      _wire_create_nested_opaque_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_create_opaque_twin_normal(
    int port_,
  ) {
    return _wire_create_opaque_twin_normal(
      port_,
    );
  }

  late final _wire_create_opaque_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_create_opaque_twin_normal');
  late final _wire_create_opaque_twin_normal =
      _wire_create_opaque_twin_normalPtr.asFunction<void Function(int)>();

  void wire_create_option_opaque_twin_normal(
    int port_,
    ffi.Pointer<ffi.UintPtr> opaque,
  ) {
    return _wire_create_option_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_create_option_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.UintPtr>)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_normal');
  late final _wire_create_option_opaque_twin_normal =
      _wire_create_option_opaque_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.UintPtr>)>();

  void wire_frb_generator_test_twin_normal(
    int port_,
  ) {
    return _wire_frb_generator_test_twin_normal(
      port_,
    );
  }

  late final _wire_frb_generator_test_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_normal');
  late final _wire_frb_generator_test_twin_normal =
      _wire_frb_generator_test_twin_normalPtr.asFunction<void Function(int)>();

  void wire_opaque_array_run_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinNormal> data,
  ) {
    return _wire_opaque_array_run_twin_normal(
      port_,
      data,
    );
  }

  late final _wire_opaque_array_run_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinNormal>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_normal');
  late final _wire_opaque_array_run_twin_normal =
      _wire_opaque_array_run_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinNormal>)>();

  void wire_opaque_array_twin_normal(
    int port_,
  ) {
    return _wire_opaque_array_twin_normal(
      port_,
    );
  }

  late final _wire_opaque_array_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_opaque_array_twin_normal');
  late final _wire_opaque_array_twin_normal =
      _wire_opaque_array_twin_normalPtr.asFunction<void Function(int)>();

  void wire_opaque_vec_run_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinNormal> data,
  ) {
    return _wire_opaque_vec_run_twin_normal(
      port_,
      data,
    );
  }

  late final _wire_opaque_vec_run_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinNormal>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_normal');
  late final _wire_opaque_vec_run_twin_normal =
      _wire_opaque_vec_run_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinNormal>)>();

  void wire_opaque_vec_twin_normal(
    int port_,
  ) {
    return _wire_opaque_vec_twin_normal(
      port_,
    );
  }

  late final _wire_opaque_vec_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_normal');
  late final _wire_opaque_vec_twin_normal =
      _wire_opaque_vec_twin_normalPtr.asFunction<void Function(int)>();

  void wire_run_enum_opaque_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_enum_opaque_twin_normal> opaque,
  ) {
    return _wire_run_enum_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_run_enum_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_enum_opaque_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_normal');
  late final _wire_run_enum_opaque_twin_normal =
      _wire_run_enum_opaque_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_enum_opaque_twin_normal>)>();

  void wire_run_nested_opaque_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_opaque_nested_twin_normal> opaque,
  ) {
    return _wire_run_nested_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_run_nested_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_opaque_nested_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_normal');
  late final _wire_run_nested_opaque_twin_normal =
      _wire_run_nested_opaque_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_opaque_nested_twin_normal>)>();

  void wire_run_non_clone_twin_normal(
    int port_,
    int clone,
  ) {
    return _wire_run_non_clone_twin_normal(
      port_,
      clone,
    );
  }

  late final _wire_run_non_clone_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_normal');
  late final _wire_run_non_clone_twin_normal =
      _wire_run_non_clone_twin_normalPtr.asFunction<void Function(int, int)>();

  void wire_run_opaque_twin_normal(
    int port_,
    int opaque,
  ) {
    return _wire_run_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_run_opaque_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_run_opaque_twin_normal');
  late final _wire_run_opaque_twin_normal =
      _wire_run_opaque_twin_normalPtr.asFunction<void Function(int, int)>();

  void wire_run_opaque_with_delay_twin_normal(
    int port_,
    int opaque,
  ) {
    return _wire_run_opaque_with_delay_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_run_opaque_with_delay_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_normal');
  late final _wire_run_opaque_with_delay_twin_normal =
      _wire_run_opaque_with_delay_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_unwrap_rust_opaque_twin_normal(
    int port_,
    int opaque,
  ) {
    return _wire_unwrap_rust_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_normal');
  late final _wire_unwrap_rust_opaque_twin_normal =
      _wire_unwrap_rust_opaque_twin_normalPtr
          .asFunction<void Function(int, int)>();

  WireSyncRust2DartDco wire_frb_sync_generator_test_twin_normal() {
    return _wire_frb_sync_generator_test_twin_normal();
  }

  late final _wire_frb_sync_generator_test_twin_normalPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_frb_sync_generator_test_twin_normal');
  late final _wire_frb_sync_generator_test_twin_normal =
      _wire_frb_sync_generator_test_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_sync_create_non_clone_twin_normal() {
    return _wire_sync_create_non_clone_twin_normal();
  }

  late final _wire_sync_create_non_clone_twin_normalPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_sync_create_non_clone_twin_normal');
  late final _wire_sync_create_non_clone_twin_normal =
      _wire_sync_create_non_clone_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_sync_create_opaque_twin_normal() {
    return _wire_sync_create_opaque_twin_normal();
  }

  late final _wire_sync_create_opaque_twin_normalPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_sync_create_opaque_twin_normal');
  late final _wire_sync_create_opaque_twin_normal =
      _wire_sync_create_opaque_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_sync_option_rust_opaque_twin_normal() {
    return _wire_sync_option_rust_opaque_twin_normal();
  }

  late final _wire_sync_option_rust_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_sync_option_rust_opaque_twin_normal');
  late final _wire_sync_option_rust_opaque_twin_normal =
      _wire_sync_option_rust_opaque_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  void wire_simple_adder_twin_normal(
    int port_,
    int a,
    int b,
  ) {
    return _wire_simple_adder_twin_normal(
      port_,
      a,
      b,
    );
  }

  late final _wire_simple_adder_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_simple_adder_twin_normal');
  late final _wire_simple_adder_twin_normal = _wire_simple_adder_twin_normalPtr
      .asFunction<void Function(int, int, int)>();

  void wire_func_stream_return_error_twin_normal(
    int port_,
  ) {
    return _wire_func_stream_return_error_twin_normal(
      port_,
    );
  }

  late final _wire_func_stream_return_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_error_twin_normal');
  late final _wire_func_stream_return_error_twin_normal =
      _wire_func_stream_return_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_func_stream_return_panic_twin_normal(
    int port_,
  ) {
    return _wire_func_stream_return_panic_twin_normal(
      port_,
    );
  }

  late final _wire_func_stream_return_panic_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_panic_twin_normal');
  late final _wire_func_stream_return_panic_twin_normal =
      _wire_func_stream_return_panic_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_func_stream_sink_arg_position_twin_normal(
    int port_,
    int a,
    int b,
  ) {
    return _wire_func_stream_sink_arg_position_twin_normal(
      port_,
      a,
      b,
    );
  }

  late final _wire_func_stream_sink_arg_position_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_sink_arg_position_twin_normal');
  late final _wire_func_stream_sink_arg_position_twin_normal =
      _wire_func_stream_sink_arg_position_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_handle_stream_of_struct_twin_normal(
    int port_,
  ) {
    return _wire_handle_stream_of_struct_twin_normal(
      port_,
    );
  }

  late final _wire_handle_stream_of_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_of_struct_twin_normal');
  late final _wire_handle_stream_of_struct_twin_normal =
      _wire_handle_stream_of_struct_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_handle_stream_sink_at_1_twin_normal(
    int port_,
    int key,
    int max,
  ) {
    return _wire_handle_stream_sink_at_1_twin_normal(
      port_,
      key,
      max,
    );
  }

  late final _wire_handle_stream_sink_at_1_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_1_twin_normal');
  late final _wire_handle_stream_sink_at_1_twin_normal =
      _wire_handle_stream_sink_at_1_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_handle_stream_sink_at_2_twin_normal(
    int port_,
    int key,
    int max,
  ) {
    return _wire_handle_stream_sink_at_2_twin_normal(
      port_,
      key,
      max,
    );
  }

  late final _wire_handle_stream_sink_at_2_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_2_twin_normal');
  late final _wire_handle_stream_sink_at_2_twin_normal =
      _wire_handle_stream_sink_at_2_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_handle_stream_sink_at_3_twin_normal(
    int port_,
    int key,
    int max,
  ) {
    return _wire_handle_stream_sink_at_3_twin_normal(
      port_,
      key,
      max,
    );
  }

  late final _wire_handle_stream_sink_at_3_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_3_twin_normal');
  late final _wire_handle_stream_sink_at_3_twin_normal =
      _wire_handle_stream_sink_at_3_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_stream_sink_fixed_sized_primitive_array_twin_normal(
    int port_,
  ) {
    return _wire_stream_sink_fixed_sized_primitive_array_twin_normal(
      port_,
    );
  }

  late final _wire_stream_sink_fixed_sized_primitive_array_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_stream_sink_fixed_sized_primitive_array_twin_normal');
  late final _wire_stream_sink_fixed_sized_primitive_array_twin_normal =
      _wire_stream_sink_fixed_sized_primitive_array_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_func_stream_realistic_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> arg,
  ) {
    return _wire_func_stream_realistic_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_stream_realistic_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_realistic_twin_normal');
  late final _wire_func_stream_realistic_twin_normal =
      _wire_func_stream_realistic_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_func_struct_with_one_field_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_struct_with_one_field_twin_normal> arg,
  ) {
    return _wire_func_struct_with_one_field_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_struct_with_one_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_struct_with_one_field_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_one_field_twin_normal');
  late final _wire_func_struct_with_one_field_twin_normal =
      _wire_func_struct_with_one_field_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_struct_with_one_field_twin_normal>)>();

  void wire_func_struct_with_two_field_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_struct_with_two_field_twin_normal> arg,
  ) {
    return _wire_func_struct_with_two_field_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_struct_with_two_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_struct_with_two_field_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_two_field_twin_normal');
  late final _wire_func_struct_with_two_field_twin_normal =
      _wire_func_struct_with_two_field_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_struct_with_two_field_twin_normal>)>();

  void wire_func_struct_with_zero_field_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_struct_with_zero_field_twin_normal> arg,
  ) {
    return _wire_func_struct_with_zero_field_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_struct_with_zero_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_struct_with_zero_field_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_zero_field_twin_normal');
  late final _wire_func_struct_with_zero_field_twin_normal =
      _wire_func_struct_with_zero_field_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_struct_with_zero_field_twin_normal>)>();

  void wire_func_tuple_struct_with_one_field_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_normal> arg,
  ) {
    return _wire_func_tuple_struct_with_one_field_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_tuple_struct_with_one_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_tuple_struct_with_one_field_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_one_field_twin_normal');
  late final _wire_func_tuple_struct_with_one_field_twin_normal =
      _wire_func_tuple_struct_with_one_field_twin_normalPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_normal>)>();

  void wire_func_tuple_struct_with_two_field_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_normal> arg,
  ) {
    return _wire_func_tuple_struct_with_two_field_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_tuple_struct_with_two_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_tuple_struct_with_two_field_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_two_field_twin_normal');
  late final _wire_func_tuple_struct_with_two_field_twin_normal =
      _wire_func_tuple_struct_with_two_field_twin_normalPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_normal>)>();

  void wire_test_tuple_2_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_i_32> value,
  ) {
    return _wire_test_tuple_2_twin_normal(
      port_,
      value,
    );
  }

  late final _wire_test_tuple_2_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_string_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_2_twin_normal');
  late final _wire_test_tuple_2_twin_normal =
      _wire_test_tuple_2_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_string_i_32>)>();

  void wire_test_tuple_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_record_string_i_32> value,
  ) {
    return _wire_test_tuple_twin_normal(
      port_,
      value,
    );
  }

  late final _wire_test_tuple_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_record_string_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_twin_normal');
  late final _wire_test_tuple_twin_normal =
      _wire_test_tuple_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_record_string_i_32>)>();

  void wire_handle_type_alias_id_twin_normal(
    int port_,
    int input,
  ) {
    return _wire_handle_type_alias_id_twin_normal(
      port_,
      input,
    );
  }

  late final _wire_handle_type_alias_id_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
          'frbgen_frb_example_pure_dart_wire_handle_type_alias_id_twin_normal');
  late final _wire_handle_type_alias_id_twin_normal =
      _wire_handle_type_alias_id_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_type_alias_model_twin_normal(
    int port_,
    int input,
  ) {
    return _wire_handle_type_alias_model_twin_normal(
      port_,
      input,
    );
  }

  late final _wire_handle_type_alias_model_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_model_twin_normal');
  late final _wire_handle_type_alias_model_twin_normal =
      _wire_handle_type_alias_model_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_type_nest_alias_id_twin_normal(
    int port_,
    int input,
  ) {
    return _wire_handle_type_nest_alias_id_twin_normal(
      port_,
      input,
    );
  }

  late final _wire_handle_type_nest_alias_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_nest_alias_id_twin_normal');
  late final _wire_handle_type_nest_alias_id_twin_normal =
      _wire_handle_type_nest_alias_id_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_nested_uuids_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_feature_uuid_twin_normal> ids,
  ) {
    return _wire_handle_nested_uuids_twin_normal(
      port_,
      ids,
    );
  }

  late final _wire_handle_nested_uuids_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_feature_uuid_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_uuids_twin_normal');
  late final _wire_handle_nested_uuids_twin_normal =
      _wire_handle_nested_uuids_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_feature_uuid_twin_normal>)>();

  void wire_handle_uuid_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
  ) {
    return _wire_handle_uuid_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_handle_uuid_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_uuid_twin_normal');
  late final _wire_handle_uuid_twin_normal =
      _wire_handle_uuid_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_handle_uuids_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_Uuid> ids,
  ) {
    return _wire_handle_uuids_twin_normal(
      port_,
      ids,
    );
  }

  late final _wire_handle_uuids_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_Uuid>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_uuids_twin_normal');
  late final _wire_handle_uuids_twin_normal = _wire_handle_uuids_twin_normalPtr
      .asFunction<void Function(int, ffi.Pointer<wire_cst_list_Uuid>)>();

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinMoi =
      _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinMoi =
      _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync');
  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync =
      _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync');
  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsync =
      _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse =
      _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_BoxdynDartDebugTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinMoi =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsync =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueReturnTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoi =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_FrbOpaqueSyncReturnTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinMoi =
      _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinMoi =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_HideDataAnotherTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataAnotherTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataTwinMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinMoi =
      _rust_arc_increment_strong_count_RustOpaque_HideDataTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataTwinMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinMoi =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_HideDataTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsync');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsync =
      _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsync');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsync =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSse =
      _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataTwinSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_HideDataTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_HideDataTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinMoi =
      _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinMoi =
      _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsync');
  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsync =
      _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsync');
  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsync =
      _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse =
      _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinMoi =
      _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinMoi =
      _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsync');
  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsync =
      _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsync');
  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsync =
      _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse =
      _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_NonCloneDataTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinMoi =
      _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinMoi =
      _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsync');
  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsync =
      _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsync');
  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsync =
      _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse =
      _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynFnStringStringSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynHelloTraitTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinMoiSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinNormalSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncMoiSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseMoiSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinRustAsyncSseSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseMoiSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSseSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncMoiSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseMoiSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBoxdynMyTraitTwinSyncSseSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueStructTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockConstructorOpaqueSyncStructTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDroppableTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockEnumWithGoodAndOpaqueWithoutOptionTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleEnumTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueOneTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOpaqueTwoTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleAPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleAPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleAPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleA =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleAPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleBPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleBPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleBPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleB =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructInMiscNoTwinExampleBPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinRustAsyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSseMoiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFilePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFilePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFilePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFile =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStructWithImplBlockInMultiFilePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_i16(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_i16(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_i16Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_i16');
  late final _rust_arc_increment_strong_count_RustOpaque_i16 =
      _rust_arc_increment_strong_count_RustOpaque_i16Ptr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_i16(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_i16(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_i16Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_i16');
  late final _rust_arc_decrement_strong_count_RustOpaque_i16 =
      _rust_arc_decrement_strong_count_RustOpaque_i16Ptr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_i32(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_i32(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_i32Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_i32');
  late final _rust_arc_increment_strong_count_RustOpaque_i32 =
      _rust_arc_increment_strong_count_RustOpaque_i32Ptr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_i32(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_i32(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_i32Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_i32');
  late final _rust_arc_decrement_strong_count_RustOpaque_i32 =
      _rust_arc_decrement_strong_count_RustOpaque_i32Ptr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<wire_cst_application_env> cst_new_box_application_env() {
    return _cst_new_box_application_env();
  }

  late final _cst_new_box_application_envPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_application_env> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_application_env');
  late final _cst_new_box_application_env = _cst_new_box_application_envPtr
      .asFunction<ffi.Pointer<wire_cst_application_env> Function()>();

  ffi.Pointer<ffi.UintPtr>
      cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
    int value,
  ) {
    return _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
      value,
    );
  }

  late final _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoiPtr =
      _lookup<
              ffi
              .NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi');
  late final _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi =
      _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoiPtr
          .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<ffi.UintPtr>
      cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
    int value,
  ) {
    return _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
      value,
    );
  }

  late final _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormalPtr =
      _lookup<
              ffi
              .NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal');
  late final _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal =
      _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormalPtr
          .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<ffi.UintPtr>
      cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
    int value,
  ) {
    return _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
      value,
    );
  }

  late final _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncPtr =
      _lookup<
              ffi
              .NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync');
  late final _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync =
      _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncPtr
          .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<ffi.UintPtr>
      cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
    int value,
  ) {
    return _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
      value,
    );
  }

  late final _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoiPtr =
      _lookup<
              ffi
              .NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi');
  late final _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi =
      _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoiPtr
          .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<ffi.UintPtr>
      cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
    int value,
  ) {
    return _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
      value,
    );
  }

  late final _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncPtr =
      _lookup<
              ffi
              .NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync');
  late final _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync =
      _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncPtr
          .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<ffi.UintPtr>
      cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
    int value,
  ) {
    return _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
      value,
    );
  }

  late final _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoiPtr =
      _lookup<
              ffi
              .NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi');
  late final _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi =
      _cst_new_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoiPtr
          .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<ffi.Int64> cst_new_box_autoadd_Chrono_Duration(
    int value,
  ) {
    return _cst_new_box_autoadd_Chrono_Duration(
      value,
    );
  }

  late final _cst_new_box_autoadd_Chrono_DurationPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int64> Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_Chrono_Duration');
  late final _cst_new_box_autoadd_Chrono_Duration =
      _cst_new_box_autoadd_Chrono_DurationPtr
          .asFunction<ffi.Pointer<ffi.Int64> Function(int)>();

  ffi.Pointer<ffi.Int64> cst_new_box_autoadd_Chrono_Naive(
    int value,
  ) {
    return _cst_new_box_autoadd_Chrono_Naive(
      value,
    );
  }

  late final _cst_new_box_autoadd_Chrono_NaivePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int64> Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_Chrono_Naive');
  late final _cst_new_box_autoadd_Chrono_Naive =
      _cst_new_box_autoadd_Chrono_NaivePtr
          .asFunction<ffi.Pointer<ffi.Int64> Function(int)>();

  ffi.Pointer<ffi.Int64> cst_new_box_autoadd_Chrono_Utc(
    int value,
  ) {
    return _cst_new_box_autoadd_Chrono_Utc(
      value,
    );
  }

  late final _cst_new_box_autoadd_Chrono_UtcPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int64> Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_Chrono_Utc');
  late final _cst_new_box_autoadd_Chrono_Utc =
      _cst_new_box_autoadd_Chrono_UtcPtr
          .asFunction<ffi.Pointer<ffi.Int64> Function(int)>();

  ffi.Pointer<ffi.Pointer<ffi.Void>> cst_new_box_autoadd_DartOpaque(
    ffi.Pointer<ffi.Void> value,
  ) {
    return _cst_new_box_autoadd_DartOpaque(
      value,
    );
  }

  late final _cst_new_box_autoadd_DartOpaquePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Pointer<ffi.Void>> Function(
                  ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_DartOpaque');
  late final _cst_new_box_autoadd_DartOpaque =
      _cst_new_box_autoadd_DartOpaquePtr.asFunction<
          ffi.Pointer<ffi.Pointer<ffi.Void>> Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.UintPtr>
      cst_new_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(
    int value,
  ) {
    return _cst_new_box_autoadd_RustOpaque_HideDataAnotherTwinMoi(
      value,
    );
  }

  late final _cst_new_box_autoadd_RustOpaque_HideDataAnotherTwinMoiPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_RustOpaque_HideDataAnotherTwinMoi');
  late final _cst_new_box_autoadd_RustOpaque_HideDataAnotherTwinMoi =
      _cst_new_box_autoadd_RustOpaque_HideDataAnotherTwinMoiPtr
          .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<ffi.UintPtr>
      cst_new_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
    int value,
  ) {
    return _cst_new_box_autoadd_RustOpaque_HideDataAnotherTwinNormal(
      value,
    );
  }

  late final _cst_new_box_autoadd_RustOpaque_HideDataAnotherTwinNormalPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_RustOpaque_HideDataAnotherTwinNormal');
  late final _cst_new_box_autoadd_RustOpaque_HideDataAnotherTwinNormal =
      _cst_new_box_autoadd_RustOpaque_HideDataAnotherTwinNormalPtr
          .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<ffi.UintPtr> cst_new_box_autoadd_RustOpaque_HideDataTwinMoi(
    int value,
  ) {
    return _cst_new_box_autoadd_RustOpaque_HideDataTwinMoi(
      value,
    );
  }

  late final _cst_new_box_autoadd_RustOpaque_HideDataTwinMoiPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_RustOpaque_HideDataTwinMoi');
  late final _cst_new_box_autoadd_RustOpaque_HideDataTwinMoi =
      _cst_new_box_autoadd_RustOpaque_HideDataTwinMoiPtr
          .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<ffi.UintPtr> cst_new_box_autoadd_RustOpaque_HideDataTwinNormal(
    int value,
  ) {
    return _cst_new_box_autoadd_RustOpaque_HideDataTwinNormal(
      value,
    );
  }

  late final _cst_new_box_autoadd_RustOpaque_HideDataTwinNormalPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_RustOpaque_HideDataTwinNormal');
  late final _cst_new_box_autoadd_RustOpaque_HideDataTwinNormal =
      _cst_new_box_autoadd_RustOpaque_HideDataTwinNormalPtr
          .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<ffi.UintPtr> cst_new_box_autoadd_RustOpaque_HideDataTwinRustAsync(
    int value,
  ) {
    return _cst_new_box_autoadd_RustOpaque_HideDataTwinRustAsync(
      value,
    );
  }

  late final _cst_new_box_autoadd_RustOpaque_HideDataTwinRustAsyncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_RustOpaque_HideDataTwinRustAsync');
  late final _cst_new_box_autoadd_RustOpaque_HideDataTwinRustAsync =
      _cst_new_box_autoadd_RustOpaque_HideDataTwinRustAsyncPtr
          .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<ffi.UintPtr>
      cst_new_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
    int value,
  ) {
    return _cst_new_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi(
      value,
    );
  }

  late final _cst_new_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoiPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi');
  late final _cst_new_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoi =
      _cst_new_box_autoadd_RustOpaque_HideDataTwinRustAsyncMoiPtr
          .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<ffi.UintPtr> cst_new_box_autoadd_RustOpaque_HideDataTwinSync(
    int value,
  ) {
    return _cst_new_box_autoadd_RustOpaque_HideDataTwinSync(
      value,
    );
  }

  late final _cst_new_box_autoadd_RustOpaque_HideDataTwinSyncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_RustOpaque_HideDataTwinSync');
  late final _cst_new_box_autoadd_RustOpaque_HideDataTwinSync =
      _cst_new_box_autoadd_RustOpaque_HideDataTwinSyncPtr
          .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<ffi.UintPtr> cst_new_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
    int value,
  ) {
    return _cst_new_box_autoadd_RustOpaque_HideDataTwinSyncMoi(
      value,
    );
  }

  late final _cst_new_box_autoadd_RustOpaque_HideDataTwinSyncMoiPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_RustOpaque_HideDataTwinSyncMoi');
  late final _cst_new_box_autoadd_RustOpaque_HideDataTwinSyncMoi =
      _cst_new_box_autoadd_RustOpaque_HideDataTwinSyncMoiPtr
          .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<wire_cst_a_twin_normal> cst_new_box_autoadd_a_twin_normal() {
    return _cst_new_box_autoadd_a_twin_normal();
  }

  late final _cst_new_box_autoadd_a_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_a_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_a_twin_normal');
  late final _cst_new_box_autoadd_a_twin_normal =
      _cst_new_box_autoadd_a_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_a_twin_normal> Function()>();

  ffi.Pointer<wire_cst_a_twin_rust_async>
      cst_new_box_autoadd_a_twin_rust_async() {
    return _cst_new_box_autoadd_a_twin_rust_async();
  }

  late final _cst_new_box_autoadd_a_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_a_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_a_twin_rust_async');
  late final _cst_new_box_autoadd_a_twin_rust_async =
      _cst_new_box_autoadd_a_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_a_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_a_twin_sync> cst_new_box_autoadd_a_twin_sync() {
    return _cst_new_box_autoadd_a_twin_sync();
  }

  late final _cst_new_box_autoadd_a_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_a_twin_sync> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_a_twin_sync');
  late final _cst_new_box_autoadd_a_twin_sync =
      _cst_new_box_autoadd_a_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_a_twin_sync> Function()>();

  ffi.Pointer<wire_cst_abc_twin_normal> cst_new_box_autoadd_abc_twin_normal() {
    return _cst_new_box_autoadd_abc_twin_normal();
  }

  late final _cst_new_box_autoadd_abc_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_abc_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_abc_twin_normal');
  late final _cst_new_box_autoadd_abc_twin_normal =
      _cst_new_box_autoadd_abc_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_abc_twin_normal> Function()>();

  ffi.Pointer<wire_cst_abc_twin_rust_async>
      cst_new_box_autoadd_abc_twin_rust_async() {
    return _cst_new_box_autoadd_abc_twin_rust_async();
  }

  late final _cst_new_box_autoadd_abc_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_abc_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_abc_twin_rust_async');
  late final _cst_new_box_autoadd_abc_twin_rust_async =
      _cst_new_box_autoadd_abc_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_abc_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_abc_twin_sync> cst_new_box_autoadd_abc_twin_sync() {
    return _cst_new_box_autoadd_abc_twin_sync();
  }

  late final _cst_new_box_autoadd_abc_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_abc_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_abc_twin_sync');
  late final _cst_new_box_autoadd_abc_twin_sync =
      _cst_new_box_autoadd_abc_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_abc_twin_sync> Function()>();

  ffi.Pointer<wire_cst_application_env> cst_new_box_autoadd_application_env() {
    return _cst_new_box_autoadd_application_env();
  }

  late final _cst_new_box_autoadd_application_envPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_application_env> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_application_env');
  late final _cst_new_box_autoadd_application_env =
      _cst_new_box_autoadd_application_envPtr
          .asFunction<ffi.Pointer<wire_cst_application_env> Function()>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_application_mode(
    int value,
  ) {
    return _cst_new_box_autoadd_application_mode(
      value,
    );
  }

  late final _cst_new_box_autoadd_application_modePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_application_mode');
  late final _cst_new_box_autoadd_application_mode =
      _cst_new_box_autoadd_application_modePtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<wire_cst_application_settings>
      cst_new_box_autoadd_application_settings() {
    return _cst_new_box_autoadd_application_settings();
  }

  late final _cst_new_box_autoadd_application_settingsPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_application_settings> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_application_settings');
  late final _cst_new_box_autoadd_application_settings =
      _cst_new_box_autoadd_application_settingsPtr
          .asFunction<ffi.Pointer<wire_cst_application_settings> Function()>();

  ffi.Pointer<wire_cst_attribute_twin_normal>
      cst_new_box_autoadd_attribute_twin_normal() {
    return _cst_new_box_autoadd_attribute_twin_normal();
  }

  late final _cst_new_box_autoadd_attribute_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_attribute_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_attribute_twin_normal');
  late final _cst_new_box_autoadd_attribute_twin_normal =
      _cst_new_box_autoadd_attribute_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_attribute_twin_normal> Function()>();

  ffi.Pointer<wire_cst_attribute_twin_rust_async>
      cst_new_box_autoadd_attribute_twin_rust_async() {
    return _cst_new_box_autoadd_attribute_twin_rust_async();
  }

  late final _cst_new_box_autoadd_attribute_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_attribute_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_attribute_twin_rust_async');
  late final _cst_new_box_autoadd_attribute_twin_rust_async =
      _cst_new_box_autoadd_attribute_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_attribute_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_attribute_twin_sync>
      cst_new_box_autoadd_attribute_twin_sync() {
    return _cst_new_box_autoadd_attribute_twin_sync();
  }

  late final _cst_new_box_autoadd_attribute_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_attribute_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_attribute_twin_sync');
  late final _cst_new_box_autoadd_attribute_twin_sync =
      _cst_new_box_autoadd_attribute_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_attribute_twin_sync> Function()>();

  ffi.Pointer<wire_cst_b_twin_normal> cst_new_box_autoadd_b_twin_normal() {
    return _cst_new_box_autoadd_b_twin_normal();
  }

  late final _cst_new_box_autoadd_b_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_b_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_b_twin_normal');
  late final _cst_new_box_autoadd_b_twin_normal =
      _cst_new_box_autoadd_b_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_b_twin_normal> Function()>();

  ffi.Pointer<wire_cst_b_twin_rust_async>
      cst_new_box_autoadd_b_twin_rust_async() {
    return _cst_new_box_autoadd_b_twin_rust_async();
  }

  late final _cst_new_box_autoadd_b_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_b_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_b_twin_rust_async');
  late final _cst_new_box_autoadd_b_twin_rust_async =
      _cst_new_box_autoadd_b_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_b_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_b_twin_sync> cst_new_box_autoadd_b_twin_sync() {
    return _cst_new_box_autoadd_b_twin_sync();
  }

  late final _cst_new_box_autoadd_b_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_b_twin_sync> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_b_twin_sync');
  late final _cst_new_box_autoadd_b_twin_sync =
      _cst_new_box_autoadd_b_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_b_twin_sync> Function()>();

  ffi.Pointer<wire_cst_basic_general_enum_twin_normal>
      cst_new_box_autoadd_basic_general_enum_twin_normal() {
    return _cst_new_box_autoadd_basic_general_enum_twin_normal();
  }

  late final _cst_new_box_autoadd_basic_general_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_basic_general_enum_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_basic_general_enum_twin_normal');
  late final _cst_new_box_autoadd_basic_general_enum_twin_normal =
      _cst_new_box_autoadd_basic_general_enum_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_basic_general_enum_twin_normal> Function()>();

  ffi.Pointer<wire_cst_basic_general_enum_twin_rust_async>
      cst_new_box_autoadd_basic_general_enum_twin_rust_async() {
    return _cst_new_box_autoadd_basic_general_enum_twin_rust_async();
  }

  late final _cst_new_box_autoadd_basic_general_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_basic_general_enum_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_basic_general_enum_twin_rust_async');
  late final _cst_new_box_autoadd_basic_general_enum_twin_rust_async =
      _cst_new_box_autoadd_basic_general_enum_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_basic_general_enum_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_basic_general_enum_twin_sync>
      cst_new_box_autoadd_basic_general_enum_twin_sync() {
    return _cst_new_box_autoadd_basic_general_enum_twin_sync();
  }

  late final _cst_new_box_autoadd_basic_general_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_basic_general_enum_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_basic_general_enum_twin_sync');
  late final _cst_new_box_autoadd_basic_general_enum_twin_sync =
      _cst_new_box_autoadd_basic_general_enum_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_basic_general_enum_twin_sync> Function()>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_basic_primitive_enum_twin_normal(
    int value,
  ) {
    return _cst_new_box_autoadd_basic_primitive_enum_twin_normal(
      value,
    );
  }

  late final _cst_new_box_autoadd_basic_primitive_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_basic_primitive_enum_twin_normal');
  late final _cst_new_box_autoadd_basic_primitive_enum_twin_normal =
      _cst_new_box_autoadd_basic_primitive_enum_twin_normalPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32>
      cst_new_box_autoadd_basic_primitive_enum_twin_rust_async(
    int value,
  ) {
    return _cst_new_box_autoadd_basic_primitive_enum_twin_rust_async(
      value,
    );
  }

  late final _cst_new_box_autoadd_basic_primitive_enum_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_basic_primitive_enum_twin_rust_async');
  late final _cst_new_box_autoadd_basic_primitive_enum_twin_rust_async =
      _cst_new_box_autoadd_basic_primitive_enum_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_basic_primitive_enum_twin_sync(
    int value,
  ) {
    return _cst_new_box_autoadd_basic_primitive_enum_twin_sync(
      value,
    );
  }

  late final _cst_new_box_autoadd_basic_primitive_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_basic_primitive_enum_twin_sync');
  late final _cst_new_box_autoadd_basic_primitive_enum_twin_sync =
      _cst_new_box_autoadd_basic_primitive_enum_twin_syncPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<wire_cst_basic_struct_twin_normal>
      cst_new_box_autoadd_basic_struct_twin_normal() {
    return _cst_new_box_autoadd_basic_struct_twin_normal();
  }

  late final _cst_new_box_autoadd_basic_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_basic_struct_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_basic_struct_twin_normal');
  late final _cst_new_box_autoadd_basic_struct_twin_normal =
      _cst_new_box_autoadd_basic_struct_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_basic_struct_twin_normal> Function()>();

  ffi.Pointer<wire_cst_basic_struct_twin_rust_async>
      cst_new_box_autoadd_basic_struct_twin_rust_async() {
    return _cst_new_box_autoadd_basic_struct_twin_rust_async();
  }

  late final _cst_new_box_autoadd_basic_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_basic_struct_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_basic_struct_twin_rust_async');
  late final _cst_new_box_autoadd_basic_struct_twin_rust_async =
      _cst_new_box_autoadd_basic_struct_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_basic_struct_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_basic_struct_twin_sync>
      cst_new_box_autoadd_basic_struct_twin_sync() {
    return _cst_new_box_autoadd_basic_struct_twin_sync();
  }

  late final _cst_new_box_autoadd_basic_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_basic_struct_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_basic_struct_twin_sync');
  late final _cst_new_box_autoadd_basic_struct_twin_sync =
      _cst_new_box_autoadd_basic_struct_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_basic_struct_twin_sync> Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>
      cst_new_box_autoadd_benchmark_binary_tree_twin_normal() {
    return _cst_new_box_autoadd_benchmark_binary_tree_twin_normal();
  }

  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_binary_tree_twin_normal');
  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_normal =
      _cst_new_box_autoadd_benchmark_binary_tree_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal> Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
      cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async() {
    return _cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async();
  }

  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async');
  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async =
      _cst_new_box_autoadd_benchmark_binary_tree_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>
      cst_new_box_autoadd_benchmark_binary_tree_twin_sync() {
    return _cst_new_box_autoadd_benchmark_binary_tree_twin_sync();
  }

  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_binary_tree_twin_sync');
  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_sync =
      _cst_new_box_autoadd_benchmark_binary_tree_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync> Function()>();

  ffi.Pointer<wire_cst_benchmark_blob_twin_normal>
      cst_new_box_autoadd_benchmark_blob_twin_normal() {
    return _cst_new_box_autoadd_benchmark_blob_twin_normal();
  }

  late final _cst_new_box_autoadd_benchmark_blob_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_blob_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_blob_twin_normal');
  late final _cst_new_box_autoadd_benchmark_blob_twin_normal =
      _cst_new_box_autoadd_benchmark_blob_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_blob_twin_normal> Function()>();

  ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async>
      cst_new_box_autoadd_benchmark_blob_twin_rust_async() {
    return _cst_new_box_autoadd_benchmark_blob_twin_rust_async();
  }

  late final _cst_new_box_autoadd_benchmark_blob_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_blob_twin_rust_async');
  late final _cst_new_box_autoadd_benchmark_blob_twin_rust_async =
      _cst_new_box_autoadd_benchmark_blob_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_benchmark_blob_twin_sync>
      cst_new_box_autoadd_benchmark_blob_twin_sync() {
    return _cst_new_box_autoadd_benchmark_blob_twin_sync();
  }

  late final _cst_new_box_autoadd_benchmark_blob_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_blob_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_blob_twin_sync');
  late final _cst_new_box_autoadd_benchmark_blob_twin_sync =
      _cst_new_box_autoadd_benchmark_blob_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_blob_twin_sync> Function()>();

  ffi.Pointer<ffi.Bool> cst_new_box_autoadd_bool(
    bool value,
  ) {
    return _cst_new_box_autoadd_bool(
      value,
    );
  }

  late final _cst_new_box_autoadd_boolPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Bool> Function(ffi.Bool)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_bool');
  late final _cst_new_box_autoadd_bool = _cst_new_box_autoadd_boolPtr
      .asFunction<ffi.Pointer<ffi.Bool> Function(bool)>();

  ffi.Pointer<wire_cst_c_twin_normal> cst_new_box_autoadd_c_twin_normal() {
    return _cst_new_box_autoadd_c_twin_normal();
  }

  late final _cst_new_box_autoadd_c_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_c_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_c_twin_normal');
  late final _cst_new_box_autoadd_c_twin_normal =
      _cst_new_box_autoadd_c_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_c_twin_normal> Function()>();

  ffi.Pointer<wire_cst_c_twin_rust_async>
      cst_new_box_autoadd_c_twin_rust_async() {
    return _cst_new_box_autoadd_c_twin_rust_async();
  }

  late final _cst_new_box_autoadd_c_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_c_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_c_twin_rust_async');
  late final _cst_new_box_autoadd_c_twin_rust_async =
      _cst_new_box_autoadd_c_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_c_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_c_twin_sync> cst_new_box_autoadd_c_twin_sync() {
    return _cst_new_box_autoadd_c_twin_sync();
  }

  late final _cst_new_box_autoadd_c_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_c_twin_sync> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_c_twin_sync');
  late final _cst_new_box_autoadd_c_twin_sync =
      _cst_new_box_autoadd_c_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_c_twin_sync> Function()>();

  ffi.Pointer<wire_cst_concatenate_with_twin_normal>
      cst_new_box_autoadd_concatenate_with_twin_normal() {
    return _cst_new_box_autoadd_concatenate_with_twin_normal();
  }

  late final _cst_new_box_autoadd_concatenate_with_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_concatenate_with_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_concatenate_with_twin_normal');
  late final _cst_new_box_autoadd_concatenate_with_twin_normal =
      _cst_new_box_autoadd_concatenate_with_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_concatenate_with_twin_normal> Function()>();

  ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>
      cst_new_box_autoadd_concatenate_with_twin_rust_async() {
    return _cst_new_box_autoadd_concatenate_with_twin_rust_async();
  }

  late final _cst_new_box_autoadd_concatenate_with_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_concatenate_with_twin_rust_async');
  late final _cst_new_box_autoadd_concatenate_with_twin_rust_async =
      _cst_new_box_autoadd_concatenate_with_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_concatenate_with_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_concatenate_with_twin_sync>
      cst_new_box_autoadd_concatenate_with_twin_sync() {
    return _cst_new_box_autoadd_concatenate_with_twin_sync();
  }

  late final _cst_new_box_autoadd_concatenate_with_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_concatenate_with_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_concatenate_with_twin_sync');
  late final _cst_new_box_autoadd_concatenate_with_twin_sync =
      _cst_new_box_autoadd_concatenate_with_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_concatenate_with_twin_sync> Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_2_twin_normal>
      cst_new_box_autoadd_custom_nested_error_2_twin_normal() {
    return _cst_new_box_autoadd_custom_nested_error_2_twin_normal();
  }

  late final _cst_new_box_autoadd_custom_nested_error_2_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_nested_error_2_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_2_twin_normal');
  late final _cst_new_box_autoadd_custom_nested_error_2_twin_normal =
      _cst_new_box_autoadd_custom_nested_error_2_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_2_twin_normal> Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async>
      cst_new_box_autoadd_custom_nested_error_2_twin_rust_async() {
    return _cst_new_box_autoadd_custom_nested_error_2_twin_rust_async();
  }

  late final _cst_new_box_autoadd_custom_nested_error_2_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_2_twin_rust_async');
  late final _cst_new_box_autoadd_custom_nested_error_2_twin_rust_async =
      _cst_new_box_autoadd_custom_nested_error_2_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync>
      cst_new_box_autoadd_custom_nested_error_2_twin_sync() {
    return _cst_new_box_autoadd_custom_nested_error_2_twin_sync();
  }

  late final _cst_new_box_autoadd_custom_nested_error_2_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_2_twin_sync');
  late final _cst_new_box_autoadd_custom_nested_error_2_twin_sync =
      _cst_new_box_autoadd_custom_nested_error_2_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync> Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_normal>
      cst_new_box_autoadd_custom_nested_error_inner_twin_normal() {
    return _cst_new_box_autoadd_custom_nested_error_inner_twin_normal();
  }

  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_normal>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_inner_twin_normal');
  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_normal =
      _cst_new_box_autoadd_custom_nested_error_inner_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_inner_twin_normal>
              Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_rust_async>
      cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async() {
    return _cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async();
  }

  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_custom_nested_error_inner_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async');
  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async =
      _cst_new_box_autoadd_custom_nested_error_inner_twin_rust_asyncPtr
          .asFunction<
              ffi.Pointer<wire_cst_custom_nested_error_inner_twin_rust_async>
                  Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync>
      cst_new_box_autoadd_custom_nested_error_inner_twin_sync() {
    return _cst_new_box_autoadd_custom_nested_error_inner_twin_sync();
  }

  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_inner_twin_sync');
  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_sync =
      _cst_new_box_autoadd_custom_nested_error_inner_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync>
              Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_normal>
      cst_new_box_autoadd_custom_nested_error_outer_twin_normal() {
    return _cst_new_box_autoadd_custom_nested_error_outer_twin_normal();
  }

  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_normal>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_outer_twin_normal');
  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_normal =
      _cst_new_box_autoadd_custom_nested_error_outer_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_outer_twin_normal>
              Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_rust_async>
      cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async() {
    return _cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async();
  }

  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_custom_nested_error_outer_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async');
  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async =
      _cst_new_box_autoadd_custom_nested_error_outer_twin_rust_asyncPtr
          .asFunction<
              ffi.Pointer<wire_cst_custom_nested_error_outer_twin_rust_async>
                  Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync>
      cst_new_box_autoadd_custom_nested_error_outer_twin_sync() {
    return _cst_new_box_autoadd_custom_nested_error_outer_twin_sync();
  }

  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_outer_twin_sync');
  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_sync =
      _cst_new_box_autoadd_custom_nested_error_outer_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync>
              Function()>();

  ffi.Pointer<wire_cst_custom_struct_error_twin_normal>
      cst_new_box_autoadd_custom_struct_error_twin_normal() {
    return _cst_new_box_autoadd_custom_struct_error_twin_normal();
  }

  late final _cst_new_box_autoadd_custom_struct_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_error_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_error_twin_normal');
  late final _cst_new_box_autoadd_custom_struct_error_twin_normal =
      _cst_new_box_autoadd_custom_struct_error_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_error_twin_normal> Function()>();

  ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async>
      cst_new_box_autoadd_custom_struct_error_twin_rust_async() {
    return _cst_new_box_autoadd_custom_struct_error_twin_rust_async();
  }

  late final _cst_new_box_autoadd_custom_struct_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_error_twin_rust_async');
  late final _cst_new_box_autoadd_custom_struct_error_twin_rust_async =
      _cst_new_box_autoadd_custom_struct_error_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_custom_struct_error_twin_sync>
      cst_new_box_autoadd_custom_struct_error_twin_sync() {
    return _cst_new_box_autoadd_custom_struct_error_twin_sync();
  }

  late final _cst_new_box_autoadd_custom_struct_error_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_error_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_error_twin_sync');
  late final _cst_new_box_autoadd_custom_struct_error_twin_sync =
      _cst_new_box_autoadd_custom_struct_error_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_error_twin_sync> Function()>();

  ffi.Pointer<wire_cst_custom_struct_twin_normal>
      cst_new_box_autoadd_custom_struct_twin_normal() {
    return _cst_new_box_autoadd_custom_struct_twin_normal();
  }

  late final _cst_new_box_autoadd_custom_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_twin_normal');
  late final _cst_new_box_autoadd_custom_struct_twin_normal =
      _cst_new_box_autoadd_custom_struct_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_twin_normal> Function()>();

  ffi.Pointer<wire_cst_custom_struct_twin_rust_async>
      cst_new_box_autoadd_custom_struct_twin_rust_async() {
    return _cst_new_box_autoadd_custom_struct_twin_rust_async();
  }

  late final _cst_new_box_autoadd_custom_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_twin_rust_async');
  late final _cst_new_box_autoadd_custom_struct_twin_rust_async =
      _cst_new_box_autoadd_custom_struct_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_custom_struct_twin_sync>
      cst_new_box_autoadd_custom_struct_twin_sync() {
    return _cst_new_box_autoadd_custom_struct_twin_sync();
  }

  late final _cst_new_box_autoadd_custom_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_twin_sync');
  late final _cst_new_box_autoadd_custom_struct_twin_sync =
      _cst_new_box_autoadd_custom_struct_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_twin_sync> Function()>();

  ffi.Pointer<wire_cst_customized_twin_normal>
      cst_new_box_autoadd_customized_twin_normal() {
    return _cst_new_box_autoadd_customized_twin_normal();
  }

  late final _cst_new_box_autoadd_customized_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_customized_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_customized_twin_normal');
  late final _cst_new_box_autoadd_customized_twin_normal =
      _cst_new_box_autoadd_customized_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_customized_twin_normal> Function()>();

  ffi.Pointer<wire_cst_customized_twin_rust_async>
      cst_new_box_autoadd_customized_twin_rust_async() {
    return _cst_new_box_autoadd_customized_twin_rust_async();
  }

  late final _cst_new_box_autoadd_customized_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_customized_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_customized_twin_rust_async');
  late final _cst_new_box_autoadd_customized_twin_rust_async =
      _cst_new_box_autoadd_customized_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_customized_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_customized_twin_sync>
      cst_new_box_autoadd_customized_twin_sync() {
    return _cst_new_box_autoadd_customized_twin_sync();
  }

  late final _cst_new_box_autoadd_customized_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_customized_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_customized_twin_sync');
  late final _cst_new_box_autoadd_customized_twin_sync =
      _cst_new_box_autoadd_customized_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_customized_twin_sync> Function()>();

  ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal>
      cst_new_box_autoadd_dart_opaque_nested_twin_normal() {
    return _cst_new_box_autoadd_dart_opaque_nested_twin_normal();
  }

  late final _cst_new_box_autoadd_dart_opaque_nested_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_dart_opaque_nested_twin_normal');
  late final _cst_new_box_autoadd_dart_opaque_nested_twin_normal =
      _cst_new_box_autoadd_dart_opaque_nested_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal> Function()>();

  ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async>
      cst_new_box_autoadd_dart_opaque_nested_twin_rust_async() {
    return _cst_new_box_autoadd_dart_opaque_nested_twin_rust_async();
  }

  late final _cst_new_box_autoadd_dart_opaque_nested_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_dart_opaque_nested_twin_rust_async');
  late final _cst_new_box_autoadd_dart_opaque_nested_twin_rust_async =
      _cst_new_box_autoadd_dart_opaque_nested_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync>
      cst_new_box_autoadd_dart_opaque_nested_twin_sync() {
    return _cst_new_box_autoadd_dart_opaque_nested_twin_sync();
  }

  late final _cst_new_box_autoadd_dart_opaque_nested_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_dart_opaque_nested_twin_sync');
  late final _cst_new_box_autoadd_dart_opaque_nested_twin_sync =
      _cst_new_box_autoadd_dart_opaque_nested_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync> Function()>();

  ffi.Pointer<wire_cst_element_twin_normal>
      cst_new_box_autoadd_element_twin_normal() {
    return _cst_new_box_autoadd_element_twin_normal();
  }

  late final _cst_new_box_autoadd_element_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_element_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_element_twin_normal');
  late final _cst_new_box_autoadd_element_twin_normal =
      _cst_new_box_autoadd_element_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_element_twin_normal> Function()>();

  ffi.Pointer<wire_cst_element_twin_rust_async>
      cst_new_box_autoadd_element_twin_rust_async() {
    return _cst_new_box_autoadd_element_twin_rust_async();
  }

  late final _cst_new_box_autoadd_element_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_element_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_element_twin_rust_async');
  late final _cst_new_box_autoadd_element_twin_rust_async =
      _cst_new_box_autoadd_element_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_element_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_element_twin_sync>
      cst_new_box_autoadd_element_twin_sync() {
    return _cst_new_box_autoadd_element_twin_sync();
  }

  late final _cst_new_box_autoadd_element_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_element_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_element_twin_sync');
  late final _cst_new_box_autoadd_element_twin_sync =
      _cst_new_box_autoadd_element_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_element_twin_sync> Function()>();

  ffi.Pointer<wire_cst_empty_twin_normal>
      cst_new_box_autoadd_empty_twin_normal() {
    return _cst_new_box_autoadd_empty_twin_normal();
  }

  late final _cst_new_box_autoadd_empty_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_empty_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_empty_twin_normal');
  late final _cst_new_box_autoadd_empty_twin_normal =
      _cst_new_box_autoadd_empty_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_empty_twin_normal> Function()>();

  ffi.Pointer<wire_cst_empty_twin_rust_async>
      cst_new_box_autoadd_empty_twin_rust_async() {
    return _cst_new_box_autoadd_empty_twin_rust_async();
  }

  late final _cst_new_box_autoadd_empty_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_empty_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_empty_twin_rust_async');
  late final _cst_new_box_autoadd_empty_twin_rust_async =
      _cst_new_box_autoadd_empty_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_empty_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_empty_twin_sync> cst_new_box_autoadd_empty_twin_sync() {
    return _cst_new_box_autoadd_empty_twin_sync();
  }

  late final _cst_new_box_autoadd_empty_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_empty_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_empty_twin_sync');
  late final _cst_new_box_autoadd_empty_twin_sync =
      _cst_new_box_autoadd_empty_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_empty_twin_sync> Function()>();

  ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal>
      cst_new_box_autoadd_enum_dart_opaque_twin_normal() {
    return _cst_new_box_autoadd_enum_dart_opaque_twin_normal();
  }

  late final _cst_new_box_autoadd_enum_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_dart_opaque_twin_normal');
  late final _cst_new_box_autoadd_enum_dart_opaque_twin_normal =
      _cst_new_box_autoadd_enum_dart_opaque_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal> Function()>();

  ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async>
      cst_new_box_autoadd_enum_dart_opaque_twin_rust_async() {
    return _cst_new_box_autoadd_enum_dart_opaque_twin_rust_async();
  }

  late final _cst_new_box_autoadd_enum_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_dart_opaque_twin_rust_async');
  late final _cst_new_box_autoadd_enum_dart_opaque_twin_rust_async =
      _cst_new_box_autoadd_enum_dart_opaque_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync>
      cst_new_box_autoadd_enum_dart_opaque_twin_sync() {
    return _cst_new_box_autoadd_enum_dart_opaque_twin_sync();
  }

  late final _cst_new_box_autoadd_enum_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_dart_opaque_twin_sync');
  late final _cst_new_box_autoadd_enum_dart_opaque_twin_sync =
      _cst_new_box_autoadd_enum_dart_opaque_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync> Function()>();

  ffi.Pointer<wire_cst_enum_opaque_twin_moi>
      cst_new_box_autoadd_enum_opaque_twin_moi() {
    return _cst_new_box_autoadd_enum_opaque_twin_moi();
  }

  late final _cst_new_box_autoadd_enum_opaque_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_opaque_twin_moi> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_opaque_twin_moi');
  late final _cst_new_box_autoadd_enum_opaque_twin_moi =
      _cst_new_box_autoadd_enum_opaque_twin_moiPtr
          .asFunction<ffi.Pointer<wire_cst_enum_opaque_twin_moi> Function()>();

  ffi.Pointer<wire_cst_enum_opaque_twin_normal>
      cst_new_box_autoadd_enum_opaque_twin_normal() {
    return _cst_new_box_autoadd_enum_opaque_twin_normal();
  }

  late final _cst_new_box_autoadd_enum_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_opaque_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_opaque_twin_normal');
  late final _cst_new_box_autoadd_enum_opaque_twin_normal =
      _cst_new_box_autoadd_enum_opaque_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_enum_opaque_twin_normal> Function()>();

  ffi.Pointer<wire_cst_enum_opaque_twin_rust_async>
      cst_new_box_autoadd_enum_opaque_twin_rust_async() {
    return _cst_new_box_autoadd_enum_opaque_twin_rust_async();
  }

  late final _cst_new_box_autoadd_enum_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_opaque_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_opaque_twin_rust_async');
  late final _cst_new_box_autoadd_enum_opaque_twin_rust_async =
      _cst_new_box_autoadd_enum_opaque_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_opaque_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_enum_opaque_twin_rust_async_moi>
      cst_new_box_autoadd_enum_opaque_twin_rust_async_moi() {
    return _cst_new_box_autoadd_enum_opaque_twin_rust_async_moi();
  }

  late final _cst_new_box_autoadd_enum_opaque_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_opaque_twin_rust_async_moi>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_opaque_twin_rust_async_moi');
  late final _cst_new_box_autoadd_enum_opaque_twin_rust_async_moi =
      _cst_new_box_autoadd_enum_opaque_twin_rust_async_moiPtr.asFunction<
          ffi.Pointer<wire_cst_enum_opaque_twin_rust_async_moi> Function()>();

  ffi.Pointer<wire_cst_enum_opaque_twin_sync>
      cst_new_box_autoadd_enum_opaque_twin_sync() {
    return _cst_new_box_autoadd_enum_opaque_twin_sync();
  }

  late final _cst_new_box_autoadd_enum_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_opaque_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_opaque_twin_sync');
  late final _cst_new_box_autoadd_enum_opaque_twin_sync =
      _cst_new_box_autoadd_enum_opaque_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_enum_opaque_twin_sync> Function()>();

  ffi.Pointer<wire_cst_enum_opaque_twin_sync_moi>
      cst_new_box_autoadd_enum_opaque_twin_sync_moi() {
    return _cst_new_box_autoadd_enum_opaque_twin_sync_moi();
  }

  late final _cst_new_box_autoadd_enum_opaque_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_opaque_twin_sync_moi> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_opaque_twin_sync_moi');
  late final _cst_new_box_autoadd_enum_opaque_twin_sync_moi =
      _cst_new_box_autoadd_enum_opaque_twin_sync_moiPtr.asFunction<
          ffi.Pointer<wire_cst_enum_opaque_twin_sync_moi> Function()>();

  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_moi>
      cst_new_box_autoadd_enum_with_good_and_opaque_twin_moi() {
    return _cst_new_box_autoadd_enum_with_good_and_opaque_twin_moi();
  }

  late final _cst_new_box_autoadd_enum_with_good_and_opaque_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_moi>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_good_and_opaque_twin_moi');
  late final _cst_new_box_autoadd_enum_with_good_and_opaque_twin_moi =
      _cst_new_box_autoadd_enum_with_good_and_opaque_twin_moiPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_moi>
              Function()>();

  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_normal>
      cst_new_box_autoadd_enum_with_good_and_opaque_twin_normal() {
    return _cst_new_box_autoadd_enum_with_good_and_opaque_twin_normal();
  }

  late final _cst_new_box_autoadd_enum_with_good_and_opaque_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_normal>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_good_and_opaque_twin_normal');
  late final _cst_new_box_autoadd_enum_with_good_and_opaque_twin_normal =
      _cst_new_box_autoadd_enum_with_good_and_opaque_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_normal>
              Function()>();

  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_rust_async>
      cst_new_box_autoadd_enum_with_good_and_opaque_twin_rust_async() {
    return _cst_new_box_autoadd_enum_with_good_and_opaque_twin_rust_async();
  }

  late final _cst_new_box_autoadd_enum_with_good_and_opaque_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_enum_with_good_and_opaque_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_good_and_opaque_twin_rust_async');
  late final _cst_new_box_autoadd_enum_with_good_and_opaque_twin_rust_async =
      _cst_new_box_autoadd_enum_with_good_and_opaque_twin_rust_asyncPtr
          .asFunction<
              ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_rust_async>
                  Function()>();

  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_rust_async_moi>
      cst_new_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moi() {
    return _cst_new_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moi();
  }

  late final _cst_new_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_enum_with_good_and_opaque_twin_rust_async_moi>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moi');
  late final _cst_new_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moi =
      _cst_new_box_autoadd_enum_with_good_and_opaque_twin_rust_async_moiPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_enum_with_good_and_opaque_twin_rust_async_moi>
                  Function()>();

  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_sync>
      cst_new_box_autoadd_enum_with_good_and_opaque_twin_sync() {
    return _cst_new_box_autoadd_enum_with_good_and_opaque_twin_sync();
  }

  late final _cst_new_box_autoadd_enum_with_good_and_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_good_and_opaque_twin_sync');
  late final _cst_new_box_autoadd_enum_with_good_and_opaque_twin_sync =
      _cst_new_box_autoadd_enum_with_good_and_opaque_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_sync>
              Function()>();

  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_sync_moi>
      cst_new_box_autoadd_enum_with_good_and_opaque_twin_sync_moi() {
    return _cst_new_box_autoadd_enum_with_good_and_opaque_twin_sync_moi();
  }

  late final _cst_new_box_autoadd_enum_with_good_and_opaque_twin_sync_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_sync_moi>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_good_and_opaque_twin_sync_moi');
  late final _cst_new_box_autoadd_enum_with_good_and_opaque_twin_sync_moi =
      _cst_new_box_autoadd_enum_with_good_and_opaque_twin_sync_moiPtr
          .asFunction<
              ffi.Pointer<wire_cst_enum_with_good_and_opaque_twin_sync_moi>
                  Function()>();

  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal>
      cst_new_box_autoadd_enum_with_item_mixed_twin_normal() {
    return _cst_new_box_autoadd_enum_with_item_mixed_twin_normal();
  }

  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_mixed_twin_normal');
  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_normal =
      _cst_new_box_autoadd_enum_with_item_mixed_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal> Function()>();

  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async>
      cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async() {
    return _cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async();
  }

  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async');
  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async =
      _cst_new_box_autoadd_enum_with_item_mixed_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync>
      cst_new_box_autoadd_enum_with_item_mixed_twin_sync() {
    return _cst_new_box_autoadd_enum_with_item_mixed_twin_sync();
  }

  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_mixed_twin_sync');
  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_sync =
      _cst_new_box_autoadd_enum_with_item_mixed_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync> Function()>();

  ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal>
      cst_new_box_autoadd_enum_with_item_struct_twin_normal() {
    return _cst_new_box_autoadd_enum_with_item_struct_twin_normal();
  }

  late final _cst_new_box_autoadd_enum_with_item_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_struct_twin_normal');
  late final _cst_new_box_autoadd_enum_with_item_struct_twin_normal =
      _cst_new_box_autoadd_enum_with_item_struct_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal> Function()>();

  ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async>
      cst_new_box_autoadd_enum_with_item_struct_twin_rust_async() {
    return _cst_new_box_autoadd_enum_with_item_struct_twin_rust_async();
  }

  late final _cst_new_box_autoadd_enum_with_item_struct_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_struct_twin_rust_async');
  late final _cst_new_box_autoadd_enum_with_item_struct_twin_rust_async =
      _cst_new_box_autoadd_enum_with_item_struct_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync>
      cst_new_box_autoadd_enum_with_item_struct_twin_sync() {
    return _cst_new_box_autoadd_enum_with_item_struct_twin_sync();
  }

  late final _cst_new_box_autoadd_enum_with_item_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_struct_twin_sync');
  late final _cst_new_box_autoadd_enum_with_item_struct_twin_sync =
      _cst_new_box_autoadd_enum_with_item_struct_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync> Function()>();

  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal>
      cst_new_box_autoadd_enum_with_item_tuple_twin_normal() {
    return _cst_new_box_autoadd_enum_with_item_tuple_twin_normal();
  }

  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_tuple_twin_normal');
  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_normal =
      _cst_new_box_autoadd_enum_with_item_tuple_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal> Function()>();

  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async>
      cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async() {
    return _cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async();
  }

  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async');
  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async =
      _cst_new_box_autoadd_enum_with_item_tuple_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync>
      cst_new_box_autoadd_enum_with_item_tuple_twin_sync() {
    return _cst_new_box_autoadd_enum_with_item_tuple_twin_sync();
  }

  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_tuple_twin_sync');
  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_sync =
      _cst_new_box_autoadd_enum_with_item_tuple_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync> Function()>();

  ffi.Pointer<wire_cst_event_twin_normal>
      cst_new_box_autoadd_event_twin_normal() {
    return _cst_new_box_autoadd_event_twin_normal();
  }

  late final _cst_new_box_autoadd_event_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_event_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_event_twin_normal');
  late final _cst_new_box_autoadd_event_twin_normal =
      _cst_new_box_autoadd_event_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_event_twin_normal> Function()>();

  ffi.Pointer<wire_cst_event_twin_rust_async>
      cst_new_box_autoadd_event_twin_rust_async() {
    return _cst_new_box_autoadd_event_twin_rust_async();
  }

  late final _cst_new_box_autoadd_event_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_event_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_event_twin_rust_async');
  late final _cst_new_box_autoadd_event_twin_rust_async =
      _cst_new_box_autoadd_event_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_event_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>
      cst_new_box_autoadd_exotic_optionals_twin_normal() {
    return _cst_new_box_autoadd_exotic_optionals_twin_normal();
  }

  late final _cst_new_box_autoadd_exotic_optionals_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_exotic_optionals_twin_normal');
  late final _cst_new_box_autoadd_exotic_optionals_twin_normal =
      _cst_new_box_autoadd_exotic_optionals_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_normal> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
      cst_new_box_autoadd_exotic_optionals_twin_rust_async() {
    return _cst_new_box_autoadd_exotic_optionals_twin_rust_async();
  }

  late final _cst_new_box_autoadd_exotic_optionals_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_exotic_optionals_twin_rust_async');
  late final _cst_new_box_autoadd_exotic_optionals_twin_rust_async =
      _cst_new_box_autoadd_exotic_optionals_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>
      cst_new_box_autoadd_exotic_optionals_twin_sync() {
    return _cst_new_box_autoadd_exotic_optionals_twin_sync();
  }

  late final _cst_new_box_autoadd_exotic_optionals_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_exotic_optionals_twin_sync');
  late final _cst_new_box_autoadd_exotic_optionals_twin_sync =
      _cst_new_box_autoadd_exotic_optionals_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_sync> Function()>();

  ffi.Pointer<ffi.Float> cst_new_box_autoadd_f_32(
    double value,
  ) {
    return _cst_new_box_autoadd_f_32(
      value,
    );
  }

  late final _cst_new_box_autoadd_f_32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Float> Function(ffi.Float)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_f_32');
  late final _cst_new_box_autoadd_f_32 = _cst_new_box_autoadd_f_32Ptr
      .asFunction<ffi.Pointer<ffi.Float> Function(double)>();

  ffi.Pointer<ffi.Double> cst_new_box_autoadd_f_64(
    double value,
  ) {
    return _cst_new_box_autoadd_f_64(
      value,
    );
  }

  late final _cst_new_box_autoadd_f_64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Double> Function(ffi.Double)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_f_64');
  late final _cst_new_box_autoadd_f_64 = _cst_new_box_autoadd_f_64Ptr
      .asFunction<ffi.Pointer<ffi.Double> Function(double)>();

  ffi.Pointer<wire_cst_feature_chrono_twin_normal>
      cst_new_box_autoadd_feature_chrono_twin_normal() {
    return _cst_new_box_autoadd_feature_chrono_twin_normal();
  }

  late final _cst_new_box_autoadd_feature_chrono_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feature_chrono_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feature_chrono_twin_normal');
  late final _cst_new_box_autoadd_feature_chrono_twin_normal =
      _cst_new_box_autoadd_feature_chrono_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_feature_chrono_twin_normal> Function()>();

  ffi.Pointer<wire_cst_feature_chrono_twin_rust_async>
      cst_new_box_autoadd_feature_chrono_twin_rust_async() {
    return _cst_new_box_autoadd_feature_chrono_twin_rust_async();
  }

  late final _cst_new_box_autoadd_feature_chrono_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feature_chrono_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feature_chrono_twin_rust_async');
  late final _cst_new_box_autoadd_feature_chrono_twin_rust_async =
      _cst_new_box_autoadd_feature_chrono_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_feature_chrono_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_feature_chrono_twin_sync>
      cst_new_box_autoadd_feature_chrono_twin_sync() {
    return _cst_new_box_autoadd_feature_chrono_twin_sync();
  }

  late final _cst_new_box_autoadd_feature_chrono_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feature_chrono_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feature_chrono_twin_sync');
  late final _cst_new_box_autoadd_feature_chrono_twin_sync =
      _cst_new_box_autoadd_feature_chrono_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_feature_chrono_twin_sync> Function()>();

  ffi.Pointer<wire_cst_feature_uuid_twin_normal>
      cst_new_box_autoadd_feature_uuid_twin_normal() {
    return _cst_new_box_autoadd_feature_uuid_twin_normal();
  }

  late final _cst_new_box_autoadd_feature_uuid_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feature_uuid_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feature_uuid_twin_normal');
  late final _cst_new_box_autoadd_feature_uuid_twin_normal =
      _cst_new_box_autoadd_feature_uuid_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_feature_uuid_twin_normal> Function()>();

  ffi.Pointer<wire_cst_feature_uuid_twin_rust_async>
      cst_new_box_autoadd_feature_uuid_twin_rust_async() {
    return _cst_new_box_autoadd_feature_uuid_twin_rust_async();
  }

  late final _cst_new_box_autoadd_feature_uuid_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feature_uuid_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feature_uuid_twin_rust_async');
  late final _cst_new_box_autoadd_feature_uuid_twin_rust_async =
      _cst_new_box_autoadd_feature_uuid_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_feature_uuid_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_feature_uuid_twin_sync>
      cst_new_box_autoadd_feature_uuid_twin_sync() {
    return _cst_new_box_autoadd_feature_uuid_twin_sync();
  }

  late final _cst_new_box_autoadd_feature_uuid_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feature_uuid_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feature_uuid_twin_sync');
  late final _cst_new_box_autoadd_feature_uuid_twin_sync =
      _cst_new_box_autoadd_feature_uuid_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_feature_uuid_twin_sync> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_normal>
      cst_new_box_autoadd_feed_id_twin_normal() {
    return _cst_new_box_autoadd_feed_id_twin_normal();
  }

  late final _cst_new_box_autoadd_feed_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feed_id_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feed_id_twin_normal');
  late final _cst_new_box_autoadd_feed_id_twin_normal =
      _cst_new_box_autoadd_feed_id_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_feed_id_twin_normal> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_rust_async>
      cst_new_box_autoadd_feed_id_twin_rust_async() {
    return _cst_new_box_autoadd_feed_id_twin_rust_async();
  }

  late final _cst_new_box_autoadd_feed_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feed_id_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feed_id_twin_rust_async');
  late final _cst_new_box_autoadd_feed_id_twin_rust_async =
      _cst_new_box_autoadd_feed_id_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_feed_id_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_sync>
      cst_new_box_autoadd_feed_id_twin_sync() {
    return _cst_new_box_autoadd_feed_id_twin_sync();
  }

  late final _cst_new_box_autoadd_feed_id_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_feed_id_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feed_id_twin_sync');
  late final _cst_new_box_autoadd_feed_id_twin_sync =
      _cst_new_box_autoadd_feed_id_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_feed_id_twin_sync> Function()>();

  ffi.Pointer<ffi.Int16> cst_new_box_autoadd_i_16(
    int value,
  ) {
    return _cst_new_box_autoadd_i_16(
      value,
    );
  }

  late final _cst_new_box_autoadd_i_16Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int16> Function(ffi.Int16)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_i_16');
  late final _cst_new_box_autoadd_i_16 = _cst_new_box_autoadd_i_16Ptr
      .asFunction<ffi.Pointer<ffi.Int16> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_i_32(
    int value,
  ) {
    return _cst_new_box_autoadd_i_32(
      value,
    );
  }

  late final _cst_new_box_autoadd_i_32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_i_32');
  late final _cst_new_box_autoadd_i_32 = _cst_new_box_autoadd_i_32Ptr
      .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int64> cst_new_box_autoadd_i_64(
    int value,
  ) {
    return _cst_new_box_autoadd_i_64(
      value,
    );
  }

  late final _cst_new_box_autoadd_i_64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int64> Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_i_64');
  late final _cst_new_box_autoadd_i_64 = _cst_new_box_autoadd_i_64Ptr
      .asFunction<ffi.Pointer<ffi.Int64> Function(int)>();

  ffi.Pointer<ffi.Int8> cst_new_box_autoadd_i_8(
    int value,
  ) {
    return _cst_new_box_autoadd_i_8(
      value,
    );
  }

  late final _cst_new_box_autoadd_i_8Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int8> Function(ffi.Int8)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_i_8');
  late final _cst_new_box_autoadd_i_8 = _cst_new_box_autoadd_i_8Ptr
      .asFunction<ffi.Pointer<ffi.Int8> Function(int)>();

  ffi.Pointer<ffi.IntPtr> cst_new_box_autoadd_isize(
    int value,
  ) {
    return _cst_new_box_autoadd_isize(
      value,
    );
  }

  late final _cst_new_box_autoadd_isizePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.IntPtr> Function(ffi.IntPtr)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_isize');
  late final _cst_new_box_autoadd_isize = _cst_new_box_autoadd_isizePtr
      .asFunction<ffi.Pointer<ffi.IntPtr> Function(int)>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_normal>
      cst_new_box_autoadd_kitchen_sink_twin_normal() {
    return _cst_new_box_autoadd_kitchen_sink_twin_normal();
  }

  late final _cst_new_box_autoadd_kitchen_sink_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_kitchen_sink_twin_normal');
  late final _cst_new_box_autoadd_kitchen_sink_twin_normal =
      _cst_new_box_autoadd_kitchen_sink_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_normal> Function()>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async>
      cst_new_box_autoadd_kitchen_sink_twin_rust_async() {
    return _cst_new_box_autoadd_kitchen_sink_twin_rust_async();
  }

  late final _cst_new_box_autoadd_kitchen_sink_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_kitchen_sink_twin_rust_async');
  late final _cst_new_box_autoadd_kitchen_sink_twin_rust_async =
      _cst_new_box_autoadd_kitchen_sink_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_sync>
      cst_new_box_autoadd_kitchen_sink_twin_sync() {
    return _cst_new_box_autoadd_kitchen_sink_twin_sync();
  }

  late final _cst_new_box_autoadd_kitchen_sink_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_kitchen_sink_twin_sync');
  late final _cst_new_box_autoadd_kitchen_sink_twin_sync =
      _cst_new_box_autoadd_kitchen_sink_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_sync> Function()>();

  ffi.Pointer<wire_cst_list_of_nested_raw_string_mirrored>
      cst_new_box_autoadd_list_of_nested_raw_string_mirrored() {
    return _cst_new_box_autoadd_list_of_nested_raw_string_mirrored();
  }

  late final _cst_new_box_autoadd_list_of_nested_raw_string_mirroredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_of_nested_raw_string_mirrored>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_list_of_nested_raw_string_mirrored');
  late final _cst_new_box_autoadd_list_of_nested_raw_string_mirrored =
      _cst_new_box_autoadd_list_of_nested_raw_string_mirroredPtr.asFunction<
          ffi.Pointer<wire_cst_list_of_nested_raw_string_mirrored>
              Function()>();

  ffi.Pointer<wire_cst_macro_struct> cst_new_box_autoadd_macro_struct() {
    return _cst_new_box_autoadd_macro_struct();
  }

  late final _cst_new_box_autoadd_macro_structPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_macro_struct> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_macro_struct');
  late final _cst_new_box_autoadd_macro_struct =
      _cst_new_box_autoadd_macro_structPtr
          .asFunction<ffi.Pointer<wire_cst_macro_struct> Function()>();

  ffi.Pointer<wire_cst_measure_twin_normal>
      cst_new_box_autoadd_measure_twin_normal() {
    return _cst_new_box_autoadd_measure_twin_normal();
  }

  late final _cst_new_box_autoadd_measure_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_measure_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_measure_twin_normal');
  late final _cst_new_box_autoadd_measure_twin_normal =
      _cst_new_box_autoadd_measure_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_measure_twin_normal> Function()>();

  ffi.Pointer<wire_cst_measure_twin_rust_async>
      cst_new_box_autoadd_measure_twin_rust_async() {
    return _cst_new_box_autoadd_measure_twin_rust_async();
  }

  late final _cst_new_box_autoadd_measure_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_measure_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_measure_twin_rust_async');
  late final _cst_new_box_autoadd_measure_twin_rust_async =
      _cst_new_box_autoadd_measure_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_measure_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_measure_twin_sync>
      cst_new_box_autoadd_measure_twin_sync() {
    return _cst_new_box_autoadd_measure_twin_sync();
  }

  late final _cst_new_box_autoadd_measure_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_measure_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_measure_twin_sync');
  late final _cst_new_box_autoadd_measure_twin_sync =
      _cst_new_box_autoadd_measure_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_measure_twin_sync> Function()>();

  ffi.Pointer<wire_cst_message_id_twin_normal>
      cst_new_box_autoadd_message_id_twin_normal() {
    return _cst_new_box_autoadd_message_id_twin_normal();
  }

  late final _cst_new_box_autoadd_message_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_message_id_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_message_id_twin_normal');
  late final _cst_new_box_autoadd_message_id_twin_normal =
      _cst_new_box_autoadd_message_id_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_message_id_twin_normal> Function()>();

  ffi.Pointer<wire_cst_message_id_twin_rust_async>
      cst_new_box_autoadd_message_id_twin_rust_async() {
    return _cst_new_box_autoadd_message_id_twin_rust_async();
  }

  late final _cst_new_box_autoadd_message_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_message_id_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_message_id_twin_rust_async');
  late final _cst_new_box_autoadd_message_id_twin_rust_async =
      _cst_new_box_autoadd_message_id_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_message_id_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_message_id_twin_sync>
      cst_new_box_autoadd_message_id_twin_sync() {
    return _cst_new_box_autoadd_message_id_twin_sync();
  }

  late final _cst_new_box_autoadd_message_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_message_id_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_message_id_twin_sync');
  late final _cst_new_box_autoadd_message_id_twin_sync =
      _cst_new_box_autoadd_message_id_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_message_id_twin_sync> Function()>();

  ffi.Pointer<wire_cst_my_callable_twin_normal>
      cst_new_box_autoadd_my_callable_twin_normal() {
    return _cst_new_box_autoadd_my_callable_twin_normal();
  }

  late final _cst_new_box_autoadd_my_callable_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_callable_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_callable_twin_normal');
  late final _cst_new_box_autoadd_my_callable_twin_normal =
      _cst_new_box_autoadd_my_callable_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_my_callable_twin_normal> Function()>();

  ffi.Pointer<wire_cst_my_callable_twin_rust_async>
      cst_new_box_autoadd_my_callable_twin_rust_async() {
    return _cst_new_box_autoadd_my_callable_twin_rust_async();
  }

  late final _cst_new_box_autoadd_my_callable_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_callable_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_callable_twin_rust_async');
  late final _cst_new_box_autoadd_my_callable_twin_rust_async =
      _cst_new_box_autoadd_my_callable_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_my_callable_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_my_callable_twin_sync>
      cst_new_box_autoadd_my_callable_twin_sync() {
    return _cst_new_box_autoadd_my_callable_twin_sync();
  }

  late final _cst_new_box_autoadd_my_callable_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_callable_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_callable_twin_sync');
  late final _cst_new_box_autoadd_my_callable_twin_sync =
      _cst_new_box_autoadd_my_callable_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_my_callable_twin_sync> Function()>();

  ffi.Pointer<wire_cst_my_nested_struct_twin_normal>
      cst_new_box_autoadd_my_nested_struct_twin_normal() {
    return _cst_new_box_autoadd_my_nested_struct_twin_normal();
  }

  late final _cst_new_box_autoadd_my_nested_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_nested_struct_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_nested_struct_twin_normal');
  late final _cst_new_box_autoadd_my_nested_struct_twin_normal =
      _cst_new_box_autoadd_my_nested_struct_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_my_nested_struct_twin_normal> Function()>();

  ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async>
      cst_new_box_autoadd_my_nested_struct_twin_rust_async() {
    return _cst_new_box_autoadd_my_nested_struct_twin_rust_async();
  }

  late final _cst_new_box_autoadd_my_nested_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_nested_struct_twin_rust_async');
  late final _cst_new_box_autoadd_my_nested_struct_twin_rust_async =
      _cst_new_box_autoadd_my_nested_struct_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_my_nested_struct_twin_sync>
      cst_new_box_autoadd_my_nested_struct_twin_sync() {
    return _cst_new_box_autoadd_my_nested_struct_twin_sync();
  }

  late final _cst_new_box_autoadd_my_nested_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_nested_struct_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_nested_struct_twin_sync');
  late final _cst_new_box_autoadd_my_nested_struct_twin_sync =
      _cst_new_box_autoadd_my_nested_struct_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_my_nested_struct_twin_sync> Function()>();

  ffi.Pointer<wire_cst_my_size> cst_new_box_autoadd_my_size() {
    return _cst_new_box_autoadd_my_size();
  }

  late final _cst_new_box_autoadd_my_sizePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_my_size> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_size');
  late final _cst_new_box_autoadd_my_size = _cst_new_box_autoadd_my_sizePtr
      .asFunction<ffi.Pointer<wire_cst_my_size> Function()>();

  ffi.Pointer<wire_cst_my_struct> cst_new_box_autoadd_my_struct() {
    return _cst_new_box_autoadd_my_struct();
  }

  late final _cst_new_box_autoadd_my_structPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_my_struct> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_struct');
  late final _cst_new_box_autoadd_my_struct = _cst_new_box_autoadd_my_structPtr
      .asFunction<ffi.Pointer<wire_cst_my_struct> Function()>();

  ffi.Pointer<wire_cst_my_tree_node_twin_normal>
      cst_new_box_autoadd_my_tree_node_twin_normal() {
    return _cst_new_box_autoadd_my_tree_node_twin_normal();
  }

  late final _cst_new_box_autoadd_my_tree_node_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_tree_node_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_tree_node_twin_normal');
  late final _cst_new_box_autoadd_my_tree_node_twin_normal =
      _cst_new_box_autoadd_my_tree_node_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_my_tree_node_twin_normal> Function()>();

  ffi.Pointer<wire_cst_my_tree_node_twin_rust_async>
      cst_new_box_autoadd_my_tree_node_twin_rust_async() {
    return _cst_new_box_autoadd_my_tree_node_twin_rust_async();
  }

  late final _cst_new_box_autoadd_my_tree_node_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_tree_node_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_tree_node_twin_rust_async');
  late final _cst_new_box_autoadd_my_tree_node_twin_rust_async =
      _cst_new_box_autoadd_my_tree_node_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_my_tree_node_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_my_tree_node_twin_sync>
      cst_new_box_autoadd_my_tree_node_twin_sync() {
    return _cst_new_box_autoadd_my_tree_node_twin_sync();
  }

  late final _cst_new_box_autoadd_my_tree_node_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_tree_node_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_tree_node_twin_sync');
  late final _cst_new_box_autoadd_my_tree_node_twin_sync =
      _cst_new_box_autoadd_my_tree_node_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_my_tree_node_twin_sync> Function()>();

  ffi.Pointer<wire_cst_nested_raw_string_mirrored>
      cst_new_box_autoadd_nested_raw_string_mirrored() {
    return _cst_new_box_autoadd_nested_raw_string_mirrored();
  }

  late final _cst_new_box_autoadd_nested_raw_string_mirroredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_nested_raw_string_mirrored> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_nested_raw_string_mirrored');
  late final _cst_new_box_autoadd_nested_raw_string_mirrored =
      _cst_new_box_autoadd_nested_raw_string_mirroredPtr.asFunction<
          ffi.Pointer<wire_cst_nested_raw_string_mirrored> Function()>();

  ffi.Pointer<wire_cst_new_type_int_twin_normal>
      cst_new_box_autoadd_new_type_int_twin_normal() {
    return _cst_new_box_autoadd_new_type_int_twin_normal();
  }

  late final _cst_new_box_autoadd_new_type_int_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_new_type_int_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_new_type_int_twin_normal');
  late final _cst_new_box_autoadd_new_type_int_twin_normal =
      _cst_new_box_autoadd_new_type_int_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_new_type_int_twin_normal> Function()>();

  ffi.Pointer<wire_cst_new_type_int_twin_rust_async>
      cst_new_box_autoadd_new_type_int_twin_rust_async() {
    return _cst_new_box_autoadd_new_type_int_twin_rust_async();
  }

  late final _cst_new_box_autoadd_new_type_int_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_new_type_int_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_new_type_int_twin_rust_async');
  late final _cst_new_box_autoadd_new_type_int_twin_rust_async =
      _cst_new_box_autoadd_new_type_int_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_new_type_int_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_new_type_int_twin_sync>
      cst_new_box_autoadd_new_type_int_twin_sync() {
    return _cst_new_box_autoadd_new_type_int_twin_sync();
  }

  late final _cst_new_box_autoadd_new_type_int_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_new_type_int_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_new_type_int_twin_sync');
  late final _cst_new_box_autoadd_new_type_int_twin_sync =
      _cst_new_box_autoadd_new_type_int_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_new_type_int_twin_sync> Function()>();

  ffi.Pointer<wire_cst_note_twin_normal>
      cst_new_box_autoadd_note_twin_normal() {
    return _cst_new_box_autoadd_note_twin_normal();
  }

  late final _cst_new_box_autoadd_note_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_note_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_note_twin_normal');
  late final _cst_new_box_autoadd_note_twin_normal =
      _cst_new_box_autoadd_note_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_note_twin_normal> Function()>();

  ffi.Pointer<wire_cst_note_twin_rust_async>
      cst_new_box_autoadd_note_twin_rust_async() {
    return _cst_new_box_autoadd_note_twin_rust_async();
  }

  late final _cst_new_box_autoadd_note_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_note_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_note_twin_rust_async');
  late final _cst_new_box_autoadd_note_twin_rust_async =
      _cst_new_box_autoadd_note_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_note_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_note_twin_sync> cst_new_box_autoadd_note_twin_sync() {
    return _cst_new_box_autoadd_note_twin_sync();
  }

  late final _cst_new_box_autoadd_note_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_note_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_note_twin_sync');
  late final _cst_new_box_autoadd_note_twin_sync =
      _cst_new_box_autoadd_note_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_note_twin_sync> Function()>();

  ffi.Pointer<wire_cst_numbers> cst_new_box_autoadd_numbers() {
    return _cst_new_box_autoadd_numbers();
  }

  late final _cst_new_box_autoadd_numbersPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_numbers> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_numbers');
  late final _cst_new_box_autoadd_numbers = _cst_new_box_autoadd_numbersPtr
      .asFunction<ffi.Pointer<wire_cst_numbers> Function()>();

  ffi.Pointer<wire_cst_opaque_nested_twin_moi>
      cst_new_box_autoadd_opaque_nested_twin_moi() {
    return _cst_new_box_autoadd_opaque_nested_twin_moi();
  }

  late final _cst_new_box_autoadd_opaque_nested_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opaque_nested_twin_moi> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opaque_nested_twin_moi');
  late final _cst_new_box_autoadd_opaque_nested_twin_moi =
      _cst_new_box_autoadd_opaque_nested_twin_moiPtr.asFunction<
          ffi.Pointer<wire_cst_opaque_nested_twin_moi> Function()>();

  ffi.Pointer<wire_cst_opaque_nested_twin_normal>
      cst_new_box_autoadd_opaque_nested_twin_normal() {
    return _cst_new_box_autoadd_opaque_nested_twin_normal();
  }

  late final _cst_new_box_autoadd_opaque_nested_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opaque_nested_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opaque_nested_twin_normal');
  late final _cst_new_box_autoadd_opaque_nested_twin_normal =
      _cst_new_box_autoadd_opaque_nested_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_opaque_nested_twin_normal> Function()>();

  ffi.Pointer<wire_cst_opaque_nested_twin_rust_async>
      cst_new_box_autoadd_opaque_nested_twin_rust_async() {
    return _cst_new_box_autoadd_opaque_nested_twin_rust_async();
  }

  late final _cst_new_box_autoadd_opaque_nested_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opaque_nested_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opaque_nested_twin_rust_async');
  late final _cst_new_box_autoadd_opaque_nested_twin_rust_async =
      _cst_new_box_autoadd_opaque_nested_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_opaque_nested_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_opaque_nested_twin_rust_async_moi>
      cst_new_box_autoadd_opaque_nested_twin_rust_async_moi() {
    return _cst_new_box_autoadd_opaque_nested_twin_rust_async_moi();
  }

  late final _cst_new_box_autoadd_opaque_nested_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opaque_nested_twin_rust_async_moi>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opaque_nested_twin_rust_async_moi');
  late final _cst_new_box_autoadd_opaque_nested_twin_rust_async_moi =
      _cst_new_box_autoadd_opaque_nested_twin_rust_async_moiPtr.asFunction<
          ffi.Pointer<wire_cst_opaque_nested_twin_rust_async_moi> Function()>();

  ffi.Pointer<wire_cst_opaque_nested_twin_sync>
      cst_new_box_autoadd_opaque_nested_twin_sync() {
    return _cst_new_box_autoadd_opaque_nested_twin_sync();
  }

  late final _cst_new_box_autoadd_opaque_nested_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opaque_nested_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opaque_nested_twin_sync');
  late final _cst_new_box_autoadd_opaque_nested_twin_sync =
      _cst_new_box_autoadd_opaque_nested_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_opaque_nested_twin_sync> Function()>();

  ffi.Pointer<wire_cst_opaque_nested_twin_sync_moi>
      cst_new_box_autoadd_opaque_nested_twin_sync_moi() {
    return _cst_new_box_autoadd_opaque_nested_twin_sync_moi();
  }

  late final _cst_new_box_autoadd_opaque_nested_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opaque_nested_twin_sync_moi> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opaque_nested_twin_sync_moi');
  late final _cst_new_box_autoadd_opaque_nested_twin_sync_moi =
      _cst_new_box_autoadd_opaque_nested_twin_sync_moiPtr.asFunction<
          ffi.Pointer<wire_cst_opaque_nested_twin_sync_moi> Function()>();

  ffi.Pointer<wire_cst_opt_vecs_twin_normal>
      cst_new_box_autoadd_opt_vecs_twin_normal() {
    return _cst_new_box_autoadd_opt_vecs_twin_normal();
  }

  late final _cst_new_box_autoadd_opt_vecs_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opt_vecs_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opt_vecs_twin_normal');
  late final _cst_new_box_autoadd_opt_vecs_twin_normal =
      _cst_new_box_autoadd_opt_vecs_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_opt_vecs_twin_normal> Function()>();

  ffi.Pointer<wire_cst_opt_vecs_twin_rust_async>
      cst_new_box_autoadd_opt_vecs_twin_rust_async() {
    return _cst_new_box_autoadd_opt_vecs_twin_rust_async();
  }

  late final _cst_new_box_autoadd_opt_vecs_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opt_vecs_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opt_vecs_twin_rust_async');
  late final _cst_new_box_autoadd_opt_vecs_twin_rust_async =
      _cst_new_box_autoadd_opt_vecs_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_opt_vecs_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_opt_vecs_twin_sync>
      cst_new_box_autoadd_opt_vecs_twin_sync() {
    return _cst_new_box_autoadd_opt_vecs_twin_sync();
  }

  late final _cst_new_box_autoadd_opt_vecs_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_opt_vecs_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opt_vecs_twin_sync');
  late final _cst_new_box_autoadd_opt_vecs_twin_sync =
      _cst_new_box_autoadd_opt_vecs_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_opt_vecs_twin_sync> Function()>();

  ffi.Pointer<wire_cst_raw_string_mirrored>
      cst_new_box_autoadd_raw_string_mirrored() {
    return _cst_new_box_autoadd_raw_string_mirrored();
  }

  late final _cst_new_box_autoadd_raw_string_mirroredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_raw_string_mirrored> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_raw_string_mirrored');
  late final _cst_new_box_autoadd_raw_string_mirrored =
      _cst_new_box_autoadd_raw_string_mirroredPtr
          .asFunction<ffi.Pointer<wire_cst_raw_string_mirrored> Function()>();

  ffi.Pointer<wire_cst_record_string_i_32>
      cst_new_box_autoadd_record_string_i_32() {
    return _cst_new_box_autoadd_record_string_i_32();
  }

  late final _cst_new_box_autoadd_record_string_i_32Ptr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_record_string_i_32> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_record_string_i_32');
  late final _cst_new_box_autoadd_record_string_i_32 =
      _cst_new_box_autoadd_record_string_i_32Ptr
          .asFunction<ffi.Pointer<wire_cst_record_string_i_32> Function()>();

  ffi.Pointer<wire_cst_sequences> cst_new_box_autoadd_sequences() {
    return _cst_new_box_autoadd_sequences();
  }

  late final _cst_new_box_autoadd_sequencesPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_sequences> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_sequences');
  late final _cst_new_box_autoadd_sequences = _cst_new_box_autoadd_sequencesPtr
      .asFunction<ffi.Pointer<wire_cst_sequences> Function()>();

  ffi.Pointer<wire_cst_simple_struct_twin_normal>
      cst_new_box_autoadd_simple_struct_twin_normal() {
    return _cst_new_box_autoadd_simple_struct_twin_normal();
  }

  late final _cst_new_box_autoadd_simple_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_simple_struct_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_simple_struct_twin_normal');
  late final _cst_new_box_autoadd_simple_struct_twin_normal =
      _cst_new_box_autoadd_simple_struct_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_simple_struct_twin_normal> Function()>();

  ffi.Pointer<wire_cst_simple_struct_twin_rust_async>
      cst_new_box_autoadd_simple_struct_twin_rust_async() {
    return _cst_new_box_autoadd_simple_struct_twin_rust_async();
  }

  late final _cst_new_box_autoadd_simple_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_simple_struct_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_simple_struct_twin_rust_async');
  late final _cst_new_box_autoadd_simple_struct_twin_rust_async =
      _cst_new_box_autoadd_simple_struct_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_simple_struct_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_simple_struct_twin_sync>
      cst_new_box_autoadd_simple_struct_twin_sync() {
    return _cst_new_box_autoadd_simple_struct_twin_sync();
  }

  late final _cst_new_box_autoadd_simple_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_simple_struct_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_simple_struct_twin_sync');
  late final _cst_new_box_autoadd_simple_struct_twin_sync =
      _cst_new_box_autoadd_simple_struct_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_simple_struct_twin_sync> Function()>();

  ffi.Pointer<wire_cst_some_struct_twin_normal>
      cst_new_box_autoadd_some_struct_twin_normal() {
    return _cst_new_box_autoadd_some_struct_twin_normal();
  }

  late final _cst_new_box_autoadd_some_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_some_struct_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_some_struct_twin_normal');
  late final _cst_new_box_autoadd_some_struct_twin_normal =
      _cst_new_box_autoadd_some_struct_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_some_struct_twin_normal> Function()>();

  ffi.Pointer<wire_cst_some_struct_twin_rust_async>
      cst_new_box_autoadd_some_struct_twin_rust_async() {
    return _cst_new_box_autoadd_some_struct_twin_rust_async();
  }

  late final _cst_new_box_autoadd_some_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_some_struct_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_some_struct_twin_rust_async');
  late final _cst_new_box_autoadd_some_struct_twin_rust_async =
      _cst_new_box_autoadd_some_struct_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_some_struct_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_some_struct_twin_sync>
      cst_new_box_autoadd_some_struct_twin_sync() {
    return _cst_new_box_autoadd_some_struct_twin_sync();
  }

  late final _cst_new_box_autoadd_some_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_some_struct_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_some_struct_twin_sync');
  late final _cst_new_box_autoadd_some_struct_twin_sync =
      _cst_new_box_autoadd_some_struct_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_some_struct_twin_sync> Function()>();

  ffi.Pointer<wire_cst_struct_in_lower_level>
      cst_new_box_autoadd_struct_in_lower_level() {
    return _cst_new_box_autoadd_struct_in_lower_level();
  }

  late final _cst_new_box_autoadd_struct_in_lower_levelPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_in_lower_level> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_in_lower_level');
  late final _cst_new_box_autoadd_struct_in_lower_level =
      _cst_new_box_autoadd_struct_in_lower_levelPtr
          .asFunction<ffi.Pointer<wire_cst_struct_in_lower_level> Function()>();

  ffi.Pointer<wire_cst_struct_with_comments_twin_normal>
      cst_new_box_autoadd_struct_with_comments_twin_normal() {
    return _cst_new_box_autoadd_struct_with_comments_twin_normal();
  }

  late final _cst_new_box_autoadd_struct_with_comments_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_comments_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_comments_twin_normal');
  late final _cst_new_box_autoadd_struct_with_comments_twin_normal =
      _cst_new_box_autoadd_struct_with_comments_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_comments_twin_normal> Function()>();

  ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async>
      cst_new_box_autoadd_struct_with_comments_twin_rust_async() {
    return _cst_new_box_autoadd_struct_with_comments_twin_rust_async();
  }

  late final _cst_new_box_autoadd_struct_with_comments_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_comments_twin_rust_async');
  late final _cst_new_box_autoadd_struct_with_comments_twin_rust_async =
      _cst_new_box_autoadd_struct_with_comments_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_struct_with_comments_twin_sync>
      cst_new_box_autoadd_struct_with_comments_twin_sync() {
    return _cst_new_box_autoadd_struct_with_comments_twin_sync();
  }

  late final _cst_new_box_autoadd_struct_with_comments_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_comments_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_comments_twin_sync');
  late final _cst_new_box_autoadd_struct_with_comments_twin_sync =
      _cst_new_box_autoadd_struct_with_comments_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_comments_twin_sync> Function()>();

  ffi.Pointer<wire_cst_struct_with_enum_twin_normal>
      cst_new_box_autoadd_struct_with_enum_twin_normal() {
    return _cst_new_box_autoadd_struct_with_enum_twin_normal();
  }

  late final _cst_new_box_autoadd_struct_with_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_enum_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_enum_twin_normal');
  late final _cst_new_box_autoadd_struct_with_enum_twin_normal =
      _cst_new_box_autoadd_struct_with_enum_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_enum_twin_normal> Function()>();

  ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async>
      cst_new_box_autoadd_struct_with_enum_twin_rust_async() {
    return _cst_new_box_autoadd_struct_with_enum_twin_rust_async();
  }

  late final _cst_new_box_autoadd_struct_with_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_enum_twin_rust_async');
  late final _cst_new_box_autoadd_struct_with_enum_twin_rust_async =
      _cst_new_box_autoadd_struct_with_enum_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_struct_with_enum_twin_sync>
      cst_new_box_autoadd_struct_with_enum_twin_sync() {
    return _cst_new_box_autoadd_struct_with_enum_twin_sync();
  }

  late final _cst_new_box_autoadd_struct_with_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_enum_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_enum_twin_sync');
  late final _cst_new_box_autoadd_struct_with_enum_twin_sync =
      _cst_new_box_autoadd_struct_with_enum_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_enum_twin_sync> Function()>();

  ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_moi>
      cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moi() {
    return _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moi();
  }

  late final _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_struct_with_explicit_auto_opaque_field_twin_moi>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moi');
  late final _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moi =
      _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_moiPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_struct_with_explicit_auto_opaque_field_twin_moi>
                  Function()>();

  ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_normal>
      cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normal() {
    return _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normal();
  }

  late final _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_struct_with_explicit_auto_opaque_field_twin_normal>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normal');
  late final _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normal =
      _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_normalPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_struct_with_explicit_auto_opaque_field_twin_normal>
                  Function()>();

  ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async>
      cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async() {
    return _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async();
  }

  late final _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async');
  late final _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async =
      _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_asyncPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async>
                  Function()>();

  ffi.Pointer<
          wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async_moi>
      cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moi() {
    return _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moi();
  }

  late final _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async_moi>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moi');
  late final _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moi =
      _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_rust_async_moiPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async_moi>
                  Function()>();

  ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_sync>
      cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync() {
    return _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync();
  }

  late final _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_struct_with_explicit_auto_opaque_field_twin_sync>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync');
  late final _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync =
      _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_syncPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_struct_with_explicit_auto_opaque_field_twin_sync>
                  Function()>();

  ffi.Pointer<wire_cst_struct_with_explicit_auto_opaque_field_twin_sync_moi>
      cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moi() {
    return _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moi();
  }

  late final _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_struct_with_explicit_auto_opaque_field_twin_sync_moi>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moi');
  late final _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moi =
      _cst_new_box_autoadd_struct_with_explicit_auto_opaque_field_twin_sync_moiPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_struct_with_explicit_auto_opaque_field_twin_sync_moi>
                  Function()>();

  ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_moi>
      cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_moi() {
    return _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_moi();
  }

  late final _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_struct_with_good_and_opaque_field_twin_moi>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_moi');
  late final _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_moi =
      _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_moiPtr
          .asFunction<
              ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_moi>
                  Function()>();

  ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_normal>
      cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_normal() {
    return _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_normal();
  }

  late final _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_struct_with_good_and_opaque_field_twin_normal>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_normal');
  late final _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_normal =
      _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_normalPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_struct_with_good_and_opaque_field_twin_normal>
                  Function()>();

  ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_rust_async>
      cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async() {
    return _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async();
  }

  late final _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_struct_with_good_and_opaque_field_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async');
  late final _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async =
      _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_rust_asyncPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_struct_with_good_and_opaque_field_twin_rust_async>
                  Function()>();

  ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_rust_async_moi>
      cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moi() {
    return _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moi();
  }

  late final _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_struct_with_good_and_opaque_field_twin_rust_async_moi>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moi');
  late final _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moi =
      _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_rust_async_moiPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_struct_with_good_and_opaque_field_twin_rust_async_moi>
                  Function()>();

  ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_sync>
      cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_sync() {
    return _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_sync();
  }

  late final _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_struct_with_good_and_opaque_field_twin_sync>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_sync');
  late final _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_sync =
      _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_syncPtr
          .asFunction<
              ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_sync>
                  Function()>();

  ffi.Pointer<wire_cst_struct_with_good_and_opaque_field_twin_sync_moi>
      cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moi() {
    return _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moi();
  }

  late final _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_struct_with_good_and_opaque_field_twin_sync_moi>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moi');
  late final _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moi =
      _cst_new_box_autoadd_struct_with_good_and_opaque_field_twin_sync_moiPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_struct_with_good_and_opaque_field_twin_sync_moi>
                  Function()>();

  ffi.Pointer<wire_cst_struct_with_one_field_twin_normal>
      cst_new_box_autoadd_struct_with_one_field_twin_normal() {
    return _cst_new_box_autoadd_struct_with_one_field_twin_normal();
  }

  late final _cst_new_box_autoadd_struct_with_one_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_one_field_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_one_field_twin_normal');
  late final _cst_new_box_autoadd_struct_with_one_field_twin_normal =
      _cst_new_box_autoadd_struct_with_one_field_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_one_field_twin_normal> Function()>();

  ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async>
      cst_new_box_autoadd_struct_with_one_field_twin_rust_async() {
    return _cst_new_box_autoadd_struct_with_one_field_twin_rust_async();
  }

  late final _cst_new_box_autoadd_struct_with_one_field_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_one_field_twin_rust_async');
  late final _cst_new_box_autoadd_struct_with_one_field_twin_rust_async =
      _cst_new_box_autoadd_struct_with_one_field_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_struct_with_one_field_twin_sync>
      cst_new_box_autoadd_struct_with_one_field_twin_sync() {
    return _cst_new_box_autoadd_struct_with_one_field_twin_sync();
  }

  late final _cst_new_box_autoadd_struct_with_one_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_one_field_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_one_field_twin_sync');
  late final _cst_new_box_autoadd_struct_with_one_field_twin_sync =
      _cst_new_box_autoadd_struct_with_one_field_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_one_field_twin_sync> Function()>();

  ffi.Pointer<wire_cst_struct_with_two_field_twin_normal>
      cst_new_box_autoadd_struct_with_two_field_twin_normal() {
    return _cst_new_box_autoadd_struct_with_two_field_twin_normal();
  }

  late final _cst_new_box_autoadd_struct_with_two_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_two_field_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_two_field_twin_normal');
  late final _cst_new_box_autoadd_struct_with_two_field_twin_normal =
      _cst_new_box_autoadd_struct_with_two_field_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_two_field_twin_normal> Function()>();

  ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async>
      cst_new_box_autoadd_struct_with_two_field_twin_rust_async() {
    return _cst_new_box_autoadd_struct_with_two_field_twin_rust_async();
  }

  late final _cst_new_box_autoadd_struct_with_two_field_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_two_field_twin_rust_async');
  late final _cst_new_box_autoadd_struct_with_two_field_twin_rust_async =
      _cst_new_box_autoadd_struct_with_two_field_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_struct_with_two_field_twin_sync>
      cst_new_box_autoadd_struct_with_two_field_twin_sync() {
    return _cst_new_box_autoadd_struct_with_two_field_twin_sync();
  }

  late final _cst_new_box_autoadd_struct_with_two_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_two_field_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_two_field_twin_sync');
  late final _cst_new_box_autoadd_struct_with_two_field_twin_sync =
      _cst_new_box_autoadd_struct_with_two_field_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_two_field_twin_sync> Function()>();

  ffi.Pointer<wire_cst_struct_with_zero_field_twin_normal>
      cst_new_box_autoadd_struct_with_zero_field_twin_normal() {
    return _cst_new_box_autoadd_struct_with_zero_field_twin_normal();
  }

  late final _cst_new_box_autoadd_struct_with_zero_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_zero_field_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_zero_field_twin_normal');
  late final _cst_new_box_autoadd_struct_with_zero_field_twin_normal =
      _cst_new_box_autoadd_struct_with_zero_field_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_zero_field_twin_normal>
              Function()>();

  ffi.Pointer<wire_cst_struct_with_zero_field_twin_rust_async>
      cst_new_box_autoadd_struct_with_zero_field_twin_rust_async() {
    return _cst_new_box_autoadd_struct_with_zero_field_twin_rust_async();
  }

  late final _cst_new_box_autoadd_struct_with_zero_field_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_struct_with_zero_field_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_zero_field_twin_rust_async');
  late final _cst_new_box_autoadd_struct_with_zero_field_twin_rust_async =
      _cst_new_box_autoadd_struct_with_zero_field_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_zero_field_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync>
      cst_new_box_autoadd_struct_with_zero_field_twin_sync() {
    return _cst_new_box_autoadd_struct_with_zero_field_twin_sync();
  }

  late final _cst_new_box_autoadd_struct_with_zero_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_zero_field_twin_sync');
  late final _cst_new_box_autoadd_struct_with_zero_field_twin_sync =
      _cst_new_box_autoadd_struct_with_zero_field_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync> Function()>();

  ffi.Pointer<wire_cst_sum_with_twin_normal>
      cst_new_box_autoadd_sum_with_twin_normal() {
    return _cst_new_box_autoadd_sum_with_twin_normal();
  }

  late final _cst_new_box_autoadd_sum_with_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_sum_with_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_sum_with_twin_normal');
  late final _cst_new_box_autoadd_sum_with_twin_normal =
      _cst_new_box_autoadd_sum_with_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_sum_with_twin_normal> Function()>();

  ffi.Pointer<wire_cst_sum_with_twin_rust_async>
      cst_new_box_autoadd_sum_with_twin_rust_async() {
    return _cst_new_box_autoadd_sum_with_twin_rust_async();
  }

  late final _cst_new_box_autoadd_sum_with_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_sum_with_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_sum_with_twin_rust_async');
  late final _cst_new_box_autoadd_sum_with_twin_rust_async =
      _cst_new_box_autoadd_sum_with_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_sum_with_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_sum_with_twin_sync>
      cst_new_box_autoadd_sum_with_twin_sync() {
    return _cst_new_box_autoadd_sum_with_twin_sync();
  }

  late final _cst_new_box_autoadd_sum_with_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_sum_with_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_sum_with_twin_sync');
  late final _cst_new_box_autoadd_sum_with_twin_sync =
      _cst_new_box_autoadd_sum_with_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_sum_with_twin_sync> Function()>();

  ffi.Pointer<wire_cst_test_id_twin_normal>
      cst_new_box_autoadd_test_id_twin_normal() {
    return _cst_new_box_autoadd_test_id_twin_normal();
  }

  late final _cst_new_box_autoadd_test_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_test_id_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_test_id_twin_normal');
  late final _cst_new_box_autoadd_test_id_twin_normal =
      _cst_new_box_autoadd_test_id_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_test_id_twin_normal> Function()>();

  ffi.Pointer<wire_cst_test_id_twin_rust_async>
      cst_new_box_autoadd_test_id_twin_rust_async() {
    return _cst_new_box_autoadd_test_id_twin_rust_async();
  }

  late final _cst_new_box_autoadd_test_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_test_id_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_test_id_twin_rust_async');
  late final _cst_new_box_autoadd_test_id_twin_rust_async =
      _cst_new_box_autoadd_test_id_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_test_id_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_test_id_twin_sync>
      cst_new_box_autoadd_test_id_twin_sync() {
    return _cst_new_box_autoadd_test_id_twin_sync();
  }

  late final _cst_new_box_autoadd_test_id_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_test_id_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_test_id_twin_sync');
  late final _cst_new_box_autoadd_test_id_twin_sync =
      _cst_new_box_autoadd_test_id_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_test_id_twin_sync> Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_normal>
      cst_new_box_autoadd_tuple_struct_with_one_field_twin_normal() {
    return _cst_new_box_autoadd_tuple_struct_with_one_field_twin_normal();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_normal>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_one_field_twin_normal');
  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_normal =
      _cst_new_box_autoadd_tuple_struct_with_one_field_twin_normalPtr
          .asFunction<
              ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_normal>
                  Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_rust_async>
      cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async() {
    return _cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_tuple_struct_with_one_field_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async');
  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async =
      _cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_asyncPtr
          .asFunction<
              ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_rust_async>
                  Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync>
      cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync() {
    return _cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync');
  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync =
      _cst_new_box_autoadd_tuple_struct_with_one_field_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync>
              Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_normal>
      cst_new_box_autoadd_tuple_struct_with_two_field_twin_normal() {
    return _cst_new_box_autoadd_tuple_struct_with_two_field_twin_normal();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_normal>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_two_field_twin_normal');
  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_normal =
      _cst_new_box_autoadd_tuple_struct_with_two_field_twin_normalPtr
          .asFunction<
              ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_normal>
                  Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_rust_async>
      cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async() {
    return _cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_tuple_struct_with_two_field_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async');
  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async =
      _cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_asyncPtr
          .asFunction<
              ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_rust_async>
                  Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync>
      cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync() {
    return _cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync');
  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync =
      _cst_new_box_autoadd_tuple_struct_with_two_field_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync>
              Function()>();

  ffi.Pointer<ffi.Uint16> cst_new_box_autoadd_u_16(
    int value,
  ) {
    return _cst_new_box_autoadd_u_16(
      value,
    );
  }

  late final _cst_new_box_autoadd_u_16Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Uint16> Function(ffi.Uint16)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_u_16');
  late final _cst_new_box_autoadd_u_16 = _cst_new_box_autoadd_u_16Ptr
      .asFunction<ffi.Pointer<ffi.Uint16> Function(int)>();

  ffi.Pointer<ffi.Uint32> cst_new_box_autoadd_u_32(
    int value,
  ) {
    return _cst_new_box_autoadd_u_32(
      value,
    );
  }

  late final _cst_new_box_autoadd_u_32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Uint32> Function(ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_u_32');
  late final _cst_new_box_autoadd_u_32 = _cst_new_box_autoadd_u_32Ptr
      .asFunction<ffi.Pointer<ffi.Uint32> Function(int)>();

  ffi.Pointer<ffi.Uint64> cst_new_box_autoadd_u_64(
    int value,
  ) {
    return _cst_new_box_autoadd_u_64(
      value,
    );
  }

  late final _cst_new_box_autoadd_u_64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Uint64> Function(ffi.Uint64)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_u_64');
  late final _cst_new_box_autoadd_u_64 = _cst_new_box_autoadd_u_64Ptr
      .asFunction<ffi.Pointer<ffi.Uint64> Function(int)>();

  ffi.Pointer<ffi.Uint8> cst_new_box_autoadd_u_8(
    int value,
  ) {
    return _cst_new_box_autoadd_u_8(
      value,
    );
  }

  late final _cst_new_box_autoadd_u_8Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Uint8> Function(ffi.Uint8)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_u_8');
  late final _cst_new_box_autoadd_u_8 = _cst_new_box_autoadd_u_8Ptr
      .asFunction<ffi.Pointer<ffi.Uint8> Function(int)>();

  ffi.Pointer<wire_cst_user_id_twin_normal>
      cst_new_box_autoadd_user_id_twin_normal() {
    return _cst_new_box_autoadd_user_id_twin_normal();
  }

  late final _cst_new_box_autoadd_user_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_user_id_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_user_id_twin_normal');
  late final _cst_new_box_autoadd_user_id_twin_normal =
      _cst_new_box_autoadd_user_id_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_user_id_twin_normal> Function()>();

  ffi.Pointer<wire_cst_user_id_twin_rust_async>
      cst_new_box_autoadd_user_id_twin_rust_async() {
    return _cst_new_box_autoadd_user_id_twin_rust_async();
  }

  late final _cst_new_box_autoadd_user_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_user_id_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_user_id_twin_rust_async');
  late final _cst_new_box_autoadd_user_id_twin_rust_async =
      _cst_new_box_autoadd_user_id_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_user_id_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_user_id_twin_sync>
      cst_new_box_autoadd_user_id_twin_sync() {
    return _cst_new_box_autoadd_user_id_twin_sync();
  }

  late final _cst_new_box_autoadd_user_id_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_user_id_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_user_id_twin_sync');
  late final _cst_new_box_autoadd_user_id_twin_sync =
      _cst_new_box_autoadd_user_id_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_user_id_twin_sync> Function()>();

  ffi.Pointer<ffi.UintPtr> cst_new_box_autoadd_usize(
    int value,
  ) {
    return _cst_new_box_autoadd_usize(
      value,
    );
  }

  late final _cst_new_box_autoadd_usizePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_usize');
  late final _cst_new_box_autoadd_usize = _cst_new_box_autoadd_usizePtr
      .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_weekdays_twin_normal(
    int value,
  ) {
    return _cst_new_box_autoadd_weekdays_twin_normal(
      value,
    );
  }

  late final _cst_new_box_autoadd_weekdays_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_weekdays_twin_normal');
  late final _cst_new_box_autoadd_weekdays_twin_normal =
      _cst_new_box_autoadd_weekdays_twin_normalPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_weekdays_twin_rust_async(
    int value,
  ) {
    return _cst_new_box_autoadd_weekdays_twin_rust_async(
      value,
    );
  }

  late final _cst_new_box_autoadd_weekdays_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_weekdays_twin_rust_async');
  late final _cst_new_box_autoadd_weekdays_twin_rust_async =
      _cst_new_box_autoadd_weekdays_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_weekdays_twin_sync(
    int value,
  ) {
    return _cst_new_box_autoadd_weekdays_twin_sync(
      value,
    );
  }

  late final _cst_new_box_autoadd_weekdays_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_weekdays_twin_sync');
  late final _cst_new_box_autoadd_weekdays_twin_sync =
      _cst_new_box_autoadd_weekdays_twin_syncPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>
      cst_new_box_benchmark_binary_tree_twin_normal() {
    return _cst_new_box_benchmark_binary_tree_twin_normal();
  }

  late final _cst_new_box_benchmark_binary_tree_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_benchmark_binary_tree_twin_normal');
  late final _cst_new_box_benchmark_binary_tree_twin_normal =
      _cst_new_box_benchmark_binary_tree_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal> Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
      cst_new_box_benchmark_binary_tree_twin_rust_async() {
    return _cst_new_box_benchmark_binary_tree_twin_rust_async();
  }

  late final _cst_new_box_benchmark_binary_tree_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_benchmark_binary_tree_twin_rust_async');
  late final _cst_new_box_benchmark_binary_tree_twin_rust_async =
      _cst_new_box_benchmark_binary_tree_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>
      cst_new_box_benchmark_binary_tree_twin_sync() {
    return _cst_new_box_benchmark_binary_tree_twin_sync();
  }

  late final _cst_new_box_benchmark_binary_tree_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_benchmark_binary_tree_twin_sync');
  late final _cst_new_box_benchmark_binary_tree_twin_sync =
      _cst_new_box_benchmark_binary_tree_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync> Function()>();

  ffi.Pointer<wire_cst_blob_twin_normal> cst_new_box_blob_twin_normal() {
    return _cst_new_box_blob_twin_normal();
  }

  late final _cst_new_box_blob_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_blob_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_blob_twin_normal');
  late final _cst_new_box_blob_twin_normal = _cst_new_box_blob_twin_normalPtr
      .asFunction<ffi.Pointer<wire_cst_blob_twin_normal> Function()>();

  ffi.Pointer<wire_cst_blob_twin_rust_async>
      cst_new_box_blob_twin_rust_async() {
    return _cst_new_box_blob_twin_rust_async();
  }

  late final _cst_new_box_blob_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_blob_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_blob_twin_rust_async');
  late final _cst_new_box_blob_twin_rust_async =
      _cst_new_box_blob_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_blob_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_blob_twin_sync> cst_new_box_blob_twin_sync() {
    return _cst_new_box_blob_twin_sync();
  }

  late final _cst_new_box_blob_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_blob_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_blob_twin_sync');
  late final _cst_new_box_blob_twin_sync = _cst_new_box_blob_twin_syncPtr
      .asFunction<ffi.Pointer<wire_cst_blob_twin_sync> Function()>();

  ffi.Pointer<ffi.Bool> cst_new_box_bool(
    bool value,
  ) {
    return _cst_new_box_bool(
      value,
    );
  }

  late final _cst_new_box_boolPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Bool> Function(ffi.Bool)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_bool');
  late final _cst_new_box_bool =
      _cst_new_box_boolPtr.asFunction<ffi.Pointer<ffi.Bool> Function(bool)>();

  ffi.Pointer<wire_cst_distance_twin_normal>
      cst_new_box_distance_twin_normal() {
    return _cst_new_box_distance_twin_normal();
  }

  late final _cst_new_box_distance_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_distance_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_distance_twin_normal');
  late final _cst_new_box_distance_twin_normal =
      _cst_new_box_distance_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_distance_twin_normal> Function()>();

  ffi.Pointer<wire_cst_distance_twin_rust_async>
      cst_new_box_distance_twin_rust_async() {
    return _cst_new_box_distance_twin_rust_async();
  }

  late final _cst_new_box_distance_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_distance_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_distance_twin_rust_async');
  late final _cst_new_box_distance_twin_rust_async =
      _cst_new_box_distance_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_distance_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_distance_twin_sync> cst_new_box_distance_twin_sync() {
    return _cst_new_box_distance_twin_sync();
  }

  late final _cst_new_box_distance_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_distance_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_distance_twin_sync');
  late final _cst_new_box_distance_twin_sync =
      _cst_new_box_distance_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_distance_twin_sync> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>
      cst_new_box_exotic_optionals_twin_normal() {
    return _cst_new_box_exotic_optionals_twin_normal();
  }

  late final _cst_new_box_exotic_optionals_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_exotic_optionals_twin_normal');
  late final _cst_new_box_exotic_optionals_twin_normal =
      _cst_new_box_exotic_optionals_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_normal> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
      cst_new_box_exotic_optionals_twin_rust_async() {
    return _cst_new_box_exotic_optionals_twin_rust_async();
  }

  late final _cst_new_box_exotic_optionals_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_exotic_optionals_twin_rust_async');
  late final _cst_new_box_exotic_optionals_twin_rust_async =
      _cst_new_box_exotic_optionals_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>
      cst_new_box_exotic_optionals_twin_sync() {
    return _cst_new_box_exotic_optionals_twin_sync();
  }

  late final _cst_new_box_exotic_optionals_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_exotic_optionals_twin_sync');
  late final _cst_new_box_exotic_optionals_twin_sync =
      _cst_new_box_exotic_optionals_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_sync> Function()>();

  ffi.Pointer<ffi.Double> cst_new_box_f_64(
    double value,
  ) {
    return _cst_new_box_f_64(
      value,
    );
  }

  late final _cst_new_box_f_64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Double> Function(ffi.Double)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_f_64');
  late final _cst_new_box_f_64 = _cst_new_box_f_64Ptr
      .asFunction<ffi.Pointer<ffi.Double> Function(double)>();

  ffi.Pointer<wire_cst_feed_id_twin_normal> cst_new_box_feed_id_twin_normal() {
    return _cst_new_box_feed_id_twin_normal();
  }

  late final _cst_new_box_feed_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feed_id_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_feed_id_twin_normal');
  late final _cst_new_box_feed_id_twin_normal =
      _cst_new_box_feed_id_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_feed_id_twin_normal> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_rust_async>
      cst_new_box_feed_id_twin_rust_async() {
    return _cst_new_box_feed_id_twin_rust_async();
  }

  late final _cst_new_box_feed_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feed_id_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_feed_id_twin_rust_async');
  late final _cst_new_box_feed_id_twin_rust_async =
      _cst_new_box_feed_id_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_feed_id_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_sync> cst_new_box_feed_id_twin_sync() {
    return _cst_new_box_feed_id_twin_sync();
  }

  late final _cst_new_box_feed_id_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_feed_id_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_feed_id_twin_sync');
  late final _cst_new_box_feed_id_twin_sync = _cst_new_box_feed_id_twin_syncPtr
      .asFunction<ffi.Pointer<wire_cst_feed_id_twin_sync> Function()>();

  ffi.Pointer<ffi.Int32> cst_new_box_i_32(
    int value,
  ) {
    return _cst_new_box_i_32(
      value,
    );
  }

  late final _cst_new_box_i_32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_i_32');
  late final _cst_new_box_i_32 =
      _cst_new_box_i_32Ptr.asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int64> cst_new_box_i_64(
    int value,
  ) {
    return _cst_new_box_i_64(
      value,
    );
  }

  late final _cst_new_box_i_64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int64> Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_i_64');
  late final _cst_new_box_i_64 =
      _cst_new_box_i_64Ptr.asFunction<ffi.Pointer<ffi.Int64> Function(int)>();

  ffi.Pointer<ffi.Int8> cst_new_box_i_8(
    int value,
  ) {
    return _cst_new_box_i_8(
      value,
    );
  }

  late final _cst_new_box_i_8Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int8> Function(ffi.Int8)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_i_8');
  late final _cst_new_box_i_8 =
      _cst_new_box_i_8Ptr.asFunction<ffi.Pointer<ffi.Int8> Function(int)>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_normal>
      cst_new_box_kitchen_sink_twin_normal() {
    return _cst_new_box_kitchen_sink_twin_normal();
  }

  late final _cst_new_box_kitchen_sink_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_kitchen_sink_twin_normal');
  late final _cst_new_box_kitchen_sink_twin_normal =
      _cst_new_box_kitchen_sink_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_normal> Function()>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async>
      cst_new_box_kitchen_sink_twin_rust_async() {
    return _cst_new_box_kitchen_sink_twin_rust_async();
  }

  late final _cst_new_box_kitchen_sink_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_kitchen_sink_twin_rust_async');
  late final _cst_new_box_kitchen_sink_twin_rust_async =
      _cst_new_box_kitchen_sink_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_sync>
      cst_new_box_kitchen_sink_twin_sync() {
    return _cst_new_box_kitchen_sink_twin_sync();
  }

  late final _cst_new_box_kitchen_sink_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_kitchen_sink_twin_sync');
  late final _cst_new_box_kitchen_sink_twin_sync =
      _cst_new_box_kitchen_sink_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_sync> Function()>();

  ffi.Pointer<wire_cst_my_size> cst_new_box_my_size() {
    return _cst_new_box_my_size();
  }

  late final _cst_new_box_my_sizePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_my_size> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_my_size');
  late final _cst_new_box_my_size = _cst_new_box_my_sizePtr
      .asFunction<ffi.Pointer<wire_cst_my_size> Function()>();

  ffi.Pointer<wire_cst_speed_twin_normal> cst_new_box_speed_twin_normal() {
    return _cst_new_box_speed_twin_normal();
  }

  late final _cst_new_box_speed_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_speed_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_speed_twin_normal');
  late final _cst_new_box_speed_twin_normal = _cst_new_box_speed_twin_normalPtr
      .asFunction<ffi.Pointer<wire_cst_speed_twin_normal> Function()>();

  ffi.Pointer<wire_cst_speed_twin_rust_async>
      cst_new_box_speed_twin_rust_async() {
    return _cst_new_box_speed_twin_rust_async();
  }

  late final _cst_new_box_speed_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_speed_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_speed_twin_rust_async');
  late final _cst_new_box_speed_twin_rust_async =
      _cst_new_box_speed_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_speed_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_speed_twin_sync> cst_new_box_speed_twin_sync() {
    return _cst_new_box_speed_twin_sync();
  }

  late final _cst_new_box_speed_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_speed_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_speed_twin_sync');
  late final _cst_new_box_speed_twin_sync = _cst_new_box_speed_twin_syncPtr
      .asFunction<ffi.Pointer<wire_cst_speed_twin_sync> Function()>();

  ffi.Pointer<ffi.Uint8> cst_new_box_u_8(
    int value,
  ) {
    return _cst_new_box_u_8(
      value,
    );
  }

  late final _cst_new_box_u_8Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Uint8> Function(ffi.Uint8)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_u_8');
  late final _cst_new_box_u_8 =
      _cst_new_box_u_8Ptr.asFunction<ffi.Pointer<ffi.Uint8> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_weekdays_twin_normal(
    int value,
  ) {
    return _cst_new_box_weekdays_twin_normal(
      value,
    );
  }

  late final _cst_new_box_weekdays_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_weekdays_twin_normal');
  late final _cst_new_box_weekdays_twin_normal =
      _cst_new_box_weekdays_twin_normalPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_weekdays_twin_rust_async(
    int value,
  ) {
    return _cst_new_box_weekdays_twin_rust_async(
      value,
    );
  }

  late final _cst_new_box_weekdays_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_weekdays_twin_rust_async');
  late final _cst_new_box_weekdays_twin_rust_async =
      _cst_new_box_weekdays_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_weekdays_twin_sync(
    int value,
  ) {
    return _cst_new_box_weekdays_twin_sync(
      value,
    );
  }

  late final _cst_new_box_weekdays_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_weekdays_twin_sync');
  late final _cst_new_box_weekdays_twin_sync =
      _cst_new_box_weekdays_twin_syncPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<
          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi>
      cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
    int len,
  ) {
    return _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi(
      len,
    );
  }

  late final _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi>
                      Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi');
  late final _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi =
      _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoiPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi>
                  Function(int)>();

  ffi.Pointer<
          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal>
      cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
    int len,
  ) {
    return _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal(
      len,
    );
  }

  late final _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal>
                      Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal');
  late final _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal =
      _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormalPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal>
                  Function(int)>();

  ffi.Pointer<
          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync>
      cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
    int len,
  ) {
    return _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync(
      len,
    );
  }

  late final _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync>
                      Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync');
  late final _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync =
      _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync>
                  Function(int)>();

  ffi.Pointer<
          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi>
      cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
    int len,
  ) {
    return _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi(
      len,
    );
  }

  late final _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi>
                      Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi');
  late final _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi =
      _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoiPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi>
                  Function(int)>();

  ffi.Pointer<
          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync>
      cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
    int len,
  ) {
    return _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync(
      len,
    );
  }

  late final _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync>
                      Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync');
  late final _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync =
      _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync>
                  Function(int)>();

  ffi.Pointer<
          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi>
      cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
    int len,
  ) {
    return _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi(
      len,
    );
  }

  late final _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoiPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi>
                      Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi');
  late final _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi =
      _cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoiPtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi>
                  Function(int)>();

  ffi.Pointer<wire_cst_list_Chrono_Duration> cst_new_list_Chrono_Duration(
    int len,
  ) {
    return _cst_new_list_Chrono_Duration(
      len,
    );
  }

  late final _cst_new_list_Chrono_DurationPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_Chrono_Duration> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_Chrono_Duration');
  late final _cst_new_list_Chrono_Duration = _cst_new_list_Chrono_DurationPtr
      .asFunction<ffi.Pointer<wire_cst_list_Chrono_Duration> Function(int)>();

  ffi.Pointer<wire_cst_list_Chrono_Local> cst_new_list_Chrono_Local(
    int len,
  ) {
    return _cst_new_list_Chrono_Local(
      len,
    );
  }

  late final _cst_new_list_Chrono_LocalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_Chrono_Local> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_Chrono_Local');
  late final _cst_new_list_Chrono_Local = _cst_new_list_Chrono_LocalPtr
      .asFunction<ffi.Pointer<wire_cst_list_Chrono_Local> Function(int)>();

  ffi.Pointer<wire_cst_list_Chrono_Naive> cst_new_list_Chrono_Naive(
    int len,
  ) {
    return _cst_new_list_Chrono_Naive(
      len,
    );
  }

  late final _cst_new_list_Chrono_NaivePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_Chrono_Naive> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_Chrono_Naive');
  late final _cst_new_list_Chrono_Naive = _cst_new_list_Chrono_NaivePtr
      .asFunction<ffi.Pointer<wire_cst_list_Chrono_Naive> Function(int)>();

  ffi.Pointer<wire_cst_list_DartOpaque> cst_new_list_DartOpaque(
    int len,
  ) {
    return _cst_new_list_DartOpaque(
      len,
    );
  }

  late final _cst_new_list_DartOpaquePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_DartOpaque> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_DartOpaque');
  late final _cst_new_list_DartOpaque = _cst_new_list_DartOpaquePtr
      .asFunction<ffi.Pointer<wire_cst_list_DartOpaque> Function(int)>();

  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinMoi>
      cst_new_list_RustOpaque_HideDataTwinMoi(
    int len,
  ) {
    return _cst_new_list_RustOpaque_HideDataTwinMoi(
      len,
    );
  }

  late final _cst_new_list_RustOpaque_HideDataTwinMoiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinMoi> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_RustOpaque_HideDataTwinMoi');
  late final _cst_new_list_RustOpaque_HideDataTwinMoi =
      _cst_new_list_RustOpaque_HideDataTwinMoiPtr.asFunction<
          ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinMoi> Function(
              int)>();

  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinNormal>
      cst_new_list_RustOpaque_HideDataTwinNormal(
    int len,
  ) {
    return _cst_new_list_RustOpaque_HideDataTwinNormal(
      len,
    );
  }

  late final _cst_new_list_RustOpaque_HideDataTwinNormalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinNormal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_RustOpaque_HideDataTwinNormal');
  late final _cst_new_list_RustOpaque_HideDataTwinNormal =
      _cst_new_list_RustOpaque_HideDataTwinNormalPtr.asFunction<
          ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinNormal> Function(
              int)>();

  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsync>
      cst_new_list_RustOpaque_HideDataTwinRustAsync(
    int len,
  ) {
    return _cst_new_list_RustOpaque_HideDataTwinRustAsync(
      len,
    );
  }

  late final _cst_new_list_RustOpaque_HideDataTwinRustAsyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsync>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_RustOpaque_HideDataTwinRustAsync');
  late final _cst_new_list_RustOpaque_HideDataTwinRustAsync =
      _cst_new_list_RustOpaque_HideDataTwinRustAsyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsync> Function(
              int)>();

  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsyncMoi>
      cst_new_list_RustOpaque_HideDataTwinRustAsyncMoi(
    int len,
  ) {
    return _cst_new_list_RustOpaque_HideDataTwinRustAsyncMoi(
      len,
    );
  }

  late final _cst_new_list_RustOpaque_HideDataTwinRustAsyncMoiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsyncMoi>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_RustOpaque_HideDataTwinRustAsyncMoi');
  late final _cst_new_list_RustOpaque_HideDataTwinRustAsyncMoi =
      _cst_new_list_RustOpaque_HideDataTwinRustAsyncMoiPtr.asFunction<
          ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinRustAsyncMoi>
              Function(int)>();

  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSync>
      cst_new_list_RustOpaque_HideDataTwinSync(
    int len,
  ) {
    return _cst_new_list_RustOpaque_HideDataTwinSync(
      len,
    );
  }

  late final _cst_new_list_RustOpaque_HideDataTwinSyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_RustOpaque_HideDataTwinSync');
  late final _cst_new_list_RustOpaque_HideDataTwinSync =
      _cst_new_list_RustOpaque_HideDataTwinSyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSync> Function(
              int)>();

  ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSyncMoi>
      cst_new_list_RustOpaque_HideDataTwinSyncMoi(
    int len,
  ) {
    return _cst_new_list_RustOpaque_HideDataTwinSyncMoi(
      len,
    );
  }

  late final _cst_new_list_RustOpaque_HideDataTwinSyncMoiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSyncMoi>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_RustOpaque_HideDataTwinSyncMoi');
  late final _cst_new_list_RustOpaque_HideDataTwinSyncMoi =
      _cst_new_list_RustOpaque_HideDataTwinSyncMoiPtr.asFunction<
          ffi.Pointer<wire_cst_list_RustOpaque_HideDataTwinSyncMoi> Function(
              int)>();

  ffi.Pointer<wire_cst_list_String> cst_new_list_String(
    int len,
  ) {
    return _cst_new_list_String(
      len,
    );
  }

  late final _cst_new_list_StringPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_String> Function(
              ffi.Int32)>>('frbgen_frb_example_pure_dart_cst_new_list_String');
  late final _cst_new_list_String = _cst_new_list_StringPtr
      .asFunction<ffi.Pointer<wire_cst_list_String> Function(int)>();

  ffi.Pointer<wire_cst_list_Uuid> cst_new_list_Uuid(
    int len,
  ) {
    return _cst_new_list_Uuid(
      len,
    );
  }

  late final _cst_new_list_UuidPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_list_Uuid> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_Uuid');
  late final _cst_new_list_Uuid = _cst_new_list_UuidPtr
      .asFunction<ffi.Pointer<wire_cst_list_Uuid> Function(int)>();

  ffi.Pointer<wire_cst_list_application_env_var>
      cst_new_list_application_env_var(
    int len,
  ) {
    return _cst_new_list_application_env_var(
      len,
    );
  }

  late final _cst_new_list_application_env_varPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_application_env_var> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_application_env_var');
  late final _cst_new_list_application_env_var =
      _cst_new_list_application_env_varPtr.asFunction<
          ffi.Pointer<wire_cst_list_application_env_var> Function(int)>();

  ffi.Pointer<wire_cst_list_application_mode> cst_new_list_application_mode(
    int len,
  ) {
    return _cst_new_list_application_mode(
      len,
    );
  }

  late final _cst_new_list_application_modePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_application_mode> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_application_mode');
  late final _cst_new_list_application_mode = _cst_new_list_application_modePtr
      .asFunction<ffi.Pointer<wire_cst_list_application_mode> Function(int)>();

  ffi.Pointer<wire_cst_list_application_settings>
      cst_new_list_application_settings(
    int len,
  ) {
    return _cst_new_list_application_settings(
      len,
    );
  }

  late final _cst_new_list_application_settingsPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_application_settings> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_application_settings');
  late final _cst_new_list_application_settings =
      _cst_new_list_application_settingsPtr.asFunction<
          ffi.Pointer<wire_cst_list_application_settings> Function(int)>();

  ffi.Pointer<wire_cst_list_attribute_twin_normal>
      cst_new_list_attribute_twin_normal(
    int len,
  ) {
    return _cst_new_list_attribute_twin_normal(
      len,
    );
  }

  late final _cst_new_list_attribute_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_attribute_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_attribute_twin_normal');
  late final _cst_new_list_attribute_twin_normal =
      _cst_new_list_attribute_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_attribute_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_attribute_twin_rust_async>
      cst_new_list_attribute_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_attribute_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_attribute_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_attribute_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_attribute_twin_rust_async');
  late final _cst_new_list_attribute_twin_rust_async =
      _cst_new_list_attribute_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_attribute_twin_rust_async> Function(int)>();

  ffi.Pointer<wire_cst_list_attribute_twin_sync>
      cst_new_list_attribute_twin_sync(
    int len,
  ) {
    return _cst_new_list_attribute_twin_sync(
      len,
    );
  }

  late final _cst_new_list_attribute_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_attribute_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_attribute_twin_sync');
  late final _cst_new_list_attribute_twin_sync =
      _cst_new_list_attribute_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_attribute_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_basic_general_enum_twin_normal>
      cst_new_list_basic_general_enum_twin_normal(
    int len,
  ) {
    return _cst_new_list_basic_general_enum_twin_normal(
      len,
    );
  }

  late final _cst_new_list_basic_general_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_basic_general_enum_twin_normal>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_basic_general_enum_twin_normal');
  late final _cst_new_list_basic_general_enum_twin_normal =
      _cst_new_list_basic_general_enum_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_basic_general_enum_twin_normal> Function(
              int)>();

  ffi.Pointer<wire_cst_list_basic_general_enum_twin_rust_async>
      cst_new_list_basic_general_enum_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_basic_general_enum_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_basic_general_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_basic_general_enum_twin_rust_async>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_basic_general_enum_twin_rust_async');
  late final _cst_new_list_basic_general_enum_twin_rust_async =
      _cst_new_list_basic_general_enum_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_basic_general_enum_twin_rust_async>
              Function(int)>();

  ffi.Pointer<wire_cst_list_basic_general_enum_twin_sync>
      cst_new_list_basic_general_enum_twin_sync(
    int len,
  ) {
    return _cst_new_list_basic_general_enum_twin_sync(
      len,
    );
  }

  late final _cst_new_list_basic_general_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_basic_general_enum_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_basic_general_enum_twin_sync');
  late final _cst_new_list_basic_general_enum_twin_sync =
      _cst_new_list_basic_general_enum_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_basic_general_enum_twin_sync> Function(
              int)>();

  ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_normal>
      cst_new_list_basic_primitive_enum_twin_normal(
    int len,
  ) {
    return _cst_new_list_basic_primitive_enum_twin_normal(
      len,
    );
  }

  late final _cst_new_list_basic_primitive_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_normal>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_basic_primitive_enum_twin_normal');
  late final _cst_new_list_basic_primitive_enum_twin_normal =
      _cst_new_list_basic_primitive_enum_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_normal> Function(
              int)>();

  ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_rust_async>
      cst_new_list_basic_primitive_enum_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_basic_primitive_enum_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_basic_primitive_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_rust_async>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_basic_primitive_enum_twin_rust_async');
  late final _cst_new_list_basic_primitive_enum_twin_rust_async =
      _cst_new_list_basic_primitive_enum_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_rust_async>
              Function(int)>();

  ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_sync>
      cst_new_list_basic_primitive_enum_twin_sync(
    int len,
  ) {
    return _cst_new_list_basic_primitive_enum_twin_sync(
      len,
    );
  }

  late final _cst_new_list_basic_primitive_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_sync>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_basic_primitive_enum_twin_sync');
  late final _cst_new_list_basic_primitive_enum_twin_sync =
      _cst_new_list_basic_primitive_enum_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_basic_primitive_enum_twin_sync> Function(
              int)>();

  ffi.Pointer<wire_cst_list_basic_struct_twin_normal>
      cst_new_list_basic_struct_twin_normal(
    int len,
  ) {
    return _cst_new_list_basic_struct_twin_normal(
      len,
    );
  }

  late final _cst_new_list_basic_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_basic_struct_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_basic_struct_twin_normal');
  late final _cst_new_list_basic_struct_twin_normal =
      _cst_new_list_basic_struct_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_basic_struct_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_basic_struct_twin_rust_async>
      cst_new_list_basic_struct_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_basic_struct_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_basic_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_basic_struct_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_basic_struct_twin_rust_async');
  late final _cst_new_list_basic_struct_twin_rust_async =
      _cst_new_list_basic_struct_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_basic_struct_twin_rust_async> Function(
              int)>();

  ffi.Pointer<wire_cst_list_basic_struct_twin_sync>
      cst_new_list_basic_struct_twin_sync(
    int len,
  ) {
    return _cst_new_list_basic_struct_twin_sync(
      len,
    );
  }

  late final _cst_new_list_basic_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_basic_struct_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_basic_struct_twin_sync');
  late final _cst_new_list_basic_struct_twin_sync =
      _cst_new_list_basic_struct_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_basic_struct_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_bool> cst_new_list_bool(
    int len,
  ) {
    return _cst_new_list_bool(
      len,
    );
  }

  late final _cst_new_list_boolPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_list_bool> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_bool');
  late final _cst_new_list_bool = _cst_new_list_boolPtr
      .asFunction<ffi.Pointer<wire_cst_list_bool> Function(int)>();

  ffi.Pointer<wire_cst_list_element_twin_normal>
      cst_new_list_element_twin_normal(
    int len,
  ) {
    return _cst_new_list_element_twin_normal(
      len,
    );
  }

  late final _cst_new_list_element_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_element_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_element_twin_normal');
  late final _cst_new_list_element_twin_normal =
      _cst_new_list_element_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_element_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_element_twin_rust_async>
      cst_new_list_element_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_element_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_element_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_element_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_element_twin_rust_async');
  late final _cst_new_list_element_twin_rust_async =
      _cst_new_list_element_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_element_twin_rust_async> Function(int)>();

  ffi.Pointer<wire_cst_list_element_twin_sync> cst_new_list_element_twin_sync(
    int len,
  ) {
    return _cst_new_list_element_twin_sync(
      len,
    );
  }

  late final _cst_new_list_element_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_element_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_element_twin_sync');
  late final _cst_new_list_element_twin_sync =
      _cst_new_list_element_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_element_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_enum_opaque_twin_moi>
      cst_new_list_enum_opaque_twin_moi(
    int len,
  ) {
    return _cst_new_list_enum_opaque_twin_moi(
      len,
    );
  }

  late final _cst_new_list_enum_opaque_twin_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_enum_opaque_twin_moi> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_enum_opaque_twin_moi');
  late final _cst_new_list_enum_opaque_twin_moi =
      _cst_new_list_enum_opaque_twin_moiPtr.asFunction<
          ffi.Pointer<wire_cst_list_enum_opaque_twin_moi> Function(int)>();

  ffi.Pointer<wire_cst_list_enum_opaque_twin_normal>
      cst_new_list_enum_opaque_twin_normal(
    int len,
  ) {
    return _cst_new_list_enum_opaque_twin_normal(
      len,
    );
  }

  late final _cst_new_list_enum_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_enum_opaque_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_enum_opaque_twin_normal');
  late final _cst_new_list_enum_opaque_twin_normal =
      _cst_new_list_enum_opaque_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_enum_opaque_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async>
      cst_new_list_enum_opaque_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_enum_opaque_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_enum_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_enum_opaque_twin_rust_async');
  late final _cst_new_list_enum_opaque_twin_rust_async =
      _cst_new_list_enum_opaque_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async> Function(
              int)>();

  ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async_moi>
      cst_new_list_enum_opaque_twin_rust_async_moi(
    int len,
  ) {
    return _cst_new_list_enum_opaque_twin_rust_async_moi(
      len,
    );
  }

  late final _cst_new_list_enum_opaque_twin_rust_async_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async_moi>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_enum_opaque_twin_rust_async_moi');
  late final _cst_new_list_enum_opaque_twin_rust_async_moi =
      _cst_new_list_enum_opaque_twin_rust_async_moiPtr.asFunction<
          ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async_moi> Function(
              int)>();

  ffi.Pointer<wire_cst_list_enum_opaque_twin_sync>
      cst_new_list_enum_opaque_twin_sync(
    int len,
  ) {
    return _cst_new_list_enum_opaque_twin_sync(
      len,
    );
  }

  late final _cst_new_list_enum_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_enum_opaque_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_enum_opaque_twin_sync');
  late final _cst_new_list_enum_opaque_twin_sync =
      _cst_new_list_enum_opaque_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_enum_opaque_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_enum_opaque_twin_sync_moi>
      cst_new_list_enum_opaque_twin_sync_moi(
    int len,
  ) {
    return _cst_new_list_enum_opaque_twin_sync_moi(
      len,
    );
  }

  late final _cst_new_list_enum_opaque_twin_sync_moiPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_enum_opaque_twin_sync_moi> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_enum_opaque_twin_sync_moi');
  late final _cst_new_list_enum_opaque_twin_sync_moi =
      _cst_new_list_enum_opaque_twin_sync_moiPtr.asFunction<
          ffi.Pointer<wire_cst_list_enum_opaque_twin_sync_moi> Function(int)>();

  ffi.Pointer<wire_cst_list_list_prim_u_8_strict>
      cst_new_list_list_prim_u_8_strict(
    int len,
  ) {
    return _cst_new_list_list_prim_u_8_strict(
      len,
    );
  }

  late final _cst_new_list_list_prim_u_8_strictPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_list_prim_u_8_strict> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_list_prim_u_8_strict');
  late final _cst_new_list_list_prim_u_8_strict =
      _cst_new_list_list_prim_u_8_strictPtr.asFunction<
          ffi.Pointer<wire_cst_list_list_prim_u_8_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_my_enum> cst_new_list_my_enum(
    int len,
  ) {
    return _cst_new_list_my_enum(
      len,
    );
  }

  late final _cst_new_list_my_enumPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_my_enum> Function(
              ffi.Int32)>>('frbgen_frb_example_pure_dart_cst_new_list_my_enum');
  late final _cst_new_list_my_enum = _cst_new_list_my_enumPtr
      .asFunction<ffi.Pointer<wire_cst_list_my_enum> Function(int)>();

  ffi.Pointer<wire_cst_list_my_size> cst_new_list_my_size(
    int len,
  ) {
    return _cst_new_list_my_size(
      len,
    );
  }

  late final _cst_new_list_my_sizePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_my_size> Function(
              ffi.Int32)>>('frbgen_frb_example_pure_dart_cst_new_list_my_size');
  late final _cst_new_list_my_size = _cst_new_list_my_sizePtr
      .asFunction<ffi.Pointer<wire_cst_list_my_size> Function(int)>();

  ffi.Pointer<wire_cst_list_my_tree_node_twin_normal>
      cst_new_list_my_tree_node_twin_normal(
    int len,
  ) {
    return _cst_new_list_my_tree_node_twin_normal(
      len,
    );
  }

  late final _cst_new_list_my_tree_node_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_my_tree_node_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_my_tree_node_twin_normal');
  late final _cst_new_list_my_tree_node_twin_normal =
      _cst_new_list_my_tree_node_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_my_tree_node_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_my_tree_node_twin_rust_async>
      cst_new_list_my_tree_node_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_my_tree_node_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_my_tree_node_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_my_tree_node_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_my_tree_node_twin_rust_async');
  late final _cst_new_list_my_tree_node_twin_rust_async =
      _cst_new_list_my_tree_node_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_my_tree_node_twin_rust_async> Function(
              int)>();

  ffi.Pointer<wire_cst_list_my_tree_node_twin_sync>
      cst_new_list_my_tree_node_twin_sync(
    int len,
  ) {
    return _cst_new_list_my_tree_node_twin_sync(
      len,
    );
  }

  late final _cst_new_list_my_tree_node_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_my_tree_node_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_my_tree_node_twin_sync');
  late final _cst_new_list_my_tree_node_twin_sync =
      _cst_new_list_my_tree_node_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_my_tree_node_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_nested_raw_string_mirrored>
      cst_new_list_nested_raw_string_mirrored(
    int len,
  ) {
    return _cst_new_list_nested_raw_string_mirrored(
      len,
    );
  }

  late final _cst_new_list_nested_raw_string_mirroredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_nested_raw_string_mirrored> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_nested_raw_string_mirrored');
  late final _cst_new_list_nested_raw_string_mirrored =
      _cst_new_list_nested_raw_string_mirroredPtr.asFunction<
          ffi.Pointer<wire_cst_list_nested_raw_string_mirrored> Function(
              int)>();

  ffi.Pointer<wire_cst_list_opt_String> cst_new_list_opt_String(
    int len,
  ) {
    return _cst_new_list_opt_String(
      len,
    );
  }

  late final _cst_new_list_opt_StringPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_String> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_String');
  late final _cst_new_list_opt_String = _cst_new_list_opt_StringPtr
      .asFunction<ffi.Pointer<wire_cst_list_opt_String> Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_normal>
      cst_new_list_opt_box_autoadd_attribute_twin_normal(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_attribute_twin_normal(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_attribute_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_normal>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_attribute_twin_normal');
  late final _cst_new_list_opt_box_autoadd_attribute_twin_normal =
      _cst_new_list_opt_box_autoadd_attribute_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_normal>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async>
      cst_new_list_opt_box_autoadd_attribute_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_attribute_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_attribute_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_opt_box_autoadd_attribute_twin_rust_async>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_attribute_twin_rust_async');
  late final _cst_new_list_opt_box_autoadd_attribute_twin_rust_async =
      _cst_new_list_opt_box_autoadd_attribute_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync>
      cst_new_list_opt_box_autoadd_attribute_twin_sync(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_attribute_twin_sync(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_attribute_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_attribute_twin_sync');
  late final _cst_new_list_opt_box_autoadd_attribute_twin_sync =
      _cst_new_list_opt_box_autoadd_attribute_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32>
      cst_new_list_opt_box_autoadd_i_32(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_i_32(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_i_32Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_i_32');
  late final _cst_new_list_opt_box_autoadd_i_32 =
      _cst_new_list_opt_box_autoadd_i_32Ptr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32> Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_normal>
      cst_new_list_opt_box_autoadd_weekdays_twin_normal(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_weekdays_twin_normal(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_weekdays_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_normal>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_weekdays_twin_normal');
  late final _cst_new_list_opt_box_autoadd_weekdays_twin_normal =
      _cst_new_list_opt_box_autoadd_weekdays_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_normal>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async>
      cst_new_list_opt_box_autoadd_weekdays_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_weekdays_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_weekdays_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_weekdays_twin_rust_async');
  late final _cst_new_list_opt_box_autoadd_weekdays_twin_rust_async =
      _cst_new_list_opt_box_autoadd_weekdays_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sync>
      cst_new_list_opt_box_autoadd_weekdays_twin_sync(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_weekdays_twin_sync(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_weekdays_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sync>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_weekdays_twin_sync');
  late final _cst_new_list_opt_box_autoadd_weekdays_twin_sync =
      _cst_new_list_opt_box_autoadd_weekdays_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sync>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_list_prim_i_32_strict>
      cst_new_list_opt_list_prim_i_32_strict(
    int len,
  ) {
    return _cst_new_list_opt_list_prim_i_32_strict(
      len,
    );
  }

  late final _cst_new_list_opt_list_prim_i_32_strictPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_list_prim_i_32_strict> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_list_prim_i_32_strict');
  late final _cst_new_list_opt_list_prim_i_32_strict =
      _cst_new_list_opt_list_prim_i_32_strictPtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_list_prim_i_32_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_point_twin_normal> cst_new_list_point_twin_normal(
    int len,
  ) {
    return _cst_new_list_point_twin_normal(
      len,
    );
  }

  late final _cst_new_list_point_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_point_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_point_twin_normal');
  late final _cst_new_list_point_twin_normal =
      _cst_new_list_point_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_point_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_point_twin_rust_async>
      cst_new_list_point_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_point_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_point_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_point_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_point_twin_rust_async');
  late final _cst_new_list_point_twin_rust_async =
      _cst_new_list_point_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_point_twin_rust_async> Function(int)>();

  ffi.Pointer<wire_cst_list_point_twin_sync> cst_new_list_point_twin_sync(
    int len,
  ) {
    return _cst_new_list_point_twin_sync(
      len,
    );
  }

  late final _cst_new_list_point_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_point_twin_sync> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_point_twin_sync');
  late final _cst_new_list_point_twin_sync = _cst_new_list_point_twin_syncPtr
      .asFunction<ffi.Pointer<wire_cst_list_point_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_f_32_loose> cst_new_list_prim_f_32_loose(
    int len,
  ) {
    return _cst_new_list_prim_f_32_loose(
      len,
    );
  }

  late final _cst_new_list_prim_f_32_loosePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_f_32_loose> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_f_32_loose');
  late final _cst_new_list_prim_f_32_loose = _cst_new_list_prim_f_32_loosePtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_f_32_loose> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_f_32_strict> cst_new_list_prim_f_32_strict(
    int len,
  ) {
    return _cst_new_list_prim_f_32_strict(
      len,
    );
  }

  late final _cst_new_list_prim_f_32_strictPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_f_32_strict> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_f_32_strict');
  late final _cst_new_list_prim_f_32_strict = _cst_new_list_prim_f_32_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_f_32_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_f_64_loose> cst_new_list_prim_f_64_loose(
    int len,
  ) {
    return _cst_new_list_prim_f_64_loose(
      len,
    );
  }

  late final _cst_new_list_prim_f_64_loosePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_f_64_loose> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_f_64_loose');
  late final _cst_new_list_prim_f_64_loose = _cst_new_list_prim_f_64_loosePtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_f_64_loose> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_f_64_strict> cst_new_list_prim_f_64_strict(
    int len,
  ) {
    return _cst_new_list_prim_f_64_strict(
      len,
    );
  }

  late final _cst_new_list_prim_f_64_strictPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_f_64_strict> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_f_64_strict');
  late final _cst_new_list_prim_f_64_strict = _cst_new_list_prim_f_64_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_f_64_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_i_16_loose> cst_new_list_prim_i_16_loose(
    int len,
  ) {
    return _cst_new_list_prim_i_16_loose(
      len,
    );
  }

  late final _cst_new_list_prim_i_16_loosePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_i_16_loose> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_i_16_loose');
  late final _cst_new_list_prim_i_16_loose = _cst_new_list_prim_i_16_loosePtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_i_16_loose> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_i_16_strict> cst_new_list_prim_i_16_strict(
    int len,
  ) {
    return _cst_new_list_prim_i_16_strict(
      len,
    );
  }

  late final _cst_new_list_prim_i_16_strictPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_i_16_strict> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_i_16_strict');
  late final _cst_new_list_prim_i_16_strict = _cst_new_list_prim_i_16_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_i_16_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_i_32_loose> cst_new_list_prim_i_32_loose(
    int len,
  ) {
    return _cst_new_list_prim_i_32_loose(
      len,
    );
  }

  late final _cst_new_list_prim_i_32_loosePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_i_32_loose> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_i_32_loose');
  late final _cst_new_list_prim_i_32_loose = _cst_new_list_prim_i_32_loosePtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_i_32_loose> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_i_32_strict> cst_new_list_prim_i_32_strict(
    int len,
  ) {
    return _cst_new_list_prim_i_32_strict(
      len,
    );
  }

  late final _cst_new_list_prim_i_32_strictPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_i_32_strict> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_i_32_strict');
  late final _cst_new_list_prim_i_32_strict = _cst_new_list_prim_i_32_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_i_32_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_i_64_strict> cst_new_list_prim_i_64_strict(
    int len,
  ) {
    return _cst_new_list_prim_i_64_strict(
      len,
    );
  }

  late final _cst_new_list_prim_i_64_strictPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_i_64_strict> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_i_64_strict');
  late final _cst_new_list_prim_i_64_strict = _cst_new_list_prim_i_64_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_i_64_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_i_8_loose> cst_new_list_prim_i_8_loose(
    int len,
  ) {
    return _cst_new_list_prim_i_8_loose(
      len,
    );
  }

  late final _cst_new_list_prim_i_8_loosePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_i_8_loose> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_i_8_loose');
  late final _cst_new_list_prim_i_8_loose = _cst_new_list_prim_i_8_loosePtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_i_8_loose> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_i_8_strict> cst_new_list_prim_i_8_strict(
    int len,
  ) {
    return _cst_new_list_prim_i_8_strict(
      len,
    );
  }

  late final _cst_new_list_prim_i_8_strictPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_i_8_strict> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_i_8_strict');
  late final _cst_new_list_prim_i_8_strict = _cst_new_list_prim_i_8_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_i_8_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_16_loose> cst_new_list_prim_u_16_loose(
    int len,
  ) {
    return _cst_new_list_prim_u_16_loose(
      len,
    );
  }

  late final _cst_new_list_prim_u_16_loosePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_u_16_loose> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_u_16_loose');
  late final _cst_new_list_prim_u_16_loose = _cst_new_list_prim_u_16_loosePtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_16_loose> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_16_strict> cst_new_list_prim_u_16_strict(
    int len,
  ) {
    return _cst_new_list_prim_u_16_strict(
      len,
    );
  }

  late final _cst_new_list_prim_u_16_strictPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_u_16_strict> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_u_16_strict');
  late final _cst_new_list_prim_u_16_strict = _cst_new_list_prim_u_16_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_16_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_32_loose> cst_new_list_prim_u_32_loose(
    int len,
  ) {
    return _cst_new_list_prim_u_32_loose(
      len,
    );
  }

  late final _cst_new_list_prim_u_32_loosePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_u_32_loose> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_u_32_loose');
  late final _cst_new_list_prim_u_32_loose = _cst_new_list_prim_u_32_loosePtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_32_loose> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_32_strict> cst_new_list_prim_u_32_strict(
    int len,
  ) {
    return _cst_new_list_prim_u_32_strict(
      len,
    );
  }

  late final _cst_new_list_prim_u_32_strictPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_u_32_strict> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_u_32_strict');
  late final _cst_new_list_prim_u_32_strict = _cst_new_list_prim_u_32_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_32_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_64_strict> cst_new_list_prim_u_64_strict(
    int len,
  ) {
    return _cst_new_list_prim_u_64_strict(
      len,
    );
  }

  late final _cst_new_list_prim_u_64_strictPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_u_64_strict> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_u_64_strict');
  late final _cst_new_list_prim_u_64_strict = _cst_new_list_prim_u_64_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_64_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_8_loose> cst_new_list_prim_u_8_loose(
    int len,
  ) {
    return _cst_new_list_prim_u_8_loose(
      len,
    );
  }

  late final _cst_new_list_prim_u_8_loosePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_u_8_loose> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_u_8_loose');
  late final _cst_new_list_prim_u_8_loose = _cst_new_list_prim_u_8_loosePtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_8_loose> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_new_list_prim_u_8_strict(
    int len,
  ) {
    return _cst_new_list_prim_u_8_strict(
      len,
    );
  }

  late final _cst_new_list_prim_u_8_strictPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_u_8_strict> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_u_8_strict');
  late final _cst_new_list_prim_u_8_strict = _cst_new_list_prim_u_8_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_8_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_raw_string_enum_mirrored>
      cst_new_list_raw_string_enum_mirrored(
    int len,
  ) {
    return _cst_new_list_raw_string_enum_mirrored(
      len,
    );
  }

  late final _cst_new_list_raw_string_enum_mirroredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_raw_string_enum_mirrored> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_raw_string_enum_mirrored');
  late final _cst_new_list_raw_string_enum_mirrored =
      _cst_new_list_raw_string_enum_mirroredPtr.asFunction<
          ffi.Pointer<wire_cst_list_raw_string_enum_mirrored> Function(int)>();

  ffi.Pointer<wire_cst_list_raw_string_mirrored>
      cst_new_list_raw_string_mirrored(
    int len,
  ) {
    return _cst_new_list_raw_string_mirrored(
      len,
    );
  }

  late final _cst_new_list_raw_string_mirroredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_raw_string_mirrored> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_raw_string_mirrored');
  late final _cst_new_list_raw_string_mirrored =
      _cst_new_list_raw_string_mirroredPtr.asFunction<
          ffi.Pointer<wire_cst_list_raw_string_mirrored> Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_basic_general_enum_twin_normal>
      cst_new_list_record_i_32_basic_general_enum_twin_normal(
    int len,
  ) {
    return _cst_new_list_record_i_32_basic_general_enum_twin_normal(
      len,
    );
  }

  late final _cst_new_list_record_i_32_basic_general_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_record_i_32_basic_general_enum_twin_normal>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_basic_general_enum_twin_normal');
  late final _cst_new_list_record_i_32_basic_general_enum_twin_normal =
      _cst_new_list_record_i_32_basic_general_enum_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_i_32_basic_general_enum_twin_normal>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_basic_general_enum_twin_rust_async>
      cst_new_list_record_i_32_basic_general_enum_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_record_i_32_basic_general_enum_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_record_i_32_basic_general_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_record_i_32_basic_general_enum_twin_rust_async>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_basic_general_enum_twin_rust_async');
  late final _cst_new_list_record_i_32_basic_general_enum_twin_rust_async =
      _cst_new_list_record_i_32_basic_general_enum_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<
                  wire_cst_list_record_i_32_basic_general_enum_twin_rust_async>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_basic_general_enum_twin_sync>
      cst_new_list_record_i_32_basic_general_enum_twin_sync(
    int len,
  ) {
    return _cst_new_list_record_i_32_basic_general_enum_twin_sync(
      len,
    );
  }

  late final _cst_new_list_record_i_32_basic_general_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_record_i_32_basic_general_enum_twin_sync>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_basic_general_enum_twin_sync');
  late final _cst_new_list_record_i_32_basic_general_enum_twin_sync =
      _cst_new_list_record_i_32_basic_general_enum_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_i_32_basic_general_enum_twin_sync>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_basic_primitive_enum_twin_normal>
      cst_new_list_record_i_32_basic_primitive_enum_twin_normal(
    int len,
  ) {
    return _cst_new_list_record_i_32_basic_primitive_enum_twin_normal(
      len,
    );
  }

  late final _cst_new_list_record_i_32_basic_primitive_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_record_i_32_basic_primitive_enum_twin_normal>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_basic_primitive_enum_twin_normal');
  late final _cst_new_list_record_i_32_basic_primitive_enum_twin_normal =
      _cst_new_list_record_i_32_basic_primitive_enum_twin_normalPtr.asFunction<
          ffi.Pointer<
                  wire_cst_list_record_i_32_basic_primitive_enum_twin_normal>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_basic_primitive_enum_twin_rust_async>
      cst_new_list_record_i_32_basic_primitive_enum_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_record_i_32_basic_primitive_enum_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_record_i_32_basic_primitive_enum_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_list_record_i_32_basic_primitive_enum_twin_rust_async>
                      Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_basic_primitive_enum_twin_rust_async');
  late final _cst_new_list_record_i_32_basic_primitive_enum_twin_rust_async =
      _cst_new_list_record_i_32_basic_primitive_enum_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<
                  wire_cst_list_record_i_32_basic_primitive_enum_twin_rust_async>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_basic_primitive_enum_twin_sync>
      cst_new_list_record_i_32_basic_primitive_enum_twin_sync(
    int len,
  ) {
    return _cst_new_list_record_i_32_basic_primitive_enum_twin_sync(
      len,
    );
  }

  late final _cst_new_list_record_i_32_basic_primitive_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_record_i_32_basic_primitive_enum_twin_sync>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_basic_primitive_enum_twin_sync');
  late final _cst_new_list_record_i_32_basic_primitive_enum_twin_sync =
      _cst_new_list_record_i_32_basic_primitive_enum_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_i_32_basic_primitive_enum_twin_sync>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_normal>
      cst_new_list_record_i_32_basic_struct_twin_normal(
    int len,
  ) {
    return _cst_new_list_record_i_32_basic_struct_twin_normal(
      len,
    );
  }

  late final _cst_new_list_record_i_32_basic_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_normal>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_basic_struct_twin_normal');
  late final _cst_new_list_record_i_32_basic_struct_twin_normal =
      _cst_new_list_record_i_32_basic_struct_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_normal>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_rust_async>
      cst_new_list_record_i_32_basic_struct_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_record_i_32_basic_struct_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_record_i_32_basic_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_record_i_32_basic_struct_twin_rust_async>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_basic_struct_twin_rust_async');
  late final _cst_new_list_record_i_32_basic_struct_twin_rust_async =
      _cst_new_list_record_i_32_basic_struct_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_rust_async>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_sync>
      cst_new_list_record_i_32_basic_struct_twin_sync(
    int len,
  ) {
    return _cst_new_list_record_i_32_basic_struct_twin_sync(
      len,
    );
  }

  late final _cst_new_list_record_i_32_basic_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_sync>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_basic_struct_twin_sync');
  late final _cst_new_list_record_i_32_basic_struct_twin_sync =
      _cst_new_list_record_i_32_basic_struct_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_i_32_basic_struct_twin_sync>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_bool> cst_new_list_record_i_32_bool(
    int len,
  ) {
    return _cst_new_list_record_i_32_bool(
      len,
    );
  }

  late final _cst_new_list_record_i_32_boolPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_bool> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_bool');
  late final _cst_new_list_record_i_32_bool = _cst_new_list_record_i_32_boolPtr
      .asFunction<ffi.Pointer<wire_cst_list_record_i_32_bool> Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_f_32> cst_new_list_record_i_32_f_32(
    int len,
  ) {
    return _cst_new_list_record_i_32_f_32(
      len,
    );
  }

  late final _cst_new_list_record_i_32_f_32Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_f_32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_f_32');
  late final _cst_new_list_record_i_32_f_32 = _cst_new_list_record_i_32_f_32Ptr
      .asFunction<ffi.Pointer<wire_cst_list_record_i_32_f_32> Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_f_64> cst_new_list_record_i_32_f_64(
    int len,
  ) {
    return _cst_new_list_record_i_32_f_64(
      len,
    );
  }

  late final _cst_new_list_record_i_32_f_64Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_f_64> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_f_64');
  late final _cst_new_list_record_i_32_f_64 = _cst_new_list_record_i_32_f_64Ptr
      .asFunction<ffi.Pointer<wire_cst_list_record_i_32_f_64> Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_i_16> cst_new_list_record_i_32_i_16(
    int len,
  ) {
    return _cst_new_list_record_i_32_i_16(
      len,
    );
  }

  late final _cst_new_list_record_i_32_i_16Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_i_16> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_i_16');
  late final _cst_new_list_record_i_32_i_16 = _cst_new_list_record_i_32_i_16Ptr
      .asFunction<ffi.Pointer<wire_cst_list_record_i_32_i_16> Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_i_32> cst_new_list_record_i_32_i_32(
    int len,
  ) {
    return _cst_new_list_record_i_32_i_32(
      len,
    );
  }

  late final _cst_new_list_record_i_32_i_32Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_i_32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_i_32');
  late final _cst_new_list_record_i_32_i_32 = _cst_new_list_record_i_32_i_32Ptr
      .asFunction<ffi.Pointer<wire_cst_list_record_i_32_i_32> Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_i_64> cst_new_list_record_i_32_i_64(
    int len,
  ) {
    return _cst_new_list_record_i_32_i_64(
      len,
    );
  }

  late final _cst_new_list_record_i_32_i_64Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_i_64> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_i_64');
  late final _cst_new_list_record_i_32_i_64 = _cst_new_list_record_i_32_i_64Ptr
      .asFunction<ffi.Pointer<wire_cst_list_record_i_32_i_64> Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_i_8> cst_new_list_record_i_32_i_8(
    int len,
  ) {
    return _cst_new_list_record_i_32_i_8(
      len,
    );
  }

  late final _cst_new_list_record_i_32_i_8Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_i_8> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_i_8');
  late final _cst_new_list_record_i_32_i_8 = _cst_new_list_record_i_32_i_8Ptr
      .asFunction<ffi.Pointer<wire_cst_list_record_i_32_i_8> Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_isize> cst_new_list_record_i_32_isize(
    int len,
  ) {
    return _cst_new_list_record_i_32_isize(
      len,
    );
  }

  late final _cst_new_list_record_i_32_isizePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_isize> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_isize');
  late final _cst_new_list_record_i_32_isize =
      _cst_new_list_record_i_32_isizePtr.asFunction<
          ffi.Pointer<wire_cst_list_record_i_32_isize> Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_list_prim_u_8_strict>
      cst_new_list_record_i_32_list_prim_u_8_strict(
    int len,
  ) {
    return _cst_new_list_record_i_32_list_prim_u_8_strict(
      len,
    );
  }

  late final _cst_new_list_record_i_32_list_prim_u_8_strictPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_list_prim_u_8_strict>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_list_prim_u_8_strict');
  late final _cst_new_list_record_i_32_list_prim_u_8_strict =
      _cst_new_list_record_i_32_list_prim_u_8_strictPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_i_32_list_prim_u_8_strict> Function(
              int)>();

  ffi.Pointer<wire_cst_list_record_i_32_string> cst_new_list_record_i_32_string(
    int len,
  ) {
    return _cst_new_list_record_i_32_string(
      len,
    );
  }

  late final _cst_new_list_record_i_32_stringPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_string> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_string');
  late final _cst_new_list_record_i_32_string =
      _cst_new_list_record_i_32_stringPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_i_32_string> Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_u_16> cst_new_list_record_i_32_u_16(
    int len,
  ) {
    return _cst_new_list_record_i_32_u_16(
      len,
    );
  }

  late final _cst_new_list_record_i_32_u_16Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_u_16> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_u_16');
  late final _cst_new_list_record_i_32_u_16 = _cst_new_list_record_i_32_u_16Ptr
      .asFunction<ffi.Pointer<wire_cst_list_record_i_32_u_16> Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_u_32> cst_new_list_record_i_32_u_32(
    int len,
  ) {
    return _cst_new_list_record_i_32_u_32(
      len,
    );
  }

  late final _cst_new_list_record_i_32_u_32Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_u_32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_u_32');
  late final _cst_new_list_record_i_32_u_32 = _cst_new_list_record_i_32_u_32Ptr
      .asFunction<ffi.Pointer<wire_cst_list_record_i_32_u_32> Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_u_64> cst_new_list_record_i_32_u_64(
    int len,
  ) {
    return _cst_new_list_record_i_32_u_64(
      len,
    );
  }

  late final _cst_new_list_record_i_32_u_64Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_u_64> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_u_64');
  late final _cst_new_list_record_i_32_u_64 = _cst_new_list_record_i_32_u_64Ptr
      .asFunction<ffi.Pointer<wire_cst_list_record_i_32_u_64> Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_u_8> cst_new_list_record_i_32_u_8(
    int len,
  ) {
    return _cst_new_list_record_i_32_u_8(
      len,
    );
  }

  late final _cst_new_list_record_i_32_u_8Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_u_8> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_u_8');
  late final _cst_new_list_record_i_32_u_8 = _cst_new_list_record_i_32_u_8Ptr
      .asFunction<ffi.Pointer<wire_cst_list_record_i_32_u_8> Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_usize> cst_new_list_record_i_32_usize(
    int len,
  ) {
    return _cst_new_list_record_i_32_usize(
      len,
    );
  }

  late final _cst_new_list_record_i_32_usizePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_usize> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_usize');
  late final _cst_new_list_record_i_32_usize =
      _cst_new_list_record_i_32_usizePtr.asFunction<
          ffi.Pointer<wire_cst_list_record_i_32_usize> Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_normal>
      cst_new_list_record_string_enum_simple_twin_normal(
    int len,
  ) {
    return _cst_new_list_record_string_enum_simple_twin_normal(
      len,
    );
  }

  late final _cst_new_list_record_string_enum_simple_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_normal>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_enum_simple_twin_normal');
  late final _cst_new_list_record_string_enum_simple_twin_normal =
      _cst_new_list_record_string_enum_simple_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_normal>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_rust_async>
      cst_new_list_record_string_enum_simple_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_record_string_enum_simple_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_record_string_enum_simple_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_record_string_enum_simple_twin_rust_async>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_enum_simple_twin_rust_async');
  late final _cst_new_list_record_string_enum_simple_twin_rust_async =
      _cst_new_list_record_string_enum_simple_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_rust_async>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync>
      cst_new_list_record_string_enum_simple_twin_sync(
    int len,
  ) {
    return _cst_new_list_record_string_enum_simple_twin_sync(
      len,
    );
  }

  late final _cst_new_list_record_string_enum_simple_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_enum_simple_twin_sync');
  late final _cst_new_list_record_string_enum_simple_twin_sync =
      _cst_new_list_record_string_enum_simple_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_hash_map_value>
      cst_new_list_record_string_hash_map_value(
    int len,
  ) {
    return _cst_new_list_record_string_hash_map_value(
      len,
    );
  }

  late final _cst_new_list_record_string_hash_map_valuePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_hash_map_value> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_hash_map_value');
  late final _cst_new_list_record_string_hash_map_value =
      _cst_new_list_record_string_hash_map_valuePtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_hash_map_value> Function(
              int)>();

  ffi.Pointer<wire_cst_list_record_string_i_32> cst_new_list_record_string_i_32(
    int len,
  ) {
    return _cst_new_list_record_string_i_32(
      len,
    );
  }

  late final _cst_new_list_record_string_i_32Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_i_32> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_i_32');
  late final _cst_new_list_record_string_i_32 =
      _cst_new_list_record_string_i_32Ptr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_i_32> Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_normal>
      cst_new_list_record_string_kitchen_sink_twin_normal(
    int len,
  ) {
    return _cst_new_list_record_string_kitchen_sink_twin_normal(
      len,
    );
  }

  late final _cst_new_list_record_string_kitchen_sink_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_normal>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_kitchen_sink_twin_normal');
  late final _cst_new_list_record_string_kitchen_sink_twin_normal =
      _cst_new_list_record_string_kitchen_sink_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_normal>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_rust_async>
      cst_new_list_record_string_kitchen_sink_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_record_string_kitchen_sink_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_record_string_kitchen_sink_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_record_string_kitchen_sink_twin_rust_async>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_kitchen_sink_twin_rust_async');
  late final _cst_new_list_record_string_kitchen_sink_twin_rust_async =
      _cst_new_list_record_string_kitchen_sink_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_rust_async>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync>
      cst_new_list_record_string_kitchen_sink_twin_sync(
    int len,
  ) {
    return _cst_new_list_record_string_kitchen_sink_twin_sync(
      len,
    );
  }

  late final _cst_new_list_record_string_kitchen_sink_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_kitchen_sink_twin_sync');
  late final _cst_new_list_record_string_kitchen_sink_twin_sync =
      _cst_new_list_record_string_kitchen_sink_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_list_prim_u_8_strict>
      cst_new_list_record_string_list_prim_u_8_strict(
    int len,
  ) {
    return _cst_new_list_record_string_list_prim_u_8_strict(
      len,
    );
  }

  late final _cst_new_list_record_string_list_prim_u_8_strictPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_list_prim_u_8_strict>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_list_prim_u_8_strict');
  late final _cst_new_list_record_string_list_prim_u_8_strict =
      _cst_new_list_record_string_list_prim_u_8_strictPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_list_prim_u_8_strict>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_my_size>
      cst_new_list_record_string_my_size(
    int len,
  ) {
    return _cst_new_list_record_string_my_size(
      len,
    );
  }

  late final _cst_new_list_record_string_my_sizePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_my_size> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_my_size');
  late final _cst_new_list_record_string_my_size =
      _cst_new_list_record_string_my_sizePtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_my_size> Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_string>
      cst_new_list_record_string_string(
    int len,
  ) {
    return _cst_new_list_record_string_string(
      len,
    );
  }

  late final _cst_new_list_record_string_stringPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_string> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_string');
  late final _cst_new_list_record_string_string =
      _cst_new_list_record_string_stringPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_string> Function(int)>();

  ffi.Pointer<wire_cst_list_record_u_8_application_mode>
      cst_new_list_record_u_8_application_mode(
    int len,
  ) {
    return _cst_new_list_record_u_8_application_mode(
      len,
    );
  }

  late final _cst_new_list_record_u_8_application_modePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_u_8_application_mode> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_u_8_application_mode');
  late final _cst_new_list_record_u_8_application_mode =
      _cst_new_list_record_u_8_application_modePtr.asFunction<
          ffi.Pointer<wire_cst_list_record_u_8_application_mode> Function(
              int)>();

  ffi.Pointer<wire_cst_list_simple_struct_twin_normal>
      cst_new_list_simple_struct_twin_normal(
    int len,
  ) {
    return _cst_new_list_simple_struct_twin_normal(
      len,
    );
  }

  late final _cst_new_list_simple_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_simple_struct_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_simple_struct_twin_normal');
  late final _cst_new_list_simple_struct_twin_normal =
      _cst_new_list_simple_struct_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_simple_struct_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_simple_struct_twin_rust_async>
      cst_new_list_simple_struct_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_simple_struct_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_simple_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_simple_struct_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_simple_struct_twin_rust_async');
  late final _cst_new_list_simple_struct_twin_rust_async =
      _cst_new_list_simple_struct_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_simple_struct_twin_rust_async> Function(
              int)>();

  ffi.Pointer<wire_cst_list_simple_struct_twin_sync>
      cst_new_list_simple_struct_twin_sync(
    int len,
  ) {
    return _cst_new_list_simple_struct_twin_sync(
      len,
    );
  }

  late final _cst_new_list_simple_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_simple_struct_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_simple_struct_twin_sync');
  late final _cst_new_list_simple_struct_twin_sync =
      _cst_new_list_simple_struct_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_simple_struct_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_sum_with_twin_normal>
      cst_new_list_sum_with_twin_normal(
    int len,
  ) {
    return _cst_new_list_sum_with_twin_normal(
      len,
    );
  }

  late final _cst_new_list_sum_with_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_sum_with_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_sum_with_twin_normal');
  late final _cst_new_list_sum_with_twin_normal =
      _cst_new_list_sum_with_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_sum_with_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_sum_with_twin_rust_async>
      cst_new_list_sum_with_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_sum_with_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_sum_with_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_sum_with_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_sum_with_twin_rust_async');
  late final _cst_new_list_sum_with_twin_rust_async =
      _cst_new_list_sum_with_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_sum_with_twin_rust_async> Function(int)>();

  ffi.Pointer<wire_cst_list_sum_with_twin_sync> cst_new_list_sum_with_twin_sync(
    int len,
  ) {
    return _cst_new_list_sum_with_twin_sync(
      len,
    );
  }

  late final _cst_new_list_sum_with_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_sum_with_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_sum_with_twin_sync');
  late final _cst_new_list_sum_with_twin_sync =
      _cst_new_list_sum_with_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_sum_with_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_test_id_twin_normal>
      cst_new_list_test_id_twin_normal(
    int len,
  ) {
    return _cst_new_list_test_id_twin_normal(
      len,
    );
  }

  late final _cst_new_list_test_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_test_id_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_test_id_twin_normal');
  late final _cst_new_list_test_id_twin_normal =
      _cst_new_list_test_id_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_test_id_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_test_id_twin_rust_async>
      cst_new_list_test_id_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_test_id_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_test_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_test_id_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_test_id_twin_rust_async');
  late final _cst_new_list_test_id_twin_rust_async =
      _cst_new_list_test_id_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_test_id_twin_rust_async> Function(int)>();

  ffi.Pointer<wire_cst_list_test_id_twin_sync> cst_new_list_test_id_twin_sync(
    int len,
  ) {
    return _cst_new_list_test_id_twin_sync(
      len,
    );
  }

  late final _cst_new_list_test_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_test_id_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_test_id_twin_sync');
  late final _cst_new_list_test_id_twin_sync =
      _cst_new_list_test_id_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_test_id_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_weekdays_twin_normal>
      cst_new_list_weekdays_twin_normal(
    int len,
  ) {
    return _cst_new_list_weekdays_twin_normal(
      len,
    );
  }

  late final _cst_new_list_weekdays_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_weekdays_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_weekdays_twin_normal');
  late final _cst_new_list_weekdays_twin_normal =
      _cst_new_list_weekdays_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_weekdays_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_weekdays_twin_rust_async>
      cst_new_list_weekdays_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_weekdays_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_weekdays_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_weekdays_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_weekdays_twin_rust_async');
  late final _cst_new_list_weekdays_twin_rust_async =
      _cst_new_list_weekdays_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_weekdays_twin_rust_async> Function(int)>();

  ffi.Pointer<wire_cst_list_weekdays_twin_sync> cst_new_list_weekdays_twin_sync(
    int len,
  ) {
    return _cst_new_list_weekdays_twin_sync(
      len,
    );
  }

  late final _cst_new_list_weekdays_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_weekdays_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_weekdays_twin_sync');
  late final _cst_new_list_weekdays_twin_sync =
      _cst_new_list_weekdays_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_weekdays_twin_sync> Function(int)>();

  int dummy_method_to_enforce_bundling() {
    return _dummy_method_to_enforce_bundling();
  }

  late final _dummy_method_to_enforce_bundlingPtr =
      _lookup<ffi.NativeFunction<ffi.Int64 Function()>>(
          'dummy_method_to_enforce_bundling');
  late final _dummy_method_to_enforce_bundling =
      _dummy_method_to_enforce_bundlingPtr.asFunction<int Function()>();
}

typedef DartPostCObjectFnType
    = ffi.Pointer<ffi.NativeFunction<DartPostCObjectFnTypeFunction>>;
typedef DartPostCObjectFnTypeFunction = ffi.Bool Function(
    DartPort port_id, ffi.Pointer<ffi.Void> message);
typedef DartDartPostCObjectFnTypeFunction = bool Function(
    DartDartPort port_id, ffi.Pointer<ffi.Void> message);
typedef DartPort = ffi.Int64;
typedef DartDartPort = int;

final class benchmark_raw_list_prim_u_8 extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_u_8_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_i_32_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_test_id_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32_strict> field0;
}

final class wire_cst_list_prim_f_64_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Double> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_test_id_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_test_id_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_feed_id_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_blob_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_message_id_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_customized_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> final_field;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> non_final_field;
}

final class wire_cst_user_id_twin_normal extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_list_Chrono_Duration extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_Chrono_Naive extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_feature_chrono_twin_normal extends ffi.Struct {
  @ffi.Int64()
  external int utc;

  @ffi.Int64()
  external int local;

  @ffi.Int64()
  external int duration;

  @ffi.Int64()
  external int naive;
}

final class wire_cst_struct_with_comments_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int field_with_comments;
}

final class wire_cst_EnumDartOpaqueTwinNormal_Primitive extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_EnumDartOpaqueTwinNormal_Opaque extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class EnumDartOpaqueTwinNormalKind extends ffi.Union {
  external wire_cst_EnumDartOpaqueTwinNormal_Primitive Primitive;

  external wire_cst_EnumDartOpaqueTwinNormal_Opaque Opaque;
}

final class wire_cst_enum_dart_opaque_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumDartOpaqueTwinNormalKind kind;
}

final class wire_cst_dart_opaque_nested_twin_normal extends ffi.Struct {
  external ffi.Pointer<ffi.Void> first;

  external ffi.Pointer<ffi.Void> second;
}

final class wire_cst_list_DartOpaque extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Void>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_struct_in_upper_level extends ffi.Struct {
  @ffi.UintPtr()
  external int upper;
}

final class wire_cst_struct_in_lower_level extends ffi.Struct {
  external wire_cst_struct_in_upper_level inner;
}

final class wire_cst_EnumWithItemMixedTwinNormal_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_EnumWithItemMixedTwinNormal_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> c_field;
}

final class EnumWithItemMixedTwinNormalKind extends ffi.Union {
  external wire_cst_EnumWithItemMixedTwinNormal_B B;

  external wire_cst_EnumWithItemMixedTwinNormal_C C;
}

final class wire_cst_enum_with_item_mixed_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemMixedTwinNormalKind kind;
}

final class wire_cst_EnumWithItemStructTwinNormal_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> a_field;
}

final class wire_cst_EnumWithItemStructTwinNormal_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32_strict> b_field;
}

final class EnumWithItemStructTwinNormalKind extends ffi.Union {
  external wire_cst_EnumWithItemStructTwinNormal_A A;

  external wire_cst_EnumWithItemStructTwinNormal_B B;
}

final class wire_cst_enum_with_item_struct_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemStructTwinNormalKind kind;
}

final class wire_cst_EnumWithItemTupleTwinNormal_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_EnumWithItemTupleTwinNormal_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32_strict> field0;
}

final class EnumWithItemTupleTwinNormalKind extends ffi.Union {
  external wire_cst_EnumWithItemTupleTwinNormal_A A;

  external wire_cst_EnumWithItemTupleTwinNormal_B B;
}

final class wire_cst_enum_with_item_tuple_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemTupleTwinNormalKind kind;
}

final class wire_cst_KitchenSinkTwinNormal_Primitives extends ffi.Struct {
  @ffi.Int32()
  external int int32;

  @ffi.Double()
  external double float64;

  @ffi.Bool()
  external bool boolean;
}

final class wire_cst_KitchenSinkTwinNormal_Nested extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external ffi.Pointer<wire_cst_kitchen_sink_twin_normal> field1;
}

final class wire_cst_kitchen_sink_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external KitchenSinkTwinNormalKind kind;
}

final class KitchenSinkTwinNormalKind extends ffi.Union {
  external wire_cst_KitchenSinkTwinNormal_Primitives Primitives;

  external wire_cst_KitchenSinkTwinNormal_Nested Nested;

  external wire_cst_KitchenSinkTwinNormal_Optional Optional;

  external wire_cst_KitchenSinkTwinNormal_Buffer Buffer;

  external wire_cst_KitchenSinkTwinNormal_Enums Enums;
}

final class wire_cst_KitchenSinkTwinNormal_Optional extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> field0;

  external ffi.Pointer<ffi.Int32> field1;
}

final class wire_cst_KitchenSinkTwinNormal_Buffer extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_KitchenSinkTwinNormal_Enums extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_SpeedTwinNormal_GPS extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class SpeedTwinNormalKind extends ffi.Union {
  external wire_cst_SpeedTwinNormal_GPS GPS;
}

final class wire_cst_speed_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external SpeedTwinNormalKind kind;
}

final class wire_cst_MeasureTwinNormal_Speed extends ffi.Struct {
  external ffi.Pointer<wire_cst_speed_twin_normal> field0;
}

final class wire_cst_DistanceTwinNormal_Map extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class DistanceTwinNormalKind extends ffi.Union {
  external wire_cst_DistanceTwinNormal_Map Map;
}

final class wire_cst_distance_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external DistanceTwinNormalKind kind;
}

final class wire_cst_MeasureTwinNormal_Distance extends ffi.Struct {
  external ffi.Pointer<wire_cst_distance_twin_normal> field0;
}

final class MeasureTwinNormalKind extends ffi.Union {
  external wire_cst_MeasureTwinNormal_Speed Speed;

  external wire_cst_MeasureTwinNormal_Distance Distance;
}

final class wire_cst_measure_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external MeasureTwinNormalKind kind;
}

final class wire_cst_note_twin_normal extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> day;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> body;
}

final class wire_cst_event_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> address;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> payload;
}

final class wire_cst_custom_struct_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> message;
}

final class wire_cst_some_struct_twin_normal extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_CustomNestedErrorOuterTwinNormal_One extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_CustomNestedErrorInnerTwinNormal_Three extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_CustomNestedErrorInnerTwinNormal_Four extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedErrorInnerTwinNormalKind extends ffi.Union {
  external wire_cst_CustomNestedErrorInnerTwinNormal_Three Three;

  external wire_cst_CustomNestedErrorInnerTwinNormal_Four Four;
}

final class wire_cst_custom_nested_error_inner_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorInnerTwinNormalKind kind;
}

final class wire_cst_CustomNestedErrorOuterTwinNormal_Two extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_inner_twin_normal> field0;
}

final class CustomNestedErrorOuterTwinNormalKind extends ffi.Union {
  external wire_cst_CustomNestedErrorOuterTwinNormal_One One;

  external wire_cst_CustomNestedErrorOuterTwinNormal_Two Two;
}

final class wire_cst_custom_nested_error_outer_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorOuterTwinNormalKind kind;
}

final class wire_cst_custom_struct_error_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> a;
}

final class wire_cst_my_struct extends ffi.Struct {
  @ffi.Bool()
  external bool content;
}

final class wire_cst_macro_struct extends ffi.Struct {
  @ffi.Int32()
  external int data;
}

final class wire_cst_record_i_32_i_32 extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_i_32_i_32 extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_i_32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_list_prim_u_8_strict extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field1;
}

final class wire_cst_list_record_string_list_prim_u_8_strict
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_list_prim_u_8_strict> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_kitchen_sink_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;

  external wire_cst_kitchen_sink_twin_normal field1;
}

final class wire_cst_list_record_string_kitchen_sink_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_kitchen_sink_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_enum_simple_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_string_enum_simple_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_enum_simple_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_string extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field1;
}

final class wire_cst_list_record_string_string extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_string> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_my_size extends ffi.Struct {
  @ffi.Int32()
  external int width;

  @ffi.Int32()
  external int height;
}

final class wire_cst_record_string_my_size extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;

  external wire_cst_my_size field1;
}

final class wire_cst_list_record_string_my_size extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_my_size> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_String extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_list_prim_u_8_strict>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_concatenate_with_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> a;
}

final class wire_cst_my_callable_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> one;
}

final class wire_cst_simple_struct_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> one;
}

final class wire_cst_list_simple_struct_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_simple_struct_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_sum_with_twin_normal extends ffi.Struct {
  @ffi.Uint32()
  external int x;
}

final class wire_cst_numbers extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32_strict> field0;
}

final class wire_cst_sequences extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32_strict> field0;
}

final class wire_cst_application_env_var extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;

  @ffi.Bool()
  external bool field1;
}

final class wire_cst_list_application_env_var extends ffi.Struct {
  external ffi.Pointer<wire_cst_application_env_var> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_application_env extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_application_env_var> vars;
}

final class wire_cst_application_settings extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> name;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> version;

  @ffi.Int32()
  external int mode;

  external ffi.Pointer<wire_cst_application_env> env;

  external ffi.Pointer<wire_cst_application_env> env_optional;
}

final class wire_cst_list_my_tree_node_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_my_tree_node_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_my_tree_node_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int value_i32;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> value_vec_u8;

  @ffi.Bool()
  external bool value_boolean;

  external ffi.Pointer<wire_cst_list_my_tree_node_twin_normal> children;
}

final class wire_cst_my_nested_struct_twin_normal extends ffi.Struct {
  external wire_cst_my_tree_node_twin_normal tree_node;

  @ffi.Int32()
  external int weekday;
}

final class wire_cst_list_prim_u_8_loose extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_weekdays_twin_normal extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_a_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> a;
}

final class wire_cst_AbcTwinNormal_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_a_twin_normal> field0;
}

final class wire_cst_b_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int b;
}

final class wire_cst_AbcTwinNormal_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_b_twin_normal> field0;
}

final class wire_cst_c_twin_normal extends ffi.Struct {
  @ffi.Bool()
  external bool c;
}

final class wire_cst_AbcTwinNormal_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_c_twin_normal> field0;
}

final class wire_cst_AbcTwinNormal_JustInt extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class AbcTwinNormalKind extends ffi.Union {
  external wire_cst_AbcTwinNormal_A A;

  external wire_cst_AbcTwinNormal_B B;

  external wire_cst_AbcTwinNormal_C C;

  external wire_cst_AbcTwinNormal_JustInt JustInt;
}

final class wire_cst_abc_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external AbcTwinNormalKind kind;
}

final class wire_cst_struct_with_enum_twin_normal extends ffi.Struct {
  external wire_cst_abc_twin_normal abc1;

  external wire_cst_abc_twin_normal abc2;
}

final class wire_cst_empty_twin_normal extends ffi.Opaque {}

final class wire_cst_list_my_size extends ffi.Struct {
  external ffi.Pointer<wire_cst_my_size> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_new_type_int_twin_normal extends ffi.Struct {
  @ffi.Int64()
  external int field0;
}

final class wire_cst_list_prim_i_8_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Int8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_f_32_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Float> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_attribute_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> value;
}

final class wire_cst_list_attribute_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_attribute_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_opt_box_autoadd_attribute_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_attribute_twin_normal>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_exotic_optionals_twin_normal extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> int32;

  external ffi.Pointer<ffi.Int64> int64;

  external ffi.Pointer<ffi.Double> float64;

  external ffi.Pointer<ffi.Bool> boolean;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> zerocopy;

  external ffi.Pointer<wire_cst_list_prim_i_8_strict> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_32_strict> int32list;

  external ffi.Pointer<wire_cst_list_prim_f_32_strict> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64_strict> float64list;

  external ffi.Pointer<wire_cst_list_attribute_twin_normal> attributes;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_normal>
      attributes_nullable;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_normal>
      nullable_attributes;

  external ffi.Pointer<wire_cst_new_type_int_twin_normal> newtypeint;
}

final class wire_cst_list_opt_box_autoadd_i_32 extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Int32>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_opt_box_autoadd_weekdays_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Int32>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_opt_String extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_list_prim_u_8_strict>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_opt_list_prim_i_32_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_list_prim_i_32_strict>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_opt_vecs_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32> i32;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_normal>
      enums;

  external ffi.Pointer<wire_cst_list_opt_String> strings;

  external ffi.Pointer<wire_cst_list_opt_list_prim_i_32_strict> buffers;
}

final class wire_cst_test_id_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32_strict> field0;
}

final class wire_cst_list_test_id_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_test_id_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_feed_id_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_blob_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_message_id_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_test_id_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32_strict> field0;
}

final class wire_cst_list_test_id_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_test_id_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_feed_id_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_blob_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_message_id_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_customized_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> final_field;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> non_final_field;
}

final class wire_cst_user_id_twin_rust_async extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_customized_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> final_field;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> non_final_field;
}

final class wire_cst_user_id_twin_sync extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_BasicGeneralEnumTwinNormal_Apple extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field;
}

final class BasicGeneralEnumTwinNormalKind extends ffi.Union {
  external wire_cst_BasicGeneralEnumTwinNormal_Apple Apple;
}

final class wire_cst_basic_general_enum_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external BasicGeneralEnumTwinNormalKind kind;
}

final class wire_cst_basic_struct_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> apple;

  external ffi.Pointer<ffi.Int32> orange;
}

final class wire_cst_list_basic_general_enum_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_basic_general_enum_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_basic_primitive_enum_twin_normal extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_basic_struct_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_basic_struct_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_bool extends ffi.Struct {
  external ffi.Pointer<ffi.Bool> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_list_prim_u_8_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_list_prim_u_8_strict>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_f_32_loose extends ffi.Struct {
  external ffi.Pointer<ffi.Float> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_f_64_loose extends ffi.Struct {
  external ffi.Pointer<ffi.Double> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_i_16_loose extends ffi.Struct {
  external ffi.Pointer<ffi.Int16> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_i_32_loose extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_i_64_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_i_8_loose extends ffi.Struct {
  external ffi.Pointer<ffi.Int8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_u_16_loose extends ffi.Struct {
  external ffi.Pointer<ffi.Uint16> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_u_32_loose extends ffi.Struct {
  external ffi.Pointer<ffi.Uint32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_u_64_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Uint64> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_BasicGeneralEnumTwinRustAsync_Apple extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field;
}

final class BasicGeneralEnumTwinRustAsyncKind extends ffi.Union {
  external wire_cst_BasicGeneralEnumTwinRustAsync_Apple Apple;
}

final class wire_cst_basic_general_enum_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external BasicGeneralEnumTwinRustAsyncKind kind;
}

final class wire_cst_list_basic_general_enum_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_basic_general_enum_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_basic_primitive_enum_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_basic_struct_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> apple;

  external ffi.Pointer<ffi.Int32> orange;
}

final class wire_cst_list_basic_struct_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_basic_struct_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_BasicGeneralEnumTwinSync_Apple extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field;
}

final class BasicGeneralEnumTwinSyncKind extends ffi.Union {
  external wire_cst_BasicGeneralEnumTwinSync_Apple Apple;
}

final class wire_cst_basic_general_enum_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external BasicGeneralEnumTwinSyncKind kind;
}

final class wire_cst_list_basic_general_enum_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_basic_general_enum_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_basic_primitive_enum_twin_sync extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_basic_struct_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> apple;

  external ffi.Pointer<ffi.Int32> orange;
}

final class wire_cst_list_basic_struct_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_basic_struct_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_basic_general_enum_twin_normal
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external wire_cst_basic_general_enum_twin_normal field1;
}

final class wire_cst_list_record_i_32_basic_general_enum_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_basic_general_enum_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_basic_primitive_enum_twin_normal
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_i_32_basic_primitive_enum_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_basic_primitive_enum_twin_normal>
      ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_basic_struct_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external wire_cst_basic_struct_twin_normal field1;
}

final class wire_cst_list_record_i_32_basic_struct_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_basic_struct_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_bool extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Bool()
  external bool field1;
}

final class wire_cst_list_record_i_32_bool extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_bool> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_list_prim_u_8_strict extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field1;
}

final class wire_cst_list_record_i_32_list_prim_u_8_strict extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_list_prim_u_8_strict> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_f_32 extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Float()
  external double field1;
}

final class wire_cst_list_record_i_32_f_32 extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_f_32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_f_64 extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Double()
  external double field1;
}

final class wire_cst_list_record_i_32_f_64 extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_f_64> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_i_16 extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int16()
  external int field1;
}

final class wire_cst_list_record_i_32_i_16 extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_i_16> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_i_64 extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int64()
  external int field1;
}

final class wire_cst_list_record_i_32_i_64 extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_i_64> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_i_8 extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int8()
  external int field1;
}

final class wire_cst_list_record_i_32_i_8 extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_i_8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_isize extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.IntPtr()
  external int field1;
}

final class wire_cst_list_record_i_32_isize extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_isize> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_string extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field1;
}

final class wire_cst_list_record_i_32_string extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_string> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_u_16 extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Uint16()
  external int field1;
}

final class wire_cst_list_record_i_32_u_16 extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_u_16> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_u_32 extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Uint32()
  external int field1;
}

final class wire_cst_list_record_i_32_u_32 extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_u_32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_u_64 extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Uint64()
  external int field1;
}

final class wire_cst_list_record_i_32_u_64 extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_u_64> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_u_8 extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Uint8()
  external int field1;
}

final class wire_cst_list_record_i_32_u_8 extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_u_8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_usize extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.UintPtr()
  external int field1;
}

final class wire_cst_list_record_i_32_usize extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_usize> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_basic_general_enum_twin_rust_async
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external wire_cst_basic_general_enum_twin_rust_async field1;
}

final class wire_cst_list_record_i_32_basic_general_enum_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_basic_general_enum_twin_rust_async>
      ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_basic_primitive_enum_twin_rust_async
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_i_32_basic_primitive_enum_twin_rust_async
    extends ffi.Struct {
  external ffi
      .Pointer<wire_cst_record_i_32_basic_primitive_enum_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_basic_struct_twin_rust_async
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external wire_cst_basic_struct_twin_rust_async field1;
}

final class wire_cst_list_record_i_32_basic_struct_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_basic_struct_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_basic_general_enum_twin_sync
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external wire_cst_basic_general_enum_twin_sync field1;
}

final class wire_cst_list_record_i_32_basic_general_enum_twin_sync
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_basic_general_enum_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_basic_primitive_enum_twin_sync
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_i_32_basic_primitive_enum_twin_sync
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_basic_primitive_enum_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_i_32_basic_struct_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external wire_cst_basic_struct_twin_sync field1;
}

final class wire_cst_list_record_i_32_basic_struct_twin_sync
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_basic_struct_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_benchmark_binary_tree_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> name;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal> left;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal> right;
}

final class wire_cst_benchmark_blob_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> first;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> second;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> third;
}

final class wire_cst_benchmark_binary_tree_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> name;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async> left;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async> right;
}

final class wire_cst_benchmark_blob_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> first;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> second;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> third;
}

final class wire_cst_benchmark_binary_tree_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> name;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync> left;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync> right;
}

final class wire_cst_benchmark_blob_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> first;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> second;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> third;
}

final class wire_cst_feature_chrono_twin_rust_async extends ffi.Struct {
  @ffi.Int64()
  external int utc;

  @ffi.Int64()
  external int local;

  @ffi.Int64()
  external int duration;

  @ffi.Int64()
  external int naive;
}

final class wire_cst_feature_chrono_twin_sync extends ffi.Struct {
  @ffi.Int64()
  external int utc;

  @ffi.Int64()
  external int local;

  @ffi.Int64()
  external int duration;

  @ffi.Int64()
  external int naive;
}

final class wire_cst_struct_with_comments_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int field_with_comments;
}

final class wire_cst_struct_with_comments_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int field_with_comments;
}

final class wire_cst_EnumDartOpaqueTwinRustAsync_Primitive extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_EnumDartOpaqueTwinRustAsync_Opaque extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class EnumDartOpaqueTwinRustAsyncKind extends ffi.Union {
  external wire_cst_EnumDartOpaqueTwinRustAsync_Primitive Primitive;

  external wire_cst_EnumDartOpaqueTwinRustAsync_Opaque Opaque;
}

final class wire_cst_enum_dart_opaque_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumDartOpaqueTwinRustAsyncKind kind;
}

final class wire_cst_dart_opaque_nested_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<ffi.Void> first;

  external ffi.Pointer<ffi.Void> second;
}

final class wire_cst_EnumDartOpaqueTwinSync_Primitive extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_EnumDartOpaqueTwinSync_Opaque extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class EnumDartOpaqueTwinSyncKind extends ffi.Union {
  external wire_cst_EnumDartOpaqueTwinSync_Primitive Primitive;

  external wire_cst_EnumDartOpaqueTwinSync_Opaque Opaque;
}

final class wire_cst_enum_dart_opaque_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumDartOpaqueTwinSyncKind kind;
}

final class wire_cst_dart_opaque_nested_twin_sync extends ffi.Struct {
  external ffi.Pointer<ffi.Void> first;

  external ffi.Pointer<ffi.Void> second;
}

final class wire_cst_EnumWithItemMixedTwinRustAsync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_EnumWithItemMixedTwinRustAsync_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> c_field;
}

final class EnumWithItemMixedTwinRustAsyncKind extends ffi.Union {
  external wire_cst_EnumWithItemMixedTwinRustAsync_B B;

  external wire_cst_EnumWithItemMixedTwinRustAsync_C C;
}

final class wire_cst_enum_with_item_mixed_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemMixedTwinRustAsyncKind kind;
}

final class wire_cst_EnumWithItemStructTwinRustAsync_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> a_field;
}

final class wire_cst_EnumWithItemStructTwinRustAsync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32_strict> b_field;
}

final class EnumWithItemStructTwinRustAsyncKind extends ffi.Union {
  external wire_cst_EnumWithItemStructTwinRustAsync_A A;

  external wire_cst_EnumWithItemStructTwinRustAsync_B B;
}

final class wire_cst_enum_with_item_struct_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemStructTwinRustAsyncKind kind;
}

final class wire_cst_EnumWithItemTupleTwinRustAsync_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_EnumWithItemTupleTwinRustAsync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32_strict> field0;
}

final class EnumWithItemTupleTwinRustAsyncKind extends ffi.Union {
  external wire_cst_EnumWithItemTupleTwinRustAsync_A A;

  external wire_cst_EnumWithItemTupleTwinRustAsync_B B;
}

final class wire_cst_enum_with_item_tuple_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemTupleTwinRustAsyncKind kind;
}

final class wire_cst_KitchenSinkTwinRustAsync_Primitives extends ffi.Struct {
  @ffi.Int32()
  external int int32;

  @ffi.Double()
  external double float64;

  @ffi.Bool()
  external bool boolean;
}

final class wire_cst_KitchenSinkTwinRustAsync_Nested extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> field1;
}

final class wire_cst_kitchen_sink_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external KitchenSinkTwinRustAsyncKind kind;
}

final class KitchenSinkTwinRustAsyncKind extends ffi.Union {
  external wire_cst_KitchenSinkTwinRustAsync_Primitives Primitives;

  external wire_cst_KitchenSinkTwinRustAsync_Nested Nested;

  external wire_cst_KitchenSinkTwinRustAsync_Optional Optional;

  external wire_cst_KitchenSinkTwinRustAsync_Buffer Buffer;

  external wire_cst_KitchenSinkTwinRustAsync_Enums Enums;
}

final class wire_cst_KitchenSinkTwinRustAsync_Optional extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> field0;

  external ffi.Pointer<ffi.Int32> field1;
}

final class wire_cst_KitchenSinkTwinRustAsync_Buffer extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_KitchenSinkTwinRustAsync_Enums extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_SpeedTwinRustAsync_GPS extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class SpeedTwinRustAsyncKind extends ffi.Union {
  external wire_cst_SpeedTwinRustAsync_GPS GPS;
}

final class wire_cst_speed_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external SpeedTwinRustAsyncKind kind;
}

final class wire_cst_MeasureTwinRustAsync_Speed extends ffi.Struct {
  external ffi.Pointer<wire_cst_speed_twin_rust_async> field0;
}

final class wire_cst_DistanceTwinRustAsync_Map extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class DistanceTwinRustAsyncKind extends ffi.Union {
  external wire_cst_DistanceTwinRustAsync_Map Map;
}

final class wire_cst_distance_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external DistanceTwinRustAsyncKind kind;
}

final class wire_cst_MeasureTwinRustAsync_Distance extends ffi.Struct {
  external ffi.Pointer<wire_cst_distance_twin_rust_async> field0;
}

final class MeasureTwinRustAsyncKind extends ffi.Union {
  external wire_cst_MeasureTwinRustAsync_Speed Speed;

  external wire_cst_MeasureTwinRustAsync_Distance Distance;
}

final class wire_cst_measure_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external MeasureTwinRustAsyncKind kind;
}

final class wire_cst_note_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> day;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> body;
}

final class wire_cst_EnumWithItemMixedTwinSync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_EnumWithItemMixedTwinSync_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> c_field;
}

final class EnumWithItemMixedTwinSyncKind extends ffi.Union {
  external wire_cst_EnumWithItemMixedTwinSync_B B;

  external wire_cst_EnumWithItemMixedTwinSync_C C;
}

final class wire_cst_enum_with_item_mixed_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemMixedTwinSyncKind kind;
}

final class wire_cst_EnumWithItemStructTwinSync_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> a_field;
}

final class wire_cst_EnumWithItemStructTwinSync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32_strict> b_field;
}

final class EnumWithItemStructTwinSyncKind extends ffi.Union {
  external wire_cst_EnumWithItemStructTwinSync_A A;

  external wire_cst_EnumWithItemStructTwinSync_B B;
}

final class wire_cst_enum_with_item_struct_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemStructTwinSyncKind kind;
}

final class wire_cst_EnumWithItemTupleTwinSync_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_EnumWithItemTupleTwinSync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32_strict> field0;
}

final class EnumWithItemTupleTwinSyncKind extends ffi.Union {
  external wire_cst_EnumWithItemTupleTwinSync_A A;

  external wire_cst_EnumWithItemTupleTwinSync_B B;
}

final class wire_cst_enum_with_item_tuple_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemTupleTwinSyncKind kind;
}

final class wire_cst_KitchenSinkTwinSync_Primitives extends ffi.Struct {
  @ffi.Int32()
  external int int32;

  @ffi.Double()
  external double float64;

  @ffi.Bool()
  external bool boolean;
}

final class wire_cst_KitchenSinkTwinSync_Nested extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external ffi.Pointer<wire_cst_kitchen_sink_twin_sync> field1;
}

final class wire_cst_kitchen_sink_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external KitchenSinkTwinSyncKind kind;
}

final class KitchenSinkTwinSyncKind extends ffi.Union {
  external wire_cst_KitchenSinkTwinSync_Primitives Primitives;

  external wire_cst_KitchenSinkTwinSync_Nested Nested;

  external wire_cst_KitchenSinkTwinSync_Optional Optional;

  external wire_cst_KitchenSinkTwinSync_Buffer Buffer;

  external wire_cst_KitchenSinkTwinSync_Enums Enums;
}

final class wire_cst_KitchenSinkTwinSync_Optional extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> field0;

  external ffi.Pointer<ffi.Int32> field1;
}

final class wire_cst_KitchenSinkTwinSync_Buffer extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_KitchenSinkTwinSync_Enums extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_SpeedTwinSync_GPS extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class SpeedTwinSyncKind extends ffi.Union {
  external wire_cst_SpeedTwinSync_GPS GPS;
}

final class wire_cst_speed_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external SpeedTwinSyncKind kind;
}

final class wire_cst_MeasureTwinSync_Speed extends ffi.Struct {
  external ffi.Pointer<wire_cst_speed_twin_sync> field0;
}

final class wire_cst_DistanceTwinSync_Map extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class DistanceTwinSyncKind extends ffi.Union {
  external wire_cst_DistanceTwinSync_Map Map;
}

final class wire_cst_distance_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external DistanceTwinSyncKind kind;
}

final class wire_cst_MeasureTwinSync_Distance extends ffi.Struct {
  external ffi.Pointer<wire_cst_distance_twin_sync> field0;
}

final class MeasureTwinSyncKind extends ffi.Union {
  external wire_cst_MeasureTwinSync_Speed Speed;

  external wire_cst_MeasureTwinSync_Distance Distance;
}

final class wire_cst_measure_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external MeasureTwinSyncKind kind;
}

final class wire_cst_note_twin_sync extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> day;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> body;
}

final class wire_cst_event_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> address;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> payload;
}

final class wire_cst_custom_struct_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> message;
}

final class wire_cst_some_struct_twin_rust_async extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_CustomNestedErrorOuterTwinRustAsync_One
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_CustomNestedErrorInnerTwinRustAsync_Three
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_CustomNestedErrorInnerTwinRustAsync_Four
    extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedErrorInnerTwinRustAsyncKind extends ffi.Union {
  external wire_cst_CustomNestedErrorInnerTwinRustAsync_Three Three;

  external wire_cst_CustomNestedErrorInnerTwinRustAsync_Four Four;
}

final class wire_cst_custom_nested_error_inner_twin_rust_async
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorInnerTwinRustAsyncKind kind;
}

final class wire_cst_CustomNestedErrorOuterTwinRustAsync_Two
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_inner_twin_rust_async>
      field0;
}

final class CustomNestedErrorOuterTwinRustAsyncKind extends ffi.Union {
  external wire_cst_CustomNestedErrorOuterTwinRustAsync_One One;

  external wire_cst_CustomNestedErrorOuterTwinRustAsync_Two Two;
}

final class wire_cst_custom_nested_error_outer_twin_rust_async
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorOuterTwinRustAsyncKind kind;
}

final class wire_cst_custom_struct_error_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> a;
}

final class wire_cst_custom_struct_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> message;
}

final class wire_cst_some_struct_twin_sync extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_CustomNestedErrorOuterTwinSync_One extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_CustomNestedErrorInnerTwinSync_Three extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_CustomNestedErrorInnerTwinSync_Four extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedErrorInnerTwinSyncKind extends ffi.Union {
  external wire_cst_CustomNestedErrorInnerTwinSync_Three Three;

  external wire_cst_CustomNestedErrorInnerTwinSync_Four Four;
}

final class wire_cst_custom_nested_error_inner_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorInnerTwinSyncKind kind;
}

final class wire_cst_CustomNestedErrorOuterTwinSync_Two extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync> field0;
}

final class CustomNestedErrorOuterTwinSyncKind extends ffi.Union {
  external wire_cst_CustomNestedErrorOuterTwinSync_One One;

  external wire_cst_CustomNestedErrorOuterTwinSync_Two Two;
}

final class wire_cst_custom_nested_error_outer_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorOuterTwinSyncKind kind;
}

final class wire_cst_custom_struct_error_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> a;
}

final class wire_cst_record_string_kitchen_sink_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;

  external wire_cst_kitchen_sink_twin_rust_async field1;
}

final class wire_cst_list_record_string_kitchen_sink_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_kitchen_sink_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_enum_simple_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_string_enum_simple_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_enum_simple_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_kitchen_sink_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;

  external wire_cst_kitchen_sink_twin_sync field1;
}

final class wire_cst_list_record_string_kitchen_sink_twin_sync
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_kitchen_sink_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_enum_simple_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_string_enum_simple_twin_sync
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_enum_simple_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_concatenate_with_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> a;
}

final class wire_cst_my_callable_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> one;
}

final class wire_cst_simple_struct_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> one;
}

final class wire_cst_list_simple_struct_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_simple_struct_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_sum_with_twin_rust_async extends ffi.Struct {
  @ffi.Uint32()
  external int x;
}

final class wire_cst_concatenate_with_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> a;
}

final class wire_cst_my_callable_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> one;
}

final class wire_cst_simple_struct_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> one;
}

final class wire_cst_list_simple_struct_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_simple_struct_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_sum_with_twin_sync extends ffi.Struct {
  @ffi.Uint32()
  external int x;
}

final class wire_cst_list_my_tree_node_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_my_tree_node_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_my_tree_node_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int value_i32;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> value_vec_u8;

  @ffi.Bool()
  external bool value_boolean;

  external ffi.Pointer<wire_cst_list_my_tree_node_twin_rust_async> children;
}

final class wire_cst_my_nested_struct_twin_rust_async extends ffi.Struct {
  external wire_cst_my_tree_node_twin_rust_async tree_node;

  @ffi.Int32()
  external int weekday;
}

final class wire_cst_list_weekdays_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_a_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> a;
}

final class wire_cst_AbcTwinRustAsync_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_a_twin_rust_async> field0;
}

final class wire_cst_b_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int b;
}

final class wire_cst_AbcTwinRustAsync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_b_twin_rust_async> field0;
}

final class wire_cst_c_twin_rust_async extends ffi.Struct {
  @ffi.Bool()
  external bool c;
}

final class wire_cst_AbcTwinRustAsync_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_c_twin_rust_async> field0;
}

final class wire_cst_AbcTwinRustAsync_JustInt extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class AbcTwinRustAsyncKind extends ffi.Union {
  external wire_cst_AbcTwinRustAsync_A A;

  external wire_cst_AbcTwinRustAsync_B B;

  external wire_cst_AbcTwinRustAsync_C C;

  external wire_cst_AbcTwinRustAsync_JustInt JustInt;
}

final class wire_cst_abc_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external AbcTwinRustAsyncKind kind;
}

final class wire_cst_struct_with_enum_twin_rust_async extends ffi.Struct {
  external wire_cst_abc_twin_rust_async abc1;

  external wire_cst_abc_twin_rust_async abc2;
}

final class wire_cst_list_my_tree_node_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_my_tree_node_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_my_tree_node_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int value_i32;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> value_vec_u8;

  @ffi.Bool()
  external bool value_boolean;

  external ffi.Pointer<wire_cst_list_my_tree_node_twin_sync> children;
}

final class wire_cst_my_nested_struct_twin_sync extends ffi.Struct {
  external wire_cst_my_tree_node_twin_sync tree_node;

  @ffi.Int32()
  external int weekday;
}

final class wire_cst_list_weekdays_twin_sync extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_a_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> a;
}

final class wire_cst_AbcTwinSync_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_a_twin_sync> field0;
}

final class wire_cst_b_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int b;
}

final class wire_cst_AbcTwinSync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_b_twin_sync> field0;
}

final class wire_cst_c_twin_sync extends ffi.Struct {
  @ffi.Bool()
  external bool c;
}

final class wire_cst_AbcTwinSync_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_c_twin_sync> field0;
}

final class wire_cst_AbcTwinSync_JustInt extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class AbcTwinSyncKind extends ffi.Union {
  external wire_cst_AbcTwinSync_A A;

  external wire_cst_AbcTwinSync_B B;

  external wire_cst_AbcTwinSync_C C;

  external wire_cst_AbcTwinSync_JustInt JustInt;
}

final class wire_cst_abc_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external AbcTwinSyncKind kind;
}

final class wire_cst_struct_with_enum_twin_sync extends ffi.Struct {
  external wire_cst_abc_twin_sync abc1;

  external wire_cst_abc_twin_sync abc2;
}

final class wire_cst_empty_twin_rust_async extends ffi.Opaque {}

final class wire_cst_empty_twin_sync extends ffi.Opaque {}

final class wire_cst_new_type_int_twin_rust_async extends ffi.Struct {
  @ffi.Int64()
  external int field0;
}

final class wire_cst_new_type_int_twin_sync extends ffi.Struct {
  @ffi.Int64()
  external int field0;
}

final class wire_cst_attribute_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> value;
}

final class wire_cst_list_attribute_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_attribute_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_opt_box_autoadd_attribute_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_attribute_twin_rust_async>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_exotic_optionals_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> int32;

  external ffi.Pointer<ffi.Int64> int64;

  external ffi.Pointer<ffi.Double> float64;

  external ffi.Pointer<ffi.Bool> boolean;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> zerocopy;

  external ffi.Pointer<wire_cst_list_prim_i_8_strict> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_32_strict> int32list;

  external ffi.Pointer<wire_cst_list_prim_f_32_strict> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64_strict> float64list;

  external ffi.Pointer<wire_cst_list_attribute_twin_rust_async> attributes;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async>
      attributes_nullable;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async>
      nullable_attributes;

  external ffi.Pointer<wire_cst_new_type_int_twin_rust_async> newtypeint;
}

final class wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Int32>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_opt_vecs_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32> i32;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async>
      enums;

  external ffi.Pointer<wire_cst_list_opt_String> strings;

  external ffi.Pointer<wire_cst_list_opt_list_prim_i_32_strict> buffers;
}

final class wire_cst_attribute_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> value;
}

final class wire_cst_list_attribute_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_attribute_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_opt_box_autoadd_attribute_twin_sync
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_attribute_twin_sync>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_exotic_optionals_twin_sync extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> int32;

  external ffi.Pointer<ffi.Int64> int64;

  external ffi.Pointer<ffi.Double> float64;

  external ffi.Pointer<ffi.Bool> boolean;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> zerocopy;

  external ffi.Pointer<wire_cst_list_prim_i_8_strict> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_32_strict> int32list;

  external ffi.Pointer<wire_cst_list_prim_f_32_strict> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64_strict> float64list;

  external ffi.Pointer<wire_cst_list_attribute_twin_sync> attributes;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync>
      attributes_nullable;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync>
      nullable_attributes;

  external ffi.Pointer<wire_cst_new_type_int_twin_sync> newtypeint;
}

final class wire_cst_list_opt_box_autoadd_weekdays_twin_sync
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Int32>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_opt_vecs_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32> i32;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sync> enums;

  external ffi.Pointer<wire_cst_list_opt_String> strings;

  external ffi.Pointer<wire_cst_list_opt_list_prim_i_32_strict> buffers;
}

final class wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinMoi
    extends ffi.Struct {
  external ffi.Pointer<ffi.UintPtr> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_EnumWithGoodAndOpaqueTwinMoi_Good extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_EnumWithGoodAndOpaqueTwinMoi_Opaque extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class EnumWithGoodAndOpaqueTwinMoiKind extends ffi.Union {
  external wire_cst_EnumWithGoodAndOpaqueTwinMoi_Good Good;

  external wire_cst_EnumWithGoodAndOpaqueTwinMoi_Opaque Opaque;
}

final class wire_cst_enum_with_good_and_opaque_twin_moi extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithGoodAndOpaqueTwinMoiKind kind;
}

final class wire_cst_struct_with_explicit_auto_opaque_field_twin_moi
    extends ffi.Struct {
  @ffi.UintPtr()
  external int auto_opaque;

  @ffi.Int32()
  external int normal;
}

final class wire_cst_struct_with_good_and_opaque_field_twin_moi
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> good;

  @ffi.UintPtr()
  external int opaque;

  external ffi.Pointer<ffi.UintPtr> option_opaque;
}

final class wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsync
    extends ffi.Struct {
  external ffi.Pointer<ffi.UintPtr> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_EnumWithGoodAndOpaqueTwinRustAsync_Good
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_EnumWithGoodAndOpaqueTwinRustAsync_Opaque
    extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class EnumWithGoodAndOpaqueTwinRustAsyncKind extends ffi.Union {
  external wire_cst_EnumWithGoodAndOpaqueTwinRustAsync_Good Good;

  external wire_cst_EnumWithGoodAndOpaqueTwinRustAsync_Opaque Opaque;
}

final class wire_cst_enum_with_good_and_opaque_twin_rust_async
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithGoodAndOpaqueTwinRustAsyncKind kind;
}

final class wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async
    extends ffi.Struct {
  @ffi.UintPtr()
  external int auto_opaque;

  @ffi.Int32()
  external int normal;
}

final class wire_cst_struct_with_good_and_opaque_field_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> good;

  @ffi.UintPtr()
  external int opaque;

  external ffi.Pointer<ffi.UintPtr> option_opaque;
}

final class wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinRustAsyncMoi
    extends ffi.Struct {
  external ffi.Pointer<ffi.UintPtr> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_EnumWithGoodAndOpaqueTwinRustAsyncMoi_Good
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_EnumWithGoodAndOpaqueTwinRustAsyncMoi_Opaque
    extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class EnumWithGoodAndOpaqueTwinRustAsyncMoiKind extends ffi.Union {
  external wire_cst_EnumWithGoodAndOpaqueTwinRustAsyncMoi_Good Good;

  external wire_cst_EnumWithGoodAndOpaqueTwinRustAsyncMoi_Opaque Opaque;
}

final class wire_cst_enum_with_good_and_opaque_twin_rust_async_moi
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithGoodAndOpaqueTwinRustAsyncMoiKind kind;
}

final class wire_cst_struct_with_explicit_auto_opaque_field_twin_rust_async_moi
    extends ffi.Struct {
  @ffi.UintPtr()
  external int auto_opaque;

  @ffi.Int32()
  external int normal;
}

final class wire_cst_struct_with_good_and_opaque_field_twin_rust_async_moi
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> good;

  @ffi.UintPtr()
  external int opaque;

  external ffi.Pointer<ffi.UintPtr> option_opaque;
}

final class wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSync
    extends ffi.Struct {
  external ffi.Pointer<ffi.UintPtr> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_EnumWithGoodAndOpaqueTwinSync_Good extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_EnumWithGoodAndOpaqueTwinSync_Opaque extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class EnumWithGoodAndOpaqueTwinSyncKind extends ffi.Union {
  external wire_cst_EnumWithGoodAndOpaqueTwinSync_Good Good;

  external wire_cst_EnumWithGoodAndOpaqueTwinSync_Opaque Opaque;
}

final class wire_cst_enum_with_good_and_opaque_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithGoodAndOpaqueTwinSyncKind kind;
}

final class wire_cst_struct_with_explicit_auto_opaque_field_twin_sync
    extends ffi.Struct {
  @ffi.UintPtr()
  external int auto_opaque;

  @ffi.Int32()
  external int normal;
}

final class wire_cst_struct_with_good_and_opaque_field_twin_sync
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> good;

  @ffi.UintPtr()
  external int opaque;

  external ffi.Pointer<ffi.UintPtr> option_opaque;
}

final class wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinSyncMoi
    extends ffi.Struct {
  external ffi.Pointer<ffi.UintPtr> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_EnumWithGoodAndOpaqueTwinSyncMoi_Good extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_EnumWithGoodAndOpaqueTwinSyncMoi_Opaque
    extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class EnumWithGoodAndOpaqueTwinSyncMoiKind extends ffi.Union {
  external wire_cst_EnumWithGoodAndOpaqueTwinSyncMoi_Good Good;

  external wire_cst_EnumWithGoodAndOpaqueTwinSyncMoi_Opaque Opaque;
}

final class wire_cst_enum_with_good_and_opaque_twin_sync_moi
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithGoodAndOpaqueTwinSyncMoiKind kind;
}

final class wire_cst_struct_with_explicit_auto_opaque_field_twin_sync_moi
    extends ffi.Struct {
  @ffi.UintPtr()
  external int auto_opaque;

  @ffi.Int32()
  external int normal;
}

final class wire_cst_struct_with_good_and_opaque_field_twin_sync_moi
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> good;

  @ffi.UintPtr()
  external int opaque;

  external ffi.Pointer<ffi.UintPtr> option_opaque;
}

final class wire_cst_list_RustOpaque_HideDataTwinMoi extends ffi.Struct {
  external ffi.Pointer<ffi.UintPtr> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_EnumOpaqueTwinMoi_Struct extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinMoi_Primitive extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinMoi_TraitObj extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinMoi_Mutex extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinMoi_RwLock extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class EnumOpaqueTwinMoiKind extends ffi.Union {
  external wire_cst_EnumOpaqueTwinMoi_Struct Struct;

  external wire_cst_EnumOpaqueTwinMoi_Primitive Primitive;

  external wire_cst_EnumOpaqueTwinMoi_TraitObj TraitObj;

  external wire_cst_EnumOpaqueTwinMoi_Mutex Mutex;

  external wire_cst_EnumOpaqueTwinMoi_RwLock RwLock;
}

final class wire_cst_enum_opaque_twin_moi extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumOpaqueTwinMoiKind kind;
}

final class wire_cst_opaque_nested_twin_moi extends ffi.Struct {
  @ffi.UintPtr()
  external int first;

  @ffi.UintPtr()
  external int second;
}

final class wire_cst_list_RustOpaque_HideDataTwinRustAsync extends ffi.Struct {
  external ffi.Pointer<ffi.UintPtr> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_EnumOpaqueTwinRustAsync_Struct extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinRustAsync_Primitive extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinRustAsync_TraitObj extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinRustAsync_Mutex extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinRustAsync_RwLock extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class EnumOpaqueTwinRustAsyncKind extends ffi.Union {
  external wire_cst_EnumOpaqueTwinRustAsync_Struct Struct;

  external wire_cst_EnumOpaqueTwinRustAsync_Primitive Primitive;

  external wire_cst_EnumOpaqueTwinRustAsync_TraitObj TraitObj;

  external wire_cst_EnumOpaqueTwinRustAsync_Mutex Mutex;

  external wire_cst_EnumOpaqueTwinRustAsync_RwLock RwLock;
}

final class wire_cst_enum_opaque_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumOpaqueTwinRustAsyncKind kind;
}

final class wire_cst_opaque_nested_twin_rust_async extends ffi.Struct {
  @ffi.UintPtr()
  external int first;

  @ffi.UintPtr()
  external int second;
}

final class wire_cst_list_RustOpaque_HideDataTwinRustAsyncMoi
    extends ffi.Struct {
  external ffi.Pointer<ffi.UintPtr> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_EnumOpaqueTwinRustAsyncMoi_Struct extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinRustAsyncMoi_Primitive extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinRustAsyncMoi_TraitObj extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinRustAsyncMoi_Mutex extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinRustAsyncMoi_RwLock extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class EnumOpaqueTwinRustAsyncMoiKind extends ffi.Union {
  external wire_cst_EnumOpaqueTwinRustAsyncMoi_Struct Struct;

  external wire_cst_EnumOpaqueTwinRustAsyncMoi_Primitive Primitive;

  external wire_cst_EnumOpaqueTwinRustAsyncMoi_TraitObj TraitObj;

  external wire_cst_EnumOpaqueTwinRustAsyncMoi_Mutex Mutex;

  external wire_cst_EnumOpaqueTwinRustAsyncMoi_RwLock RwLock;
}

final class wire_cst_enum_opaque_twin_rust_async_moi extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumOpaqueTwinRustAsyncMoiKind kind;
}

final class wire_cst_opaque_nested_twin_rust_async_moi extends ffi.Struct {
  @ffi.UintPtr()
  external int first;

  @ffi.UintPtr()
  external int second;
}

final class wire_cst_list_RustOpaque_HideDataTwinSync extends ffi.Struct {
  external ffi.Pointer<ffi.UintPtr> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_EnumOpaqueTwinSync_Struct extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinSync_Primitive extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinSync_TraitObj extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinSync_Mutex extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinSync_RwLock extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class EnumOpaqueTwinSyncKind extends ffi.Union {
  external wire_cst_EnumOpaqueTwinSync_Struct Struct;

  external wire_cst_EnumOpaqueTwinSync_Primitive Primitive;

  external wire_cst_EnumOpaqueTwinSync_TraitObj TraitObj;

  external wire_cst_EnumOpaqueTwinSync_Mutex Mutex;

  external wire_cst_EnumOpaqueTwinSync_RwLock RwLock;
}

final class wire_cst_enum_opaque_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumOpaqueTwinSyncKind kind;
}

final class wire_cst_opaque_nested_twin_sync extends ffi.Struct {
  @ffi.UintPtr()
  external int first;

  @ffi.UintPtr()
  external int second;
}

final class wire_cst_list_RustOpaque_HideDataTwinSyncMoi extends ffi.Struct {
  external ffi.Pointer<ffi.UintPtr> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_EnumOpaqueTwinSyncMoi_Struct extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinSyncMoi_Primitive extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinSyncMoi_TraitObj extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinSyncMoi_Mutex extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinSyncMoi_RwLock extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class EnumOpaqueTwinSyncMoiKind extends ffi.Union {
  external wire_cst_EnumOpaqueTwinSyncMoi_Struct Struct;

  external wire_cst_EnumOpaqueTwinSyncMoi_Primitive Primitive;

  external wire_cst_EnumOpaqueTwinSyncMoi_TraitObj TraitObj;

  external wire_cst_EnumOpaqueTwinSyncMoi_Mutex Mutex;

  external wire_cst_EnumOpaqueTwinSyncMoi_RwLock RwLock;
}

final class wire_cst_enum_opaque_twin_sync_moi extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumOpaqueTwinSyncMoiKind kind;
}

final class wire_cst_opaque_nested_twin_sync_moi extends ffi.Struct {
  @ffi.UintPtr()
  external int first;

  @ffi.UintPtr()
  external int second;
}

final class wire_cst_struct_with_one_field_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int a;
}

final class wire_cst_struct_with_two_field_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int a;

  @ffi.Int32()
  external int b;
}

final class wire_cst_struct_with_zero_field_twin_rust_async
    extends ffi.Opaque {}

final class wire_cst_tuple_struct_with_one_field_twin_rust_async
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_tuple_struct_with_two_field_twin_rust_async
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_struct_with_one_field_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int a;
}

final class wire_cst_struct_with_two_field_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int a;

  @ffi.Int32()
  external int b;
}

final class wire_cst_struct_with_zero_field_twin_sync extends ffi.Opaque {}

final class wire_cst_tuple_struct_with_one_field_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_tuple_struct_with_two_field_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_record_string_i_32 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_string_i_32 extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_i_32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_feature_uuid_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> one;
}

final class wire_cst_list_Uuid extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_list_prim_u_8_strict>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_feature_uuid_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> one;
}

final class wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockNonCloneSimpleTwinNormal
    extends ffi.Struct {
  external ffi.Pointer<ffi.UintPtr> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_EnumWithGoodAndOpaqueTwinNormal_Good extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_EnumWithGoodAndOpaqueTwinNormal_Opaque extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class EnumWithGoodAndOpaqueTwinNormalKind extends ffi.Union {
  external wire_cst_EnumWithGoodAndOpaqueTwinNormal_Good Good;

  external wire_cst_EnumWithGoodAndOpaqueTwinNormal_Opaque Opaque;
}

final class wire_cst_enum_with_good_and_opaque_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithGoodAndOpaqueTwinNormalKind kind;
}

final class wire_cst_struct_with_explicit_auto_opaque_field_twin_normal
    extends ffi.Struct {
  @ffi.UintPtr()
  external int auto_opaque;

  @ffi.Int32()
  external int normal;
}

final class wire_cst_struct_with_good_and_opaque_field_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> good;

  @ffi.UintPtr()
  external int opaque;

  external ffi.Pointer<ffi.UintPtr> option_opaque;
}

final class wire_cst_list_RustOpaque_HideDataTwinNormal extends ffi.Struct {
  external ffi.Pointer<ffi.UintPtr> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_EnumOpaqueTwinNormal_Struct extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinNormal_Primitive extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinNormal_TraitObj extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinNormal_Mutex extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_EnumOpaqueTwinNormal_RwLock extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class EnumOpaqueTwinNormalKind extends ffi.Union {
  external wire_cst_EnumOpaqueTwinNormal_Struct Struct;

  external wire_cst_EnumOpaqueTwinNormal_Primitive Primitive;

  external wire_cst_EnumOpaqueTwinNormal_TraitObj TraitObj;

  external wire_cst_EnumOpaqueTwinNormal_Mutex Mutex;

  external wire_cst_EnumOpaqueTwinNormal_RwLock RwLock;
}

final class wire_cst_enum_opaque_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumOpaqueTwinNormalKind kind;
}

final class wire_cst_opaque_nested_twin_normal extends ffi.Struct {
  @ffi.UintPtr()
  external int first;

  @ffi.UintPtr()
  external int second;
}

final class wire_cst_struct_with_one_field_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int a;
}

final class wire_cst_struct_with_two_field_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int a;

  @ffi.Int32()
  external int b;
}

final class wire_cst_struct_with_zero_field_twin_normal extends ffi.Opaque {}

final class wire_cst_tuple_struct_with_one_field_twin_normal
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_tuple_struct_with_two_field_twin_normal
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_feature_uuid_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> one;
}

final class wire_cst_CustomNestedError2TwinNormal_CustomNested2
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_CustomNestedError2TwinNormal_CustomNested2Number
    extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedError2TwinNormalKind extends ffi.Union {
  external wire_cst_CustomNestedError2TwinNormal_CustomNested2 CustomNested2;

  external wire_cst_CustomNestedError2TwinNormal_CustomNested2Number
      CustomNested2Number;
}

final class wire_cst_custom_nested_error_2_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError2TwinNormalKind kind;
}

final class wire_cst_CustomNestedError2TwinRustAsync_CustomNested2
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_CustomNestedError2TwinRustAsync_CustomNested2Number
    extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedError2TwinRustAsyncKind extends ffi.Union {
  external wire_cst_CustomNestedError2TwinRustAsync_CustomNested2 CustomNested2;

  external wire_cst_CustomNestedError2TwinRustAsync_CustomNested2Number
      CustomNested2Number;
}

final class wire_cst_custom_nested_error_2_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError2TwinRustAsyncKind kind;
}

final class wire_cst_CustomNestedError2TwinSync_CustomNested2
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_CustomNestedError2TwinSync_CustomNested2Number
    extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedError2TwinSyncKind extends ffi.Union {
  external wire_cst_CustomNestedError2TwinSync_CustomNested2 CustomNested2;

  external wire_cst_CustomNestedError2TwinSync_CustomNested2Number
      CustomNested2Number;
}

final class wire_cst_custom_nested_error_2_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError2TwinSyncKind kind;
}

final class wire_cst_list_element_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_element_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_element_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> tag;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> text;

  external ffi.Pointer<wire_cst_list_attribute_twin_normal> attributes;

  external ffi.Pointer<wire_cst_list_element_twin_normal> children;
}

final class wire_cst_list_element_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_element_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_element_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> tag;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> text;

  external ffi.Pointer<wire_cst_list_attribute_twin_rust_async> attributes;

  external ffi.Pointer<wire_cst_list_element_twin_rust_async> children;
}

final class wire_cst_list_element_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_element_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_element_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> tag;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> text;

  external ffi.Pointer<wire_cst_list_attribute_twin_sync> attributes;

  external ffi.Pointer<wire_cst_list_element_twin_sync> children;
}

final class wire_cst_raw_string_mirrored extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> value;
}

final class wire_cst_nested_raw_string_mirrored extends ffi.Struct {
  external wire_cst_raw_string_mirrored raw;
}

final class wire_cst_list_nested_raw_string_mirrored extends ffi.Struct {
  external ffi.Pointer<wire_cst_nested_raw_string_mirrored> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_of_nested_raw_string_mirrored extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_nested_raw_string_mirrored> raw;
}

final class wire_cst_list_Chrono_Local extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_application_mode extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_application_settings extends ffi.Struct {
  external ffi.Pointer<wire_cst_application_settings> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_enum_opaque_twin_moi extends ffi.Struct {
  external ffi.Pointer<wire_cst_enum_opaque_twin_moi> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_enum_opaque_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_enum_opaque_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_enum_opaque_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_enum_opaque_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_enum_opaque_twin_rust_async_moi extends ffi.Struct {
  external ffi.Pointer<wire_cst_enum_opaque_twin_rust_async_moi> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_enum_opaque_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_enum_opaque_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_enum_opaque_twin_sync_moi extends ffi.Struct {
  external ffi.Pointer<wire_cst_enum_opaque_twin_sync_moi> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_my_enum extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_point_twin_normal extends ffi.Struct {
  @ffi.Float()
  external double x;

  @ffi.Float()
  external double y;
}

final class wire_cst_list_point_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_point_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_point_twin_rust_async extends ffi.Struct {
  @ffi.Float()
  external double x;

  @ffi.Float()
  external double y;
}

final class wire_cst_list_point_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_point_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_point_twin_sync extends ffi.Struct {
  @ffi.Float()
  external double x;

  @ffi.Float()
  external double y;
}

final class wire_cst_list_point_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_point_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_i_16_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Int16> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_u_16_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Uint16> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_u_32_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Uint32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_RawStringEnumMirrored_Raw extends ffi.Struct {
  external ffi.Pointer<wire_cst_raw_string_mirrored> field0;
}

final class wire_cst_RawStringEnumMirrored_Nested extends ffi.Struct {
  external ffi.Pointer<wire_cst_nested_raw_string_mirrored> field0;
}

final class wire_cst_RawStringEnumMirrored_ListOfNested extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_of_nested_raw_string_mirrored> field0;
}

final class RawStringEnumMirroredKind extends ffi.Union {
  external wire_cst_RawStringEnumMirrored_Raw Raw;

  external wire_cst_RawStringEnumMirrored_Nested Nested;

  external wire_cst_RawStringEnumMirrored_ListOfNested ListOfNested;
}

final class wire_cst_raw_string_enum_mirrored extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external RawStringEnumMirroredKind kind;
}

final class wire_cst_list_raw_string_enum_mirrored extends ffi.Struct {
  external ffi.Pointer<wire_cst_raw_string_enum_mirrored> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_raw_string_mirrored extends ffi.Struct {
  external ffi.Pointer<wire_cst_raw_string_mirrored> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_hash_map_value extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> inner;
}

final class wire_cst_record_string_hash_map_value extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;

  external wire_cst_hash_map_value field1;
}

final class wire_cst_list_record_string_hash_map_value extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_hash_map_value> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_u_8_application_mode extends ffi.Struct {
  @ffi.Uint8()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_u_8_application_mode extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_u_8_application_mode> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_sum_with_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_sum_with_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_sum_with_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_sum_with_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_sum_with_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_sum_with_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_another_macro_struct_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int data;

  @ffi.Int32()
  external int non_final_data;
}

final class wire_cst_another_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> a;
}

final class wire_cst_another_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> a;
}

final class wire_cst_another_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> a;
}

final class wire_cst_ApplicationMessage_DisplayMessage extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_ApplicationMessage_RenderPixel extends ffi.Struct {
  @ffi.Int32()
  external int x;

  @ffi.Int32()
  external int y;
}

final class ApplicationMessageKind extends ffi.Union {
  external wire_cst_ApplicationMessage_DisplayMessage DisplayMessage;

  external wire_cst_ApplicationMessage_RenderPixel RenderPixel;
}

final class wire_cst_application_message extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external ApplicationMessageKind kind;
}

final class wire_cst_big_buffers_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_64_strict> int64;

  external ffi.Pointer<wire_cst_list_prim_u_64_strict> uint64;
}

final class wire_cst_big_buffers_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_64_strict> int64;

  external ffi.Pointer<wire_cst_list_prim_u_64_strict> uint64;
}

final class wire_cst_big_buffers_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_64_strict> int64;

  external ffi.Pointer<wire_cst_list_prim_u_64_strict> uint64;
}

final class wire_cst_constructor_translatable_struct_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> one;
}

final class wire_cst_constructor_translatable_sync_struct_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> one;
}

final class wire_cst_contains_mirrored_sub_struct_twin_normal
    extends ffi.Struct {
  external wire_cst_raw_string_mirrored test;

  external wire_cst_another_twin_normal test2;
}

final class wire_cst_contains_mirrored_sub_struct_twin_rust_async
    extends ffi.Struct {
  external wire_cst_raw_string_mirrored test;

  external wire_cst_another_twin_rust_async test2;
}

final class wire_cst_contains_mirrored_sub_struct_twin_sync extends ffi.Struct {
  external wire_cst_raw_string_mirrored test;

  external wire_cst_another_twin_sync test2;
}

final class wire_cst_CustomEnumErrorTwinNormal_One extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> message;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> backtrace;
}

final class wire_cst_CustomEnumErrorTwinNormal_Two extends ffi.Struct {
  @ffi.Uint32()
  external int message;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> backtrace;
}

final class CustomEnumErrorTwinNormalKind extends ffi.Union {
  external wire_cst_CustomEnumErrorTwinNormal_One One;

  external wire_cst_CustomEnumErrorTwinNormal_Two Two;
}

final class wire_cst_custom_enum_error_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomEnumErrorTwinNormalKind kind;
}

final class wire_cst_CustomEnumErrorTwinRustAsync_One extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> message;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> backtrace;
}

final class wire_cst_CustomEnumErrorTwinRustAsync_Two extends ffi.Struct {
  @ffi.Uint32()
  external int message;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> backtrace;
}

final class CustomEnumErrorTwinRustAsyncKind extends ffi.Union {
  external wire_cst_CustomEnumErrorTwinRustAsync_One One;

  external wire_cst_CustomEnumErrorTwinRustAsync_Two Two;
}

final class wire_cst_custom_enum_error_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomEnumErrorTwinRustAsyncKind kind;
}

final class wire_cst_CustomEnumErrorTwinSync_One extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> message;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> backtrace;
}

final class wire_cst_CustomEnumErrorTwinSync_Two extends ffi.Struct {
  @ffi.Uint32()
  external int message;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> backtrace;
}

final class CustomEnumErrorTwinSyncKind extends ffi.Union {
  external wire_cst_CustomEnumErrorTwinSync_One One;

  external wire_cst_CustomEnumErrorTwinSync_Two Two;
}

final class wire_cst_custom_enum_error_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomEnumErrorTwinSyncKind kind;
}

final class wire_cst_CustomErrorTwinNormal_Error0 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> e;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> backtrace;
}

final class wire_cst_CustomErrorTwinNormal_Error1 extends ffi.Struct {
  @ffi.Uint32()
  external int e;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> backtrace;
}

final class CustomErrorTwinNormalKind extends ffi.Union {
  external wire_cst_CustomErrorTwinNormal_Error0 Error0;

  external wire_cst_CustomErrorTwinNormal_Error1 Error1;
}

final class wire_cst_custom_error_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomErrorTwinNormalKind kind;
}

final class wire_cst_CustomErrorTwinRustAsync_Error0 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> e;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> backtrace;
}

final class wire_cst_CustomErrorTwinRustAsync_Error1 extends ffi.Struct {
  @ffi.Uint32()
  external int e;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> backtrace;
}

final class CustomErrorTwinRustAsyncKind extends ffi.Union {
  external wire_cst_CustomErrorTwinRustAsync_Error0 Error0;

  external wire_cst_CustomErrorTwinRustAsync_Error1 Error1;
}

final class wire_cst_custom_error_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomErrorTwinRustAsyncKind kind;
}

final class wire_cst_CustomErrorTwinSync_Error0 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> e;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> backtrace;
}

final class wire_cst_CustomErrorTwinSync_Error1 extends ffi.Struct {
  @ffi.Uint32()
  external int e;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> backtrace;
}

final class CustomErrorTwinSyncKind extends ffi.Union {
  external wire_cst_CustomErrorTwinSync_Error0 Error0;

  external wire_cst_CustomErrorTwinSync_Error1 Error1;
}

final class wire_cst_custom_error_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomErrorTwinSyncKind kind;
}

final class wire_cst_CustomNestedError1TwinNormal_CustomNested1
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_CustomNestedError1TwinNormal_ErrorNested
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_2_twin_normal> field0;
}

final class CustomNestedError1TwinNormalKind extends ffi.Union {
  external wire_cst_CustomNestedError1TwinNormal_CustomNested1 CustomNested1;

  external wire_cst_CustomNestedError1TwinNormal_ErrorNested ErrorNested;
}

final class wire_cst_custom_nested_error_1_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError1TwinNormalKind kind;
}

final class wire_cst_CustomNestedError1TwinRustAsync_CustomNested1
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_CustomNestedError1TwinRustAsync_ErrorNested
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async> field0;
}

final class CustomNestedError1TwinRustAsyncKind extends ffi.Union {
  external wire_cst_CustomNestedError1TwinRustAsync_CustomNested1 CustomNested1;

  external wire_cst_CustomNestedError1TwinRustAsync_ErrorNested ErrorNested;
}

final class wire_cst_custom_nested_error_1_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError1TwinRustAsyncKind kind;
}

final class wire_cst_CustomNestedError1TwinSync_CustomNested1
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_CustomNestedError1TwinSync_ErrorNested extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync> field0;
}

final class CustomNestedError1TwinSyncKind extends ffi.Union {
  external wire_cst_CustomNestedError1TwinSync_CustomNested1 CustomNested1;

  external wire_cst_CustomNestedError1TwinSync_ErrorNested ErrorNested;
}

final class wire_cst_custom_nested_error_1_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError1TwinSyncKind kind;
}

final class wire_cst_custom_struct_error_another_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> message;
}

final class wire_cst_custom_struct_error_another_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> message;
}

final class wire_cst_custom_struct_error_another_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> message;
}

final class wire_cst_demo_struct_for_rust_call_dart_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> name;
}

final class wire_cst_demo_struct_for_rust_call_dart_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> name;
}

final class wire_cst_log_2_twin_normal extends ffi.Struct {
  @ffi.Uint32()
  external int key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> value;
}

final class wire_cst_log_2_twin_rust_async extends ffi.Struct {
  @ffi.Uint32()
  external int key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> value;
}

final class wire_cst_log_2_twin_sync extends ffi.Struct {
  @ffi.Uint32()
  external int key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> value;
}

final class wire_cst_log_twin_normal extends ffi.Struct {
  @ffi.Uint32()
  external int key;

  @ffi.Uint32()
  external int value;
}

final class wire_cst_log_twin_rust_async extends ffi.Struct {
  @ffi.Uint32()
  external int key;

  @ffi.Uint32()
  external int value;
}

final class wire_cst_mirror_struct_twin_normal extends ffi.Struct {
  external wire_cst_application_settings a;

  external wire_cst_my_struct b;

  external ffi.Pointer<wire_cst_list_my_enum> c;

  external ffi.Pointer<wire_cst_list_application_settings> d;
}

final class wire_cst_mirror_struct_twin_rust_async extends ffi.Struct {
  external wire_cst_application_settings a;

  external wire_cst_my_struct b;

  external ffi.Pointer<wire_cst_list_my_enum> c;

  external ffi.Pointer<wire_cst_list_application_settings> d;
}

final class wire_cst_mirror_struct_twin_sync extends ffi.Struct {
  external wire_cst_application_settings a;

  external wire_cst_my_struct b;

  external ffi.Pointer<wire_cst_list_my_enum> c;

  external ffi.Pointer<wire_cst_list_application_settings> d;
}

final class wire_cst_more_than_just_one_raw_string_struct_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> regular;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> type;

  @ffi.Bool()
  external bool async1;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> another;
}

final class wire_cst_more_than_just_one_raw_string_struct_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> regular;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> type;

  @ffi.Bool()
  external bool async1;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> another;
}

final class wire_cst_more_than_just_one_raw_string_struct_twin_sync
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> regular;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> type;

  @ffi.Bool()
  external bool async1;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> another;
}

final class wire_cst_my_stream_entry_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> hello;
}

final class wire_cst_my_stream_entry_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> hello;
}

final class wire_cst_new_simple_struct extends ffi.Struct {
  @ffi.Int32()
  external int field;
}

final class wire_cst_old_simple_struct extends ffi.Struct {
  @ffi.Int32()
  external int field;
}

final class wire_cst_raw_string_item_struct_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> type;
}

final class wire_cst_raw_string_item_struct_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> type;
}

final class wire_cst_raw_string_item_struct_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> type;
}

final class wire_cst_record_application_settings_raw_string_enum_mirrored
    extends ffi.Struct {
  external wire_cst_application_settings field0;

  external wire_cst_raw_string_enum_mirrored field1;
}

final class wire_cst_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_moi
    extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;

  @ffi.UintPtr()
  external int field1;
}

final class wire_cst_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_normal_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_normal
    extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;

  @ffi.UintPtr()
  external int field1;
}

final class wire_cst_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async
    extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;

  @ffi.UintPtr()
  external int field1;
}

final class wire_cst_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_rust_async_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_rust_async_moi
    extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;

  @ffi.UintPtr()
  external int field1;
}

final class wire_cst_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync
    extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;

  @ffi.UintPtr()
  external int field1;
}

final class wire_cst_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_one_twin_sync_moi_auto_owned_rust_opaque_flutter_rust_bridgefor_generatedrust_async_rw_lock_opaque_two_twin_sync_moi
    extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;

  @ffi.UintPtr()
  external int field1;
}

final class wire_cst_struct_with_hash_map extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_record_string_hash_map_value> map;
}

final class wire_cst_test_chrono_twin_normal extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> dt;

  external ffi.Pointer<ffi.Int64> dt2;

  external ffi.Pointer<ffi.Int64> du;
}

final class wire_cst_test_chrono_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> dt;

  external ffi.Pointer<ffi.Int64> dt2;

  external ffi.Pointer<ffi.Int64> du;
}

final class wire_cst_test_chrono_twin_sync extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> dt;

  external ffi.Pointer<ffi.Int64> dt2;

  external ffi.Pointer<ffi.Int64> du;
}

final class wire_cst_test_model_twin_normal extends ffi.Struct {
  @ffi.Uint64()
  external int id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> name;

  @ffi.Int32()
  external int alias_enum;

  external wire_cst_my_struct alias_struct;
}

final class wire_cst_test_model_twin_rust_async extends ffi.Struct {
  @ffi.Uint64()
  external int id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> name;

  @ffi.Int32()
  external int alias_enum;

  external wire_cst_my_struct alias_struct;
}

final class wire_cst_test_model_twin_sync extends ffi.Struct {
  @ffi.Uint64()
  external int id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> name;

  @ffi.Int32()
  external int alias_enum;

  external wire_cst_my_struct alias_struct;
}

final class wire_cst_vec_of_primitive_pack_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_8_strict> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_16_strict> int16list;

  external ffi.Pointer<wire_cst_list_prim_u_16_strict> uint16list;

  external ffi.Pointer<wire_cst_list_prim_u_32_strict> uint32list;

  external ffi.Pointer<wire_cst_list_prim_i_32_strict> int32list;

  external ffi.Pointer<wire_cst_list_prim_u_64_strict> uint64list;

  external ffi.Pointer<wire_cst_list_prim_i_64_strict> int64list;

  external ffi.Pointer<wire_cst_list_prim_f_32_strict> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64_strict> float64list;

  external ffi.Pointer<wire_cst_list_bool> bool_list;
}

final class wire_cst_vec_of_primitive_pack_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_8_strict> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_16_strict> int16list;

  external ffi.Pointer<wire_cst_list_prim_u_16_strict> uint16list;

  external ffi.Pointer<wire_cst_list_prim_u_32_strict> uint32list;

  external ffi.Pointer<wire_cst_list_prim_i_32_strict> int32list;

  external ffi.Pointer<wire_cst_list_prim_u_64_strict> uint64list;

  external ffi.Pointer<wire_cst_list_prim_i_64_strict> int64list;

  external ffi.Pointer<wire_cst_list_prim_f_32_strict> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64_strict> float64list;

  external ffi.Pointer<wire_cst_list_bool> bool_list;
}

final class wire_cst_vec_of_primitive_pack_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_8_strict> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_16_strict> int16list;

  external ffi.Pointer<wire_cst_list_prim_u_16_strict> uint16list;

  external ffi.Pointer<wire_cst_list_prim_u_32_strict> uint32list;

  external ffi.Pointer<wire_cst_list_prim_i_32_strict> int32list;

  external ffi.Pointer<wire_cst_list_prim_u_64_strict> uint64list;

  external ffi.Pointer<wire_cst_list_prim_i_64_strict> int64list;

  external ffi.Pointer<wire_cst_list_prim_f_32_strict> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64_strict> float64list;

  external ffi.Pointer<wire_cst_list_bool> bool_list;
}
