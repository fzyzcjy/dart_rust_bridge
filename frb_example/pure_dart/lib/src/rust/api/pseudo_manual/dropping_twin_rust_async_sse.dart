// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.29.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<DroppableTwinRustAsyncSse>>
@sealed
class DroppableTwinRustAsyncSse extends RustOpaque {
  DroppableTwinRustAsyncSse.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  DroppableTwinRustAsyncSse.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_DroppableTwinRustAsyncSse,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_DroppableTwinRustAsyncSse,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_DroppableTwinRustAsyncSsePtr,
  );

  Stream<int> createStreamTwinRustAsyncSse({dynamic hint}) =>
      RustLib.instance.api
          .droppableTwinRustAsyncSseCreateStreamTwinRustAsyncSse(
        that: this,
      );

  static Future<int> getDropCountTwinRustAsyncSse({dynamic hint}) =>
      RustLib.instance.api
          .droppableTwinRustAsyncSseGetDropCountTwinRustAsyncSse(hint: hint);

  static Future<DroppableTwinRustAsyncSse> newTwinRustAsyncSse(
          {dynamic hint}) =>
      RustLib.instance.api
          .droppableTwinRustAsyncSseNewTwinRustAsyncSse(hint: hint);

  Future<void> simpleMethodTwinRustAsyncSse({dynamic hint}) =>
      RustLib.instance.api
          .droppableTwinRustAsyncSseSimpleMethodTwinRustAsyncSse(
        that: this,
      );
}
