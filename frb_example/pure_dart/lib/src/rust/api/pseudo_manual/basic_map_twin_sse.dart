// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.29.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'basic_twin_sse.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<Map<int, int>> exampleBasicMapTypeI8TwinSse(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicMapTypeI8TwinSse(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeI16TwinSse(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicMapTypeI16TwinSse(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeI32TwinSse(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicMapTypeI32TwinSse(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeI64TwinSse(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicMapTypeI64TwinSse(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeU8TwinSse(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicMapTypeU8TwinSse(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeU16TwinSse(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicMapTypeU16TwinSse(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeU32TwinSse(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicMapTypeU32TwinSse(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeU64TwinSse(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicMapTypeU64TwinSse(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeIsizeTwinSse(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicMapTypeIsizeTwinSse(arg: arg, hint: hint);

Future<Map<int, int>> exampleBasicMapTypeUsizeTwinSse(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicMapTypeUsizeTwinSse(arg: arg, hint: hint);

Future<Map<int, double>> exampleBasicMapTypeF32TwinSse(
        {required Map<int, double> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicMapTypeF32TwinSse(arg: arg, hint: hint);

Future<Map<int, double>> exampleBasicMapTypeF64TwinSse(
        {required Map<int, double> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicMapTypeF64TwinSse(arg: arg, hint: hint);

Future<Map<int, bool>> exampleBasicMapTypeBoolTwinSse(
        {required Map<int, bool> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicMapTypeBoolTwinSse(arg: arg, hint: hint);

Future<Map<int, String>> exampleBasicMapTypeStringTwinSse(
        {required Map<int, String> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicMapTypeStringTwinSse(arg: arg, hint: hint);

Future<Map<int, Uint8List>> exampleBasicMapTypeBytesTwinSse(
        {required Map<int, Uint8List> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicMapTypeBytesTwinSse(arg: arg, hint: hint);

Future<Map<int, BasicPrimitiveEnumTwinSse>>
    exampleBasicMapTypeBasicPrimitiveEnumTwinSseTwinSse(
            {required Map<int, BasicPrimitiveEnumTwinSse> arg, dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicMapTypeBasicPrimitiveEnumTwinSseTwinSse(
                arg: arg, hint: hint);

Future<Map<int, BasicGeneralEnumTwinSse>>
    exampleBasicMapTypeBasicGeneralEnumTwinSseTwinSse(
            {required Map<int, BasicGeneralEnumTwinSse> arg, dynamic hint}) =>
        RustLib.instance.api.exampleBasicMapTypeBasicGeneralEnumTwinSseTwinSse(
            arg: arg, hint: hint);

Future<Map<int, BasicStructTwinSse>>
    exampleBasicMapTypeBasicStructTwinSseTwinSse(
            {required Map<int, BasicStructTwinSse> arg, dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicMapTypeBasicStructTwinSseTwinSse(arg: arg, hint: hint);
