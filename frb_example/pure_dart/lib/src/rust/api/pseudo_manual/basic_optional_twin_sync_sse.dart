// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.29.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'basic_twin_sync_sse.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

int? exampleBasicOptionalTypeI8TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeI8TwinSyncSse(arg: arg, hint: hint);

int? exampleBasicOptionalTypeI16TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeI16TwinSyncSse(arg: arg, hint: hint);

int? exampleBasicOptionalTypeI32TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeI32TwinSyncSse(arg: arg, hint: hint);

int? exampleBasicOptionalTypeI64TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeI64TwinSyncSse(arg: arg, hint: hint);

int? exampleBasicOptionalTypeU8TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeU8TwinSyncSse(arg: arg, hint: hint);

int? exampleBasicOptionalTypeU16TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeU16TwinSyncSse(arg: arg, hint: hint);

int? exampleBasicOptionalTypeU32TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeU32TwinSyncSse(arg: arg, hint: hint);

int? exampleBasicOptionalTypeU64TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeU64TwinSyncSse(arg: arg, hint: hint);

int? exampleBasicOptionalTypeIsizeTwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeIsizeTwinSyncSse(arg: arg, hint: hint);

int? exampleBasicOptionalTypeUsizeTwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeUsizeTwinSyncSse(arg: arg, hint: hint);

double? exampleBasicOptionalTypeF32TwinSyncSse({double? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeF32TwinSyncSse(arg: arg, hint: hint);

double? exampleBasicOptionalTypeF64TwinSyncSse({double? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeF64TwinSyncSse(arg: arg, hint: hint);

bool? exampleBasicOptionalTypeBoolTwinSyncSse({bool? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeBoolTwinSyncSse(arg: arg, hint: hint);

String? exampleBasicOptionalTypeStringTwinSyncSse(
        {String? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeStringTwinSyncSse(arg: arg, hint: hint);

Uint8List? exampleBasicOptionalTypeBytesTwinSyncSse(
        {Uint8List? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicOptionalTypeBytesTwinSyncSse(arg: arg, hint: hint);

BasicPrimitiveEnumTwinSyncSse?
    exampleBasicOptionalTypeBasicPrimitiveEnumTwinSyncSseTwinSyncSse(
            {BasicPrimitiveEnumTwinSyncSse? arg, dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicOptionalTypeBasicPrimitiveEnumTwinSyncSseTwinSyncSse(
                arg: arg, hint: hint);

BasicGeneralEnumTwinSyncSse?
    exampleBasicOptionalTypeBasicGeneralEnumTwinSyncSseTwinSyncSse(
            {BasicGeneralEnumTwinSyncSse? arg, dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicOptionalTypeBasicGeneralEnumTwinSyncSseTwinSyncSse(
                arg: arg, hint: hint);

BasicStructTwinSyncSse?
    exampleBasicOptionalTypeBasicStructTwinSyncSseTwinSyncSse(
            {BasicStructTwinSyncSse? arg, dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicOptionalTypeBasicStructTwinSyncSseTwinSyncSse(
                arg: arg, hint: hint);
