// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.29.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'basic.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<Int8List> exampleBasicListTypeI8TwinNormal(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicListTypeI8TwinNormal(arg: arg, hint: hint);

Future<Int16List> exampleBasicListTypeI16TwinNormal(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeI16TwinNormal(arg: arg, hint: hint);

Future<Int32List> exampleBasicListTypeI32TwinNormal(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeI32TwinNormal(arg: arg, hint: hint);

Future<Int64List> exampleBasicListTypeI64TwinNormal(
        {required Int64List arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeI64TwinNormal(arg: arg, hint: hint);

Future<Uint8List> exampleBasicListTypeU8TwinNormal(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicListTypeU8TwinNormal(arg: arg, hint: hint);

Future<Uint16List> exampleBasicListTypeU16TwinNormal(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeU16TwinNormal(arg: arg, hint: hint);

Future<Uint32List> exampleBasicListTypeU32TwinNormal(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeU32TwinNormal(arg: arg, hint: hint);

Future<Uint64List> exampleBasicListTypeU64TwinNormal(
        {required Uint64List arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeU64TwinNormal(arg: arg, hint: hint);

Future<Float32List> exampleBasicListTypeF32TwinNormal(
        {required List<double> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeF32TwinNormal(arg: arg, hint: hint);

Future<Float64List> exampleBasicListTypeF64TwinNormal(
        {required List<double> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeF64TwinNormal(arg: arg, hint: hint);

Future<List<bool>> exampleBasicListTypeBoolTwinNormal(
        {required List<bool> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeBoolTwinNormal(arg: arg, hint: hint);

Future<List<String>> exampleBasicListTypeStringTwinNormal(
        {required List<String> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeStringTwinNormal(arg: arg, hint: hint);

Future<List<Uint8List>> exampleBasicListTypeBytesTwinNormal(
        {required List<Uint8List> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeBytesTwinNormal(arg: arg, hint: hint);

Future<List<BasicPrimitiveEnumTwinNormal>>
    exampleBasicListTypeBasicPrimitiveEnumTwinNormalTwinNormal(
            {required List<BasicPrimitiveEnumTwinNormal> arg, dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicListTypeBasicPrimitiveEnumTwinNormalTwinNormal(
                arg: arg, hint: hint);

Future<List<BasicGeneralEnumTwinNormal>>
    exampleBasicListTypeBasicGeneralEnumTwinNormalTwinNormal(
            {required List<BasicGeneralEnumTwinNormal> arg, dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicListTypeBasicGeneralEnumTwinNormalTwinNormal(
                arg: arg, hint: hint);

Future<List<BasicStructTwinNormal>>
    exampleBasicListTypeBasicStructTwinNormalTwinNormal(
            {required List<BasicStructTwinNormal> arg, dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicListTypeBasicStructTwinNormalTwinNormal(
                arg: arg, hint: hint);
