// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.29.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'basic_twin_rust_async.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<Int8List> exampleBasicListTypeI8TwinRustAsync(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeI8TwinRustAsync(arg: arg, hint: hint);

Future<Int16List> exampleBasicListTypeI16TwinRustAsync(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeI16TwinRustAsync(arg: arg, hint: hint);

Future<Int32List> exampleBasicListTypeI32TwinRustAsync(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeI32TwinRustAsync(arg: arg, hint: hint);

Future<Int64List> exampleBasicListTypeI64TwinRustAsync(
        {required Int64List arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeI64TwinRustAsync(arg: arg, hint: hint);

Future<Uint8List> exampleBasicListTypeU8TwinRustAsync(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeU8TwinRustAsync(arg: arg, hint: hint);

Future<Uint16List> exampleBasicListTypeU16TwinRustAsync(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeU16TwinRustAsync(arg: arg, hint: hint);

Future<Uint32List> exampleBasicListTypeU32TwinRustAsync(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeU32TwinRustAsync(arg: arg, hint: hint);

Future<Uint64List> exampleBasicListTypeU64TwinRustAsync(
        {required Uint64List arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeU64TwinRustAsync(arg: arg, hint: hint);

Future<Float32List> exampleBasicListTypeF32TwinRustAsync(
        {required List<double> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeF32TwinRustAsync(arg: arg, hint: hint);

Future<Float64List> exampleBasicListTypeF64TwinRustAsync(
        {required List<double> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeF64TwinRustAsync(arg: arg, hint: hint);

Future<List<bool>> exampleBasicListTypeBoolTwinRustAsync(
        {required List<bool> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeBoolTwinRustAsync(arg: arg, hint: hint);

Future<List<String>> exampleBasicListTypeStringTwinRustAsync(
        {required List<String> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeStringTwinRustAsync(arg: arg, hint: hint);

Future<List<Uint8List>> exampleBasicListTypeBytesTwinRustAsync(
        {required List<Uint8List> arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicListTypeBytesTwinRustAsync(arg: arg, hint: hint);

Future<List<BasicPrimitiveEnumTwinRustAsync>>
    exampleBasicListTypeBasicPrimitiveEnumTwinRustAsyncTwinRustAsync(
            {required List<BasicPrimitiveEnumTwinRustAsync> arg,
            dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicListTypeBasicPrimitiveEnumTwinRustAsyncTwinRustAsync(
                arg: arg, hint: hint);

Future<List<BasicGeneralEnumTwinRustAsync>>
    exampleBasicListTypeBasicGeneralEnumTwinRustAsyncTwinRustAsync(
            {required List<BasicGeneralEnumTwinRustAsync> arg, dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicListTypeBasicGeneralEnumTwinRustAsyncTwinRustAsync(
                arg: arg, hint: hint);

Future<List<BasicStructTwinRustAsync>>
    exampleBasicListTypeBasicStructTwinRustAsyncTwinRustAsync(
            {required List<BasicStructTwinRustAsync> arg, dynamic hint}) =>
        RustLib.instance.api
            .exampleBasicListTypeBasicStructTwinRustAsyncTwinRustAsync(
                arg: arg, hint: hint);
