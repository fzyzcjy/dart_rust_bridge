// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.29.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
import 'rust_auto_opaque_twin_moi.dart';
part 'rust_auto_opaque_twin_sync_moi.freezed.dart';

// The type `HelloOneStructTwinSyncMoi` is not used by any `pub` functions, thus it is ignored.
// The type `HelloTwoEnumTwinSyncMoi` is not used by any `pub` functions, thus it is ignored.

void rustAutoOpaqueArgOwnTwinSyncMoi(
        {required NonCloneSimpleTwinSyncMoi arg,
        required int expect,
        dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueArgOwnTwinSyncMoi(arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueArgBorrowTwinSyncMoi(
        {required NonCloneSimpleTwinSyncMoi arg,
        required int expect,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueArgBorrowTwinSyncMoi(
        arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueArgMutBorrowTwinSyncMoi(
        {required NonCloneSimpleTwinSyncMoi arg,
        required int expect,
        required int adder,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueArgMutBorrowTwinSyncMoi(
        arg: arg, expect: expect, adder: adder, hint: hint);

NonCloneSimpleTwinSyncMoi rustAutoOpaqueReturnOwnTwinSyncMoi(
        {required int initial, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueReturnOwnTwinSyncMoi(initial: initial, hint: hint);

NonCloneSimpleTwinSyncMoi rustAutoOpaqueArgOwnAndReturnOwnTwinSyncMoi(
        {required NonCloneSimpleTwinSyncMoi arg, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueArgOwnAndReturnOwnTwinSyncMoi(arg: arg, hint: hint);

void rustAutoOpaqueTwoArgsTwinSyncMoi(
        {required NonCloneSimpleTwinSyncMoi a,
        required NonCloneSimpleTwinSyncMoi b,
        dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueTwoArgsTwinSyncMoi(a: a, b: b, hint: hint);

void rustAutoOpaqueNormalAndOpaqueArgTwinSyncMoi(
        {required NonCloneSimpleTwinSyncMoi a,
        required String b,
        dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueNormalAndOpaqueArgTwinSyncMoi(a: a, b: b, hint: hint);

/// "+" inside the type signature
void rustAutoOpaquePlusSignArgTwinSyncMoi(
        {required BoxMyTraitTwinSyncMoi arg, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaquePlusSignArgTwinSyncMoi(arg: arg, hint: hint);

BoxMyTraitTwinSyncMoi rustAutoOpaquePlusSignReturnTwinSyncMoi({dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaquePlusSignReturnTwinSyncMoi(hint: hint);

void rustAutoOpaqueCallableArgTwinSyncMoi(
        {required BoxFnStringString arg, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueCallableArgTwinSyncMoi(arg: arg, hint: hint);

BoxFnStringString rustAutoOpaqueCallableReturnTwinSyncMoi({dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueCallableReturnTwinSyncMoi(hint: hint);

void rustAutoOpaqueTraitObjectArgOwnTwinSyncMoi(
        {required BoxHelloTraitTwinSyncMoi arg,
        required String expect,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueTraitObjectArgOwnTwinSyncMoi(
        arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueTraitObjectArgBorrowTwinSyncMoi(
        {required BoxHelloTraitTwinSyncMoi arg,
        required String expect,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueTraitObjectArgBorrowTwinSyncMoi(
        arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueTraitObjectArgMutBorrowTwinSyncMoi(
        {required BoxHelloTraitTwinSyncMoi arg,
        required String expect,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueTraitObjectArgMutBorrowTwinSyncMoi(
        arg: arg, expect: expect, hint: hint);

BoxHelloTraitTwinSyncMoi rustAutoOpaqueTraitObjectReturnOwnOneTwinSyncMoi(
        {dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueTraitObjectReturnOwnOneTwinSyncMoi(hint: hint);

BoxHelloTraitTwinSyncMoi rustAutoOpaqueTraitObjectReturnOwnTwoTwinSyncMoi(
        {dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueTraitObjectReturnOwnTwoTwinSyncMoi(hint: hint);

void rustAutoOpaqueStructWithGoodAndOpaqueFieldArgOwnTwinSyncMoi(
        {required StructWithGoodAndOpaqueFieldTwinSyncMoi arg, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueStructWithGoodAndOpaqueFieldArgOwnTwinSyncMoi(
            arg: arg, hint: hint);

StructWithGoodAndOpaqueFieldTwinSyncMoi
    rustAutoOpaqueStructWithGoodAndOpaqueFieldReturnOwnTwinSyncMoi(
            {dynamic hint}) =>
        RustLib.instance.api
            .rustAutoOpaqueStructWithGoodAndOpaqueFieldReturnOwnTwinSyncMoi(
                hint: hint);

void rustAutoOpaqueEnumWithGoodAndOpaqueArgOwnTwinSyncMoi(
        {required EnumWithGoodAndOpaqueTwinSyncMoi arg, dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueEnumWithGoodAndOpaqueArgOwnTwinSyncMoi(
        arg: arg, hint: hint);

EnumWithGoodAndOpaqueTwinSyncMoi
    rustAutoOpaqueEnumWithGoodAndOpaqueReturnOwnGoodTwinSyncMoi(
            {dynamic hint}) =>
        RustLib.instance.api
            .rustAutoOpaqueEnumWithGoodAndOpaqueReturnOwnGoodTwinSyncMoi(
                hint: hint);

EnumWithGoodAndOpaqueTwinSyncMoi
    rustAutoOpaqueEnumWithGoodAndOpaqueReturnOwnOpaqueTwinSyncMoi(
            {dynamic hint}) =>
        RustLib.instance.api
            .rustAutoOpaqueEnumWithGoodAndOpaqueReturnOwnOpaqueTwinSyncMoi(
                hint: hint);

void rustAutoOpaqueDummyTwinSyncMoi(
        {required StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi a,
        required EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi b,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueDummyTwinSyncMoi(a: a, b: b, hint: hint);

void rustAutoOpaqueEnumArgBorrowTwinSyncMoi(
        {required NonCloneSimpleEnumTwinSyncMoi arg, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueEnumArgBorrowTwinSyncMoi(arg: arg, hint: hint);

NonCloneSimpleEnumTwinSyncMoi rustAutoOpaqueEnumReturnOwnTwinSyncMoi(
        {dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueEnumReturnOwnTwinSyncMoi(hint: hint);

Stream<NonCloneSimpleTwinSyncMoi> rustAutoOpaqueStreamSinkTwinSyncMoi(
        {dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueStreamSinkTwinSyncMoi(hint: hint);

void rustAutoOpaqueArgVecOwnTwinSyncMoi(
        {required List<NonCloneSimpleTwinSyncMoi> arg,
        required List<int> expect,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueArgVecOwnTwinSyncMoi(
        arg: arg, expect: expect, hint: hint);

List<NonCloneSimpleTwinSyncMoi> rustAutoOpaqueReturnVecOwnTwinSyncMoi(
        {dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueReturnVecOwnTwinSyncMoi(hint: hint);

void rustAutoOpaqueExplicitArgTwinSyncMoi(
        {required NonCloneSimpleTwinSyncMoi arg,
        required int expect,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueExplicitArgTwinSyncMoi(
        arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueExplicitStructTwinSyncMoi(
        {required StructWithExplicitAutoOpaqueFieldTwinSyncMoi arg,
        dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueExplicitStructTwinSyncMoi(arg: arg, hint: hint);

NonCloneSimpleTwinSyncMoi rustAutoOpaqueExplicitReturnTwinSyncMoi(
        {required int initial, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueExplicitReturnTwinSyncMoi(initial: initial, hint: hint);

(OpaqueOneTwinSyncMoi, OpaqueTwoTwinSyncMoi)
    rustAutoOpaqueReturnOpaqueOneAndTwoTwinSyncMoi({dynamic hint}) =>
        RustLib.instance.api
            .rustAutoOpaqueReturnOpaqueOneAndTwoTwinSyncMoi(hint: hint);

OpaqueTwoTwinSyncMoi rustAutoOpaqueReturnOpaqueTwoTwinSyncMoi({dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueReturnOpaqueTwoTwinSyncMoi(hint: hint);

int rustAutoOpaqueBorrowAndMutBorrowTwinSyncMoi(
        {required NonCloneSimpleTwinSyncMoi borrow,
        required NonCloneSimpleTwinSyncMoi mutBorrow,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueBorrowAndMutBorrowTwinSyncMoi(
        borrow: borrow, mutBorrow: mutBorrow, hint: hint);

int rustAutoOpaqueBorrowAndBorrowTwinSyncMoi(
        {required NonCloneSimpleTwinSyncMoi a,
        required NonCloneSimpleTwinSyncMoi b,
        dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueBorrowAndBorrowTwinSyncMoi(a: a, b: b, hint: hint);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<Box < dyn HelloTraitTwinSyncMoi >>>
@sealed
class BoxHelloTraitTwinSyncMoi extends RustOpaque {
  BoxHelloTraitTwinSyncMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  BoxHelloTraitTwinSyncMoi.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_BoxHelloTraitTwinSyncMoi,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncMoi,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncMoiPtr,
  );
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<Box < dyn MyTraitTwinSyncMoi + Send + Sync >>>
@sealed
class BoxMyTraitTwinSyncMoi extends RustOpaque {
  BoxMyTraitTwinSyncMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  BoxMyTraitTwinSyncMoi.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_BoxMyTraitTwinSyncMoi,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_BoxMyTraitTwinSyncMoi,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_BoxMyTraitTwinSyncMoiPtr,
  );
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi>>
@sealed
class EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi extends RustOpaque {
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi.sseDecode(
      int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoi,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSyncMoiPtr,
  );
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleEnumTwinSyncMoi>>
@sealed
class NonCloneSimpleEnumTwinSyncMoi extends RustOpaque {
  NonCloneSimpleEnumTwinSyncMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  NonCloneSimpleEnumTwinSyncMoi.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_NonCloneSimpleEnumTwinSyncMoi,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSyncMoi,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSyncMoiPtr,
  );
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSyncMoi>>
@sealed
class NonCloneSimpleTwinSyncMoi extends RustOpaque {
  NonCloneSimpleTwinSyncMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  NonCloneSimpleTwinSyncMoi.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_NonCloneSimpleTwinSyncMoi,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncMoi,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncMoiPtr,
  );

  void instanceMethodArgBorrowTwinSyncMoi({dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiInstanceMethodArgBorrowTwinSyncMoi(
        that: this,
      );

  void instanceMethodArgMutBorrowTwinSyncMoi({dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiInstanceMethodArgMutBorrowTwinSyncMoi(
        that: this,
      );

  void instanceMethodArgOwnTwinSyncMoi({dynamic hint}) => RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiInstanceMethodArgOwnTwinSyncMoi(
        that: this,
      );

  int get instanceMethodGetterTwinSyncMoi => RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiInstanceMethodGetterTwinSyncMoi(
        that: this,
      );

  NonCloneSimpleTwinSyncMoi instanceMethodReturnOwnTwinSyncMoi(
          {dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiInstanceMethodReturnOwnTwinSyncMoi(
        that: this,
      );

  /// named constructor
  static NonCloneSimpleTwinSyncMoi newCustomNameTwinSyncMoi({dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiNewCustomNameTwinSyncMoi(hint: hint);

  /// unnamed constructor
  static NonCloneSimpleTwinSyncMoi newTwinSyncMoi({dynamic hint}) =>
      RustLib.instance.api.nonCloneSimpleTwinSyncMoiNewTwinSyncMoi(hint: hint);

  /// constructor with Result
  static NonCloneSimpleTwinSyncMoi newWithResultTwinSyncMoi({dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiNewWithResultTwinSyncMoi(hint: hint);

  static void staticMethodArgBorrowTwinSyncMoi(
          {required NonCloneSimpleTwinSyncMoi arg, dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiStaticMethodArgBorrowTwinSyncMoi(
              arg: arg, hint: hint);

  static void staticMethodArgMutBorrowTwinSyncMoi(
          {required NonCloneSimpleTwinSyncMoi arg, dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiStaticMethodArgMutBorrowTwinSyncMoi(
              arg: arg, hint: hint);

  static void staticMethodArgOwnTwinSyncMoi(
          {required NonCloneSimpleTwinSyncMoi arg, dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiStaticMethodArgOwnTwinSyncMoi(
              arg: arg, hint: hint);

  static NonCloneSimpleTwinSyncMoi staticMethodReturnOwnTwinSyncMoi(
          {dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiStaticMethodReturnOwnTwinSyncMoi(
              hint: hint);
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueOneTwinSyncMoi>>
@sealed
class OpaqueOneTwinSyncMoi extends RustOpaque {
  OpaqueOneTwinSyncMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  OpaqueOneTwinSyncMoi.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_OpaqueOneTwinSyncMoi,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_OpaqueOneTwinSyncMoi,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_OpaqueOneTwinSyncMoiPtr,
  );
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<OpaqueTwoTwinSyncMoi>>
@sealed
class OpaqueTwoTwinSyncMoi extends RustOpaque {
  OpaqueTwoTwinSyncMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  OpaqueTwoTwinSyncMoi.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_OpaqueTwoTwinSyncMoi,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_OpaqueTwoTwinSyncMoi,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_OpaqueTwoTwinSyncMoiPtr,
  );
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi>>
@sealed
class StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi extends RustOpaque {
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi.dcoDecode(
      List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi.sseDecode(
      int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoi,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncMoiPtr,
  );
}

@freezed
sealed class EnumWithGoodAndOpaqueTwinSyncMoi
    with _$EnumWithGoodAndOpaqueTwinSyncMoi {
  const factory EnumWithGoodAndOpaqueTwinSyncMoi.good(
    String field0,
  ) = EnumWithGoodAndOpaqueTwinSyncMoi_Good;
  const factory EnumWithGoodAndOpaqueTwinSyncMoi.opaque(
    NonCloneSimpleTwinSyncMoi field0,
  ) = EnumWithGoodAndOpaqueTwinSyncMoi_Opaque;
}

class StructWithExplicitAutoOpaqueFieldTwinSyncMoi {
  final NonCloneSimpleTwinSyncMoi autoOpaque;
  final int normal;

  const StructWithExplicitAutoOpaqueFieldTwinSyncMoi({
    required this.autoOpaque,
    required this.normal,
  });

  @override
  int get hashCode => autoOpaque.hashCode ^ normal.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is StructWithExplicitAutoOpaqueFieldTwinSyncMoi &&
          runtimeType == other.runtimeType &&
          autoOpaque == other.autoOpaque &&
          normal == other.normal;
}

class StructWithGoodAndOpaqueFieldTwinSyncMoi {
  final String good;
  final NonCloneSimpleTwinSyncMoi opaque;
  final NonCloneSimpleTwinSyncMoi? optionOpaque;

  const StructWithGoodAndOpaqueFieldTwinSyncMoi({
    required this.good,
    required this.opaque,
    this.optionOpaque,
  });

  @override
  int get hashCode => good.hashCode ^ opaque.hashCode ^ optionOpaque.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is StructWithGoodAndOpaqueFieldTwinSyncMoi &&
          runtimeType == other.runtimeType &&
          good == other.good &&
          opaque == other.opaque &&
          optionOpaque == other.optionOpaque;
}
